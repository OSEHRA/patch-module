KIDS Distribution saved on Jul 03, 2015@20:59:54
PM Client 2.5
**KIDS**:PATCH CLIENT 2.5^

**INSTALL NAME**
PATCH CLIENT 2.5
"BLD",9501,0)
PATCH CLIENT 2.5^PATCH CLIENT^0^3150703^n
"BLD",9501,1,0)
^^9^9^3150702^^
"BLD",9501,1,1,0)
This build creates the initial version of the 'PATCH CLIENT' package.
"BLD",9501,1,2,0)
 
"BLD",9501,1,3,0)
This patch brings in the data for file 11004.
"BLD",9501,1,4,0)
 
"BLD",9501,1,5,0)
It also brings in options and routines.
"BLD",9501,1,6,0)
 
"BLD",9501,1,7,0)
And a security key as well
"BLD",9501,1,8,0)
 
"BLD",9501,1,9,0)
Oh, and an edit template.
"BLD",9501,4,0)
^9.64PA^11004^2
"BLD",9501,4,11004,0)
11004
"BLD",9501,4,11004,222)
y^y^f^^^^n^^
"BLD",9501,4,11004,224)

"BLD",9501,4,11007.1,0)
11007.1
"BLD",9501,4,11007.1,222)
y^y^f^^^^n^^
"BLD",9501,4,11007.1,224)

"BLD",9501,4,"B",11004,11004)

"BLD",9501,4,"B",11007.1,11007.1)

"BLD",9501,6.3)
35
"BLD",9501,"ABPKG")
n
"BLD",9501,"INI")

"BLD",9501,"INID")
^n^n
"BLD",9501,"INIT")
A1AE2POS
"BLD",9501,"KRN",0)
^9.67PA^779.2^20
"BLD",9501,"KRN",.4,0)
.4
"BLD",9501,"KRN",.401,0)
.401
"BLD",9501,"KRN",.402,0)
.402
"BLD",9501,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",9501,"KRN",.402,"NM",1,0)
A1AE CHANGE SITE SUBSCRIPTION    FILE #11007.1^11007.1^0
"BLD",9501,"KRN",.402,"NM","B","A1AE CHANGE SITE SUBSCRIPTION    FILE #11007.1",1)

"BLD",9501,"KRN",.403,0)
.403
"BLD",9501,"KRN",.5,0)
.5
"BLD",9501,"KRN",.84,0)
.84
"BLD",9501,"KRN",3.6,0)
3.6
"BLD",9501,"KRN",3.8,0)
3.8
"BLD",9501,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",9501,"KRN",3.8,"NM",1,0)
A1AESTRMCHG^^0
"BLD",9501,"KRN",3.8,"NM","B","A1AESTRMCHG",1)

"BLD",9501,"KRN",9.2,0)
9.2
"BLD",9501,"KRN",9.2,"NM",0)
^9.68A^1^1
"BLD",9501,"KRN",9.2,"NM",1,0)
A1AE CHNG SITE SUBSCR^^0
"BLD",9501,"KRN",9.2,"NM","B","A1AE CHNG SITE SUBSCR",1)

"BLD",9501,"KRN",9.8,0)
9.8
"BLD",9501,"KRN",9.8,"NM",0)
^9.68A^48^10
"BLD",9501,"KRN",9.8,"NM",1,0)
XPDIJ1^^0^B31760393
"BLD",9501,"KRN",9.8,"NM",40,0)
XPDIL^^0^B25314349
"BLD",9501,"KRN",9.8,"NM",41,0)
XPDIPM^^0^B4751809
"BLD",9501,"KRN",9.8,"NM",42,0)
A1AEDD1^^0^B8373863
"BLD",9501,"KRN",9.8,"NM",43,0)
A1AEBLD^^0^B49022663
"BLD",9501,"KRN",9.8,"NM",44,0)
A1AEK2^^0^B98333709
"BLD",9501,"KRN",9.8,"NM",45,0)
A1AEK1^^0^B102615726
"BLD",9501,"KRN",9.8,"NM",46,0)
A1AEUK1^^0^B167715864
"BLD",9501,"KRN",9.8,"NM",47,0)
A1AEUK2^^0^B265577528
"BLD",9501,"KRN",9.8,"NM",48,0)
A1AEUTL^^0^B268167978
"BLD",9501,"KRN",9.8,"NM","B","A1AEBLD",43)

"BLD",9501,"KRN",9.8,"NM","B","A1AEDD1",42)

"BLD",9501,"KRN",9.8,"NM","B","A1AEK1",45)

"BLD",9501,"KRN",9.8,"NM","B","A1AEK2",44)

"BLD",9501,"KRN",9.8,"NM","B","A1AEUK1",46)

"BLD",9501,"KRN",9.8,"NM","B","A1AEUK2",47)

"BLD",9501,"KRN",9.8,"NM","B","A1AEUTL",48)

"BLD",9501,"KRN",9.8,"NM","B","XPDIJ1",1)

"BLD",9501,"KRN",9.8,"NM","B","XPDIL",40)

"BLD",9501,"KRN",9.8,"NM","B","XPDIPM",41)

"BLD",9501,"KRN",19,0)
19
"BLD",9501,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",9501,"KRN",19,"NM",1,0)
A1AE CHANGE SITE SUBSCRIPTION^^0
"BLD",9501,"KRN",19,"NM",2,0)
A1AENEWSTRM^^0
"BLD",9501,"KRN",19,"NM","B","A1AE CHANGE SITE SUBSCRIPTION",1)

"BLD",9501,"KRN",19,"NM","B","A1AENEWSTRM",2)

"BLD",9501,"KRN",19.1,0)
19.1
"BLD",9501,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",9501,"KRN",19.1,"NM",1,0)
A1AE MGR^^0
"BLD",9501,"KRN",19.1,"NM","B","A1AE MGR",1)

"BLD",9501,"KRN",101,0)
101
"BLD",9501,"KRN",409.61,0)
409.61
"BLD",9501,"KRN",771,0)
771
"BLD",9501,"KRN",779.2,0)
779.2
"BLD",9501,"KRN",870,0)
870
"BLD",9501,"KRN",8989.51,0)
8989.51
"BLD",9501,"KRN",8989.52,0)
8989.52
"BLD",9501,"KRN",8994,0)
8994
"BLD",9501,"KRN","B",.4,.4)

"BLD",9501,"KRN","B",.401,.401)

"BLD",9501,"KRN","B",.402,.402)

"BLD",9501,"KRN","B",.403,.403)

"BLD",9501,"KRN","B",.5,.5)

"BLD",9501,"KRN","B",.84,.84)

"BLD",9501,"KRN","B",3.6,3.6)

"BLD",9501,"KRN","B",3.8,3.8)

"BLD",9501,"KRN","B",9.2,9.2)

"BLD",9501,"KRN","B",9.8,9.8)

"BLD",9501,"KRN","B",19,19)

"BLD",9501,"KRN","B",19.1,19.1)

"BLD",9501,"KRN","B",101,101)

"BLD",9501,"KRN","B",409.61,409.61)

"BLD",9501,"KRN","B",771,771)

"BLD",9501,"KRN","B",779.2,779.2)

"BLD",9501,"KRN","B",870,870)

"BLD",9501,"KRN","B",8989.51,8989.51)

"BLD",9501,"KRN","B",8989.52,8989.52)

"BLD",9501,"KRN","B",8994,8994)

"BLD",9501,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9501,"QUES",0)
^9.62^^
"BLD",9501,"REQB",0)
^9.611^^
"FIA",11004)
PATCH
"FIA",11004,0)
^A1AE(11004,
"FIA",11004,0,0)
11004I
"FIA",11004,0,1)
y^y^f^^^^n^^
"FIA",11004,0,10)

"FIA",11004,0,11)

"FIA",11004,0,"RLRO")

"FIA",11004,0,"VR")
2.5^PATCH CLIENT
"FIA",11004,11004)
0
"FIA",11004,11004.01)
0
"FIA",11004,11004.019)
0
"FIA",11004,11004.03)
0
"FIA",11004,11004.04)
0
"FIA",11004,11004.05)
0
"FIA",11004,11004.32)
0
"FIA",11007.1)
DHCP PATCH STREAM
"FIA",11007.1,0)
^A1AE(11007.1,
"FIA",11007.1,0,0)
11007.1
"FIA",11007.1,0,1)
y^y^f^^^^n^^
"FIA",11007.1,0,10)

"FIA",11007.1,0,11)

"FIA",11007.1,0,"RLRO")

"FIA",11007.1,0,"VR")
2.5^PATCH CLIENT
"FIA",11007.1,11007.1)
0
"FIA",11007.1,11007.11)
0
"FIA",11007.1,11007.12)
0
"FIA",11007.1,11007.122)
0
"INIT")
A1AE2POS
"IX",11004,11004,"AB",0)
11004^AB^Index used to figure out next patch numbers and walk through the patches^R^^F^IR^I^11004^^^^^S
"IX",11004,11004,"AB",1)
S ^A1AE(11004,"AB",X(2),X(3),X(4),DA)=""
"IX",11004,11004,"AB",2)
K ^A1AE(11004,"AB",X(2),X(3),X(4),DA)
"IX",11004,11004,"AB",2.5)
K ^A1AE(11004,"AB")
"IX",11004,11004,"AB",11.1,0)
^.114IA^4^4
"IX",11004,11004,"AB",11.1,1,0)
1^F^11004^.01^^^F
"IX",11004,11004,"AB",11.1,1,3)

"IX",11004,11004,"AB",11.1,2,0)
2^C^^^^1
"IX",11004,11004,"AB",11.1,2,1.5)
S X=$P(X(1),"*")
"IX",11004,11004,"AB",11.1,3,0)
3^C^^^^2
"IX",11004,11004,"AB",11.1,3,1.5)
S X=$P(X(1),"*",2)
"IX",11004,11004,"AB",11.1,4,0)
4^C^^^^3
"IX",11004,11004,"AB",11.1,4,1.5)
S X=$P(X(1),"*",3)
"IX",11004,11004,"ADERIVED",0)
11004^ADERIVED^This is used by the importer (A1AEK2M) prevent importing a patch twice.^R^^F^IR^I^11004^^^^^S
"IX",11004,11004,"ADERIVED",1)
S ^A1AE(11004,"ADERIVED",X(2),DA)=""
"IX",11004,11004,"ADERIVED",2)
K ^A1AE(11004,"ADERIVED",X(2),DA)
"IX",11004,11004,"ADERIVED",2.5)
K ^A1AE(11004,"ADERIVED")
"IX",11004,11004,"ADERIVED",11.1,0)
^.114IA^2^2
"IX",11004,11004,"ADERIVED",11.1,1,0)
1^F^11004^5.2^^^F
"IX",11004,11004,"ADERIVED",11.1,2,0)
2^C^^^^1
"IX",11004,11004,"ADERIVED",11.1,2,1.5)
S X=$$EXTERNAL^DILFD(11004,5.2,,X(1))
"IX",11004,11004,"ADERIVEDK",0)
11004^ADERIVEDK^This kills any entries in ADERIVED index when the pointed to entry is killed.^MU^^F^IR^I^11004^^^^^A
"IX",11004,11004,"ADERIVEDK",1)
Q
"IX",11004,11004,"ADERIVEDK",2)
K ^A1AE(11004,"ADERIVED",X)
"IX",11004,11004,"ADERIVEDK",2.5)
K ^A1AE(11004,"ADREIVED")
"IX",11004,11004,"ADERIVEDK",11.1,0)
^.114IA^1^1
"IX",11004,11004,"ADERIVEDK",11.1,1,0)
1^F^11004^.01^^1^F
"IX",11004,11004,"APTCSTM",0)
11004^APTCSTM^Quick lookup for patch and patch stream^R^^R^IR^I^11004^^^^^S
"IX",11004,11004,"APTCSTM",1)
S ^A1AE(11004,"APTCSTM",$E(X(1),1,30),X(2),DA)=""
"IX",11004,11004,"APTCSTM",2)
K ^A1AE(11004,"APTCSTM",$E(X(1),1,30),X(2),DA)
"IX",11004,11004,"APTCSTM",2.5)
K ^A1AE(11004,"APTCSTM")
"IX",11004,11004,"APTCSTM",11.1,0)
^.114IA^2^2
"IX",11004,11004,"APTCSTM",11.1,1,0)
1^F^11004^.01^30^1^F
"IX",11004,11004,"APTCSTM",11.1,2,0)
2^F^11004^.2^^2^F
"IX",11004,11004,"B",0)
11004^B^Select patches by field Patch Designation (.01)^R^^F^IR^I^11004^^^^^LS
"IX",11004,11004,"B",1)
S ^A1AE(11004,"B",X,DA)=""
"IX",11004,11004,"B",2)
K ^A1AE(11004,"B",X,DA)
"IX",11004,11004,"B",2.5)
K ^A1AE(11004,"B")
"IX",11004,11004,"B",11.1,0)
^.114IA^1^1
"IX",11004,11004,"B",11.1,1,0)
1^F^11004^.01^^1^F
"IX",11007.1,11007.1,"AFORUM",0)
11007.1^AFORUM^Indicate DHCP PATCH STREAM site as FORUM ^R^^F^IR^I^11007.1^^^^^S
"IX",11007.1,11007.1,"AFORUM",1)
S ^A1AE(11007.1,"AFORUM",$E(X,1,30),DA)=""
"IX",11007.1,11007.1,"AFORUM",2)
K ^A1AE(11007.1,"AFORUM",$E(X,1,30),DA)
"IX",11007.1,11007.1,"AFORUM",2.5)
K ^A1AE(11007.1,"AFORUM")
"IX",11007.1,11007.1,"AFORUM",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"AFORUM",11.1,1,0)
1^F^11007.1^.07^30^1^F
"IX",11007.1,11007.1,"AFORUM",11.1,1,3)

"IX",11007.1,11007.1,"APRIM",0)
11007.1^APRIM^Support computation of initial patch number by identifying primary patch stream^R^^F^IR^I^11007.1^^^^^S
"IX",11007.1,11007.1,"APRIM",.1,0)
^^25^25^3140805^^
"IX",11007.1,11007.1,"APRIM",.1,1,0)
Cross-reference APRIM builds index APRIM on file DHCP Patch Stream 
"IX",11007.1,11007.1,"APRIM",.1,2,0)
(11007.1) to allow selection of patch streams by whether they are primary.
"IX",11007.1,11007.1,"APRIM",.1,3,0)
 
"IX",11007.1,11007.1,"APRIM",.1,4,0)
Technical Description:
"IX",11007.1,11007.1,"APRIM",.1,5,0)
 
"IX",11007.1,11007.1,"APRIM",.1,6,0)
Index APRIM is used by $$PRIMSTRM^A1AEUTL to identify the primary patch 
"IX",11007.1,11007.1,"APRIM",.1,7,0)
stream so its field Patch Number Start (.001) can be used to seed the 
"IX",11007.1,11007.1,"APRIM",.1,8,0)
assignment of patch numbers for a new version of a package within a patch 
"IX",11007.1,11007.1,"APRIM",.1,9,0)
stream. To create this index is why this field exists.
"IX",11007.1,11007.1,"APRIM",.1,10,0)
 
"IX",11007.1,11007.1,"APRIM",.1,11,0)
Change History:
"IX",11007.1,11007.1,"APRIM",.1,12,0)
 
"IX",11007.1,11007.1,"APRIM",.1,13,0)
Wednesday, 22 January 2014: (VEN/SMH) Created traditional PRIM 
"IX",11007.1,11007.1,"APRIM",.1,14,0)
cross-reference to build index PRIM for Patch Module version 2.4 as part 
"IX",11007.1,11007.1,"APRIM",.1,15,0)
of the OSEHRA Forum Project Phase One.
"IX",11007.1,11007.1,"APRIM",.1,16,0)
 
"IX",11007.1,11007.1,"APRIM",.1,17,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted traditional PRIM 
"IX",11007.1,11007.1,"APRIM",.1,18,0)
cross-reference and created new-style APRIM cross-reference; revised 
"IX",11007.1,11007.1,"APRIM",.1,19,0)
Description; wrote Change History; for Patch Module version 2.4 as part 
"IX",11007.1,11007.1,"APRIM",.1,20,0)
of the OSEHRA Forum Project Phase One. The cross-reference was renamed 
"IX",11007.1,11007.1,"APRIM",.1,21,0)
from PRIM to APRIM to change it from a lookup-and-sorting index to a 
"IX",11007.1,11007.1,"APRIM",.1,22,0)
sorting-only index; previously, a user could select the primary patch 
"IX",11007.1,11007.1,"APRIM",.1,23,0)
stream by typing YES at the selection prompt, which was not a desired 
"IX",11007.1,11007.1,"APRIM",.1,24,0)
feature. $$PRIMSTRM^A1AEUTL had to be simultaneously changed from using 
"IX",11007.1,11007.1,"APRIM",.1,25,0)
removed index PRIM to using replacement index APRIM.
"IX",11007.1,11007.1,"APRIM",1)
S ^A1AE(11007.1,"APRIM",X,DA)=""
"IX",11007.1,11007.1,"APRIM",2)
K ^A1AE(11007.1,"APRIM",X,DA)
"IX",11007.1,11007.1,"APRIM",2.5)
K ^A1AE(11007.1,"APRIM")
"IX",11007.1,11007.1,"APRIM",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"APRIM",11.1,1,0)
1^F^11007.1^.02^^1^F
"IX",11007.1,11007.1,"APRIM1",0)
11007.1^APRIM1^Ensure only one record is marked primary at a time^MU^^F^^I^11007.1^^^^^A
"IX",11007.1,11007.1,"APRIM1",.1,0)
^^21^21^3140805^^
"IX",11007.1,11007.1,"APRIM1",.1,1,0)
Cross-reference APRIM1 on file DHCP Patch Stream (11007.1) ensures only 
"IX",11007.1,11007.1,"APRIM1",.1,2,0)
one record is marked primary at a time. Whenever field Primary? (.02) is 
"IX",11007.1,11007.1,"APRIM1",.1,3,0)
set to YES for one record, APRIM1 fires the kill logic for all 
"IX",11007.1,11007.1,"APRIM1",.1,4,0)
cross-references on Primary? for all records in the file, sets Primary? 
"IX",11007.1,11007.1,"APRIM1",.1,5,0)
to NO for all other records, and then fires the set logic for all 
"IX",11007.1,11007.1,"APRIM1",.1,6,0)
cross-references on Primary? for all records in the file.
"IX",11007.1,11007.1,"APRIM1",.1,7,0)
 
"IX",11007.1,11007.1,"APRIM1",.1,8,0)
Change History:
"IX",11007.1,11007.1,"APRIM1",.1,9,0)
 
"IX",11007.1,11007.1,"APRIM1",.1,10,0)
Wednesday, 22 January 2014: (VEN/SMH) Created traditional APRIM 
"IX",11007.1,11007.1,"APRIM1",.1,11,0)
cross-reference (which required fixing a File Manager bug in routine DIK 
"IX",11007.1,11007.1,"APRIM1",.1,12,0)
to support firing cross-references re-entrantly) for Patch Module version 
"IX",11007.1,11007.1,"APRIM1",.1,13,0)
2.4 as part of the OSEHRA Forum Project Phase One.
"IX",11007.1,11007.1,"APRIM1",.1,14,0)
 
"IX",11007.1,11007.1,"APRIM1",.1,15,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted traditional APRIM 
"IX",11007.1,11007.1,"APRIM1",.1,16,0)
cross-reference and created new-style APRIM1 cross-reference; revised code
"IX",11007.1,11007.1,"APRIM1",.1,17,0)
to operate on new field .02 instead of old, deleted field 2; revised 
"IX",11007.1,11007.1,"APRIM1",.1,18,0)
Description; wrote Change History; for Patch Module version 2.4 as part of
"IX",11007.1,11007.1,"APRIM1",.1,19,0)
the OSEHRA Forum Project Phase One. For an explanation of the renaming of 
"IX",11007.1,11007.1,"APRIM1",.1,20,0)
this cross-reference, see the description of new-style cross-reference 
"IX",11007.1,11007.1,"APRIM1",.1,21,0)
APRIM.
"IX",11007.1,11007.1,"APRIM1",1)
N DIK,DA S DIK(1)=".02",DIK="^A1AE(11007.1," D ENALL2^DIK N A1AEI X "F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  I A1AEI'=D0 S $P(^(A1AEI,0),U,2)=0" D ENALL^DIK
"IX",11007.1,11007.1,"APRIM1",1.4)
I X
"IX",11007.1,11007.1,"APRIM1",2)
Q
"IX",11007.1,11007.1,"APRIM1",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"APRIM1",11.1,1,0)
1^F^11007.1^.02^^^F
"IX",11007.1,11007.1,"ASUBCNG",0)
11007.1^ASUBCNG^Force a new entry into SUBSCRIPTION DATE^MU^^F^^I^11007.1^^^^^A
"IX",11007.1,11007.1,"ASUBCNG",.1,0)
^^3^3^3140805^
"IX",11007.1,11007.1,"ASUBCNG",.1,1,0)
This cross is to force a new entry in the SUBSCRIPTION DATE and 
"IX",11007.1,11007.1,"ASUBCNG",.1,2,0)
AUTHORIZING INDIVIDUAL field when the SUBSCRIPTION field for this Patch 
"IX",11007.1,11007.1,"ASUBCNG",.1,3,0)
Stream entry is toggled as the account SUBSCRIPTION
"IX",11007.1,11007.1,"ASUBCNG",1)
D ASUBCNG^A1AEUTL(D0)
"IX",11007.1,11007.1,"ASUBCNG",1.4)
I X
"IX",11007.1,11007.1,"ASUBCNG",2)
Q
"IX",11007.1,11007.1,"ASUBCNG",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"ASUBCNG",11.1,1,0)
1^F^11007.1^.06^^^F
"IX",11007.1,11007.1,"ASUBS",0)
11007.1^ASUBS^Indicate Subscription Stream active in this account^R^^F^IR^I^11007.1^^^^^S
"IX",11007.1,11007.1,"ASUBS",1)
S ^A1AE(11007.1,"ASUBS",X,DA)=""
"IX",11007.1,11007.1,"ASUBS",1.4)

"IX",11007.1,11007.1,"ASUBS",2)
K ^A1AE(11007.1,"ASUBS",X,DA)
"IX",11007.1,11007.1,"ASUBS",2.5)
K ^A1AE(11007.1,"ASUBS")
"IX",11007.1,11007.1,"ASUBS",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"ASUBS",11.1,1,0)
1^F^11007.1^.06^^1^F
"IX",11007.1,11007.1,"ASUBS1",0)
11007.1^ASUBS1^Ensure only one record is marked SUBSCRIBER at a time^MU^^F^^I^11007.1^^^^^A
"IX",11007.1,11007.1,"ASUBS1",.1,0)
^^2^2^3140805^
"IX",11007.1,11007.1,"ASUBS1",.1,1,0)
Ensure only one record is marked as SUSCRIBER at a time.  More 
"IX",11007.1,11007.1,"ASUBS1",.1,2,0)
description will be added later
"IX",11007.1,11007.1,"ASUBS1",1)
N DIK,DA S DIK(1)=".06",DIK="^A1AE(11007.1," D ENALL2^DIK N A1AEI X "F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  I A1AEI'=D0 S $P(^(A1AEI,0),U,6)=0" D ENALL^DIK
"IX",11007.1,11007.1,"ASUBS1",1.4)
I X
"IX",11007.1,11007.1,"ASUBS1",2)
Q
"IX",11007.1,11007.1,"ASUBS1",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"ASUBS1",11.1,1,0)
1^F^11007.1^.06^^^F
"IX",11007.1,11007.1,"ASUBS1",11.1,1,3)

"IX",11007.1,11007.1,"B",0)
11007.1^B^Selects Patch Streams by Name^R^^F^IR^I^11007.1^^^^^LS
"IX",11007.1,11007.1,"B",.1,0)
^^14^14^3140211^
"IX",11007.1,11007.1,"B",.1,1,0)
Cross-reference B builds index B on file DHCP Patch Stream (11007.1) to
"IX",11007.1,11007.1,"B",.1,2,0)
support the selection of patch streams by field Name (.01).
"IX",11007.1,11007.1,"B",.1,3,0)
 
"IX",11007.1,11007.1,"B",.1,4,0)
Change History:
"IX",11007.1,11007.1,"B",.1,5,0)
 
"IX",11007.1,11007.1,"B",.1,6,0)
Monday, 13 January 2014: (VEN/SMH) Created traditional B cross-reference
"IX",11007.1,11007.1,"B",.1,7,0)
automatically by creating file DHCP Patch Stream (11007.1) for Patch
"IX",11007.1,11007.1,"B",.1,8,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One.
"IX",11007.1,11007.1,"B",.1,9,0)
 
"IX",11007.1,11007.1,"B",.1,10,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted traditional B 
"IX",11007.1,11007.1,"B",.1,11,0)
cross-reference and created new-style B cross-reference to support 
"IX",11007.1,11007.1,"B",.1,12,0)
creation of primary key on field Name (.01) for Patch Module version 2.4 
"IX",11007.1,11007.1,"B",.1,13,0)
as part of the OSEHRA Forum Project Phase One. Write Description and 
"IX",11007.1,11007.1,"B",.1,14,0)
Change History.
"IX",11007.1,11007.1,"B",1)
S ^A1AE(11007.1,"B",X,DA)=""
"IX",11007.1,11007.1,"B",2)
K ^A1AE(11007.1,"B",X,DA)
"IX",11007.1,11007.1,"B",2.5)
K ^A1AE(11007.1,"B")
"IX",11007.1,11007.1,"B",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"B",11.1,1,0)
1^F^11007.1^.01^^1^F
"IX",11007.1,11007.1,"C",0)
11007.1^C^Select DHCP Patch Streams by Abbreviation^R^^F^IR^I^11007.1^^^^^LS
"IX",11007.1,11007.1,"C",.1,0)
^^8^8^3140211^
"IX",11007.1,11007.1,"C",.1,1,0)
Cross-reference C builds index C on file DHCP Patch Stream (11007.1) to 
"IX",11007.1,11007.1,"C",.1,2,0)
support the selection of patch streams by field Abbreviation (.05).
"IX",11007.1,11007.1,"C",.1,3,0)
 
"IX",11007.1,11007.1,"C",.1,4,0)
Change History:
"IX",11007.1,11007.1,"C",.1,5,0)
 
"IX",11007.1,11007.1,"C",.1,6,0)
Tuesday, 11 February 2014: (VEN/TOAD) Created new-style cross-reference C 
"IX",11007.1,11007.1,"C",.1,7,0)
to support creation of primary key on field Abbreviation (.05) for Patch 
"IX",11007.1,11007.1,"C",.1,8,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One.
"IX",11007.1,11007.1,"C",1)
S ^A1AE(11007.1,"C",X,DA)=""
"IX",11007.1,11007.1,"C",2)
K ^A1AE(11007.1,"C",X,DA)
"IX",11007.1,11007.1,"C",2.5)
K ^A1AE(11007.1,"C")
"IX",11007.1,11007.1,"C",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"C",11.1,1,0)
1^F^11007.1^.05^^1^F
"IX",11007.1,11007.1,"C",11.1,1,3)

"IX",11007.1,11007.1,"SUBSDT",0)
11007.1^SUBSDT^CROSS TO DOCUMENT PATCH STREAM HISTORY^R^^F^IR^W^11007.12^^^^^LS
"IX",11007.1,11007.1,"SUBSDT",.1,0)
^^4^4^3140806^
"IX",11007.1,11007.1,"SUBSDT",.1,1,0)
This cross-reference will be useful when installing a patch that has 
"IX",11007.1,11007.1,"SUBSDT",.1,2,0)
previous patch dependencies.  It may be that one patch that needs 
"IX",11007.1,11007.1,"SUBSDT",.1,3,0)
installed was distributed under the FOIA VISTA stream, and another after 
"IX",11007.1,11007.1,"SUBSDT",.1,4,0)
the site had converted to the OSEHRA VISTA stream.
"IX",11007.1,11007.1,"SUBSDT",1)
S ^A1AE(11007.1,"SUBSDT",X,DA(1),DA)=""
"IX",11007.1,11007.1,"SUBSDT",2)
K ^A1AE(11007.1,"SUBSDT",X,DA(1),DA)
"IX",11007.1,11007.1,"SUBSDT",2.5)
K ^A1AE(11007.1,"SUBSDT")
"IX",11007.1,11007.1,"SUBSDT",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"SUBSDT",11.1,1,0)
1^F^11007.12^.01^^1^F
"IX",11007.1,11007.1,"SUBSDT",11.1,1,3)

"KEY",11004,11004,"A",0)
11004^A^P^1126
"KEY",11004,11004,"A",2,0)
^.312IA^1^1
"KEY",11004,11004,"A",2,1,0)
.01^11004^1
"KEY",11007.1,11007.1,"A",0)
11007.1^A^P^1024
"KEY",11007.1,11007.1,"A",2,0)
^.312IA^1^1
"KEY",11007.1,11007.1,"A",2,1,0)
.01^11007.1^1
"KEY",11007.1,11007.1,"B",0)
11007.1^B^S^1027
"KEY",11007.1,11007.1,"B",2,0)
^.312IA^1^1
"KEY",11007.1,11007.1,"B",2,1,0)
.05^11007.1^1
"KEYPTR",11004,11004,"A")
11004^B
"KEYPTR",11007.1,11007.1,"A")
11007.1^B
"KEYPTR",11007.1,11007.1,"B")
11007.1^C
"KRN",.402,1768,-1)
0^1
"KRN",.402,1768,0)
A1AE CHANGE SITE SUBSCRIPTION^3140808.2146^@^11007.1^^@^3150607
"KRN",.402,1768,"DIAB",1,1,11007.12,0)
ALL
"KRN",.402,1768,"DR",1,11007.1)
.06;1;
"KRN",.402,1768,"DR",2,11007.12)
.01:2
"KRN",.402,1768,"DR",3,11007.122)
.01
"KRN",3.8,313,-1)
0^1
"KRN",3.8,313,0)
A1AESTRMCHG^PU^^^^^
"KRN",3.8,313,2,0)
^3.801^3^3^3150515^^^^
"KRN",3.8,313,2,1,0)
Mailgroup to receive email message if the site's patch stream is 
"KRN",3.8,313,2,2,0)
changed.  This mailgroup notifies local users AND sends email out through 
"KRN",3.8,313,2,3,0)
the MEMBERS - REMOTE server S.A1AENEWSTRM to notify FORUM.
"KRN",3.8,313,3)

"KRN",9.2,1341,-1)
0^1
"KRN",9.2,1341,0)
A1AE CHNG SITE SUBSCR^A1AE CHANGE SITE SUBSCRIPTION^3150701.0152^
"KRN",9.2,1341,1,0)
^^3^3^3150701^
"KRN",9.2,1341,1,1,0)
This option allows a client site to attempt to edit their DCHP PATCH 
"KRN",9.2,1341,1,2,0)
SUBSCRIPTION [#11007.1] file to change their Patch Subscription. The edit
"KRN",9.2,1341,1,3,0)
will be interrupted, however, a message sent to Forum with the request.
"KRN",19,11556,-1)
0^1
"KRN",19,11556,0)
A1AE CHANGE SITE SUBSCRIPTION^CHANGE SITE PATCH SUBSCRIPTION^^E^^A1AE MGR^A1AE CHNG SITE SUBSCR^^^^^PATCH MODULE
"KRN",19,11556,1,0)
^^1^1^3141014^
"KRN",19,11556,1,1,0)
Option to allow site to change their patch subscription. 
"KRN",19,11556,30)
A1AE(11007.1,
"KRN",19,11556,31)
AEMQ
"KRN",19,11556,50)
A1AE(11007.1,
"KRN",19,11556,51)
[A1AE CHANGE SITE SUBSCRIPTION]
"KRN",19,11556,"U")
CHANGE SITE PATCH SUBSCRIPTION
"KRN",19,11557,-1)
0^2
"KRN",19,11557,0)
A1AENEWSTRM^A1AE New Stream Request^^S^^^^^^^^
"KRN",19,11557,1,0)
^19.06^6^6^3150314^^^^
"KRN",19,11557,1,1,0)
This is the server that will 1) forward requests for a change in patch 
"KRN",19,11557,1,2,0)
stream to the appropriate recipient(s) at forum, 2) will receive the 
"KRN",19,11557,1,3,0)
confirmation from Forum email authorizing automated editing of the site's 
"KRN",19,11557,1,4,0)
patch stream, 3) will return a confirmation of stream change to Forum 
"KRN",19,11557,1,5,0)
after successful editing of SEQUENCE, or, and error message relating 
"KRN",19,11557,1,6,0)
failure of the site to convert to the new patch stream.
"KRN",19,11557,25)
PRCSMAIL^A1AEK2
"KRN",19,11557,220)
^R^^N^Y^N
"KRN",19,11557,"U")
A1AE NEW STREAM REQUEST
"KRN",19.1,564,-1)
0^1
"KRN",19.1,564,0)
A1AE MGR
"KRN",19.1,564,1,0)
^19.11^1^1^3081014^^^^
"KRN",19.1,564,1,1,0)
This key gives the user access to the 'Patch Module Management' option.
"KRN",19.1,564,3,0)
^19.13P
"MBREQ")
0
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",230,-1)
1^1
"PKG",230,0)
PATCH CLIENT^A1AE^Patch handling including streams for client systems.
"PKG",230,1,0)
^^2^2^3150429^
"PKG",230,1,1,0)
This package provides the tools necessary for patch handling on client
"PKG",230,1,2,0)
systems (those not involved in releasing packages and patches).
"PKG",230,20,0)
^9.402P^^
"PKG",230,22,0)
^9.49I^1^1
"PKG",230,22,1,0)
2.5^3150703
"PKG",230,22,1,1,0)
^^9^9^3150703
"PKG",230,22,1,1,1,0)
This build creates the initial version of the 'PATCH CLIENT' package.
"PKG",230,22,1,1,2,0)
 
"PKG",230,22,1,1,3,0)
This patch brings in the data for file 11004.
"PKG",230,22,1,1,4,0)
 
"PKG",230,22,1,1,5,0)
It also brings in options and routines.
"PKG",230,22,1,1,6,0)
 
"PKG",230,22,1,1,7,0)
And a security key as well
"PKG",230,22,1,1,8,0)
 
"PKG",230,22,1,1,9,0)
Oh, and an edit template.
"PKG",230,"VERSION")
2.5
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
11
"RTN","A1AE2POS")
0^^B144009212
"RTN","A1AE2POS",1,0)
A1AE2POS ;ven/lgc,jli-post installs for A1AE pkg ; 6/11/15 9:27pm
"RTN","A1AE2POS",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 35
"RTN","A1AE2POS",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AE2POS",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AE2POS",5,0)
 ;
"RTN","A1AE2POS",6,0)
 ;
"RTN","A1AE2POS",7,0)
 ;primary change history
"RTN","A1AE2POS",8,0)
 ;2014-08-26: version 2.4, released
"RTN","A1AE2POS",9,0)
 ;
"RTN","A1AE2POS",10,0)
 ;
"RTN","A1AE2POS",11,0)
 ; CHANGE: (VEN/LGC) 8/27/2014
"RTN","A1AE2POS",12,0)
 ;        Brought Post Install A1AEPST for DHCP PATCH STREAM
"RTN","A1AE2POS",13,0)
 ;        [#11007.1] to build the PAT multiple in the
"RTN","A1AE2POS",14,0)
 ;        BUILD [#9.6] and INSTALL [#9.7] over from
"RTN","A1AE2POS",15,0)
 ;        A1AEUTL with decision to keep post installs
"RTN","A1AE2POS",16,0)
 ;        in the A1AE2POS routine
"RTN","A1AE2POS",17,0)
 ;
"RTN","A1AE2POS",18,0)
 ; CHANGE: (VEN/LGC) 10/14/2014
"RTN","A1AE2POS",19,0)
 ;        Additional code to check for existence
"RTN","A1AE2POS",20,0)
 ;        of DHCP PATCH STREAM [#11007.1] file
"RTN","A1AE2POS",21,0)
 ;        and expected entries.
"RTN","A1AE2POS",22,0)
 ;
"RTN","A1AE2POS",23,0)
 ; CHANGE: (VEN/LGC) 10/15/2014  A1AEP0
"RTN","A1AE2POS",24,0)
 ;        Additional code to kill all entries in
"RTN","A1AE2POS",25,0)
 ;        file 11007.1 and re-build with correct
"RTN","A1AE2POS",26,0)
 ;        FOIA VISTA and OSEHRA VISTA entries
"RTN","A1AE2POS",27,0)
 ;
"RTN","A1AE2POS",28,0)
 ; POST INSTALL entry A1AEP0
"RTN","A1AE2POS",29,0)
 ;                Delete any entries in DHCP PATCH STREAM
"RTN","A1AE2POS",30,0)
 ;                [#11007.1] file and rebuild with correctlyFOIA VISTA
"RTN","A1AE2POS",31,0)
 ;                entered FOIA VISTA and OSEHRA VISTA.
"RTN","A1AE2POS",32,0)
 ;
"RTN","A1AE2POS",33,0)
 ;
"RTN","A1AE2POS",34,0)
 ; POST INSTALL entry A1AEP1
"RTN","A1AE2POS",35,0)
 ;                Following DHCP PATCH STREAM [#11007.1] KIDS
"RTN","A1AE2POS",36,0)
 ;                install, Set all PRIMARY? to NO, then
"RTN","A1AE2POS",37,0)
 ;                correct one to yes if FORUM site.  Set
"RTN","A1AE2POS",38,0)
 ;                all SUBSCRIPTION to No, then set FOIA VISTA
"RTN","A1AE2POS",39,0)
 ;                to YES.  Then ask installer whether they
"RTN","A1AE2POS",40,0)
 ;                wish to change their site's SUBSCRIPTION.
"RTN","A1AE2POS",41,0)
 ;
"RTN","A1AE2POS",42,0)
 ; POST INSTALL entry A1AEP2
"RTN","A1AE2POS",43,0)
 ;                Following update/install of [#11005]
"RTN","A1AE2POS",44,0)
 ;                DHCP PATCHES file this updates the
"RTN","A1AE2POS",45,0)
 ;                PAT multiples in BUILD [#9.6] and
"RTN","A1AE2POS",46,0)
 ;                INSTALL [#9.7] files
"RTN","A1AE2POS",47,0)
 ;
"RTN","A1AE2POS",48,0)
 ;
"RTN","A1AE2POS",49,0)
 ;
"RTN","A1AE2POS",50,0)
 ; POST INSTALL - Following DHCP PATCH STREAM [#11007.1] KIDS
"RTN","A1AE2POS",51,0)
 ;                install, Set all PRIMARY? to NO, then
"RTN","A1AE2POS",52,0)
 ;                correct one to yes if FORUM site.  Set
"RTN","A1AE2POS",53,0)
 ;                all SUBSCRIPTION to No, then set FOIA VISTA
"RTN","A1AE2POS",54,0)
 ;                to YES.  Then ask installer whether they
"RTN","A1AE2POS",55,0)
 ;                wish to change their site's SUBSCRIPTION.
"RTN","A1AE2POS",56,0)
 ;
"RTN","A1AE2POS",57,0)
JLIINSTL ; JLI - Post Install update data dictionary nodes for Pre Lookup Transforms and A1AESEQ
"RTN","A1AE2POS",58,0)
 I '$D(^DD(9.49,.01,7.5)) S ^DD(9.49,.01,7.5)="D PLU949^A1AEDD1"
"RTN","A1AE2POS",59,0)
 I '$D(^DD(9.6,.01,7.5)) S ^DD(9.6,.01,7.5)="D PLU96^A1AEDD1"
"RTN","A1AE2POS",60,0)
 I '$D(^DD(9.7,.01,7.5)) S ^DD(9.7,.01,7.5)="D PLU97^A1AEDD1"
"RTN","A1AE2POS",61,0)
 N A1AEFILE S A1AEFILE=11005 I '$D(^DIC(A1AEFILE)) S A1AEFILE=11004
"RTN","A1AE2POS",62,0)
 D SETSEQ ; set DD nodes for A1AESEQ cross reference for file 9.4 and build
"RTN","A1AE2POS",63,0)
 D UPDATSEQ ; update PACKAGE file for patches with SEQ number and inf only
"RTN","A1AE2POS",64,0)
 ;
"RTN","A1AE2POS",65,0)
A1AEP1 ;
"RTN","A1AE2POS",66,0)
 I '$D(^A1AE(11007.1)) D  Q
"RTN","A1AE2POS",67,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",68,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] not installed")
"RTN","A1AE2POS",69,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",70,0)
 ;
"RTN","A1AE2POS",71,0)
 ; Kill any existing entries and rebuild
"RTN","A1AE2POS",72,0)
 ;
"RTN","A1AE2POS",73,0)
 I '$$CLRFILE D  Q
"RTN","A1AE2POS",74,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",75,0)
 . D MES^XPDUTL("Unable to clear DHCP PATCH STREAM [#11007.1]")
"RTN","A1AE2POS",76,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",77,0)
 ;
"RTN","A1AE2POS",78,0)
 I '$$LOADFILE D  Q
"RTN","A1AE2POS",79,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",80,0)
 . D MES^XPDUTL("Unable to build DHCP PATCH STREAM [#11007.1]")
"RTN","A1AE2POS",81,0)
 . D MES^XPDUTL(" with FOIA VISTA and OSEHRA VISTA entries.")
"RTN","A1AE2POS",82,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",83,0)
 ;
"RTN","A1AE2POS",84,0)
A1AEP1R ;
"RTN","A1AE2POS",85,0)
 I $$GET1^DIQ(11007.1,1,.01)'="FOIA VISTA" D  Q
"RTN","A1AE2POS",86,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",87,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] is incomplete")
"RTN","A1AE2POS",88,0)
 . D MES^XPDUTL(" Missing FOIA VISTA entry.")
"RTN","A1AE2POS",89,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",90,0)
 ;
"RTN","A1AE2POS",91,0)
 I $$GET1^DIQ(11007.1,10001,.01)'="OSEHRA VISTA" D  Q
"RTN","A1AE2POS",92,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",93,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] is incomplete")
"RTN","A1AE2POS",94,0)
 . D MES^XPDUTL(" Missing OSEHRA VISTA entry.")
"RTN","A1AE2POS",95,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",96,0)
 ;
"RTN","A1AE2POS",97,0)
 I $$GET1^DIQ(11007.1,1,.001)'=1 D  Q
"RTN","A1AE2POS",98,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",99,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] is CORRUPTED")
"RTN","A1AE2POS",100,0)
 . D MES^XPDUTL(" FOIA VISTA entry .001 not 1.")
"RTN","A1AE2POS",101,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",102,0)
 ;
"RTN","A1AE2POS",103,0)
 I $$GET1^DIQ(11007.1,10001,.001)'=10001 D  Q
"RTN","A1AE2POS",104,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",105,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] is CORRUPTED")
"RTN","A1AE2POS",106,0)
 . D MES^XPDUTL(" OSEHRA VISTA entry .001 not 10001")
"RTN","A1AE2POS",107,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",108,0)
 ;
"RTN","A1AE2POS",109,0)
 If $G(^DD(9.6,19,0))'["PATCH^9.619PA^^PAT;0" D  Q
"RTN","A1AE2POS",110,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",111,0)
 . D MES^XPDUTL("PATCH multiple [#19] not found in BUILD file")
"RTN","A1AE2POS",112,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",113,0)
 ;
"RTN","A1AE2POS",114,0)
 I $G(^DD(9.7,19,0))'["PATCH^9.719PA^^PAT;0" D  Q
"RTN","A1AE2POS",115,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",116,0)
 . D MES^XPDUTL("PATCH multiple [#19] not found in INSTALL file")
"RTN","A1AE2POS",117,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",118,0)
 ;
"RTN","A1AE2POS",119,0)
 I '$D(^DD(A1AEFILE,0)) D  Q
"RTN","A1AE2POS",120,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",121,0)
 . D MES^XPDUTL("Do not find DD for DHCP PATCHES [#"_A1AEFILE_"] file")
"RTN","A1AE2POS",122,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",123,0)
 ;
"RTN","A1AE2POS",124,0)
 ; Set all PRIMARY? [#.02] in 11007.1 to 0 [NO]
"RTN","A1AE2POS",125,0)
 D A1AEP1A
"RTN","A1AE2POS",126,0)
 ;
"RTN","A1AE2POS",127,0)
 ; Set PRIMARY? to YES if the FORUM DOMAIN [#.07] entry
"RTN","A1AE2POS",128,0)
 ;    for this DHCP PATCH STREAM entry matches the
"RTN","A1AE2POS",129,0)
 ;    NAME of the first entry in the MAILMAN PARAMTERS
"RTN","A1AE2POS",130,0)
 ;    [#4.3] file.
"RTN","A1AE2POS",131,0)
 D A1AEP1B
"RTN","A1AE2POS",132,0)
 ;
"RTN","A1AE2POS",133,0)
 ; Set SUBSCRIPTION [#.06] in 11007.1 to 0 for
"RTN","A1AE2POS",134,0)
 ;    every site. Then set FOIA VISTA SUBSCRIPTION to 1
"RTN","A1AE2POS",135,0)
 D A1AEP1C
"RTN","A1AE2POS",136,0)
 ;
"RTN","A1AE2POS",137,0)
 ; Finally display SUBSCRIPTION to installer and ask if they
"RTN","A1AE2POS",138,0)
 ;    wish to switch to another PATCH SEQUENCE.
"RTN","A1AE2POS",139,0)
 D A1AEP1D
"RTN","A1AE2POS",140,0)
A1AEP1E Q
"RTN","A1AE2POS",141,0)
 ;
"RTN","A1AE2POS",142,0)
 ; Set all PRIMARY? [#.02] in 11007.1 to 0 [NO]
"RTN","A1AE2POS",143,0)
 ; WAS A1AEP0
"RTN","A1AE2POS",144,0)
A1AEP1A N DIK,DA
"RTN","A1AE2POS",145,0)
 S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AE2POS",146,0)
 D ENALL2^DIK
"RTN","A1AE2POS",147,0)
 N A1AEI
"RTN","A1AE2POS",148,0)
 F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AE2POS",149,0)
 . S $P(^A1AE(11007.1,A1AEI,0),U,2)=0
"RTN","A1AE2POS",150,0)
 D ENALL^DIK
"RTN","A1AE2POS",151,0)
 Q
"RTN","A1AE2POS",152,0)
 ;
"RTN","A1AE2POS",153,0)
 ;
"RTN","A1AE2POS",154,0)
 ; Now Set PRIMARY? to YES if the FORUM DOMAIN [#.07] entry
"RTN","A1AE2POS",155,0)
 ;    for this DHCP PATCH STREAM entry matches the
"RTN","A1AE2POS",156,0)
 ;    NAME of the first entry in the MAILMAN PARAMTERS
"RTN","A1AE2POS",157,0)
 ;    [#4.3] file.
"RTN","A1AE2POS",158,0)
 ; WAS A1AESP
"RTN","A1AE2POS",159,0)
A1AEP1B F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AE2POS",160,0)
 .  I $O(^A1AE(11007.1,"AFORUM",""))=$$GET1^DIQ(4.3,"1,",.01) D
"RTN","A1AE2POS",161,0)
 .. N A1AEFDA,DIERR
"RTN","A1AE2POS",162,0)
 .. S A1AEFDA(3,11007.1,A1AEI_",",.02)=1
"RTN","A1AE2POS",163,0)
 .. D UPDATE^DIE("","A1AEFDA(3)")
"RTN","A1AE2POS",164,0)
 Q
"RTN","A1AE2POS",165,0)
 ;
"RTN","A1AE2POS",166,0)
 ;
"RTN","A1AE2POS",167,0)
 ; Set SUBSCRIPTION [#.06] in 11007.1 to 0 for
"RTN","A1AE2POS",168,0)
 ;    every site. Then set FOIA VISTA SUBSCRIPTION to 1
"RTN","A1AE2POS",169,0)
 ; WAS A1AES0
"RTN","A1AE2POS",170,0)
A1AEP1C N DIK,DA
"RTN","A1AE2POS",171,0)
 S DIK(1)=".06",DIK="^A1AE(11007.1,"
"RTN","A1AE2POS",172,0)
 D ENALL2^DIK
"RTN","A1AE2POS",173,0)
 N A1AEI
"RTN","A1AE2POS",174,0)
 F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AE2POS",175,0)
 . S $P(^A1AE(11007.1,A1AEI,0),U,6)=0
"RTN","A1AE2POS",176,0)
 S A1AEI=$O(^A1AE(11007.1,"B","FOIA VISTA",0))
"RTN","A1AE2POS",177,0)
 S:A1AEI $P(^A1AE(11007.1,A1AEI,0),U,6)=1
"RTN","A1AE2POS",178,0)
 D ENALL^DIK
"RTN","A1AE2POS",179,0)
 Q
"RTN","A1AE2POS",180,0)
 ;
"RTN","A1AE2POS",181,0)
 ; Now display SUBSCRIPTION to installer and ask if they
"RTN","A1AE2POS",182,0)
 ;    wish to switch to another PATCH SEQUENCE.
"RTN","A1AE2POS",183,0)
A1AEP1D ; WAS A1AEASK
"RTN","A1AE2POS",184,0)
 D BMES^XPDUTL(2)
"RTN","A1AE2POS",185,0)
 D MES^XPDUTL("Your Patch Stream SUBSCRIPTION is currently")
"RTN","A1AE2POS",186,0)
 D MES^XPDUTL(" set to FOIA VISTA.")
"RTN","A1AE2POS",187,0)
 D BMES^XPDUTL(1)
"RTN","A1AE2POS",188,0)
 D MES^XPDUTL("There is an option A1AE CHANGE SITE SUBSCRIPTION")
"RTN","A1AE2POS",189,0)
 D MES^XPDUTL(" which will let you move your Site to")
"RTN","A1AE2POS",190,0)
 D MES^XPDUTL(" another SUBSCRIPTION in the future")
"RTN","A1AE2POS",191,0)
 D MES^XPDUTL("HOWEVER you may change your SUBSCRIPTION now.")
"RTN","A1AE2POS",192,0)
 D BMES^XPDUTL(1)
"RTN","A1AE2POS",193,0)
 D MES^XPDUTL("Would you like to change your SUBSCRIPTION now?")
"RTN","A1AE2POS",194,0)
 N DIR,Y
"RTN","A1AE2POS",195,0)
 S DIR("A")="    ? ",DIR(0)="Y",DIR("B")="NO"
"RTN","A1AE2POS",196,0)
 D ^DIR
"RTN","A1AE2POS",197,0)
 I 'Y D  G A1AEEXPS
"RTN","A1AE2POS",198,0)
 .  D MES^XPDUTL("OK.  Will not change SUBSCRIPTION now") Q
"RTN","A1AE2POS",199,0)
 ;
"RTN","A1AE2POS",200,0)
 D MES^XPDUTL("YES.  Change SUBSCRIPTION now.")
"RTN","A1AE2POS",201,0)
 ;
"RTN","A1AE2POS",202,0)
 ; Give list of choices (1 and 10001 are only choices now)
"RTN","A1AE2POS",203,0)
 ; Drop them into EDIT of that entry.  Force SUBSCRIPTION
"RTN","A1AE2POS",204,0)
 ;  to 1?  This fills in SUBSCRIPTION DATE and OFFICAL
"RTN","A1AE2POS",205,0)
 ;  then hand them off to fill in comments
"RTN","A1AE2POS",206,0)
 K DIR S DIR(0)="P^11007.1" D ^DIR
"RTN","A1AE2POS",207,0)
 I 'Y D  G A1AEEXPS
"RTN","A1AE2POS",208,0)
 . D BMES^XPDUTL(1)
"RTN","A1AE2POS",209,0)
 . D MES^XPDUTL("No SUBSCRIPTION selected")
"RTN","A1AE2POS",210,0)
 . D MES^XPDUTL("  The SUBSCRIPTION may be changed at any time using")
"RTN","A1AE2POS",211,0)
 . D MES^XPDUTL("  the Option A1AE CHANGE SITE SUBSCRIPTION.")
"RTN","A1AE2POS",212,0)
 ;
"RTN","A1AE2POS",213,0)
 ; OK Y=DA for entry allow them to edit.  How to use DIE
"RTN","A1AE2POS",214,0)
 ;   call and A1AE CHANGE SITE SUBSCRIPTION?
"RTN","A1AE2POS",215,0)
 N DIE,DR
"RTN","A1AE2POS",216,0)
 S DA=+Y
"RTN","A1AE2POS",217,0)
 S DIE="^A1AE(11007.1,",DR="[A1AE CHANGE SITE SUBSCRIPTION]"
"RTN","A1AE2POS",218,0)
 D ^DIE
"RTN","A1AE2POS",219,0)
 ;
"RTN","A1AE2POS",220,0)
A1AEEXPS Q
"RTN","A1AE2POS",221,0)
 ;
"RTN","A1AE2POS",222,0)
 ;
"RTN","A1AE2POS",223,0)
 ;
"RTN","A1AE2POS",224,0)
 ; POST INSTALL - Following update/install of [#11005]
"RTN","A1AE2POS",225,0)
 ;                DHCP PATCHES file this updates the
"RTN","A1AE2POS",226,0)
 ;                PAT multiples in BUILD [#9.6] and
"RTN","A1AE2POS",227,0)
 ;                INSTALL [#9.7] files
"RTN","A1AE2POS",228,0)
 ; LOGIC
"RTN","A1AE2POS",229,0)
 ; Run down the BUILD [#9.6] file
"RTN","A1AE2POS",230,0)
 ;   Save the PATCH DESIGNATION in the PMARR array
"RTN","A1AE2POS",231,0)
 ;     If there is an entry in the DHCP PATCHES [#11005]
"RTN","A1AE2POS",232,0)
 ;     file, add this pointer to the PAT multiple
"RTN","A1AE2POS",233,0)
 ;     in the BUILD entry and the corresponding INSTALL entry
"RTN","A1AE2POS",234,0)
 ;   Check for MULTIPLE BUILD entries in the BUILD
"RTN","A1AE2POS",235,0)
 ;   Check recursively for MULTIPLE BUILDs in these
"RTN","A1AE2POS",236,0)
 ;   Update the BUILD PAT multiple with any DHCP PATCHES
"RTN","A1AE2POS",237,0)
 ;     entries found matching
"RTN","A1AE2POS",238,0)
 ;
"RTN","A1AE2POS",239,0)
A1AEP2 N BN,KIEN,MIEN,PM S KIEN=0
"RTN","A1AE2POS",240,0)
 K BMARR
"RTN","A1AE2POS",241,0)
 F  S KIEN=$O(^XPD(9.6,KIEN)) Q:'KIEN  D
"RTN","A1AE2POS",242,0)
 .  S BN=$P($G(^XPD(9.6,KIEN,0)),"^")
"RTN","A1AE2POS",243,0)
 .  K BMARR D A1AEP2A(BN,.BMARR,KIEN)
"RTN","A1AE2POS",244,0)
 Q
"RTN","A1AE2POS",245,0)
 ; BMARR array contains BUILD NAME (NAME [#.01])
"RTN","A1AE2POS",246,0)
 ;  of this entry in 9.6 AND of any MULTIPLE BUILD
"RTN","A1AE2POS",247,0)
 ;  descendants
"RTN","A1AE2POS",248,0)
 ; As each descendant is identified, check to see if
"RTN","A1AE2POS",249,0)
 ;  there is a matching name in DHCP PATCHES
"RTN","A1AE2POS",250,0)
 ;  If so, add to PAT multiple for parent (KIEN)
"RTN","A1AE2POS",251,0)
A1AEP2A(BUILD,BMARR,KIEN) ;
"RTN","A1AE2POS",252,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) ; do we have an IEN?
"RTN","A1AE2POS",253,0)
 Q:'BIEN  ; skip if no record
"RTN","A1AE2POS",254,0)
 S BMARR(BUILD)="" ; add to requiremenents
"RTN","A1AE2POS",255,0)
 D A1AEP2B(BUILD,KIEN) ; add to PAT multipe of primary entry
"RTN","A1AE2POS",256,0)
 N BLDNM S BLDNM=""
"RTN","A1AE2POS",257,0)
 F  S BLDNM=$O(^XPD(9.6,BIEN,10,"B",BLDNM)) Q:BLDNM=""  D
"RTN","A1AE2POS",258,0)
 . Q:$D(BMARR(BLDNM))  ; no need to continue if already have
"RTN","A1AE2POS",259,0)
 . D A1AEP2A(BLDNM,.BMARR,KIEN) ; add all its required patches
"RTN","A1AE2POS",260,0)
 Q
"RTN","A1AE2POS",261,0)
 ;
"RTN","A1AE2POS",262,0)
 ; Load PAT multiples
"RTN","A1AE2POS",263,0)
 ; Looks in DHCP PATCHES [#11005] for Patch Designation
"RTN","A1AE2POS",264,0)
 ;   matching the BUILD name (PD)
"RTN","A1AE2POS",265,0)
 ;   If found, the patch is entered in the primary BUILD
"RTN","A1AE2POS",266,0)
 ;     PAT multiple, and in PAT of all matching INSTALLS
"RTN","A1AE2POS",267,0)
 ; Enter
"RTN","A1AE2POS",268,0)
 ;   PD    =  Patch Designation to lookup in 11005
"RTN","A1AE2POS",269,0)
 ;              (same name as build now under review)
"RTN","A1AE2POS",270,0)
 ;   KIEN  =  IEN of primary Build in which PAT is being built
"RTN","A1AE2POS",271,0)
 ; Variables
"RTN","A1AE2POS",272,0)
 ;   A1AEPI  =  IEN of Patch matching name of PD
"RTN","A1AE2POS",273,0)
 ;   IIEN    =  IEN of INSTALLS(s) matching KIEN entry
"RTN","A1AE2POS",274,0)
A1AEP2B(PD,KIEN) ;
"RTN","A1AE2POS",275,0)
  N A1AEFILE S A1AEFILE=11005,A1AENAME="DHCP PATCHES" I '$D(^DIC(11005)) S A1AEFILE=11004,A1AENAME="PATCH" ; JLI 150525
"RTN","A1AE2POS",276,0)
 S A1AEPI=$O(^A1AE(A1AEFILE,"B",PD,0))
"RTN","A1AE2POS",277,0)
 ; If no match, try dropping the ".0"
"RTN","A1AE2POS",278,0)
 I 'A1AEPI,$P(PD,"*",2)?.NP1"0" D
"RTN","A1AE2POS",279,0)
 .  N PD0 S PD0=$P(PD,"*")_"*"_$P($P(PD,"*",2),".")_"*"_$P(PD,"*",3)
"RTN","A1AE2POS",280,0)
 .  S A1AEPI=$O(^A1AE(A1AEFILE,"B",PD0,0))
"RTN","A1AE2POS",281,0)
 Q:'A1AEPI
"RTN","A1AE2POS",282,0)
 ; Update BUILD and entry PAT multiple
"RTN","A1AE2POS",283,0)
 D A1AEP2C(KIEN,A1AEPI,9.619)
"RTN","A1AE2POS",284,0)
 ; Update this and all similar named INSTALL entries PAT multiple
"RTN","A1AE2POS",285,0)
 N IIEN S IIEN=$O(^XPD(9.7,"B",$P(^XPD(9.6,KIEN,0),"^"),0))
"RTN","A1AE2POS",286,0)
 I IIEN D
"RTN","A1AE2POS",287,0)
 . N PMI S PMI=$P(^XPD(9.7,IIEN,0),"^")
"RTN","A1AE2POS",288,0)
 . N INODE S INODE=$NA(^XPD(9.7,"B",PMI))
"RTN","A1AE2POS",289,0)
 . F  S INODE=$Q(@INODE) Q:$QS(INODE,3)'[PMI  D
"RTN","A1AE2POS",290,0)
 .. S IIEN=$QS(INODE,4) D A1AEP2C(IIEN,A1AEPI,9.719)
"RTN","A1AE2POS",291,0)
 Q
"RTN","A1AE2POS",292,0)
 ; Update PAT multiple in BUILD/INSTALL entry
"RTN","A1AE2POS",293,0)
A1AEP2C(A1AEKI,A1AEPI,KFILE) ;
"RTN","A1AE2POS",294,0)
 N FDA,DIERR
"RTN","A1AE2POS",295,0)
 S FDA(3,KFILE,"?+1,"_A1AEKI_",",.01)=A1AEPI
"RTN","A1AE2POS",296,0)
 N NODE S NODE=$NA(FDA),NODE=$Q(@NODE) ;W !,NODE,"=",@NODE
"RTN","A1AE2POS",297,0)
 D UPDATE^DIE("","FDA(3)","")
"RTN","A1AE2POS",298,0)
 Q
"RTN","A1AE2POS",299,0)
 ;
"RTN","A1AE2POS",300,0)
SETPLUS  ; sets up pre-lookup transforms for existing files that need it
"RTN","A1AE2POS",301,0)
 S ^DD(9.49,.01,7.5)="D PLU949^A1AEDD1"
"RTN","A1AE2POS",302,0)
 S ^DD(9.6,.01,7.5)="D PLU96^A1AEDD1"
"RTN","A1AE2POS",303,0)
 S ^DD(9.7,.01,7.5)="D PLU97^A1AEDD1"
"RTN","A1AE2POS",304,0)
 Q
"RTN","A1AE2POS",305,0)
 ;
"RTN","A1AE2POS",306,0)
SETSEQ ; sets up whole file cross-reference on NAME field (#.01) of the PATCH APPLICATION HISTORY
"RTN","A1AE2POS",307,0)
 ; subfile (#9.4901) of the VERSION subfile (#9.49) of the PACKAGE file (#9.4) to be able to look
"RTN","A1AE2POS",308,0)
 ; up patch by package PREFIX, VERSION, STREAM POINTER, and SEQUENCE NUMBER for release
"RTN","A1AE2POS",309,0)
 I $D(^DD(9.4,0,"IX","A1AESEQ",9.4901,.01)) Q  ; already installed
"RTN","A1AE2POS",310,0)
 S NODE=0 ; should probably be 2, but just make sure
"RTN","A1AE2POS",311,0)
 F NODE1=0:0 S NODE1=$O(^DD(9.4901,.01,1,NODE1)) Q:NODE1'>0  S NODE=NODE1
"RTN","A1AE2POS",312,0)
 S NODE=NODE+1
"RTN","A1AE2POS",313,0)
 S ^DD(9.4901,.01,1,NODE,0)="9.4^A1AESEQ^MUMPS"
"RTN","A1AE2POS",314,0)
 S ^DD(9.4901,.01,1,NODE,1)="D A1AESEQ^A1AEDD1"
"RTN","A1AE2POS",315,0)
 S ^DD(9.4901,.01,1,NODE,2)="D KA1AESEQ^A1AEDD1"
"RTN","A1AE2POS",316,0)
 S ^DD(9.4901,.01,1,NODE,"%D",0)="^^2^2^3150105^"
"RTN","A1AE2POS",317,0)
 S ^DD(9.4901,.01,1,NODE,"%D",1,0)="This cross reference permits the user to rapidly find patches related to "
"RTN","A1AE2POS",318,0)
 S ^DD(9.4901,.01,1,NODE,"%D",2,0)="a package, version, and stream by release sequence number."
"RTN","A1AE2POS",319,0)
 S ^DD(9.4901,.01,1,NODE,"DT")=3150105
"RTN","A1AE2POS",320,0)
 S ^DD(9.4,0,"IX","A1AESEQ",9.4901,.01)=""
"RTN","A1AE2POS",321,0)
 ; and index the existing values
"RTN","A1AE2POS",322,0)
 N DA,X
"RTN","A1AE2POS",323,0)
 F DA(2)=0:0 S DA(2)=$O(^DIC(9.4,DA(2))) Q:DA(2)'>0  F DA(1)=0:0 S DA(1)=$O(^DIC(9.4,DA(2),22,DA(1))) Q:DA(1)'>0  F DA=0:0 S DA=$O(^DIC(9.4,DA(2),22,DA(1),"PAH",DA)) Q:DA'>0  S X=$P(^(DA,0),U) D A1AESEQ^A1AEDD1
"RTN","A1AE2POS",324,0)
 Q
"RTN","A1AE2POS",325,0)
UPDATSEQ    ; update Package file if a patch is INFO only and has sequence number for released and it isn't already present
"RTN","A1AE2POS",326,0)
 ; If sequence number, check for only 1 Category for a patch and that Category is INFO only
"RTN","A1AE2POS",327,0)
 N CCNT,I,INFO,X,P,PKG,PKGV,PTCH,PTCHSEQ,S
"RTN","A1AE2POS",328,0)
 S CCNT=0,INFO=0
"RTN","A1AE2POS",329,0)
 F I=0:0 D:(CCNT=1)&(INFO)  S INFO=0,CCNT=0,I=$O(^A1AE(A1AEFILE,I)) Q:I'>0  S X=^(I,0),P=$P(X,U),S=$P(X,U,6) I S>0 F J=0:0 S J=$O(^A1AE(A1AEFILE,I,"C",J)) Q:J'>0  S CCNT=CCNT+1 I ^(J,0)["inf" S INFO=1
"RTN","A1AE2POS",330,0)
 . S PKG=$P(P,"*"),PKGV=$P(P,"*",2),PTCH=$P(P,"*",3) I $P(PKGV,".",2)="" S PKGV=+PKGV_".0"
"RTN","A1AE2POS",331,0)
 . S PTCHSEQ=PTCH_" SEQ #"_S
"RTN","A1AE2POS",332,0)
 . N DA S DA(2)=$O(^DIC(9.4,"C",PKG,"")) I DA(2)'>0 D  I DA(2)'>0 W !,"ERROR WITH ",P," PACKAGE ENTRY IN FILE 9.4" Q
"RTN","A1AE2POS",333,0)
 . . N FDA,FDAMSG S FDA(9.4,"+1,",.01)=PKG_" package",FDA(9.4,"+1,",1)=PKG,FDA(9.4,"+1,",2)="SHORT DESCRIP"
"RTN","A1AE2POS",334,0)
 . . D UPDATE^DIE("E","FDA","","FDAMSG")
"RTN","A1AE2POS",335,0)
 . . S DA(2)=$O(^DIC(9.4,"C",PKG,""))
"RTN","A1AE2POS",336,0)
 . . Q
"RTN","A1AE2POS",337,0)
 . S DA(1)=$O(^DIC(9.4,DA(2),22,"B",PKGV,"")) I DA(1)'>0 D  I DA(1)'>0 W !,"ERROR WITH ",P," VERSION ENTRY IN FILE 9.4" Q
"RTN","A1AE2POS",338,0)
 . . N VALUE S VALUE=PKGV I VALUE'["." S VALUE=VALUE_".0"
"RTN","A1AE2POS",339,0)
 . . N FDA,FDAMSG S FDA(9.49,"+1,"_DA(2)_",",.01)=VALUE
"RTN","A1AE2POS",340,0)
 . . D UPDATE^DIE("E","FDA","","FDAMSG")
"RTN","A1AE2POS",341,0)
 . . S DA(1)=$O(^DIC(9.4,DA(2),22,"B",PKGV,""))
"RTN","A1AE2POS",342,0)
 . . Q
"RTN","A1AE2POS",343,0)
 . S DA=$O(^DIC(9.4,DA(2),22,DA(1),"PAH","B",PTCHSEQ,"")) I DA>0 Q
"RTN","A1AE2POS",344,0)
 . S DA=$O(^DIC(9.4,DA(2),22,DA(1),"PAH","B",PTCH,"")) I DA>0 D  Q
"RTN","A1AE2POS",345,0)
 . . N FDA,FDAMSG S FDA(9.4901,DA_","_DA(1)_","_DA(2)_",",.01)=PTCHSEQ
"RTN","A1AE2POS",346,0)
 . . D FILE^DIE("E","FDA","FDAMSG")
"RTN","A1AE2POS",347,0)
 . . Q
"RTN","A1AE2POS",348,0)
 . I DA'>0 D
"RTN","A1AE2POS",349,0)
 . . N FDA,FDAMSG S FDA(9.4901,"+1,"_DA(1)_","_DA(2)_",",.01)=PTCHSEQ
"RTN","A1AE2POS",350,0)
 . . D UPDATE^DIE("E","FDA","","FDAMSG")
"RTN","A1AE2POS",351,0)
 . . Q
"RTN","A1AE2POS",352,0)
 . Q
"RTN","A1AE2POS",353,0)
 Q
"RTN","A1AE2POS",354,0)
 ;
"RTN","A1AE2POS",355,0)
CLRFILE() N STRM,DA,DIERR,DIK S STRM=""
"RTN","A1AE2POS",356,0)
 F  S STRM=$O(^A1AE(11007.1,"B",STRM)) Q:STRM=""  D  Q:$D(DIERR)
"RTN","A1AE2POS",357,0)
 . S DA=$O(^A1AE(11007.1,"B",STRM,0)) Q:'DA
"RTN","A1AE2POS",358,0)
 . S DIK="^A1AE(11007.1," D ^DIK
"RTN","A1AE2POS",359,0)
 Q '$D(DIERR)
"RTN","A1AE2POS",360,0)
 ;
"RTN","A1AE2POS",361,0)
 ;
"RTN","A1AE2POS",362,0)
LOADFILE() N DIERR,FDA,FDAIEN
"RTN","A1AE2POS",363,0)
 S FDA(3,11007.1,"?+1,",.001)=1
"RTN","A1AE2POS",364,0)
 S FDA(3,11007.1,"?+1,",.01)="FOIA VISTA"
"RTN","A1AE2POS",365,0)
 S FDA(3,11007.1,"?+1,",.02)=0
"RTN","A1AE2POS",366,0)
 S FDA(3,11007.1,"?+1,",.05)="FV"
"RTN","A1AE2POS",367,0)
 S FDA(3,11007.1,"?+1,",.06)=1
"RTN","A1AE2POS",368,0)
 S FDA(3,11007.1,"?+1,",.07)="FORUM.VA.GOV"
"RTN","A1AE2POS",369,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AE2POS",370,0)
 K FDAIEN
"RTN","A1AE2POS",371,0)
 Q:$D(DIERR) 0
"RTN","A1AE2POS",372,0)
 K FDA,DIERR
"RTN","A1AE2POS",373,0)
 S FDA(3,11007.1,"?+1,",.001)=10001
"RTN","A1AE2POS",374,0)
 S FDA(3,11007.1,"?+1,",.01)="OSEHRA VISTA"
"RTN","A1AE2POS",375,0)
 S FDA(3,11007.1,"?+1,",.02)=0
"RTN","A1AE2POS",376,0)
 S FDA(3,11007.1,"?+1,",.05)="OV"
"RTN","A1AE2POS",377,0)
 S FDA(3,11007.1,"?+1,",.06)=0
"RTN","A1AE2POS",378,0)
 S FDA(3,11007.1,"?+1,",.07)="FORUM.OSEHRA.ORG"
"RTN","A1AE2POS",379,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AE2POS",380,0)
 Q:$D(DIERR) 0
"RTN","A1AE2POS",381,0)
 Q 1
"RTN","A1AE2POS",382,0)
 ;
"RTN","A1AE2POS",383,0)
EOR ; end of routine A1AE2POS
"RTN","A1AEBLD")
0^43^B49022663
"RTN","A1AEBLD",1,0)
A1AEBLD ;ven/jli-handle transport of build entries for dhcp patches file(#11005) ;2015-06-03  10:28 PM
"RTN","A1AEBLD",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 35
"RTN","A1AEBLD",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEBLD",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEBLD",5,0)
 ;
"RTN","A1AEBLD",6,0)
 ;
"RTN","A1AEBLD",7,0)
 D EN^%ut("A1AEUBLD")
"RTN","A1AEBLD",8,0)
 Q
"RTN","A1AEBLD",9,0)
 ;
"RTN","A1AEBLD",10,0)
VERBOSE ;
"RTN","A1AEBLD",11,0)
 D EN^%ut("A1AEUBLD",1)
"RTN","A1AEBLD",12,0)
 Q
"RTN","A1AEBLD",13,0)
 ;
"RTN","A1AEBLD",14,0)
BUILDIT(PATCHNUM) ; Add DHCP PATCHES file field data to end of data in DHCP PATCH MESSAGE file (#11005.1)
"RTN","A1AEBLD",15,0)
 ; input - BUILDNUM - entry number in the BUILD file (#9.6)
"RTN","A1AEBLD",16,0)
 N GLOBNODE,GLOBREF,ENDNUM,A1AEIEN,BASE,BASE1,BASELEN,BUILDNAM,GLOBVAL,ENDKID
"RTN","A1AEBLD",17,0)
 S GLOBNODE="A1AEBLD"
"RTN","A1AEBLD",18,0)
 S BUILDNAM=$$BUILDNAM(PATCHNUM)
"RTN","A1AEBLD",19,0)
 S A1AEIEN=PATCHNUM
"RTN","A1AEBLD",20,0)
 S GLOBREF=$NA(^A1AE(11005.1,A1AEIEN,2))
"RTN","A1AEBLD",21,0)
 S BASE=$NA(^XTMP("A1AEBLD",$J,A1AEIEN))
"RTN","A1AEBLD",22,0)
 K @BASE
"RTN","A1AEBLD",23,0)
 D BUILDGLO(PATCHNUM,$NA(@BASE@("PATCHES")))
"RTN","A1AEBLD",24,0)
 ; originally was going to add a section PATCHES after KIDS, but add it into it
"RTN","A1AEBLD",25,0)
 ;S ENDNUM=$O(@GLOBREF@(""),-1)
"RTN","A1AEBLD",26,0)
 ;S ENDNUM=ENDNUM+1,@GLOBREF@(ENDNUM,0)="$PATCHES "_BUILDNAM,ENDNUM=ENDNUM+1
"RTN","A1AEBLD",27,0)
 ; above modified to
"RTN","A1AEBLD",28,0)
 S ENDNUM=$O(@GLOBREF@(""),-1) S ENDKID=@GLOBREF@(ENDNUM,0)
"RTN","A1AEBLD",29,0)
 S BASE1=$E(BASE,1,$L(BASE)-1),GLOBVAL=BASE,BASELEN=$L(BASE)+1
"RTN","A1AEBLD",30,0)
 F  S GLOBVAL=$Q(@GLOBVAL) Q:GLOBVAL'[BASE1  S @GLOBREF@(ENDNUM,0)=$E(GLOBVAL,BASELEN,$L(GLOBVAL)),ENDNUM=ENDNUM+1,@GLOBREF@(ENDNUM,0)=@GLOBVAL,ENDNUM=ENDNUM+1
"RTN","A1AEBLD",31,0)
 ; change from ending PATCHES back to ending KIDS
"RTN","A1AEBLD",32,0)
 ;S @GLOBREF@(ENDNUM,0)="$END PATCHES"
"RTN","A1AEBLD",33,0)
 ; replaced above line with
"RTN","A1AEBLD",34,0)
 S @GLOBREF@(ENDNUM,0)=ENDKID
"RTN","A1AEBLD",35,0)
 S $P(^A1AE(11005.1,A1AEIEN,2,0),U,3,4)=ENDNUM_U_ENDNUM ; update zero node for message
"RTN","A1AEBLD",36,0)
 K @BASE
"RTN","A1AEBLD",37,0)
 Q
"RTN","A1AEBLD",38,0)
 ;
"RTN","A1AEBLD",39,0)
BUILDGLO(PATCHNUM,BASE) ; Builds data structure to transport specific fields of file 11005
"RTN","A1AEBLD",40,0)
 ; input - PATCHNUM - internal entry number in the BUILD file (#9.6)
"RTN","A1AEBLD",41,0)
 ; input - BASE - location to save data
"RTN","A1AEBLD",42,0)
 N NAME,IEN,NODES,NODEVAL,RETURN,BUILDNAM
"RTN","A1AEBLD",43,0)
 S IEN=PATCHNUM
"RTN","A1AEBLD",44,0)
 I IEN="" Q  ; not in file 11005
"RTN","A1AEBLD",45,0)
 ; base storage location for data
"RTN","A1AEBLD",46,0)
 ; get list of nodes and data on those nodes to transport
"RTN","A1AEBLD",47,0)
 D GETNODES(.NODES)
"RTN","A1AEBLD",48,0)
 ; walk through nodes and move data to transport to part of build
"RTN","A1AEBLD",49,0)
 S NODEVAL=0
"RTN","A1AEBLD",50,0)
 ; zero contains all individual fields
"RTN","A1AEBLD",51,0)
 D GETDATA(.RETURN,11005,IEN,NODES(0))
"RTN","A1AEBLD",52,0)
 M @(BASE_"=RETURN(0)")
"RTN","A1AEBLD",53,0)
 ; 141117 following added to provide data in case referenced entries in other files don't already exist
"RTN","A1AEBLD",54,0)
 ; PACKAGE FILE entry
"RTN","A1AEBLD",55,0)
 K RETURN D GETDATA(.RETURN,9.4,+$P(^A1AE(11005,IEN,0),U,2),".01;1;2;")
"RTN","A1AEBLD",56,0)
 M @BASE@(9.4)=RETURN(0)
"RTN","A1AEBLD",57,0)
 ; PATCH STREAM entry
"RTN","A1AEBLD",58,0)
 K RETURN D GETDATA(.RETURN,11007.1,+$P(^A1AE(11005,IEN,0),U,20),".01;.05;")
"RTN","A1AEBLD",59,0)
 M @BASE@(11007.1)=RETURN(0)
"RTN","A1AEBLD",60,0)
 S @BASE@(11007.1,"FLDS",.02)="NO" ; if entry doesn't exist, set PRIMARY to NO
"RTN","A1AEBLD",61,0)
 S @BASE@(11007.1,"FLDS",.06)="NO" ; if entry doesn't exist, set SUBSCRIPTION to NO
"RTN","A1AEBLD",62,0)
 ; 141117 end of insertion
"RTN","A1AEBLD",63,0)
 ; rest are multiples
"RTN","A1AEBLD",64,0)
 F  S NODEVAL=$O(NODES(NODEVAL)) Q:NODEVAL=""  D
"RTN","A1AEBLD",65,0)
 . K RETURN
"RTN","A1AEBLD",66,0)
 . D GETMULT(.RETURN,IEN,NODEVAL) Q:'$D(RETURN)
"RTN","A1AEBLD",67,0)
 . M @(BASE_"=RETURN(NODEVAL)")
"RTN","A1AEBLD",68,0)
 . Q
"RTN","A1AEBLD",69,0)
 Q
"RTN","A1AEBLD",70,0)
 ;
"RTN","A1AEBLD",71,0)
BUILDNAM(PATCHNUM) ; Returns the name for the specified build number
"RTN","A1AEBLD",72,0)
 Q $P($G(^A1AE(11005,PATCHNUM,0)),U)
"RTN","A1AEBLD",73,0)
 ;
"RTN","A1AEBLD",74,0)
GETIEN(FILE,NAME) ; Returns whether an entry with NAME as .01 field exists in file number FILE
"RTN","A1AEBLD",75,0)
 ; input:
"RTN","A1AEBLD",76,0)
 ;     FILE - number of file to be checked
"RTN","A1AEBLD",77,0)
 ;     NAME - name of entry (.01 field value)
"RTN","A1AEBLD",78,0)
 ; return:
"RTN","A1AEBLD",79,0)
 ;     value > 0 if an entry for the patch is in FILE (DA value)
"RTN","A1AEBLD",80,0)
 ;     value = null if entry was not found in file FILE
"RTN","A1AEBLD",81,0)
 N GLOB
"RTN","A1AEBLD",82,0)
 S GLOB=$G(^DIC(FILE,0,"GL"))
"RTN","A1AEBLD",83,0)
 S GLOB=GLOB_"""B"","""_NAME_""","""")"
"RTN","A1AEBLD",84,0)
 Q +$O(@GLOB)
"RTN","A1AEBLD",85,0)
 ;
"RTN","A1AEBLD",86,0)
GETNODES(VALS) ; returns VALS with an array of nodes, and field numbers
"RTN","A1AEBLD",87,0)
 ; these are the fields that are to be transported.  Any changes to
"RTN","A1AEBLD",88,0)
 ; those fields that should be transported should occur below.
"RTN","A1AEBLD",89,0)
 ;
"RTN","A1AEBLD",90,0)
 ; input - VALS - passed by reference
"RTN","A1AEBLD",91,0)
 ; returns:
"RTN","A1AEBLD",92,0)
 ;      array of nodes - The zero node contains the list of semi-colon
"RTN","A1AEBLD",93,0)
 ;      separated field numbers to be transported.  The other nodes
"RTN","A1AEBLD",94,0)
 ;      represent the nodes of multiple fields.
"RTN","A1AEBLD",95,0)
 ;
"RTN","A1AEBLD",96,0)
 ; The following is the list of the nodes and fields to be transported.
"RTN","A1AEBLD",97,0)
 ; Fields followed by an 'm' indicate they are multiple fields and
"RTN","A1AEBLD",98,0)
 ; all data under them will be transported
"RTN","A1AEBLD",99,0)
 ;     node    fields
"RTN","A1AEBLD",100,0)
 ;      0   .01,2p,3,4,5,6,7,18,.2p
"RTN","A1AEBLD",101,0)
 ;      3   19m
"RTN","A1AEBLD",102,0)
 ;      4   40
"RTN","A1AEBLD",103,0)
 ;      5   5.7p
"RTN","A1AEBLD",104,0)
 ;      C   6.5m
"RTN","A1AEBLD",105,0)
 ;      D   5.5m
"RTN","A1AEBLD",106,0)
 ;      P   100m
"RTN","A1AEBLD",107,0)
 ;      P2  102
"RTN","A1AEBLD",108,0)
 ;
"RTN","A1AEBLD",109,0)
 K VALS
"RTN","A1AEBLD",110,0)
 S VALS(0)=".01;.2;2;3;4;5;6;7;18;40;5.7;102",VALS(3)="0,",VALS("C")="0,",VALS("D")="0,",VALS("P")="0,"
"RTN","A1AEBLD",111,0)
 Q
"RTN","A1AEBLD",112,0)
 ;
"RTN","A1AEBLD",113,0)
GETDATA(RETURN,FILE,IEN,NODELIST) ; get data for specified fields in file entry
"RTN","A1AEBLD",114,0)
 ; 141117 modified to handle different files, since some data needs to be carried if pointed to file entries aren't present on the system being installed on
"RTN","A1AEBLD",115,0)
 ; output - RETURN   - result array
"RTN","A1AEBLD",116,0)
 ; input  - FILENUM  - file number to obtain data for
"RTN","A1AEBLD",117,0)
 ; input  - IEN      - internal entry number for file entry to return data for
"RTN","A1AEBLD",118,0)
 ; input  - NODELIST - semi-colon separated list of field numbers
"RTN","A1AEBLD",119,0)
 N XXLIST,IENS,FLD,VAL
"RTN","A1AEBLD",120,0)
 S IENS=IEN_","
"RTN","A1AEBLD",121,0)
 D GETS^DIQ(FILE,IENS,NODELIST,"E","XXLIST")
"RTN","A1AEBLD",122,0)
 F FLD=0:0 S FLD=$O(XXLIST(FILE,IENS,FLD)) Q:FLD'>0  S VAL=XXLIST(FILE,IENS,FLD,"E") I VAL'="" S RETURN(0,"FLDS",FLD)=VAL
"RTN","A1AEBLD",123,0)
 Q
"RTN","A1AEBLD",124,0)
 ;
"RTN","A1AEBLD",125,0)
GETMULT(RETURN,IEN,NODEVAL) ; Returns the sub-file part of global
"RTN","A1AEBLD",126,0)
 ; input - RETURN - by reference contains the array part of the global
"RTN","A1AEBLD",127,0)
 ; input - IEN - subscript in file 11005
"RTN","A1AEBLD",128,0)
 ; input - NODEVAL - node under which all data should be transported
"RTN","A1AEBLD",129,0)
 ;
"RTN","A1AEBLD",130,0)
 M RETURN(NODEVAL,"MULT",NODEVAL)=^A1AE(11005,IEN,NODEVAL)
"RTN","A1AEBLD",131,0)
 Q
"RTN","A1AEBLD",132,0)
 ;
"RTN","A1AEBLD",133,0)
 ; JLI 150529 - Modified code below this point so that 11004 is used for the client instead of 11005
"RTN","A1AEBLD",134,0)
 ;
"RTN","A1AEBLD",135,0)
INSTALL(PATCHID) ; install data from patch section of build (if it includes data for file 11004)
"RTN","A1AEBLD",136,0)
 ; called from IN^XPDIJ1 during patch install
"RTN","A1AEBLD",137,0)
 ; JLI 150530 - commented next line, replaced with following - showing up during install as aborting and misleading
"RTN","A1AEBLD",138,0)
 ;N A1AEBASE,A1AEPTID,PKGNAME,STRMNAME I '$D(^A1AE(11004)) W !,"INSTALL ABORTED, NO GLOBAL ^A1AE(11004)" Q  ; PATCH file (#11004) is not present
"RTN","A1AEBLD",139,0)
 N A1AEBASE,A1AEPTID,PKGNAME,STRMNAME I '$D(^A1AE(11004)) Q  ; PATCH file (#11004) is not present
"RTN","A1AEBLD",140,0)
 ; get base location for INSTALL data, returns no true on not finding DHCP PATCHES data in the install file
"RTN","A1AEBLD",141,0)
 I '$$GETBASE(.A1AEBASE,PATCHID) W !,"FAILED IN GETBASE - A1AEBASE=",$G(A1AEBASE) Q
"RTN","A1AEBLD",142,0)
 ;
"RTN","A1AEBLD",143,0)
 ;  The following fields contain pointers to the files shown, which have the required fields shown
"RTN","A1AEBLD",144,0)
 ; .2 --> PATCH STREAM 11007.1
"RTN","A1AEBLD",145,0)
 ;     .01
"RTN","A1AEBLD",146,0)
 ;     .02  PRIMARY  --> NO if does not exist
"RTN","A1AEBLD",147,0)
 ;     .05  ABBREVIATION
"RTN","A1AEBLD",148,0)
 ;     .06  SUBSCRIPTION ---> No if does not exist
"RTN","A1AEBLD",149,0)
 ;
"RTN","A1AEBLD",150,0)
 ; 2 --> PACKAGE  9.4
"RTN","A1AEBLD",151,0)
 ;     .01 NAME
"RTN","A1AEBLD",152,0)
 ;     1 PREFIX
"RTN","A1AEBLD",153,0)
 ;     2 SHORT DESCRIPTION
"RTN","A1AEBLD",154,0)
 ;
"RTN","A1AEBLD",155,0)
 ; Check existence of PACKAGE and PATCH STREAM file entries and if an entry is not present, create it
"RTN","A1AEBLD",156,0)
 D CHKPACKG(A1AEBASE) D CHKSTREM(A1AEBASE) D UPDATFIL(A1AEBASE)
"RTN","A1AEBLD",157,0)
 Q
"RTN","A1AEBLD",158,0)
 ;
"RTN","A1AEBLD",159,0)
GETBASE(A1AEBASE,PATCHID) ;
"RTN","A1AEBLD",160,0)
 ; input
"RTN","A1AEBLD",161,0)
 ;    A1AEBASE - passed by reference - will contain the base reference for the data in the install file on return
"RTN","A1AEBLD",162,0)
 ;    PATCHID  - input name for the patch
"RTN","A1AEBLD",163,0)
 ; returns
"RTN","A1AEBLD",164,0)
 ;    0 or >0 value indcating whether finding location succeeded or not
"RTN","A1AEBLD",165,0)
 N A1AEBLD,A1AEINST,A1AEPTID,A1AEVAL
"RTN","A1AEBLD",166,0)
 S A1AEBASE=""
"RTN","A1AEBLD",167,0)
 ; get INSTALL file entry for PATCHID, it seems there might be more than one entry, take the last
"RTN","A1AEBLD",168,0)
 S A1AEINST=-1 F A1AEVAL=0:0 S A1AEVAL=$O(^XPD(9.7,"B",PATCHID,A1AEVAL)) Q:A1AEVAL'>0  S A1AEINST=A1AEVAL
"RTN","A1AEBLD",169,0)
 ; get the base entry as the one for this install
"RTN","A1AEBLD",170,0)
 I A1AEINST>0 S A1AEBASE=$NA(^XTMP("XPDI",A1AEINST,"PATCHES")) S A1AEVAL=$O(@A1AEBASE@(0))
"RTN","A1AEBLD",171,0)
 S A1AEBLD=$$GETIEN(9.6,PATCHID)
"RTN","A1AEBLD",172,0)
 ;
"RTN","A1AEBLD",173,0)
 I A1AEBLD'="",'A1AEVAL S A1AEBASE=$NA(^XTMP("XPDI",A1AEINST,"BLD",A1AEBLD,"PATCHES")),A1AEVAL=$D(^("PATCHES"))
"RTN","A1AEBLD",174,0)
 Q A1AEVAL
"RTN","A1AEBLD",175,0)
 ;
"RTN","A1AEBLD",176,0)
CHKPACKG(A1AEBASE) ; Check that entry PKGNAME exists in PACKAGE file (#9.4), if not create it
"RTN","A1AEBLD",177,0)
 N PKGIEN,PKGNAME,A1AEMSG,A1AEPKG
"RTN","A1AEBLD",178,0)
 S PKGNAME=$G(@A1AEBASE@("FLDS",2))
"RTN","A1AEBLD",179,0)
 S PKGIEN=$$GETIEN(9.4,PKGNAME)
"RTN","A1AEBLD",180,0)
 I PKGIEN'>0 D
"RTN","A1AEBLD",181,0)
 . ; create an entry with its required fields
"RTN","A1AEBLD",182,0)
 . N PKGIENS,PKGFDA,I
"RTN","A1AEBLD",183,0)
 . S PKGIENS="+1,"
"RTN","A1AEBLD",184,0)
 . F I=0:0 S I=$O(@A1AEBASE@(9.4,"FLDS",I)) Q:I'>0  S PKGFDA(9.4,PKGIENS,I)=^(I)
"RTN","A1AEBLD",185,0)
 . D UPDATE^DIE("E","PKGFDA","A1AEPKG","A1AEMSG")
"RTN","A1AEBLD",186,0)
 . Q
"RTN","A1AEBLD",187,0)
 Q
"RTN","A1AEBLD",188,0)
 ;
"RTN","A1AEBLD",189,0)
CHKSTREM(A1AEBASE) ; Check that entry PKGNAME exists in DHCP PATCH STREAM file (#11007.1), if not create it
"RTN","A1AEBLD",190,0)
 N STREMIEN,STREMNAM,A1AEMSG,A1AESTRM
"RTN","A1AEBLD",191,0)
 S STREMNAM=$G(@A1AEBASE@("FLDS",.2)) S STREMIEN=$$GETIEN(11007.1,STREMNAM) I STREMIEN'>0 D
"RTN","A1AEBLD",192,0)
 . ; create an entry with its required fields
"RTN","A1AEBLD",193,0)
 . N STRMIENS,STREMFDA,I
"RTN","A1AEBLD",194,0)
 . S STRMIENS="+1," I $D(@A1AEBASE@(11007.1,"FLDS",.001)) S STRMIENS="+"_^(.001)_","
"RTN","A1AEBLD",195,0)
 . F I=0:0 S I=$O(@A1AEBASE@(11007.1,"FLDS",I)) Q:I'>0  S STREMFDA(11007.1,STRMIENS,I)=^(I)
"RTN","A1AEBLD",196,0)
 . D UPDATE^DIE("E","STREMFDA","A1AESTRM","A1AEMSG")
"RTN","A1AEBLD",197,0)
 . Q
"RTN","A1AEBLD",198,0)
 Q
"RTN","A1AEBLD",199,0)
 ;
"RTN","A1AEBLD",200,0)
UPDATFIL(A1AEBASE) ;
"RTN","A1AEBLD",201,0)
 N A1AEFDA,A1AEFLD,A1AEIENS,A1AEROOT,MSGROOT,A1AEIEN,A1AEVAL,DA,DIK,A1AEPTID
"RTN","A1AEBLD",202,0)
 S A1AEPTID=@A1AEBASE@("FLDS",.01)
"RTN","A1AEBLD",203,0)
 S A1AEIEN=$O(^A1AE(11004,"B",A1AEPTID,0))
"RTN","A1AEBLD",204,0)
 ; if no entry for patch is in file #11004, will need to create it
"RTN","A1AEBLD",205,0)
 ; but FileManager non-friendly, since it forces you to use the install template
"RTN","A1AEBLD",206,0)
 ; so, have to force it by simply setting the global
"RTN","A1AEBLD",207,0)
 I A1AEIEN'>0 F A1AEVAL=1:1:6 L +^A1AE(11004):0 H:'$T 5 I $T S A1AEVAL=-1 Q
"RTN","A1AEBLD",208,0)
 ; ---- REALLY DON'T WANT TO SIMPLY EXIT WITHOUT FILLING IN DHCP PATCHES FILE ----
"RTN","A1AEBLD",209,0)
 ; I A1AEVAL>0 W !,"Can't get lock on the PATCH file (#11004)."
"RTN","A1AEBLD",210,0)
 ;
"RTN","A1AEBLD",211,0)
 I A1AEIEN'>0 D
"RTN","A1AEBLD",212,0)
 . S A1AEIEN=$P(^A1AE(11004,0),U,3)+1
"RTN","A1AEBLD",213,0)
 . S ^A1AE(11004,0)=$P(^A1AE(11004,0),U,1,2)_U_A1AEIEN_U_($P(^A1AE(11004,0),U,4)+1)
"RTN","A1AEBLD",214,0)
 . S A1AEVAL=@A1AEBASE@("FLDS",.01)
"RTN","A1AEBLD",215,0)
 . ; remove .0 from version if present
"RTN","A1AEBLD",216,0)
 . N A1AETEST,A1AETSTL
"RTN","A1AEBLD",217,0)
 . S A1AETEST=$P(A1AEVAL,"*",2),A1AETSTL=$L(A1AETEST)
"RTN","A1AEBLD",218,0)
 . I $E(A1AETEST,A1AETSTL-1,A1AETSTL)=".0" S A1AEVAL=$P(A1AEVAL,"*")_"*"_$E(A1AETEST,1,A1AETSTL-2)_"*"_$P(A1AEVAL,"*",3,99)
"RTN","A1AEBLD",219,0)
 . ;
"RTN","A1AEBLD",220,0)
 . S ^A1AE(11004,A1AEIEN,0)=A1AEVAL
"RTN","A1AEBLD",221,0)
 . S ^A1AE(11004,"B",A1AEVAL,A1AEIEN)=""
"RTN","A1AEBLD",222,0)
 . L -^A1AE(11004)
"RTN","A1AEBLD",223,0)
 . Q
"RTN","A1AEBLD",224,0)
 ; now update data associated with individual fields in patch entry
"RTN","A1AEBLD",225,0)
 K A1AEFDA,A1AEROOT
"RTN","A1AEBLD",226,0)
 S A1AEIENS=A1AEIEN_","
"RTN","A1AEBLD",227,0)
 S A1AEFLD=.01 F  S A1AEFLD=$O(@A1AEBASE@("FLDS",A1AEFLD)) Q:A1AEFLD'>0  S A1AEFDA(11004,A1AEIENS,A1AEFLD)=^(A1AEFLD)
"RTN","A1AEBLD",228,0)
 D FILE^DIE("E","A1AEFDA","MSGROOT")
"RTN","A1AEBLD",229,0)
 ; now move multiple nodes into the entry
"RTN","A1AEBLD",230,0)
 S A1AEFLD="" F  S A1AEFLD=$O(@A1AEBASE@("MULT",A1AEFLD)) Q:A1AEFLD=""  M ^A1AE(11004,A1AEIEN,A1AEFLD)=^(A1AEFLD)
"RTN","A1AEBLD",231,0)
 ; and make sure all cross-references are set
"RTN","A1AEBLD",232,0)
 S DIK="^A1AE(11004,",DA=A1AEIEN D IX^DIK
"RTN","A1AEBLD",233,0)
 Q
"RTN","A1AEDD1")
0^42^B8373863
"RTN","A1AEDD1",1,0)
A1AEDD1 ;ven/jli-data dictionary related code ;2015-05-20T18:23
"RTN","A1AEDD1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 35
"RTN","A1AEDD1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEDD1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEDD1",5,0)
 ;
"RTN","A1AEDD1",6,0)
 ;
"RTN","A1AEDD1",7,0)
 ;primary change history
"RTN","A1AEDD1",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEDD1",9,0)
 ;
"RTN","A1AEDD1",10,0)
 ;
"RTN","A1AEDD1",11,0)
 Q
"RTN","A1AEDD1",12,0)
 ;
"RTN","A1AEDD1",13,0)
PLU949 ; pre-lookup transform for version field of file 9.4 add .0 to integer if exists
"RTN","A1AEDD1",14,0)
 ; ZEXCEPT: X already defined before lookup attempt starts
"RTN","A1AEDD1",15,0)
 I X?1.N1"."1.N.1A.2N Q
"RTN","A1AEDD1",16,0)
 I X?1.N.1A.2N D  Q  ; contains a numeric, but no decimal
"RTN","A1AEDD1",17,0)
 . N FOUND,DONE,VALUE,I
"RTN","A1AEDD1",18,0)
 . S FOUND=0,DONE=0
"RTN","A1AEDD1",19,0)
 . F I=1:1:$L(X) S VALUE="0123456789"[$E(X,I) S:VALUE FOUND=1 I FOUND,'VALUE S X=$E(X,1,I-1)_".0"_$E(X,I,$L(X)),DONE=1 Q
"RTN","A1AEDD1",20,0)
 . I FOUND,'DONE S X=X_".0" ; digit was the last character
"RTN","A1AEDD1",21,0)
 . Q
"RTN","A1AEDD1",22,0)
 I X?1.N1".".1A.2N S X=$P(X,".")_".0"_$P(X,".",2) ; no value following decimal
"RTN","A1AEDD1",23,0)
 Q
"RTN","A1AEDD1",24,0)
 ;
"RTN","A1AEDD1",25,0)
PLU96 ; Pre-Lookup Transform for Build file (#9.6)
"RTN","A1AEDD1",26,0)
PLU97 ; Pre-Lookup Transform for Install file (#9.7)
"RTN","A1AEDD1",27,0)
 ; ZEXCEPT: X defined before call is made
"RTN","A1AEDD1",28,0)
 I X?1A1.ANE1AP1.N1"."1.N Q  ; ONE CORRECT FORMAT WITH 1 OR more decimal places
"RTN","A1AEDD1",29,0)
 I X?1A1.APN1"*"1.N1"."1.N1"*"1.N Q  ; ANOTHER CORRECT FORMAT
"RTN","A1AEDD1",30,0)
 ; need to fix based on format
"RTN","A1AEDD1",31,0)
 I X?1A1.APN1"*"1.N1"."1"*"1.N.1A.2N S X=$P(X,"*")_"*"_$P(X,"*",2)_"0"_"*"_$P(X,"*",3) Q
"RTN","A1AEDD1",32,0)
 I X?1A1.APN1"*"1.N1"*"1.N.1A.2N S X=$P(X,"*")_"*"_$P(X,"*",2)_".0"_"*"_$P(X,"*",3) Q
"RTN","A1AEDD1",33,0)
 I X?1A1.ANE1AP1.N1"." S X=X_"0" Q
"RTN","A1AEDD1",34,0)
 I X?1A1.ANE1AP1.N S X=X_".0" Q
"RTN","A1AEDD1",35,0)
 ; any other input may be a partial - since it doesn't have a number in it.
"RTN","A1AEDD1",36,0)
 Q
"RTN","A1AEDD1",37,0)
 ;
"RTN","A1AEDD1",38,0)
PLU11005 ; pre-lookup transform for DHCP PATCHES file (#11005)
"RTN","A1AEDD1",39,0)
 ; ZEXCEPT: X defined before entry is made
"RTN","A1AEDD1",40,0)
 N VAL
"RTN","A1AEDD1",41,0)
 S VAL=$L(X)
"RTN","A1AEDD1",42,0)
 I X[".0",$E(X,VAL-1,VAL)=".0" S X=$P(X,".0")
"RTN","A1AEDD1",43,0)
 I X?1A1.APN1"*"1.N1"."1"0"1"*"1.N.1A.2N S X=$P(X,".0")_$P(X,".0",2)
"RTN","A1AEDD1",44,0)
 Q
"RTN","A1AEDD1",45,0)
 ;
"RTN","A1AEDD1",46,0)
PLU11004 ; pre-lookup transform for PATCH file (#11004)
"RTN","A1AEDD1",47,0)
 ; ZEXCEPT: X defined before entry is made
"RTN","A1AEDD1",48,0)
 N VAL
"RTN","A1AEDD1",49,0)
 S VAL=$L(X)
"RTN","A1AEDD1",50,0)
 I X[".0",$E(X,VAL-1,VAL)=".0" S X=$P(X,".0")
"RTN","A1AEDD1",51,0)
 I X?1A1.APN1"*"1.N1"."1"0"1"*"1.N.1A.2N S X=$P(X,".0")_$P(X,".0",2)
"RTN","A1AEDD1",52,0)
 Q
"RTN","A1AEDD1",53,0)
 ;
"RTN","A1AEDD1",54,0)
A1AESEQ ; called as SET cross-reference on NAME entry for PATCH APPLICATION HISTORY sub-file
"RTN","A1AEDD1",55,0)
 ; ZEXCEPT: DA,X - defined prior to entry
"RTN","A1AEDD1",56,0)
 N SEQ,PAT,PKG,VER,I,STRM,PATCH,PATNUM
"RTN","A1AEDD1",57,0)
 S SEQ=+$P(X,"#",2)
"RTN","A1AEDD1",58,0)
 I SEQ>0 S PKG=$P(^DIC(9.4,DA(2),0),U,2),VER=+^DIC(9.4,DA(2),22,DA(1),0),PATNUM=+X D
"RTN","A1AEDD1",59,0)
 . S STRM=0 F I=0:0 S I=$O(^A1AE(11007.1,I)) Q:I'>0  I PATNUM>(I-1) S STRM=I
"RTN","A1AEDD1",60,0)
 . I STRM=0 S STRM=1
"RTN","A1AEDD1",61,0)
 . S PATCH=PKG_"*"_VER_"*"_PATNUM
"RTN","A1AEDD1",62,0)
 . S ^DIC(9.4,"A1AESEQ",PKG,VER,STRM,SEQ,PATCH)=""
"RTN","A1AEDD1",63,0)
 . Q
"RTN","A1AEDD1",64,0)
 Q
"RTN","A1AEDD1",65,0)
 ;
"RTN","A1AEDD1",66,0)
KA1AESEQ ; called as KILL cross-reference on NAME entry for PATCH APPLICATION HISTORY sub-file
"RTN","A1AEDD1",67,0)
 ; ZEXCEPT: DA,X - defined prior to entry
"RTN","A1AEDD1",68,0)
 N SEQ,PAT,PKG,VER,I,STRM,PATCH,PATNUM
"RTN","A1AEDD1",69,0)
 S SEQ=+$P(X,"#",2)
"RTN","A1AEDD1",70,0)
 I SEQ>0 S PAT=$P(^(0),U),PKG=$P(^DIC(9.4,DA(2),0),U,2),VER=+^DIC(9.4,DA(2),22,DA(1),0),PATNUM=+X D
"RTN","A1AEDD1",71,0)
 . S STRM=0 F I=0:0 S I=$O(^A1AE(11007.1,I)) Q:I'>0  I PATNUM>(I-1) S STRM=I
"RTN","A1AEDD1",72,0)
 . I STRM=0 S STRM=1
"RTN","A1AEDD1",73,0)
 . S PATCH=PKG_"*"_VER_"*"_PATNUM
"RTN","A1AEDD1",74,0)
 . K ^DIC(9.4,"A1AESEQ",PKG,VER,STRM,SEQ,PATCH)
"RTN","A1AEDD1",75,0)
 . Q
"RTN","A1AEDD1",76,0)
 Q
"RTN","A1AEK1")
0^45^B102615726
"RTN","A1AEK1",1,0)
A1AEK1 ;ven/lgc-check patch against site's stream ;2015-04-01T00:44
"RTN","A1AEK1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 35
"RTN","A1AEK1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEK1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEK1",5,0)
 ;
"RTN","A1AEK1",6,0)
 ;
"RTN","A1AEK1",7,0)
 ;primary change history
"RTN","A1AEK1",8,0)
 ;2014-12-27: version 2.4 released
"RTN","A1AEK1",9,0)
 ;
"RTN","A1AEK1",10,0)
 ;
"RTN","A1AEK1",11,0)
 ; Enter from EN1+12^XPDIL, GI+5^XPDIPM
"RTN","A1AEK1",12,0)
 ;
"RTN","A1AEK1",13,0)
 S ^XTMP($J,"A1AEK1 FROM TOP")=""
"RTN","A1AEK1",14,0)
 Q  ; Not from top
"RTN","A1AEK1",15,0)
 ;
"RTN","A1AEK1",16,0)
 ;
"RTN","A1AEK1",17,0)
 ; NOTE: How about patches without xxx*yyy*zzz format?
"RTN","A1AEK1",18,0)
 ; NOTE: How find SEQ# on patches in multiple-patch
"RTN","A1AEK1",19,0)
 ;       such as DG*5.3*860 where the SEQ# isn't anywhere
"RTN","A1AEK1",20,0)
 ;       in the KIDS file or Subject Header?
"RTN","A1AEK1",21,0)
 ; 
"RTN","A1AEK1",22,0)
 ; VARIABLES
"RTN","A1AEK1",23,0)
 ;   A1AEHDR   = Patch header (1st line) gleaned in
"RTN","A1AEK1",24,0)
 ;               XPDIL or XPDIPM
"RTN","A1AEK1",25,0)
 ; SITE VARS
"RTN","A1AEK1",26,0)
 ;    SV("STRMPRFX") =  Active Site Patch Stream Abbreviation
"RTN","A1AEK1",27,0)
 ;    SV("STRMDT")   =  Date Active Patch Stream Initiated
"RTN","A1AEK1",28,0)
 ;    SV("STRMNM")   =  Active Site Patch Stream Name
"RTN","A1AEK1",29,0)
 ;    SV("STRM")     =  Active Site Patch Stream IEN into 11007.1
"RTN","A1AEK1",30,0)
 ;    SV("ACTPKGV")  =  Site's Active Version for Package
"RTN","A1AEK1",31,0)
 ;
"RTN","A1AEK1",32,0)
 ; PATCH VARS   PTCHVER,PKGPRFX,PTSA
"RTN","A1AEK1",33,0)
 ;    KV("PKGPRFX")  =  KIDS Package Prefix
"RTN","A1AEK1",34,0)
 ;    KV("PTCHNBR")  =  KIDS Patch Number
"RTN","A1AEK1",35,0)
 ;    KV("PTCHNM")   =  KIDS Patch Name
"RTN","A1AEK1",36,0)
 ;    KV("PTCHRDT")  =  KIDS Patch Release Date
"RTN","A1AEK1",37,0)
 ;    KV("PTCHSQN")  =  KIDS Patch SEQ#
"RTN","A1AEK1",38,0)
 ;    KV("PTCHSTRM") =  KIDS Patch Stream IEN into 11007.1
"RTN","A1AEK1",39,0)
 ;    KV("PTCHVER")  =  KIDS Patch Package Version
"RTN","A1AEK1",40,0)
 ;          PTCINST(STREAM,SEQ#,PKG ABB,PKGVER,PATCH NAME)=""
"RTN","A1AEK1",41,0)
 ;    FI             = Array of first patch SEQ# installed
"RTN","A1AEK1",42,0)
 ;                     for each Patch Stream for this package
"RTN","A1AEK1",43,0)
 ;                     FI(STREAM)=SEQ#
"RTN","A1AEK1",44,0)
 ;    LI             = Array of last patch SEQ# installed
"RTN","A1AEK1",45,0)
 ;                     for each Patch Stream for this package
"RTN","A1AEK1",46,0)
 ;                     LI(STREAM)=SEQ#
"RTN","A1AEK1",47,0)
 ;    MSSEQ          = Arrays of missing sequence numbers
"RTN","A1AEK1",48,0)
 ;                     of patches by each stream
"RTN","A1AEK1",49,0)
 ;    XPDT(n)        = Array of Builds in this Distribution
"RTN","A1AEK1",50,0)
 ;                     Provided by XPDIL, XPDIPM when patch loaded
"RTN","A1AEK1",51,0)
 ;    XPDT(1)        = DA^NAME [^XTMP("XPDI",DA..]
"RTN","A1AEK1",52,0)
 ;                     e.g. 8994^DG*5.3*770
"RTN","A1AEK1",53,0)
 ;    XPDT("DA",8994)         =1   [DA]
"RTN","A1AEK1",54,0)
 ;    XPDT("NM","DG*5.3*770") =1   [PATCH NAME]
"RTN","A1AEK1",55,0)
 ;    ERRMSG         = 0 no error, 1^error message = error
"RTN","A1AEK1",56,0)
 ;                   
"RTN","A1AEK1",57,0)
 ;ENTER
"RTN","A1AEK1",58,0)
 ;  XPDQUIT   = variable passed by reference *
"RTN","A1AEK1",59,0)
 ;  XPD ARRAY = Builds in this Distribution *
"RTN","A1AEK1",60,0)
 ;    * Provided by XPDIL, XPDIPM when patch loaded
"RTN","A1AEK1",61,0)
 ;    e.g.
"RTN","A1AEK1",62,0)
 ;       XPDT(1)="8996^DG*5.3*770"
"RTN","A1AEK1",63,0)
 ;       XPDT("DA",8996)=1
"RTN","A1AEK1",64,0)
 ;       XPDT("NM","DG*5.3*770")=1
"RTN","A1AEK1",65,0)
 ;  A1AEHDR = Subject of Packman KIDS, first line of KIDS file
"RTN","A1AEK1",66,0)
 ;    e.g.
"RTN","A1AEK1",67,0)
 ;       Released DG*5.3*770 SEQ #681
"RTN","A1AEK1",68,0)
 ;RETURN
"RTN","A1AEK1",69,0)
 ;   ABORT
"RTN","A1AEK1",70,0)
 ;     0    =  Install if desired.
"RTN","A1AEK1",71,0)
 ;     1    =  Abort install signal to XPDI* rtns
"RTN","A1AEK1",72,0)
EN(A1AEHDR) ; Check KIDS for correct patch stream
"RTN","A1AEK1",73,0)
 N ABORT S ABORT=0
"RTN","A1AEK1",74,0)
 ; Quit without any action of Patch Module not installed
"RTN","A1AEK1",75,0)
 Q:'$D(^A1AE(11007.1)) ABORT
"RTN","A1AEK1",76,0)
 N ERRMSG S ERRMSG=0 ; No error message
"RTN","A1AEK1",77,0)
 ; Pull site's patch stream variables
"RTN","A1AEK1",78,0)
 D SITEVAR(.SV)
"RTN","A1AEK1",79,0)
 ; Fall out without intervention if 11007.1 not set up
"RTN","A1AEK1",80,0)
 Q:'$G(SV("STRM")) ABORT
"RTN","A1AEK1",81,0)
 ;
"RTN","A1AEK1",82,0)
 ; Run through each build that came with this patch
"RTN","A1AEK1",83,0)
 ; *Note that at this time, multiple builds, new
"RTN","A1AEK1",84,0)
 ;   package installs and some other KIDS may fail
"RTN","A1AEK1",85,0)
 ;   review.  Installation is passed back to KIDS
"RTN","A1AEK1",86,0)
 ;   without intervention.*
"RTN","A1AEK1",87,0)
 N SSEKS,SEQN,XPDTCNT S (ABORT,ERRMSG,XPDTCNT)=0
"RTN","A1AEK1",88,0)
 F  S XPDTCNT=$O(XPDT(XPDTCNT)) Q:'XPDTCNT  D
"RTN","A1AEK1",89,0)
 . S SEQN=0
"RTN","A1AEK1",90,0)
 . I XPDT(XPDTCNT)["SEQ #" S SEQN=+$P(XPDT(XPDTCNT),"SEQ #",2)
"RTN","A1AEK1",91,0)
 . I 'SEQN,A1AEHDR[$P(XPDT(XPDTCNT),"^",2),A1AEHDR["SEQ #" D
"RTN","A1AEK1",92,0)
 .. S SEQN=+$P(A1AEHDR,"#",2)
"RTN","A1AEK1",93,0)
 .; Note SEQN (patch SEQ #) may be zero, but we may
"RTN","A1AEK1",94,0)
 .;  still do some evaluation before allowing install
"RTN","A1AEK1",95,0)
 .; Pull patch variables - PKG PREFIX^VERSION^PTCHNMB
"RTN","A1AEK1",96,0)
 . D KIDVAR(.KV,.XPDT,XPDTCNT)
"RTN","A1AEK1",97,0)
 .;
"RTN","A1AEK1",98,0)
 .; Get toggle SSEKS variable.  Site Stream=KIDS Stream
"RTN","A1AEK1",99,0)
 . S SSEKS=$$SSEKS(.SV,.KV)
"RTN","A1AEK1",100,0)
 .;
"RTN","A1AEK1",101,0)
 . S KV("PTCHSQN")=SEQN
"RTN","A1AEK1",102,0)
 .;
"RTN","A1AEK1",103,0)
 .; Get the Active Version of KIDS' package at this site
"RTN","A1AEK1",104,0)
 .; If this is wrong package version, abort patch install
"RTN","A1AEK1",105,0)
 . S SV("ACTPKGV")=$$ACTVERS(KV("PKGPRFX"))
"RTN","A1AEK1",106,0)
 . I 'SV("ACTPKGV") D  Q
"RTN","A1AEK1",107,0)
 .. S ABORT=1
"RTN","A1AEK1",108,0)
 .. S ERRMSG=$P($T(VRSNERR),";;",2)
"RTN","A1AEK1",109,0)
 .. D ERRMSG(ERRMSG,KV("PTCHNM"))
"RTN","A1AEK1",110,0)
 .;
"RTN","A1AEK1",111,0)
 .; Performs the following:
"RTN","A1AEK1",112,0)
 .;  1. Builds array of all pkg patches previously installed
"RTN","A1AEK1",113,0)
 .;     by Patch Stream
"RTN","A1AEK1",114,0)
 .;  2. Builds LI array of most recently installed patch by stream
"RTN","A1AEK1",115,0)
 .;  3. Builds FI array of first installed patch by stream
"RTN","A1AEK1",116,0)
 .;  4. Sets STRMCHNG indicating whether this site has ever
"RTN","A1AEK1",117,0)
 .;     changed patch streams
"RTN","A1AEK1",118,0)
 .;
"RTN","A1AEK1",119,0)
 . D GLSTINST(KV("PKGPRFX"),KV("PTCHVER"),.PTCINST,.STRMCHNG,.LI,.FI)
"RTN","A1AEK1",120,0)
 .;
"RTN","A1AEK1",121,0)
 .; Get array of all missing SEQ# patches for this package by stream
"RTN","A1AEK1",122,0)
 . D MISSING(KV("PKGPRFX"),KV("PTCHVER"),KV("PTCHSQN"),.MSSEQ)
"RTN","A1AEK1",123,0)
 .;
"RTN","A1AEK1",124,0)
 .; *** For DEBUG only
"RTN","A1AEK1",125,0)
 .; D MSG^KBAPEMSG("A1AEK1_1 ")
"RTN","A1AEK1",126,0)
 .;
"RTN","A1AEK1",127,0)
 .; Process suitability of this patch's install
"RTN","A1AEK1",128,0)
 . I SSEKS S ABORT=$$SSEKSY(.MSSEQ,.ABORT) Q
"RTN","A1AEK1",129,0)
 . S ABORT=$$SSEKSN(.MSSEQ,.ABORT) Q
"RTN","A1AEK1",130,0)
 Q ABORT
"RTN","A1AEK1",131,0)
 ;
"RTN","A1AEK1",132,0)
 ; Site/Server and KIDS ARE same Patch Stream
"RTN","A1AEK1",133,0)
 ; ENTER
"RTN","A1AEK1",134,0)
 ;   MSSEQ   =  Array of missing installs by Patch Stream
"RTN","A1AEK1",135,0)
 ;   ABORT   =  Variable representing present Abort status
"RTN","A1AEK1",136,0)
 ; RETURN
"RTN","A1AEK1",137,0)
 ;   ABORT set to 1 if user should abort install
"RTN","A1AEK1",138,0)
 ;         otherwise, do not change
"RTN","A1AEK1",139,0)
SSEKSY(MSSEQ,ABORT) ; Process when Site/Server Stream = KIDS'
"RTN","A1AEK1",140,0)
 ; All patches for this Stream installed. Allow installation.
"RTN","A1AEK1",141,0)
 I '$D(MSSEQ(KV("PTCHSTRM"))) Q ABORT
"RTN","A1AEK1",142,0)
 ;
"RTN","A1AEK1",143,0)
 ; Some earlier SEQ# KIDS patches not installed
"RTN","A1AEK1",144,0)
 ; If Site/Server has never switch Streams. Allow with warning
"RTN","A1AEK1",145,0)
 ;  and ability to list missing patches if desired
"RTN","A1AEK1",146,0)
 I 'STRMCHNG D  Q ABORT
"RTN","A1AEK1",147,0)
 . N ERRMSG S ERRMSG=$P($T(MSNGSQN),";;",2)
"RTN","A1AEK1",148,0)
 . D ERRMSG(ERRMSG,KV("PTCHNM"))
"RTN","A1AEK1",149,0)
 . N Y S Y=$$ANSWQ
"RTN","A1AEK1",150,0)
 . N MSA S MSA=$$SHOWMSQN(.MSSEQ,KV("PKGPRFX"),KV("PTCHSTRM"),Y,.MSA)
"RTN","A1AEK1",151,0)
 ;
"RTN","A1AEK1",152,0)
 ; Since Site/Server has switched Streams, and some earlier
"RTN","A1AEK1",153,0)
 ;  patches have not been installed, show special warning
"RTN","A1AEK1",154,0)
 ;  and set ABORT to 1.  The patch should not be installed.
"RTN","A1AEK1",155,0)
 S ABORT=1
"RTN","A1AEK1",156,0)
 N ERRMSG S ERRMSG=$P($T(MSNGSQN),";;",2)
"RTN","A1AEK1",157,0)
 D ERRMSG(ERRMSG,KV("PTCHNM"))
"RTN","A1AEK1",158,0)
 D WARN
"RTN","A1AEK1",159,0)
 N Y S Y=$$ANSWQ
"RTN","A1AEK1",160,0)
 N MSA S MSA=$$SHOWMSQN(.MSSEQ,KV("PKGPRFX"),KV("PTCHSTRM"),Y,.MSA)
"RTN","A1AEK1",161,0)
 Q ABORT
"RTN","A1AEK1",162,0)
 ;
"RTN","A1AEK1",163,0)
 ; 
"RTN","A1AEK1",164,0)
 ; Process when Site/Server Stream NOT SAME as KIDS'
"RTN","A1AEK1",165,0)
 ; ENTER
"RTN","A1AEK1",166,0)
 ;   MSSEQ   =  Array of missing installs by Patch Stream
"RTN","A1AEK1",167,0)
 ;   ABORT   =  Variable representing present Abort status
"RTN","A1AEK1",168,0)
 ; RETURN
"RTN","A1AEK1",169,0)
 ;   ABORT set to 1 if user should abort install
"RTN","A1AEK1",170,0)
 ;         otherwise, do not change
"RTN","A1AEK1",171,0)
SSEKSN(MSSEQ,ABORT) ; Process when Site/Server Stream NOT SAME as KIDS'
"RTN","A1AEK1",172,0)
 ;
"RTN","A1AEK1",173,0)
 ; I the site has never installed a KIDS patch of
"RTN","A1AEK1",174,0)
 ;   this stream for this package, then ABORT installation
"RTN","A1AEK1",175,0)
 I '$D(PTCINST(KV("PTCHSTRM"),KV("PKGPRFX"))) D  Q ABORT
"RTN","A1AEK1",176,0)
 . N ERRMSG S ERRMSG=$P($T(WRNGSTRM),";;",2)
"RTN","A1AEK1",177,0)
 . D ERRMSG(ERRMSG,KV("PTCHNM"))
"RTN","A1AEK1",178,0)
 . S ABORT=1
"RTN","A1AEK1",179,0)
 ;
"RTN","A1AEK1",180,0)
 ; Site/Server has previously installed KIDS's Stream Patches
"RTN","A1AEK1",181,0)
 ; If the KIDS SEQ# is NOT LESS than the SEQ# for the first
"RTN","A1AEK1",182,0)
 ;  installed KIDS SEQ# for the Active Patch Stream, ABORT
"RTN","A1AEK1",183,0)
 I '(KV("PTCHSQN")<FI(SV("STRM"))) D  Q ABORT
"RTN","A1AEK1",184,0)
 . N ERRMSG S ERRMSG=$P($T(WRNGSTRM),";;",2)
"RTN","A1AEK1",185,0)
 . D ERRMSG(ERRMSG,KV("PTCHNM"))
"RTN","A1AEK1",186,0)
 . S ABORT=1
"RTN","A1AEK1",187,0)
 ;
"RTN","A1AEK1",188,0)
 ; If the KIDS SEQ# is LESS than the SEQ# for the first
"RTN","A1AEK1",189,0)
 ;  installed KIDS SEQ# for the Active Patch Stream, ALLOW INSTALL
"RTN","A1AEK1",190,0)
 S ABORT=0
"RTN","A1AEK1",191,0)
 N ERRMSG S ERRMSG=$P($T(MSNGSQN),";;",2)
"RTN","A1AEK1",192,0)
 D ERRMSG(ERRMSG,KV("PTCHNM"))
"RTN","A1AEK1",193,0)
 N Y S Y=$$ANSWQ
"RTN","A1AEK1",194,0)
 N MSA S MSA=$$SHOWMSQN(.MSSEQ,KV("PKGPRFX"),KV("PTCHSTRM"),Y,.MSA)
"RTN","A1AEK1",195,0)
 Q ABORT
"RTN","A1AEK1",196,0)
 ;
"RTN","A1AEK1",197,0)
 ;
"RTN","A1AEK1",198,0)
 ; Pull array of all patches previously installed for
"RTN","A1AEK1",199,0)
 ;   this package for all patch streams
"RTN","A1AEK1",200,0)
 ; Use ^DIC(9.4,"A1AESEQ",PKG,VER,STRM,SEQ,PATCH)
"RTN","A1AEK1",201,0)
 ;  cross reference
"RTN","A1AEK1",202,0)
 ;ENTER
"RTN","A1AEK1",203,0)
 ;   PKGPRFX  =  Package PREFIX or abbreviation
"RTN","A1AEK1",204,0)
 ;   PKGVER   =  Active package version
"RTN","A1AEK1",205,0)
 ;   PTCINST  =  Patch Stream Array by reference
"RTN","A1AEK1",206,0)
 ;   STRMCHNG =  variable by reference
"RTN","A1AEK1",207,0)
 ;   LI       =  Last installs Array by reference
"RTN","A1AEK1",208,0)
 ;   FI       =  First install Array by reference
"RTN","A1AEK1",209,0)
 ;EXIT
"RTN","A1AEK1",210,0)
 ;   PTCINST(STREAM,SEQ#,PKG ABB,PKGVER,PATCH NAME)=""
"RTN","A1AEK1",211,0)
 ;   STRMCHNG
"RTN","A1AEK1",212,0)
 ;       0=never changed patch streams
"RTN","A1AEK1",213,0)
 ;       1=has changed patch streams
"RTN","A1AEK1",214,0)
 ;   LI(STREAM)=SEQ#
"RTN","A1AEK1",215,0)
 ;   FI(STREAM)=SEQ#
"RTN","A1AEK1",216,0)
GLSTINST(PKGPRFX,PKGVER,PTCINST,STRMCHNG,LI,FI) ; Blds array of installs
"RTN","A1AEK1",217,0)
 K PTCINST,LI,FI,STRMCHNG
"RTN","A1AEK1",218,0)
 S STRMCHNG=0
"RTN","A1AEK1",219,0)
 S PTCINST(0)=0
"RTN","A1AEK1",220,0)
 N NODE S NODE=$NA(^DIC(9.4,"A1AESEQ",PKGPRFX,PKGVER))
"RTN","A1AEK1",221,0)
 N STRM,SC,SNODE S SC=0,SNODE=$P(NODE,")")
"RTN","A1AEK1",222,0)
 F  S NODE=$Q(@NODE) Q:NODE'[SNODE  D
"RTN","A1AEK1",223,0)
 . I ($G(STRM)'=$QS(NODE,5)) S STRM=$QS(NODE,5) D
"RTN","A1AEK1",224,0)
 .. S FI($QS(NODE,5))=$QS(NODE,6)
"RTN","A1AEK1",225,0)
 . S PTCINST($QS(NODE,5),$QS(NODE,6),PKGPRFX,PKGVER,$QS(NODE,7))=""
"RTN","A1AEK1",226,0)
 . S LI($QS(NODE,5))=$QS(NODE,6)
"RTN","A1AEK1",227,0)
 . S PTCINST(0)=$G(PTCINST(0))+1
"RTN","A1AEK1",228,0)
 . S SC=$S(SC=0:SC=$QS(NODE,5),SC=$QS(NODE,5):$QS(NODE,5),1:"C")
"RTN","A1AEK1",229,0)
 S STRMCHNG=$S(SC="C":1,1:0)
"RTN","A1AEK1",230,0)
 Q
"RTN","A1AEK1",231,0)
 ;
"RTN","A1AEK1",232,0)
 ; Pull array of missing sequence numbers (patches not installed)
"RTN","A1AEK1",233,0)
 ;  for each stream
"RTN","A1AEK1",234,0)
 ;ENTER
"RTN","A1AEK1",235,0)
 ;   PKGPRFX  = Package prefix
"RTN","A1AEK1",236,0)
 ;   PKGVER   = Current version of package
"RTN","A1AEK1",237,0)
 ;   PTCHSEQN = Sequence number of patch in question
"RTN","A1AEK1",238,0)
 ;   MSSEQ    = Array passed by reference
"RTN","A1AEK1",239,0)
 ;RETURN
"RTN","A1AEK1",240,0)
 ;   MSSEQ    = Array of Sequence Numbers, Patch names
"RTN","A1AEK1",241,0)
 ;              that should be installed before this patch
"RTN","A1AEK1",242,0)
 ;   e.g.
"RTN","A1AEK1",243,0)
 ; ^DIC(9.4,"A1AESEQ","DG",5.3,1,74,"DG*5.3*77")
"RTN","A1AEK1",244,0)
 ; ^DIC(9.4,"A1AESEQ","DG",5.3,1,75,"DG*5.3*79")
"RTN","A1AEK1",245,0)
 ; ^DIC(9.4,"A1AESEQ","DG",5.3,1,76,"DG*5.3*80")
"RTN","A1AEK1",246,0)
 ; ^DIC(9.4,"A1AESEQ","DG",5.3,1,78,"DG*5.3*82")
"RTN","A1AEK1",247,0)
 ; ^DIC(9.4,"A1AESEQ","DG",5.3,1,80,"DG*5.3*78")
"RTN","A1AEK1",248,0)
 ; ^DIC(9.4,"A1AESEQ","DG",5.3,1,82,"DG*5.3*88")
"RTN","A1AEK1",249,0)
 ;   Returns
"RTN","A1AEK1",250,0)
 ; MSSEQ(1,77)=""
"RTN","A1AEK1",251,0)
 ; MSSEQ(1,79)=""
"RTN","A1AEK1",252,0)
 ; MSSEQ(1,81)=""
"RTN","A1AEK1",253,0)
MISSING(PKGPRFX,PKGVER,PTCHSQN,MSSEQ) ; Return missing install SEQ#
"RTN","A1AEK1",254,0)
 Q:$G(PKGPRFX)=""
"RTN","A1AEK1",255,0)
 Q:'$G(PKGVER)
"RTN","A1AEK1",256,0)
 Q:'$G(PTCHSQN)
"RTN","A1AEK1",257,0)
 K MSSEQ
"RTN","A1AEK1",258,0)
 Q:$G(PTCHSQN)=1
"RTN","A1AEK1",259,0)
 N STRM,SEQN,STRMABB,PTCHNM S STRMABB=""
"RTN","A1AEK1",260,0)
 F  S STRMABB=$O(^A1AE(11007.1,"C",STRMABB)) Q:STRMABB=""  D
"RTN","A1AEK1",261,0)
 . S STRM=+$O(^A1AE(11007.1,"C",STRMABB,0)) Q:'STRM
"RTN","A1AEK1",262,0)
 . F SEQN=1:1:PTCHSQN D
"RTN","A1AEK1",263,0)
 .. I $D(^DIC(9.4,"A1AESEQ",PKGPRFX,PKGVER,STRM,SEQN)) Q
"RTN","A1AEK1",264,0)
 .. S MSSEQ(STRM,SEQN)=""
"RTN","A1AEK1",265,0)
 Q
"RTN","A1AEK1",266,0)
 ;
"RTN","A1AEK1",267,0)
 ; ENTER
"RTN","A1AEK1",268,0)
 ;   MSSEQ   = array by reference with uninstalled
"RTN","A1AEK1",269,0)
 ;             patches and their sequence numbers
"RTN","A1AEK1",270,0)
 ;   STRM    = Site's stream number
"RTN","A1AEK1",271,0)
 ;   PKGPRFX = Package prefix (e.g. "DG")
"RTN","A1AEK1",272,0)
 ;   Y       = 0 = user didn't wish display, save in array
"RTN","A1AEK1",273,0)
 ;           = 1 = display uninstalled patches
"RTN","A1AEK1",274,0)
 ;   MSARRAY = Array of missing patches
"RTN","A1AEK1",275,0)
 ; RETURN
"RTN","A1AEK1",276,0)
 ;   display uninstalled patches if asked to do so
"RTN","A1AEK1",277,0)
 ;   return array of missing patche
"RTN","A1AEK1",278,0)
SHOWMSQN(MSSEQ,PKGPRFX,STRM,Y,MSA) ; Show/build array missing SEQ#
"RTN","A1AEK1",279,0)
 S ^XTMP("A1AEK1")=PKGPRFX_"^"_STRM_"^"_Y
"RTN","A1AEK1",280,0)
 M ^XTMP("A1AEK1 MSSEQ")=MSSEQ(STRM)
"RTN","A1AEK1",281,0)
 K MSA S MSA(0)=0
"RTN","A1AEK1",282,0)
 Q:'STRM MSA(0)
"RTN","A1AEK1",283,0)
 Q:'($D(MSSEQ(STRM))) MSA(0)
"RTN","A1AEK1",284,0)
 N SEQN S SEQN=0
"RTN","A1AEK1",285,0)
 F  S SEQN=$O(MSSEQ(STRM,SEQN)) Q:'SEQN  D
"RTN","A1AEK1",286,0)
 . I Y W !,PKGPRFX," SEQ#: ",SEQN Q
"RTN","A1AEK1",287,0)
 . S MSA(0)=$G(MSA(0))+1 D
"RTN","A1AEK1",288,0)
 .. S MSA(MSA(0))=PKGPRFX_" SEQ#: "_SEQN
"RTN","A1AEK1",289,0)
 Q MSA(0)
"RTN","A1AEK1",290,0)
 ;
"RTN","A1AEK1",291,0)
 ;ENTER
"RTN","A1AEK1",292,0)
 ;  nothing required
"RTN","A1AEK1",293,0)
 ;RETURN
"RTN","A1AEK1",294,0)
 ;  Y  set to 0 for NO, 1 for YES
"RTN","A1AEK1",295,0)
ANSWQ() ; Return answer of YES/NO question
"RTN","A1AEK1",296,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","A1AEK1",297,0)
 S DIR(0)="Y"
"RTN","A1AEK1",298,0)
 S DIR("A")="Display listing of missing sequence numbers?"
"RTN","A1AEK1",299,0)
 S DIR("B")="N"
"RTN","A1AEK1",300,0)
 D ^DIR
"RTN","A1AEK1",301,0)
 Q +$G(Y)
"RTN","A1AEK1",302,0)
 ;
"RTN","A1AEK1",303,0)
 ; 
"RTN","A1AEK1",304,0)
 ;
"RTN","A1AEK1",305,0)
 ; ENTER
"RTN","A1AEK1",306,0)
 ;   SV   =  Array by reference of Site variables built by SITEVAR
"RTN","A1AEK1",307,0)
 ;   KV   =  Array by reference of KIDS variables built by KIDSVAR
"RTN","A1AEK1",308,0)
 ; RETURN
"RTN","A1AEK1",309,0)
 ;   1  = Site's patch stream = KIDS patch stream
"RTN","A1AEK1",310,0)
 ;   0  = Site's patch stream DOES NOT match KIDS patch stream
"RTN","A1AEK1",311,0)
SSEKS(SV,KV) ; Set variable representing whether SiteStream=KIDSstream
"RTN","A1AEK1",312,0)
 Q (SV("STRM")=$G(KV("PTCHSTRM")))
"RTN","A1AEK1",313,0)
 ;
"RTN","A1AEK1",314,0)
 ; ENTER
"RTN","A1AEK1",315,0)
 ;   SV   =  array by reference
"RTN","A1AEK1",316,0)
 ; RETURN
"RTN","A1AEK1",317,0)
 ;   SV array with Sties patch stream variables
"RTN","A1AEK1",318,0)
SITEVAR(SV) ; Build array of Site Patch stream variables
"RTN","A1AEK1",319,0)
 K SV
"RTN","A1AEK1",320,0)
 N STRM S STRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEK1",321,0)
 S:STRM SV("STRM")=STRM
"RTN","A1AEK1",322,0)
 S:STRM SV("STRMNM")=$P($G(^A1AE(11007.1,STRM,0)),"^")
"RTN","A1AEK1",323,0)
 S:STRM SV("STRMDT")=$O(^A1AE(11007.1,STRM,1,"B","A"),-1)
"RTN","A1AEK1",324,0)
 S:STRM SV("STRMPRFX")=$$GET1^DIQ(11007.1,STRM,.05)
"RTN","A1AEK1",325,0)
 Q
"RTN","A1AEK1",326,0)
 ;
"RTN","A1AEK1",327,0)
 ;
"RTN","A1AEK1",328,0)
 ; ENTER
"RTN","A1AEK1",329,0)
 ;   KV
"RTN","A1AEK1",330,0)
 ;   XPDT
"RTN","A1AEK1",331,0)
 ;   XPDTCNT
"RTN","A1AEK1",332,0)
 ; RETURN
"RTN","A1AEK1",333,0)
 ;   KV array with KIDS' patch stream variables
"RTN","A1AEK1",334,0)
KIDVAR(KV,XPDT,XPDTCNT) ;
"RTN","A1AEK1",335,0)
 K KV Q:'XPDTCNT
"RTN","A1AEK1",336,0)
 Q:'$D(XPDT(XPDTCNT))
"RTN","A1AEK1",337,0)
 N PTCHNM S PTCHNM=$P(XPDT(XPDTCNT),"^",2)
"RTN","A1AEK1",338,0)
 I $L(PTCHNM),($L(PTCHNM,"*")=3) D
"RTN","A1AEK1",339,0)
 . S KV("PTCHNM")=PTCHNM
"RTN","A1AEK1",340,0)
 . S KV("PKGPRFX")=$P(PTCHNM,"*")
"RTN","A1AEK1",341,0)
 . S KV("PTCHVER")=$P(PTCHNM,"*",2)
"RTN","A1AEK1",342,0)
 . S KV("PTCHNBR")=$P(PTCHNM,"*",3)
"RTN","A1AEK1",343,0)
 . N I S I=0 F  S I=$O(^A1AE(11007.1,I)) Q:'I  Q:(I>KV("PTCHNBR"))  D
"RTN","A1AEK1",344,0)
 .. S KV("PTCHSTRM")=I
"RTN","A1AEK1",345,0)
 . N PTCHDA S PTCHDA=+$G(XPDT(XPDTCNT)) I PTCHDA D
"RTN","A1AEK1",346,0)
 .. N NODE S NODE=$NA(^XTMP("XPDI",PTCHDA)),NODE=$Q(@NODE)
"RTN","A1AEK1",347,0)
 .. S KV("PTCHRDT")=$P(@NODE,"^",4)
"RTN","A1AEK1",348,0)
 Q
"RTN","A1AEK1",349,0)
 ;
"RTN","A1AEK1",350,0)
 ;ENTER
"RTN","A1AEK1",351,0)
 ;   PKGPRFX  = Package prefix or abbreviation
"RTN","A1AEK1",352,0)
 ;RETURN
"RTN","A1AEK1",353,0)
 ;   0 = package not supported at this site
"RTN","A1AEK1",354,0)
 ;   n = active version of this package
"RTN","A1AEK1",355,0)
ACTVERS(PKGPRFX) ; Return Site's Active version of this package
"RTN","A1AEK1",356,0)
 N I S I=$O(^DIC(9.4,"C",PKGPRFX,0)) Q:'I 0
"RTN","A1AEK1",357,0)
 Q $$GET1^DIQ(9.4,I_",",13)
"RTN","A1AEK1",358,0)
 ;
"RTN","A1AEK1",359,0)
 ;ENTER
"RTN","A1AEK1",360,0)
 ;   ERRMSG  = Error message
"RTN","A1AEK1",361,0)
 ;   PTCHNM  = Patch Name (e.g. DG*5.3*770)
"RTN","A1AEK1",362,0)
 ;RETURN
"RTN","A1AEK1",363,0)
 ;   Write out error message and patch name if called
"RTN","A1AEK1",364,0)
 ;   Return error message and patch name if entered as extrinsic
"RTN","A1AEK1",365,0)
ERRMSG(ERRMSG,PTCHNM) ; Process error message
"RTN","A1AEK1",366,0)
 I '$Q W !,"** ",ERRMSG," **",!
"RTN","A1AEK1",367,0)
 Q:$Q ERRMSG_"^"_PTCHNM Q
"RTN","A1AEK1",368,0)
 ;
"RTN","A1AEK1",369,0)
 ;
"RTN","A1AEK1",370,0)
WARN(STRNG) N TXT,CNT S CNT=0
"RTN","A1AEK1",371,0)
 F  S TXT=$P($T(WARNTXT+CNT),";;",2) Q:TXT["*END*"  D  Q:TXT=""
"RTN","A1AEK1",372,0)
 . S CNT=CNT+1 W:'$D(STRNG) !,TXT
"RTN","A1AEK1",373,0)
 S STRNG=TXT
"RTN","A1AEK1",374,0)
 Q:$Q STRNG Q
"RTN","A1AEK1",375,0)
 ;
"RTN","A1AEK1",376,0)
WARNTXT ;;                    ***
"RTN","A1AEK1",377,0)
 ;;As this Site/Server has switch Patch Streams,"
"RTN","A1AEK1",378,0)
 ;;  you are required to install all Patches"
"RTN","A1AEK1",379,0)
 ;;  released in support of this package for
"RTN","A1AEK1",380,0)
 ;;  your Active Patch Stream."
"RTN","A1AEK1",381,0)
 ;;             --- OR ---"
"RTN","A1AEK1",382,0)
 ;;  Edit the following fields in the Package [#9.4]
"RTN","A1AEK1",383,0)
 ;;  file to indicate your unwillingness to install 
"RTN","A1AEK1",384,0)
 ;;  one or more back patches"
"RTN","A1AEK1",385,0)
 ;;  PATCH APPLICATION HISTORY [#.01] enter as
"RTN","A1AEK1",386,0)
 ;;     Patch Number [space] "SEQ#" [space] Patch SEQ#
"RTN","A1AEK1",387,0)
 ;;  DATE APPLIED [#.02] 
"RTN","A1AEK1",388,0)
 ;;  APPLIED BY [#.03]
"RTN","A1AEK1",389,0)
 ;;  DESCRIPTION [#1] Reason for not installing
"RTN","A1AEK1",390,0)
 ;;                     ***
"RTN","A1AEK1",391,0)
 ;;*END*
"RTN","A1AEK1",392,0)
 ;
"RTN","A1AEK1",393,0)
 ; Error messages 
"RTN","A1AEK1",394,0)
PKGVERR ;;Couln't ascertain active package version on system
"RTN","A1AEK1",395,0)
VRSNERR ;;Does not represent current package version
"RTN","A1AEK1",396,0)
MSNGSQN ;;Earler SEQUENCE #'d patches for package not installed
"RTN","A1AEK1",397,0)
WRNGSTRM ;;KIDS install not for your package STREAM
"RTN","A1AEK1",398,0)
 ;
"RTN","A1AEK1",399,0)
 ;
"RTN","A1AEK1",400,0)
EOR ; end of routine A1AEK1
"RTN","A1AEK2")
0^44^B98333709
"RTN","A1AEK2",1,0)
A1AEK2 ;ven/lgc-forum-site subscription messaging ;2015-05-28T06:45
"RTN","A1AEK2",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 35
"RTN","A1AEK2",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEK2",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEK2",5,0)
 ;
"RTN","A1AEK2",6,0)
 ;
"RTN","A1AEK2",7,0)
 ;primary change history
"RTN","A1AEK2",8,0)
 ;2014-12-27: version 2.4 released
"RTN","A1AEK2",9,0)
 ;
"RTN","A1AEK2",10,0)
 ;
"RTN","A1AEK2",11,0)
 ; CHANGE VEN/LGC 2015 03 21
"RTN","A1AEK2",12,0)
 ;    Set G.A1AEFMSC as the FORUM mail group name that
"RTN","A1AEK2",13,0)
 ;    will receive Patch Stream Change messaging
"RTN","A1AEK2",14,0)
 ;
"RTN","A1AEK2",15,0)
 ; CHANGE VEN/LGC 2015 05 27
"RTN","A1AEK2",16,0)
 ;    Modifications in A1AEF1 where DIERR shows failure.
"RTN","A1AEK2",17,0)
 ;    DATA saved in FDATA while DIERR error is considered.
"RTN","A1AEK2",18,0)
 ;
"RTN","A1AEK2",19,0)
 S ^XTMP($J,"A1AEK2 FROM TOP")=""
"RTN","A1AEK2",20,0)
 Q  ; Not from top
"RTN","A1AEK2",21,0)
 ;
"RTN","A1AEK2",22,0)
 ;
"RTN","A1AEK2",23,0)
 ; Input transform for SUBSCRIPTION [#.06] field in
"RTN","A1AEK2",24,0)
 ;  DHCP PATCH STREAM [#11007.1] file.
"RTN","A1AEK2",25,0)
 ; With an attempt to edit the SUBSCRIPTION field to
"RTN","A1AEK2",26,0)
 ;  set the site to another Patch Stream, the user
"RTN","A1AEK2",27,0)
 ;  is notified that such changes must be done by
"RTN","A1AEK2",28,0)
 ;  a Forum application edit.  However, the request
"RTN","A1AEK2",29,0)
 ;  for the change is generated and forwarded to
"RTN","A1AEK2",30,0)
 ;  Forum through the A1AESTRMCHG mail group.
"RTN","A1AEK2",31,0)
 ; If the variable A1AEFOAP (Forum Approved) is defined
"RTN","A1AEK2",32,0)
 ;  an edit proceeds without interference.
"RTN","A1AEK2",33,0)
 ; ENTER
"RTN","A1AEK2",34,0)
 ;   A1AEFOAP  = exists if editing by Forum action
"RTN","A1AEK2",35,0)
 ;   STRM      = entry in DHCP PATCH STREAM desired
"RTN","A1AEK2",36,0)
 ;               e.g. 1 or 10001
"RTN","A1AEK2",37,0)
 ;   DUZ       = user
"RTN","A1AEK2",38,0)
 ;   Y0        = user selection to SEQUENCE if called
"RTN","A1AEK2",39,0)
 ;                through FM edit INPUT TEMPLATE
"RTN","A1AEK2",40,0)
 ;               --- or set by Option
"RTN","A1AEK2",41,0)
 ;   SLNT      = [OPTIONAL] SILENT TOGGLE 1=YES
"RTN","A1AEK2",42,0)
 ; EXIT
"RTN","A1AEK2",43,0)
 ;   SLNT  = if passed as 1 (true) return data array
"RTN","A1AEK2",44,0)
 ;           if not passed or 0 then email delivered
"RTN","A1AEK2",45,0)
 ;   Sends out email request for SEQUENCE (patch stream)
"RTN","A1AEK2",46,0)
 ;    change to Forum
"RTN","A1AEK2",47,0)
STRM(STRM,Y0,SLNT) ; INPUT TRANSFORM ON SUBSCRIPTION [.06] in 11007.1
"RTN","A1AEK2",48,0)
 Q:$D(A1AEFOAP)
"RTN","A1AEK2",49,0)
 S SLNT=$S($G(SLNT):1,1:0)
"RTN","A1AEK2",50,0)
 I Y0="YES",+$G(STRM),$O(^A1AE(11007.1,"ASUBS",0,0))=STRM D
"RTN","A1AEK2",51,0)
 . I $$CONFIRM!SLNT D
"RTN","A1AEK2",52,0)
 .. N SERVER S SERVER=$$GET1^DIQ(8989.3,1_",",.01) ; REQST DOMAIN
"RTN","A1AEK2",53,0)
 .. I $$NEWSTRM(DUZ,$$HTFM^XLFDT($H),SERVER,+$G(STRM),SLNT) D
"RTN","A1AEK2",54,0)
 ... W:'SLNT !,!,"*** Forum is being notified of your request"
"RTN","A1AEK2",55,0)
 ... W:'SLNT !,"to change your site's SUBSCRIPTION to "
"RTN","A1AEK2",56,0)
 ... W:'SLNT !,"   ",$P(^A1AE(11007.1,STRM,0),"^"),"***",!
"RTN","A1AEK2",57,0)
 ; Since updating SEQUENCE requires FORUM action, the 
"RTN","A1AEK2",58,0)
 ;  input transform ALWAYS kills X
"RTN","A1AEK2",59,0)
 K X
"RTN","A1AEK2",60,0)
 Q
"RTN","A1AEK2",61,0)
 ;
"RTN","A1AEK2",62,0)
 ;
"RTN","A1AEK2",63,0)
 ;ENTER
"RTN","A1AEK2",64,0)
 ;  nothing required
"RTN","A1AEK2",65,0)
 ;RETURN
"RTN","A1AEK2",66,0)
 ;  0 for NO, 1 for YES
"RTN","A1AEK2",67,0)
CONFIRM() ; Return answer to confirm No/Yes
"RTN","A1AEK2",68,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","A1AEK2",69,0)
 S DIR(0)="Y"
"RTN","A1AEK2",70,0)
 S DIR("A")="Confirm desire to switch PATCH SUBSCRIPTION"
"RTN","A1AEK2",71,0)
 S DIR("B")="N"
"RTN","A1AEK2",72,0)
 D ^DIR
"RTN","A1AEK2",73,0)
 Q +$G(Y)
"RTN","A1AEK2",74,0)
 ;
"RTN","A1AEK2",75,0)
 ;
"RTN","A1AEK2",76,0)
 ; Send formatted email out to G.A1AESTRMCHG to be sent
"RTN","A1AEK2",77,0)
 ;  to local users on the mail group and through the server
"RTN","A1AEK2",78,0)
 ;  on the MEMBERS REMOTE named S.A1AENEWSTRM
"RTN","A1AEK2",79,0)
 ; Action fired off by an INPUT TRANSFORM on the 
"RTN","A1AEK2",80,0)
 ;  SUBSCRIPTION [#.06] field in the DHCP PATCH STREAM
"RTN","A1AEK2",81,0)
 ;  [#11007.1] file
"RTN","A1AEK2",82,0)
 ; ENTER
"RTN","A1AEK2",83,0)
 ;  DUZ     =  user
"RTN","A1AEK2",84,0)
 ;  SCDT    =  date/time stream change requested
"RTN","A1AEK2",85,0)
 ;  SERVER  =  name of server
"RTN","A1AEK2",86,0)
 ;  STRM    =  new stream desired
"RTN","A1AEK2",87,0)
 ;  SLNT    =  toggle for SILENT to FORUM
"RTN","A1AEK2",88,0)
 ;             0 normal mode, msg subject toggles sending to FORUM
"RTN","A1AEK2",89,0)
 ;             1 test mode, msg subject stops sending to FORUM
"RTN","A1AEK2",90,0)
 ; EXIT
"RTN","A1AEK2",91,0)
 ;  0^COMMENT if error, or IEN into 3.9 for message
"RTN","A1AEK2",92,0)
NEWSTRM(DUZ,SCDT,SERVER,STRM,SLNT) ;
"RTN","A1AEK2",93,0)
 Q:'$G(DUZ) "1^MISSING DUZ"
"RTN","A1AEK2",94,0)
 Q:'$G(SCDT) "1^MISSING or BAD Stream Change Date/Time"
"RTN","A1AEK2",95,0)
 Q:'$L(SERVER) "1^MISSING SERVER information"
"RTN","A1AEK2",96,0)
 Q:'$G(STRM) "1^MISSING STREAM information"
"RTN","A1AEK2",97,0)
 N ACTSTRM S ACTSTRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEK2",98,0)
 N ACTSTRMD S ACTSTRMD=$O(^A1AE(11007.1,+$G(ACTSTRM),1,"B","A"),-1)
"RTN","A1AEK2",99,0)
 N XMSUBJ S XMSUBJ=SERVER_":::SUBSCRIPTION CHNG REQUEST "
"RTN","A1AEK2",100,0)
 S:SLNT XMSUBJ="A1AE:::SUBSCRIPTION CHNG REQUEST "
"RTN","A1AEK2",101,0)
 N VAP S:SLNT VAP="T+1"
"RTN","A1AEK2",102,0)
 N DATA
"RTN","A1AEK2",103,0)
 S DATA(0)=6
"RTN","A1AEK2",104,0)
 S DATA(1)="SERVER:::"_SERVER
"RTN","A1AEK2",105,0)
 S DATA(2)="ACTIVE SUBSCRIPTION:::"_ACTSTRM
"RTN","A1AEK2",106,0)
 S DATA(3)="DATE SUBSCRIPTION ACTIVE:::"_ACTSTRMD
"RTN","A1AEK2",107,0)
 S DATA(4)="REQUESTOR DUZ:::"_DUZ
"RTN","A1AEK2",108,0)
 S DATA(5)="SWITCH TO SUBSCRIPTION:::"_STRM
"RTN","A1AEK2",109,0)
 S DATA(6)="SWITCH REQUEST DATE:::"_SCDT
"RTN","A1AEK2",110,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",111,0)
 ; Returns 0^comment for error, or IEN of mail message in 3.9
"RTN","A1AEK2",112,0)
 Q $$SNDMAIL(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEK2",113,0)
 ;
"RTN","A1AEK2",114,0)
 ;
"RTN","A1AEK2",115,0)
 ;S.A1AENEWSTRM receives emails sent to G.A1AESTRMCHG
"RTN","A1AEK2",116,0)
 ; and calls the PRCSMAIL linetag below
"RTN","A1AEK2",117,0)
 ; Get first line of incoming mail
"RTN","A1AEK2",118,0)
 ;  e.g. Outgoing email from site requesting new stream
"RTN","A1AEK2",119,0)
 ;        FORUM.OSEHRA.ORG SUBSCRIPTION CHNG REQUEST
"RTN","A1AEK2",120,0)
 ;       Incoming confirmation email from FORUM
"RTN","A1AEK2",121,0)
 ;        FORUM.OSEHRA.ORG SUBSCRIPTION CHNG APPR
"RTN","A1AEK2",122,0)
 ;        FORUM.OSEHRA.ORG SUBSCRIPTION CHNG NOT APPR
"RTN","A1AEK2",123,0)
 ;       Outgoing email from site to FORUM confirm change
"RTN","A1AEK2",124,0)
 ;        FORUM.OSEHRA.ORG SUBSCRIPTION CHNG COMPLETED
"RTN","A1AEK2",125,0)
 ;        FORUM.OSEHAA.ORG SUBSCRIPTION CHNG FAILED
"RTN","A1AEK2",126,0)
 ; ENTER
"RTN","A1AEK2",127,0)
 ;   XMZ  =  IEN of mail in ^XMB(3.9
"RTN","A1AEK2",128,0)
 ;   emails arriving into this mailgroup are ignored by
"RTN","A1AEK2",129,0)
 ;    server if SUBJECT not identified.
"RTN","A1AEK2",130,0)
 ; EXIT
"RTN","A1AEK2",131,0)
 ;   Returns TXT value if called as extrinsic
"RTN","A1AEK2",132,0)
 ;       TXT="" if subj processed, "*END*" if not
"RTN","A1AEK2",133,0)
 ;   Takes appropriate action on email requests,confirmations
"RTN","A1AEK2",134,0)
PRCSMAIL(A1AESTR) ; Process mail concerning changing site's Patch Stream
"RTN","A1AEK2",135,0)
 Q:'$G(XMZ)
"RTN","A1AEK2",136,0)
 N XTBMLN1 S XTBMLN1=$G(^XMB(3.9,XMZ,0))
"RTN","A1AEK2",137,0)
 N TXT,CNT S CNT=0
"RTN","A1AEK2",138,0)
 F  S TXT=$P($T(FMSUBJ+CNT),";;",2) Q:TXT["*END*"  D  Q:TXT=""
"RTN","A1AEK2",139,0)
 . I TXT'="",XTBMLN1[$P(TXT,"^") D @$P(TXT,"^",2) S TXT="" Q
"RTN","A1AEK2",140,0)
 . S CNT=CNT+1
"RTN","A1AEK2",141,0)
 S A1AESTR=TXT
"RTN","A1AEK2",142,0)
 Q:$Q A1AESTR Q
"RTN","A1AEK2",143,0)
 ;
"RTN","A1AEK2",144,0)
 ;
"RTN","A1AEK2",145,0)
 ; Now deal with contents of structured email depending
"RTN","A1AEK2",146,0)
 ;  on the subject (line1) of the email.  The linetag
"RTN","A1AEK2",147,0)
 ;  to call is pulled from the above loop looking at
"RTN","A1AEK2",148,0)
 ;  the text at linetag FMSUBJ at the bottom of this routine.
"RTN","A1AEK2",149,0)
 ;
"RTN","A1AEK2",150,0)
 ;SUBSCRIPTION CHNG REQUEST
"RTN","A1AEK2",151,0)
 ;ENTER
"RTN","A1AEK2",152,0)
 ;  XMZ  =  IEN of message in 3.9
"RTN","A1AEK2",153,0)
 ;RETURNS
"RTN","A1AEK2",154,0)
 ;  sends email message
"RTN","A1AEK2",155,0)
 ; example expected text
"RTN","A1AEK2",156,0)
 ;    SERVER:::FORUM.OSEHRA.ORG
"RTN","A1AEK2",157,0)
 ;    ACTIVE SUBSCRIPTION:::1
"RTN","A1AEK2",158,0)
 ;    DATE SUBSCRIPTION ACTIVE:::3150305.004002
"RTN","A1AEK2",159,0)
 ;    REQUESTOR DUZ:::799
"RTN","A1AEK2",160,0)
 ;    SWITCH TO SUBSCRIPTION:::10001
"RTN","A1AEK2",161,0)
 ;    SWITCH REQUEST DATE:::3150305.23481
"RTN","A1AEK2",162,0)
 ;    Called as DO, Structured request email sent to FORUM
"RTN","A1AEK2",163,0)
 ;    Run as extrinsic, email with subject that will NOT
"RTN","A1AEK2",164,0)
 ;      be trapped by server PRCSMAIL
"RTN","A1AEK2",165,0)
FCNF0 ; Process outgoing Sendsubscription change request to FORUM
"RTN","A1AEK2",166,0)
 ; Simply forward the message on to FORUM
"RTN","A1AEK2",167,0)
 N UT S UT=(^XMB(3.9,XMZ,0)["A1AE:::")
"RTN","A1AEK2",168,0)
 N NSTRM,I S (I,NSTRM)=0
"RTN","A1AEK2",169,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","A1AEK2",170,0)
 . I ^XMB(3.9,XMZ,2,I,0)["SWITCH TO SUBSCRIPTION:::" D
"RTN","A1AEK2",171,0)
 .. S NSTRM=$P(^XMB(3.9,XMZ,2,I,0),":::",2)
"RTN","A1AEK2",172,0)
 Q:'NSTRM
"RTN","A1AEK2",173,0)
 N FRMDMN S FRMDMN=$$GET1^DIQ(11007.1,NSTRM_",",.07)
"RTN","A1AEK2",174,0)
 I 'UT N XMY S XMY("G.A1AEFMSC@"_FRMDMN)="" D ENT1^XMD Q
"RTN","A1AEK2",175,0)
 ; Fall into Unit Test
"RTN","A1AEK2",176,0)
 N DATA,I S I=0
"RTN","A1AEK2",177,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","A1AEK2",178,0)
 . S DATA(I)=^XMB(3.9,XMZ,2,I,0),DATA(0)=I
"RTN","A1AEK2",179,0)
 S XMSUBJ="A1AE FCNF0"
"RTN","A1AEK2",180,0)
 N VAP S VAP="T+1"
"RTN","A1AEK2",181,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",182,0)
 N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEK2",183,0)
 Q
"RTN","A1AEK2",184,0)
 ;
"RTN","A1AEK2",185,0)
 ;
"RTN","A1AEK2",186,0)
 ;
"RTN","A1AEK2",187,0)
 ; SUBSCRIPTION CHNG APPR
"RTN","A1AEK2",188,0)
 ; expected text of message
"RTN","A1AEK2",189,0)
 ;    SERVER:::FORUM.OSEHRA.ORG
"RTN","A1AEK2",190,0)
 ;    ACTIVE SUBSCRIPTION:::1
"RTN","A1AEK2",191,0)
 ;    DATE SUBSCRIPTION ACTIVE:::3150305.004002
"RTN","A1AEK2",192,0)
 ;    REQUESTOR DUZ:::799
"RTN","A1AEK2",193,0)
 ;    SWITCH TO SUBSCRIPTION:::10001
"RTN","A1AEK2",194,0)
 ;    SWITCH REQUEST DATE:::3150305.23481
"RTN","A1AEK2",195,0)
 ;    APPROVED:::YES
"RTN","A1AEK2",196,0)
 ;
"RTN","A1AEK2",197,0)
 ;  Edit 11007.1 file, send CHNG COMPLETED email
"RTN","A1AEK2",198,0)
FCNF1() ; Process incoming FORUM APPROVAL to switch streams
"RTN","A1AEK2",199,0)
 ; Get data from incoming email
"RTN","A1AEK2",200,0)
 N DATA,I S I=0
"RTN","A1AEK2",201,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","A1AEK2",202,0)
 . S DATA(I)=^XMB(3.9,XMZ,2,I,0),DATA(0)=I
"RTN","A1AEK2",203,0)
 ; Check that the incoming mail was from this site/server
"RTN","A1AEK2",204,0)
 ;   and approval before proceeding
"RTN","A1AEK2",205,0)
 N SERVER S SERVER=$$GET1^DIQ(8989.3,1_",",.01)
"RTN","A1AEK2",206,0)
 I $$FND(.DATA,"SERVER")'=SERVER Q
"RTN","A1AEK2",207,0)
 I $$FND(.DATA,"APPROVED")'="YES" Q
"RTN","A1AEK2",208,0)
 ; Save Data array for later
"RTN","A1AEK2",209,0)
 N POO M POO=DATA
"RTN","A1AEK2",210,0)
 ; Now do edit
"RTN","A1AEK2",211,0)
 N FDA,DIERR,X,Y,A1AEFOAP,STRM
"RTN","A1AEK2",212,0)
 ; This variable needs to exist to pass input transform on
"RTN","A1AEK2",213,0)
 ;   the SEQUENCE [#.06] field of DHCP PATCH STREAM [#11007.1] file
"RTN","A1AEK2",214,0)
 S A1AEFOAP=""
"RTN","A1AEK2",215,0)
 ; Pull patch stream requested from structured email
"RTN","A1AEK2",216,0)
 S STRM=$$FND(.DATA,"SWITCH TO SUBSCRIPTION")
"RTN","A1AEK2",217,0)
 ; Update the site's SUBSCRIPTION to the new patch stream
"RTN","A1AEK2",218,0)
 S FDA(3,11007.1,STRM_",",.06)=1
"RTN","A1AEK2",219,0)
 D UPDATE^DIE("","FDA(3)")
"RTN","A1AEK2",220,0)
 H 1
"RTN","A1AEK2",221,0)
 ;
"RTN","A1AEK2",222,0)
 ; *** Send out subscription changed failure email ***
"RTN","A1AEK2",223,0)
 ; This will be captured and processed at linetag FCNF4
"RTN","A1AEK2",224,0)
 ; If during unit test, return failure string
"RTN","A1AEK2",225,0)
 N FDATA M FDATA=DATA
"RTN","A1AEK2",226,0)
 S DATA(0)=$G(DATA(0))+1
"RTN","A1AEK2",227,0)
 S DATA(DATA(0))="FORUM ACTION EDIT:::FAILED"
"RTN","A1AEK2",228,0)
 N XMSUBJ S XMSUBJ="SUBSCRIPTION CHNG FAILED"
"RTN","A1AEK2",229,0)
 ; If run as extrinsic change email subject to one
"RTN","A1AEK2",230,0)
 ;  that will not be processed by PRCSMAIL
"RTN","A1AEK2",231,0)
 I $Q S XMSUBJ="SILENT SUBSCR CHNG FAILED"
"RTN","A1AEK2",232,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",233,0)
 I $D(DIERR) D  Q:$Q 1 Q
"RTN","A1AEK2",234,0)
 . N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP)
"RTN","A1AEK2",235,0)
 K DATA M DATA=FDATA
"RTN","A1AEK2",236,0)
 ; ***
"RTN","A1AEK2",237,0)
 ;
"RTN","A1AEK2",238,0)
 ; remember to set COMMENTS field to FORUM ACTION
"RTN","A1AEK2",239,0)
 N IENS,NODE,STRMDT,STRMIEN K DIERR,FDA
"RTN","A1AEK2",240,0)
 S STRMDT=$O(^A1AE(11007.1,STRM,1,"B","A"),-1)
"RTN","A1AEK2",241,0)
 S STRMIEN=$O(^A1AE(11007.1,STRM,1,"B",STRMDT,"A"),-1)
"RTN","A1AEK2",242,0)
 S IENS=STRMIEN_","_STRM_","
"RTN","A1AEK2",243,0)
 N TXT S TXT(0)=1,TXT(1)="FORUM ACTION"
"RTN","A1AEK2",244,0)
 D WP^DIE(11007.12,IENS,2,"KA","TXT")
"RTN","A1AEK2",245,0)
 ;
"RTN","A1AEK2",246,0)
 K FDATA M FDATA=DATA
"RTN","A1AEK2",247,0)
 S DATA(0)=$G(DATA(0))+1
"RTN","A1AEK2",248,0)
 S DATA(DATA(0))="FORUM ACTION EDIT:::FAILED"
"RTN","A1AEK2",249,0)
 N XMSUBJ S XMSUBJ="SUBSCRIPTION CHNG FAILED"
"RTN","A1AEK2",250,0)
 ; If run as extrinsic change email subject to one
"RTN","A1AEK2",251,0)
 ;  that will not be processed by PRCSMAIL
"RTN","A1AEK2",252,0)
 I $Q S XMSUBJ="SILENT FORUM ACTION WP EDIT FAILED"
"RTN","A1AEK2",253,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",254,0)
 I $D(DIERR) D  Q:$Q 1 Q
"RTN","A1AEK2",255,0)
 . N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP)
"RTN","A1AEK2",256,0)
 K DATA M DATA=FDATA
"RTN","A1AEK2",257,0)
 ;
"RTN","A1AEK2",258,0)
 ; Now send SUBSCRIPTION CHNG COMPLETED back through
"RTN","A1AEK2",259,0)
 ;  the G.A1AESTRMCHG mail group which will be processed
"RTN","A1AEK2",260,0)
 ;  through FCNF3
"RTN","A1AEK2",261,0)
 ; Add following text to document
"RTN","A1AEK2",262,0)
 ;   "FORUM ACTION EDIT:::SUCCESSFUL"
"RTN","A1AEK2",263,0)
 ;   "NEW SUBSCRIPTION DATE:::"_Date/time change of subscription
"RTN","A1AEK2",264,0)
 K DATA M DATA=POO
"RTN","A1AEK2",265,0)
 S DATA(0)=$G(DATA(0))+1
"RTN","A1AEK2",266,0)
 S DATA(DATA(0))="FORUM ACTION EDIT:::SUCCESSFUL"
"RTN","A1AEK2",267,0)
 S DATA(0)=$G(DATA(0))+1
"RTN","A1AEK2",268,0)
 S DATA(DATA(0))="NEW SUBSCRIPTION DATE:::"_STRMDT
"RTN","A1AEK2",269,0)
 S DATA(0)=$G(DATA(0))+1
"RTN","A1AEK2",270,0)
 S DATA(DATA(0))="NEW ACTIVE SUBSCRIPTION:::"_STRM
"RTN","A1AEK2",271,0)
 N XMSUBJ S XMSUBJ="SUBSCRIPTION CHNG COMPLETED"
"RTN","A1AEK2",272,0)
 N VAP S VAP="T+100"
"RTN","A1AEK2",273,0)
 ; If run as extrinsic change email subject to one
"RTN","A1AEK2",274,0)
 ;  that will not be processed by PRCSMAIL
"RTN","A1AEK2",275,0)
 I $Q S XMSUBJ="SILENT SUBSCR CHNG COMPLETED",VAP="T+1"
"RTN","A1AEK2",276,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",277,0)
 N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEK2",278,0)
 ;  mailgroup.  This will be picked up by FCNF3
"RTN","A1AEK2",279,0)
 Q:$Q 0 Q
"RTN","A1AEK2",280,0)
 ;
"RTN","A1AEK2",281,0)
 ;
"RTN","A1AEK2",282,0)
 ; SUBSCRIPTION CHNG NOT APPR 
"RTN","A1AEK2",283,0)
 ;  send PERMISSION REFUSED to mailgroup only
"RTN","A1AEK2",284,0)
 ; expected message example
"RTN","A1AEK2",285,0)
 ;    SERVER:::FORUM.OSEHRA.ORG
"RTN","A1AEK2",286,0)
 ;    ACTIVE SUBSCRIPTION:::1
"RTN","A1AEK2",287,0)
 ;    DATE SUBSCRIPTION ACTIVE:::3150305.004002
"RTN","A1AEK2",288,0)
 ;    REQUESTOR DUZ:::799
"RTN","A1AEK2",289,0)
 ;    SWITCH TO SUBSCRIPTION:::10001
"RTN","A1AEK2",290,0)
 ;    SWITCH REQUEST DATE:::3150305.23481
"RTN","A1AEK2",291,0)
 ;    APPROVED:::NO
"RTN","A1AEK2",292,0)
 ;    REJECTION COMMENT:::"_COMMENT HEADER
"RTN","A1AEK2",293,0)
 ;     May be some text conveying reason(s) for rejection
"RTN","A1AEK2",294,0)
FCNF2 ; Accept incoming FORUM rejection to switch streams
"RTN","A1AEK2",295,0)
 I ^XMB(3.9,XMZ,0)'["A1AE:::" Q
"RTN","A1AEK2",296,0)
 ; OK. This is from Unit test so pull text from message
"RTN","A1AEK2",297,0)
 N DATA,I S I=0
"RTN","A1AEK2",298,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","A1AEK2",299,0)
 . S DATA(I)=^XMB(3.9,XMZ,2,I,0),DATA(0)=I
"RTN","A1AEK2",300,0)
 S XMSUBJ="A1AE FCNF2"
"RTN","A1AEK2",301,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",302,0)
 N VAP S VAP="T+1"
"RTN","A1AEK2",303,0)
 N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEK2",304,0)
 Q
"RTN","A1AEK2",305,0)
 ;
"RTN","A1AEK2",306,0)
 ;
"RTN","A1AEK2",307,0)
 ; SUBSCRIPTION CHNG COMPLETED
"RTN","A1AEK2",308,0)
 ;  forward to FORUM
"RTN","A1AEK2",309,0)
 ;    SERVER:::FORUM.OSEHRA.ORG
"RTN","A1AEK2",310,0)
 ;    ACTIVE SUBSCRIPTION:::1
"RTN","A1AEK2",311,0)
 ;    DATE SUBSCRIPTION ACTIVE:::3150305.004002
"RTN","A1AEK2",312,0)
 ;    REQUESTOR DUZ:::799
"RTN","A1AEK2",313,0)
 ;    SWITCH TO SUBSCRIPTION:::10001
"RTN","A1AEK2",314,0)
 ;    SWITCH REQUEST DATE:::3150305.23481
"RTN","A1AEK2",315,0)
 ;    APPROVED:::YES
"RTN","A1AEK2",316,0)
 ;    FORUM ACTION EDIT:::SUCCESSFUL
"RTN","A1AEK2",317,0)
 ;    NEW SUBSCRIPTION DATE:::3150306.123456
"RTN","A1AEK2",318,0)
 ;    NEW ACTIVE SUBSCRIPTION:::1001
"RTN","A1AEK2",319,0)
 ;
"RTN","A1AEK2",320,0)
FCNF3 ; Send to FORUM subscription change completed message
"RTN","A1AEK2",321,0)
 ;   capture text of incoming message from VistA
"RTN","A1AEK2",322,0)
 ;   and forward to FORUM
"RTN","A1AEK2",323,0)
 N UT S UT=(^XMB(3.9,XMZ,0)["A1AE:::")
"RTN","A1AEK2",324,0)
 N ACTSTRM S ACTSTRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEK2",325,0)
 N FRMDMN S FRMDMN=$$GET1^DIQ(11007.1,ACTSTRM_",",.07)
"RTN","A1AEK2",326,0)
 I 'UT N XMY S XMY("G.A1AEFMSC@"_FRMDMN)="" D ENT1^XMD Q
"RTN","A1AEK2",327,0)
 ; Unit Test
"RTN","A1AEK2",328,0)
 ; Copy text of incoming message 
"RTN","A1AEK2",329,0)
 N DATA,I S I=0
"RTN","A1AEK2",330,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","A1AEK2",331,0)
 . S DATA(I)=^XMB(3.9,XMZ,2,I,0),DATA(0)=I
"RTN","A1AEK2",332,0)
 S XMSUBJ="A1AE FCNF3"
"RTN","A1AEK2",333,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",334,0)
 N VAP S VAP="T+1"
"RTN","A1AEK2",335,0)
 N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEK2",336,0)
 Q
"RTN","A1AEK2",337,0)
 ;
"RTN","A1AEK2",338,0)
 ;
"RTN","A1AEK2",339,0)
 ; SUBSCRIPTION CHNG FAILED 
"RTN","A1AEK2",340,0)
 ;  forward to FORUM
"RTN","A1AEK2",341,0)
 ; Copy of authorization with FAIL entry in text
"RTN","A1AEK2",342,0)
 ;   DATA(0)=7
"RTN","A1AEK2",343,0)
 ;   DATA(1)="SERVER:::"_SERVER
"RTN","A1AEK2",344,0)
 ;   DATA(2)="ACTIVE SUBSCRIPTION:::"_ACTIVE SUBSCRIPTION
"RTN","A1AEK2",345,0)
 ;   DATA(3)="DATE SUBSCRIPTION ACTIVE:::"_SUBSCRIPTION ACTIVE DATE
"RTN","A1AEK2",346,0)
 ;   DATA(4)="REQUESTOR DUZ:::"_DUZ
"RTN","A1AEK2",347,0)
 ;   DATA(5)="SWITCH TO SUBSCRIPTION:::"_NEW SUBSCRIPTION REQUESTED
"RTN","A1AEK2",348,0)
 ;   DATA(6)="SWITCH REQUEST DATA:::"_DATE REQUESTED
"RTN","A1AEK2",349,0)
 ;   DATA(7)="APPROVED:::YES"
"RTN","A1AEK2",350,0)
 ;   DATA(8)="***FORUM ACTION TO SWITCH FAILED***:::"_DATE
"RTN","A1AEK2",351,0)
FCNF4 ; Process to FORUM  subscription change failed message
"RTN","A1AEK2",352,0)
 ; Message text should include that from FORUM approval msg
"RTN","A1AEK2",353,0)
 ; Simply forward to Forum
"RTN","A1AEK2",354,0)
 N UT S UT=(^XMB(3.9,XMZ,0)["A1AE:::")
"RTN","A1AEK2",355,0)
 N ACTSTRM S ACTSTRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEK2",356,0)
 N FRMDMN S FRMDMN=$$GET1^DIQ(11007.1,ACTSTRM_",",.07)
"RTN","A1AEK2",357,0)
 I 'UT N XMY S XMY("G.A1AEFMSC@"_FRMDMN)="" D ENT1^XMD Q
"RTN","A1AEK2",358,0)
 ; Unit Test
"RTN","A1AEK2",359,0)
 N DATA,I S I=0
"RTN","A1AEK2",360,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","A1AEK2",361,0)
 . S DATA(I)=^XMB(3.9,XMZ,2,I,0),DATA(0)=I
"RTN","A1AEK2",362,0)
 S XMSUBJ="A1AE FCNF4"
"RTN","A1AEK2",363,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",364,0)
 N VAP S VAP="T+1"
"RTN","A1AEK2",365,0)
 N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEK2",366,0)
 Q
"RTN","A1AEK2",367,0)
 ;
"RTN","A1AEK2",368,0)
 ;
"RTN","A1AEK2",369,0)
 ;  from FORUM example
"RTN","A1AEK2",370,0)
 ;    SERVER:::FORUM.OSEHRA.ORG
"RTN","A1AEK2",371,0)
 ;    ACTIVE SUBSCRIPTION:::1
"RTN","A1AEK2",372,0)
 ;    DATE SUBSCRIPTION ACTIVE:::3150305.004002
"RTN","A1AEK2",373,0)
 ;    REQUESTOR DUZ:::799
"RTN","A1AEK2",374,0)
 ;    SWITCH TO SUBSCRIPTION:::10001
"RTN","A1AEK2",375,0)
 ;    SWITCH REQUEST DATE:::3150305.23481
"RTN","A1AEK2",376,0)
 ;    APPROVED:::YES
"RTN","A1AEK2",377,0)
 ;    FORUM ACTION EDIT:::SUCCESSFUL
"RTN","A1AEK2",378,0)
 ;    NEW SUBSCRIPTION DATE:::3150306.123456
"RTN","A1AEK2",379,0)
 ;    NEW ACTIVE SUBSCRIPTION:::1001
"RTN","A1AEK2",380,0)
 ;    SUBSCRIPTION CHANGE CONFIRMED:::3150307.431245
"RTN","A1AEK2",381,0)
FCNF5 ; Accept message from FORUM confirming subscription change
"RTN","A1AEK2",382,0)
 ; No Action unless Subject of incoming mail contains "A1AE:::"
"RTN","A1AEK2",383,0)
 ;  If so, send another message that has a subject
"RTN","A1AEK2",384,0)
 ;  that will not be trapped by PRCSMAIL server
"RTN","A1AEK2",385,0)
 I ^XMB(3.9,XMZ,0)'["A1AE:::" Q
"RTN","A1AEK2",386,0)
 ; OK.  This is from unit test so pull text from message
"RTN","A1AEK2",387,0)
 N DATA,I S I=0
"RTN","A1AEK2",388,0)
 F  S I=$O(^XMB(3.9,XMZ,2,I)) Q:'I  D
"RTN","A1AEK2",389,0)
 . S DATA(I)=^XMB(3.9,XMZ,2,I,0),DATA(0)=I
"RTN","A1AEK2",390,0)
 S XMSUBJ="A1AE FCNF5"
"RTN","A1AEK2",391,0)
 N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEK2",392,0)
 N VAP S VAP="T+1"
"RTN","A1AEK2",393,0)
 N X S X=$$SNDMAIL(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEK2",394,0)
 Q
"RTN","A1AEK2",395,0)
 ;
"RTN","A1AEK2",396,0)
 ;
"RTN","A1AEK2",397,0)
 ;send mail from postmaster to mailgroup
"RTN","A1AEK2",398,0)
 ;ENTER
"RTN","A1AEK2",399,0)
 ;  XMSUBJ  = Subject of email
"RTN","A1AEK2",400,0)
 ;  DATA    = Data array for text
"RTN","A1AEK2",401,0)
 ;  MAILGRP = Mailgroup recipient
"RTN","A1AEK2",402,0)
 ;RETURN
"RTN","A1AEK2",403,0)
 ;  0^COMMENT if error, XMZ if mail sent
"RTN","A1AEK2",404,0)
SNDMAIL(XMSUBJ,DATA,MAILGRP,VAP) ;
"RTN","A1AEK2",405,0)
 N X,Y,DI
"RTN","A1AEK2",406,0)
 ; Set DUZ to Postmaster
"RTN","A1AEK2",407,0)
 N DUZ S DUZ=0.5 D DUZ^XUP(DUZ)
"RTN","A1AEK2",408,0)
 N SNDAPP,XMERR
"RTN","A1AEK2",409,0)
 N XMTO S XMTO(MAILGRP)=""
"RTN","A1AEK2",410,0)
 N XMZ S XMZ=""
"RTN","A1AEK2",411,0)
 N XMDUZ S XMDUZ=0.5
"RTN","A1AEK2",412,0)
 N XMBODY S XMBODY="DATA"
"RTN","A1AEK2",413,0)
 S VAP=$S($D(VAP):VAP,1:"T+100")
"RTN","A1AEK2",414,0)
 N XMINSTR S XMINSTR("VAPOR")=VAP
"RTN","A1AEK2",415,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,.XMINSTR,.XMZ)
"RTN","A1AEK2",416,0)
 Q:$D(XMERR) "0^MSG SEND ERROR(S) ENCOUNTERED"
"RTN","A1AEK2",417,0)
 Q XMZ
"RTN","A1AEK2",418,0)
 ;
"RTN","A1AEK2",419,0)
 ;
"RTN","A1AEK2",420,0)
 ; ENTER
"RTN","A1AEK2",421,0)
 ;    DATA   = array of email's text by reference
"RTN","A1AEK2",422,0)
 ;    HDR    = structured text in email to find
"RTN","A1AEK2",423,0)
 ; RETURN
"RTN","A1AEK2",424,0)
 ;    Data following HDR identified in array
"RTN","A1AEK2",425,0)
 ;      - or NULL if HDR not found
"RTN","A1AEK2",426,0)
 ; example
"RTN","A1AEK2",427,0)
 ;    DATA(3)="DATE SUBSCRIPTION ACTIVE:::"_3150401.123456
"RTN","A1AEK2",428,0)
 ;    HDR ="DATE SUBSCRIPTION ACTIVE"
"RTN","A1AEK2",429,0)
 ;    3150401.123456 returned to caller
"RTN","A1AEK2",430,0)
FND(DATA,HDR) ;Find HDR in DATA array, return data
"RTN","A1AEK2",431,0)
 N NODE,RSLT S NODE=$NA(DATA),RSLT=""
"RTN","A1AEK2",432,0)
 F  S NODE=$Q(@NODE) Q:NODE'["DATA("  Q:($P(@NODE,":::")=HDR)
"RTN","A1AEK2",433,0)
 I NODE["DATA(" D
"RTN","A1AEK2",434,0)
 . S RSLT=$P(@NODE,":::",2)
"RTN","A1AEK2",435,0)
 Q RSLT
"RTN","A1AEK2",436,0)
 ;
"RTN","A1AEK2",437,0)
 ;
"RTN","A1AEK2",438,0)
FMSUBJ ;;SUBSCRIPTION CHNG REQUEST^FCNF0
"RTN","A1AEK2",439,0)
 ;;SUBSCRIPTION CHNG APPROVED^FCNF1
"RTN","A1AEK2",440,0)
 ;;SUBSCRIPTION CHNG NOT APPROVED^FCNF2
"RTN","A1AEK2",441,0)
 ;;SUBSCRIPTION CHNG COMPLETED^FCNF3
"RTN","A1AEK2",442,0)
 ;;SUBSCRIPTION CHNG FAILED^FCNF4
"RTN","A1AEK2",443,0)
 ;;SUBSCRIPTION CHNG CONFIRMED^FCNF5
"RTN","A1AEK2",444,0)
 ;;*END*
"RTN","A1AEK2",445,0)
 ;
"RTN","A1AEK2",446,0)
 ;
"RTN","A1AEK2",447,0)
EOR ; end of routine A1AEK2
"RTN","A1AEUK1")
0^46^B167715864
"RTN","A1AEUK1",1,0)
A1AEUK1 ;ven/lgc,jli-unit tests for A1AEK1 ; 6/4/15 7:35pm
"RTN","A1AEUK1",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 35
"RTN","A1AEUK1",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUK1",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUK1",5,0)
 ;
"RTN","A1AEUK1",6,0)
 ;
"RTN","A1AEUK1",7,0)
 ;primary change history
"RTN","A1AEUK1",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUK1",9,0)
 ;
"RTN","A1AEUK1",10,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUK1",11,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUK1",12,0)
 Q
"RTN","A1AEUK1",13,0)
 ;
"RTN","A1AEUK1",14,0)
STARTUP ;
"RTN","A1AEUK1",15,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUK1",16,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUK1",17,0)
 . S A1AEFAIL=1
"RTN","A1AEUK1",18,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUK1",19,0)
 . W !," Unable to perform testing."
"RTN","A1AEUK1",20,0)
 ;
"RTN","A1AEUK1",21,0)
 L +^A1AE(11005):1 I '$T D  Q
"RTN","A1AEUK1",22,0)
 . S A1AEFAIL=1
"RTN","A1AEUK1",23,0)
 . W !,"Unable to obtain lock on PATCHES [#11005] file"
"RTN","A1AEUK1",24,0)
 . W !," Unable to perform testing."
"RTN","A1AEUK1",25,0)
 Q
"RTN","A1AEUK1",26,0)
 ;
"RTN","A1AEUK1",27,0)
SHUTDOWN L -^XPD(9.6):1
"RTN","A1AEUK1",28,0)
 L -^A1AE(11005):1
"RTN","A1AEUK1",29,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUK1",30,0)
 K A1AEFAIL
"RTN","A1AEUK1",31,0)
 Q
"RTN","A1AEUK1",32,0)
 ;
"RTN","A1AEUK1",33,0)
 ; Testing
"RTN","A1AEUK1",34,0)
 ;  A1AEK1             UTP60
"RTN","A1AEUK1",35,0)
 ;  EN^A1AEK1          UTP61
"RTN","A1AEUK1",36,0)
 ;  SSEKSY^A1AEK1      UTP62
"RTN","A1AEUK1",37,0)
 ;  SSEKSN^A1AEK1      UTP63
"RTN","A1AEUK1",38,0)
 ;  GLSTINST^A1AEK1    UTP64
"RTN","A1AEUK1",39,0)
 ;  MISSING^A1AEK1     UTP65
"RTN","A1AEUK1",40,0)
 ;  SHOWMSQN^A1AEK1    UTP66
"RTN","A1AEUK1",41,0)
 ;  ANSWQ^A1AEK1       UTP67
"RTN","A1AEUK1",42,0)
 ;  SSEKS^A1AEK1       UTP68
"RTN","A1AEUK1",43,0)
 ;  SITEVAR^A1AEK1     UTP69
"RTN","A1AEUK1",44,0)
 ;  KIDVAR^A1AEK1      UTP70
"RTN","A1AEUK1",45,0)
 ;  ACTVERS^A1AEK1     UTP71
"RTN","A1AEUK1",46,0)
 ;  ERRMSG^A1AEK1      UTP72
"RTN","A1AEUK1",47,0)
 ;  WARN^A1AEK1        UTP73
"RTN","A1AEUK1",48,0)
 ;
"RTN","A1AEUK1",49,0)
 ;A1AEK1
"RTN","A1AEUK1",50,0)
UTP60 ; Test entering routine at top
"RTN","A1AEUK1",51,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",52,0)
 . K ^XTMP($J,"A1AEK1 FROM TOP")
"RTN","A1AEUK1",53,0)
 . D ^A1AEK1
"RTN","A1AEUK1",54,0)
 . S X=$D(^XTMP($J,"A1AEK1 FROM TOP"))
"RTN","A1AEUK1",55,0)
 . D CHKEQ^%ut(1,X,"Testing calling A1AEK1 from Top FAILED!")
"RTN","A1AEUK1",56,0)
 . Q
"RTN","A1AEUK1",57,0)
 ;
"RTN","A1AEUK1",58,0)
 ;EN^A1AEK1
"RTN","A1AEUK1",59,0)
UTP61 ; Test suitability of patch for install
"RTN","A1AEUK1",60,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",61,0)
 . N X
"RTN","A1AEUK1",62,0)
 . N SV D SITEVAR^A1AEK1(.SV)
"RTN","A1AEUK1",63,0)
 . S SV("ACTPKGV")=$$ACTVERS^A1AEK1("DG")
"RTN","A1AEUK1",64,0)
 . N NODE S NODE=$NA(^DIC(9.4,"A1AESEQ","DG",SV("ACTPKGV")))
"RTN","A1AEUK1",65,0)
 . S NODE=$Q(@NODE)
"RTN","A1AEUK1",66,0)
 . N XPDT S XPDT(1)="1234^"_$QS(NODE,7)
"RTN","A1AEUK1",67,0)
 . S ^XTMP("XPDI",1234,"A1AEUK1",4321,0)=$QS(NODE,7)_"^DG^0^3080108^y"
"RTN","A1AEUK1",68,0)
 . N KV D KIDVAR^A1AEK1(.KV,.XPDT,1)
"RTN","A1AEUK1",69,0)
 . N A1AEHDR S A1AEHDR="Released "_KV("PTCHNM")_"SEQ #681"
"RTN","A1AEUK1",70,0)
 . S X=999
"RTN","A1AEUK1",71,0)
 . N MYDT S MYDT=DTIME,DTIME=1
"RTN","A1AEUK1",72,0)
 . S X=$$EN^A1AEK1(A1AEHDR)
"RTN","A1AEUK1",73,0)
 . S DTIME=MYDT
"RTN","A1AEUK1",74,0)
 . S X=($G(X)<2)
"RTN","A1AEUK1",75,0)
 . D CHKEQ^%ut(1,X,"Testing suitability of patch for install FAILED!")
"RTN","A1AEUK1",76,0)
 . Q
"RTN","A1AEUK1",77,0)
 ;
"RTN","A1AEUK1",78,0)
 ;SSEKSY^A1AEK1
"RTN","A1AEUK1",79,0)
UTP62 ; Test procedures when Patch and Site Stream match
"RTN","A1AEUK1",80,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",81,0)
 . N X
"RTN","A1AEUK1",82,0)
 . N SV D SITEVAR^A1AEK1(.SV)
"RTN","A1AEUK1",83,0)
 . S SV("ACTPKGV")=$$ACTVERS^A1AEK1("DG")
"RTN","A1AEUK1",84,0)
 . N NODE S NODE=$NA(^DIC(9.4,"A1AESEQ","DG",SV("ACTPKGV")))
"RTN","A1AEUK1",85,0)
 . S NODE=$Q(@NODE)
"RTN","A1AEUK1",86,0)
 . N XPDT S XPDT(1)="1234^"_$QS(NODE,7)
"RTN","A1AEUK1",87,0)
 . S ^XTMP("XPDI",1234,"A1AEUK1",4321,0)=$QS(NODE,7)_"^DG^0^3080108^y"
"RTN","A1AEUK1",88,0)
 . N KV D KIDVAR^A1AEK1(.KV,.XPDT,1)
"RTN","A1AEUK1",89,0)
 . K ^XTMP("XPDI",1234,"A1AEUK1",4321,0)
"RTN","A1AEUK1",90,0)
 . N SSEKS S SSEKS=$$SSEKS^A1AEK1(.SV,.KV)
"RTN","A1AEUK1",91,0)
 . N ABORT,MSSEQ S (ABORT,MSSEQ(0))=0
"RTN","A1AEUK1",92,0)
 . S (X,ABORT)=$$SSEKSY^A1AEK1(.MSSEQ,.ABORT)
"RTN","A1AEUK1",93,0)
 .; ABORT should return unchanged. No missing back patches
"RTN","A1AEUK1",94,0)
 . I ABORT D  Q
"RTN","A1AEUK1",95,0)
 .. D CHKEQ^%ut(0,X,"Testing KIDS/Site Stream Match FAILED!")
"RTN","A1AEUK1",96,0)
 .; Missing back patches, site hasn't changed Streams
"RTN","A1AEUK1",97,0)
 . N STRMCHNG S STRMCHNG=0
"RTN","A1AEUK1",98,0)
 . S MSSEQ(KV("PTCHSTRM"),1)=""
"RTN","A1AEUK1",99,0)
 . N MYDT S MYDT=DTIME,DTIME=1
"RTN","A1AEUK1",100,0)
 . S (X,ABORT)=$$SSEKSY^A1AEK1(.MSSEQ,.ABORT)
"RTN","A1AEUK1",101,0)
 . S DTIME=MYDT
"RTN","A1AEUK1",102,0)
 . I ABORT D  Q
"RTN","A1AEUK1",103,0)
 .. D CHKEQ^%ut(0,X,"Testing KIDS/Site Stream Match FAILED!")
"RTN","A1AEUK1",104,0)
 .; Missing back patches, site has changed streams
"RTN","A1AEUK1",105,0)
 . S STRMCHNG=1
"RTN","A1AEUK1",106,0)
 . S MYDT=DTIME,DTIME=1
"RTN","A1AEUK1",107,0)
 . S (X,ABORT)=$$SSEKSY^A1AEK1(.MSSEQ,.ABORT)
"RTN","A1AEUK1",108,0)
 . S DTIME=MYDT
"RTN","A1AEUK1",109,0)
 . D CHKEQ^%ut(1,X,"Testing KIDS/Site Stream Match FAILED!")
"RTN","A1AEUK1",110,0)
 . Q
"RTN","A1AEUK1",111,0)
 ;
"RTN","A1AEUK1",112,0)
 ;SSEKSN^A1AEK1
"RTN","A1AEUK1",113,0)
UTP63 ; Test procedures when Patch and Site Stream DO NOT match
"RTN","A1AEUK1",114,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",115,0)
 . N X
"RTN","A1AEUK1",116,0)
 . N SV D SITEVAR^A1AEK1(.SV)
"RTN","A1AEUK1",117,0)
 . S SV("ACTPKGV")=$$ACTVERS^A1AEK1("DG")
"RTN","A1AEUK1",118,0)
 . N NODE S NODE=$NA(^DIC(9.4,"A1AESEQ","DG",SV("ACTPKGV")))
"RTN","A1AEUK1",119,0)
 . S NODE=$Q(@NODE)
"RTN","A1AEUK1",120,0)
 . N XPDT S XPDT(1)="1234^"_$QS(NODE,7)
"RTN","A1AEUK1",121,0)
 . S ^XTMP("XPDI",1234,"A1AEUK1",4321,0)=$QS(NODE,7)_"^DG^0^3080108^y"
"RTN","A1AEUK1",122,0)
 . N KV D KIDVAR^A1AEK1(.KV,.XPDT,1)
"RTN","A1AEUK1",123,0)
 . K ^XTMP("XPDI",1234,"A1AEUK1",4321,0)
"RTN","A1AEUK1",124,0)
 . N SSEKS S SSEKS=0
"RTN","A1AEUK1",125,0)
 . N ABORT,MSSEQ S (ABORT,MSSEQ(0))=0
"RTN","A1AEUK1",126,0)
 . S KV("PTCHSTRM")=9 ; No such patch stream exists
"RTN","A1AEUK1",127,0)
 . N MYDT S MYDT=DTIME,DTIME=1
"RTN","A1AEUK1",128,0)
 . S (X,ABORT)=$$SSEKSN^A1AEK1(.MSSEQ,.ABORT)
"RTN","A1AEUK1",129,0)
 . S DTIME=MYDT
"RTN","A1AEUK1",130,0)
 . I 'ABORT D  Q
"RTN","A1AEUK1",131,0)
 .. D CHKEQ^%ut(1,X,"Testing KIDS/Site Stream NOT Match FAILED!")
"RTN","A1AEUK1",132,0)
 . N PTCINST S PTCINST(KV("PTCHSTRM"),KV("PKGPRFX"))=""
"RTN","A1AEUK1",133,0)
 . S KV("PTCHSQN")=99
"RTN","A1AEUK1",134,0)
 . N FI S FI(SV("STRM"))=9
"RTN","A1AEUK1",135,0)
 . S DTIME=1
"RTN","A1AEUK1",136,0)
 . S (X,ABORT)=$$SSEKSN^A1AEK1(.MSSEQ,.ABORT)
"RTN","A1AEUK1",137,0)
 . S DTIME=MYDT
"RTN","A1AEUK1",138,0)
 . I 'ABORT D  Q
"RTN","A1AEUK1",139,0)
 .. D CHKEQ^%ut(1,X,"Testing KIDS/Site Stream NOT Match FAILED!")
"RTN","A1AEUK1",140,0)
 . S KV("PTCHSQN")=9
"RTN","A1AEUK1",141,0)
 . S FI(SV("STRM"))=99
"RTN","A1AEUK1",142,0)
 . S DTIME=1
"RTN","A1AEUK1",143,0)
 . S (X,ABORT)=$$SSEKSN^A1AEK1(.MSSEQ,.ABORT)
"RTN","A1AEUK1",144,0)
 . S DTIME=MYDT
"RTN","A1AEUK1",145,0)
 . D CHKEQ^%ut(0,X,"Testing KIDS/Site Stream NOT Match FAILED!")
"RTN","A1AEUK1",146,0)
 . Q
"RTN","A1AEUK1",147,0)
 ;
"RTN","A1AEUK1",148,0)
 ;
"RTN","A1AEUK1",149,0)
 ;GLSTINST^A1AEK1
"RTN","A1AEUK1",150,0)
UTP64 ; Test building array of installed patches for this package
"RTN","A1AEUK1",151,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK1",152,0)
 . N PKGPRFX,PKGVER,X S X=1
"RTN","A1AEUK1",153,0)
 . S PKGPRFX="DG"
"RTN","A1AEUK1",154,0)
 . S PKGVER=$$ACTVERS^A1AEK1(PKGPRFX)
"RTN","A1AEUK1",155,0)
 .; Run API with POO variables
"RTN","A1AEUK1",156,0)
 . N POO,POOSTCH,LIPOO,FIPOO
"RTN","A1AEUK1",157,0)
 . D GLSTINST^A1AEK1(PKGPRFX,PKGVER,.POO,.POOSTCH,.LIPOO,.FIPOO)
"RTN","A1AEUK1",158,0)
 .; Now build new set of variables
"RTN","A1AEUK1",159,0)
 . N PTCINST,STRMCHNG,LI,FI
"RTN","A1AEUK1",160,0)
 . S STRMCHNG=0
"RTN","A1AEUK1",161,0)
 . S PTCINST(0)=0
"RTN","A1AEUK1",162,0)
 . N NODE S NODE=$NA(^DIC(9.4,"A1AESEQ",PKGPRFX,PKGVER))
"RTN","A1AEUK1",163,0)
 . N STRM,SC,SNODE S SC=0,SNODE=$P(NODE,")")
"RTN","A1AEUK1",164,0)
 . F  S NODE=$Q(@NODE) Q:NODE'[SNODE  D
"RTN","A1AEUK1",165,0)
 .. I ($G(STRM)'=$QS(NODE,5)) S STRM=$QS(NODE,5) D
"RTN","A1AEUK1",166,0)
 ... S FI($QS(NODE,5))=$QS(NODE,6)
"RTN","A1AEUK1",167,0)
 .. S PTCINST($QS(NODE,5),$QS(NODE,6),PKGPRFX,PKGVER,$QS(NODE,7))=""
"RTN","A1AEUK1",168,0)
 .. S LI($QS(NODE,5))=$QS(NODE,6)
"RTN","A1AEUK1",169,0)
 .. S PTCINST(0)=$G(PTCINST(0))+1
"RTN","A1AEUK1",170,0)
 .. S SC=$S(SC=0:SC=$QS(NODE,5),SC=$QS(NODE,5):$QS(NODE,5),1:"C")
"RTN","A1AEUK1",171,0)
 . S STRMCHNG=$S(SC="C":1,1:0)
"RTN","A1AEUK1",172,0)
 .; Now check arrays
"RTN","A1AEUK1",173,0)
 . N NA,NB S NA=$NA(POO),NB=$NA(PTCINST)
"RTN","A1AEUK1",174,0)
 . S X=1
"RTN","A1AEUK1",175,0)
 . F  S NA=$Q(@NA),NB=$Q(@NB) Q:NA'["POO"  Q:NB'["PTSA"  D  Q:'X
"RTN","A1AEUK1",176,0)
 .. I $QS(NA,1)'=$QS(NB,1) S X=0
"RTN","A1AEUK1",177,0)
 .. I $QS(NA,2)'=$QS(NB,2) S X=0
"RTN","A1AEUK1",178,0)
 .. I @NA'=@NB S X=0
"RTN","A1AEUK1",179,0)
 .; X=1 shows full match
"RTN","A1AEUK1",180,0)
 . I 'X D  Q
"RTN","A1AEUK1",181,0)
 .. D CHKEQ^%ut(1,X,"Test array of installed patches FAILED!")
"RTN","A1AEUK1",182,0)
 . S NA=$NA(FIPOO),NB=$NA(FI)
"RTN","A1AEUK1",183,0)
 . F  S NA=$Q(@NA),NB=$Q(@NB) Q:NA'["POO"  Q:NB'["PTSA"  D  Q:'X
"RTN","A1AEUK1",184,0)
 .. I $QS(NA,1)'=$QS(NB,1) S X=0
"RTN","A1AEUK1",185,0)
 .. I $QS(NA,2)'=$QS(NB,2) S X=0
"RTN","A1AEUK1",186,0)
 .. I @NA'=@NB S X=0
"RTN","A1AEUK1",187,0)
 .; X=1 shows full match
"RTN","A1AEUK1",188,0)
 . I 'X D  Q
"RTN","A1AEUK1",189,0)
 .. D CHKEQ^%ut(1,X,"Test array of installed patches FAILED!")
"RTN","A1AEUK1",190,0)
 . S NA=$NA(LIPOO),NB=$NA(LI)
"RTN","A1AEUK1",191,0)
 . F  S NA=$Q(@NA),NB=$Q(@NB) Q:NA'["POO"  Q:NB'["PTSA"  D  Q:'X
"RTN","A1AEUK1",192,0)
 .. I $QS(NA,1)'=$QS(NB,1) S X=0
"RTN","A1AEUK1",193,0)
 .. I $QS(NA,2)'=$QS(NB,2) S X=0
"RTN","A1AEUK1",194,0)
 .. I @NA'=@NB S X=0
"RTN","A1AEUK1",195,0)
 .; X=1 shows full match
"RTN","A1AEUK1",196,0)
 . I 'X D  Q
"RTN","A1AEUK1",197,0)
 .. D CHKEQ^%ut(1,X,"Test array of installed patches FAILED!")
"RTN","A1AEUK1",198,0)
 .;
"RTN","A1AEUK1",199,0)
 . S:X X=(POOSTCH=STRMCHNG)
"RTN","A1AEUK1",200,0)
 . D CHKEQ^%ut(1,X,"Test array of installed patches FAILED!")
"RTN","A1AEUK1",201,0)
 Q
"RTN","A1AEUK1",202,0)
 ;
"RTN","A1AEUK1",203,0)
 ;MISSING^A1AEK1
"RTN","A1AEUK1",204,0)
UTP65 ; Test building missing patches array
"RTN","A1AEUK1",205,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK1",206,0)
 . N PKGPRFX,PKGVER,PTCHSQN,MSSEQ,POO
"RTN","A1AEUK1",207,0)
 . S PKGPRFX="DG",PKGVER=5.3,PTCHSQN=100
"RTN","A1AEUK1",208,0)
 . D MISSING^A1AEK1(PKGPRFX,PKGVER,PTCHSQN,.MSSEQ)
"RTN","A1AEUK1",209,0)
 . M POO=MSSEQ K MSSEQ
"RTN","A1AEUK1",210,0)
 . N STRM,SEQN,STRMABB,PTCHNM S STRMABB=""
"RTN","A1AEUK1",211,0)
 . F  S STRMABB=$O(^A1AE(11007.1,"C",STRMABB)) Q:STRMABB=""  D
"RTN","A1AEUK1",212,0)
 .. S STRM=+$O(^A1AE(11007.1,"C",STRMABB,0)) Q:'STRM
"RTN","A1AEUK1",213,0)
 .. F SEQN=1:1:PTCHSQN D
"RTN","A1AEUK1",214,0)
 ... I $D(^DIC(9.4,"A1AESEQ",PKGPRFX,PKGVER,STRM,SEQN)) Q
"RTN","A1AEUK1",215,0)
 ... S MSSEQ(STRM,SEQN)=""
"RTN","A1AEUK1",216,0)
 .; Now compare MSSEQ and POO
"RTN","A1AEUK1",217,0)
 . N NODE,X S NODE=$NA(MSSEQ),X=1
"RTN","A1AEUK1",218,0)
 . F  S NODE=$Q(@NODE) Q:NODE'["MSSEQ"  D  Q:'X
"RTN","A1AEUK1",219,0)
 .. I '$D(POO($QS(NODE,1),$QS(NODE,2))) S X=0 Q
"RTN","A1AEUK1",220,0)
 .. K POO($QS(NODE,1),$QS(NODE,2))
"RTN","A1AEUK1",221,0)
 . I $D(POO) S X=0
"RTN","A1AEUK1",222,0)
 . D CHKEQ^%ut(1,X,"Testing Creating Missing SEQ # array FAILED!")
"RTN","A1AEUK1",223,0)
 Q
"RTN","A1AEUK1",224,0)
 ;
"RTN","A1AEUK1",225,0)
 ;SHOWMSQN^A1AEK1
"RTN","A1AEUK1",226,0)
UTP66 ; Test showing missing patches
"RTN","A1AEUK1",227,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK1",228,0)
 . N MSA S MSA(0)=0
"RTN","A1AEUK1",229,0)
 . N STRM S STRM=99
"RTN","A1AEUK1",230,0)
 . N MSSEQ S MSSEQ(0)=1,MSSEQ(99,33)=""
"RTN","A1AEUK1",231,0)
 . S MSA=$$SHOWMSQN^A1AEK1(.MSSEQ,"DG",STRM,0,.MSA)
"RTN","A1AEUK1",232,0)
 . S X=($D(MSA)>1)
"RTN","A1AEUK1",233,0)
 . D CHKEQ^%ut(1,X,"Testing Listing Missing SEQ # FAILED!")
"RTN","A1AEUK1",234,0)
 Q
"RTN","A1AEUK1",235,0)
 ;
"RTN","A1AEUK1",236,0)
 ;ANSWQ^A1AEK1
"RTN","A1AEUK1",237,0)
UTP67 ; Test No/Yes query
"RTN","A1AEUK1",238,0)
 I '$G(A1AEFAIL) D
"RTN","A1AEUK1",239,0)
 . N X,MYDT S MYDT=DTIME S DTIME=1
"RTN","A1AEUK1",240,0)
 . S X=$$ANSWQ^A1AEK1
"RTN","A1AEUK1",241,0)
 . S DTIME=MYDT
"RTN","A1AEUK1",242,0)
 . D CHKEQ^%ut(0,X,"Testing No/Yes query FAILED!")
"RTN","A1AEUK1",243,0)
 Q
"RTN","A1AEUK1",244,0)
 ;
"RTN","A1AEUK1",245,0)
 ;SSEKS^A1AEK1
"RTN","A1AEUK1",246,0)
UTP68 ; Test variable for Site = KIDS Stream
"RTN","A1AEUK1",247,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",248,0)
 . N KV,SV S KV("PTCHSTRM")=1,SV("STRM")=1
"RTN","A1AEUK1",249,0)
 . S X=$$SSEKS^A1AEK1(.SV,.KV)
"RTN","A1AEUK1",250,0)
 . S:X KV("PTCHSTRM")=1,SV("STRM")=10001
"RTN","A1AEUK1",251,0)
 . S:X X='$$SSEKS^A1AEK1(.SV,.KV)
"RTN","A1AEUK1",252,0)
 . D CHKEQ^%ut(1,X,"Test variable for Site = KIDS Stream FAILED!")
"RTN","A1AEUK1",253,0)
 . Q
"RTN","A1AEUK1",254,0)
 ;
"RTN","A1AEUK1",255,0)
 ;SITEVAR^A1AEK1
"RTN","A1AEUK1",256,0)
UTP69 ; Test building relavent Site Variables
"RTN","A1AEUK1",257,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",258,0)
 . N SV D SITEVAR^A1AEK1(.SV)
"RTN","A1AEUK1",259,0)
 . N STRM S STRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEUK1",260,0)
 . I STRM S X=(SV("STRM")=STRM)
"RTN","A1AEUK1",261,0)
 . I X S X=(SV("STRMNM")=$P($G(^A1AE(11007.1,STRM,0)),"^"))
"RTN","A1AEUK1",262,0)
 . I X S X=(SV("STRMDT")=$O(^A1AE(11007.1,STRM,1,"B","A"),-1))
"RTN","A1AEUK1",263,0)
 . I X S X=(SV("STRMPRFX")=$$GET1^DIQ(11007.1,STRM,.05))
"RTN","A1AEUK1",264,0)
 . D CHKEQ^%ut(1,X,"Test building relavent Site Variables FAILED!")
"RTN","A1AEUK1",265,0)
 . Q
"RTN","A1AEUK1",266,0)
 ;
"RTN","A1AEUK1",267,0)
 ;KIDVAR^A1AEK1
"RTN","A1AEUK1",268,0)
UTP70 ; Test building relavent KIDS Variables
"RTN","A1AEUK1",269,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",270,0)
 . N X
"RTN","A1AEUK1",271,0)
 . N SV D SITEVAR^A1AEK1(.SV)
"RTN","A1AEUK1",272,0)
 . S SV("ACTPKGV")=$$ACTVERS^A1AEK1("DG")
"RTN","A1AEUK1",273,0)
 . N NODE S NODE=$NA(^DIC(9.4,"A1AESEQ","DG",SV("ACTPKGV")))
"RTN","A1AEUK1",274,0)
 . S NODE=$Q(@NODE)
"RTN","A1AEUK1",275,0)
 . N XPDT S XPDT(1)="1234^"_$QS(NODE,7)
"RTN","A1AEUK1",276,0)
 . S ^XTMP("XPDI",1234,"A1AEUK1",4321,0)=$QS(NODE,7)_"^DG^0^3080108^y"
"RTN","A1AEUK1",277,0)
 . N KV D KIDVAR^A1AEK1(.KV,.XPDT,1)
"RTN","A1AEUK1",278,0)
 . K ^XTMP("XPDI",1234,"A1AEUK1",4321,0)
"RTN","A1AEUK1",279,0)
 . N PTCHNM S PTCHNM=$P(XPDT(1),"^",2)
"RTN","A1AEUK1",280,0)
 . S X=(PTCHNM=KV("PTCHNM"))
"RTN","A1AEUK1",281,0)
 . S:X X=(KV("PKGPRFX")=$P(PTCHNM,"*"))
"RTN","A1AEUK1",282,0)
 . S:X X=(KV("PTCHVER")=$P(PTCHNM,"*",2))
"RTN","A1AEUK1",283,0)
 . S:X X=(KV("PTCHNBR")=$P(PTCHNM,"*",3))
"RTN","A1AEUK1",284,0)
 . N I,KVPTCS S I=0
"RTN","A1AEUK1",285,0)
 . F  S I=$O(^A1AE(11007.1,I)) Q:'I  Q:(I>KV("PTCHNBR"))  D
"RTN","A1AEUK1",286,0)
 .. S KVPTCS=I
"RTN","A1AEUK1",287,0)
 . S:X X=(KV("PTCHSTRM")=KVPTCS)
"RTN","A1AEUK1",288,0)
 . S:X X=(KV("PTCHRDT")=3080108)
"RTN","A1AEUK1",289,0)
 . D CHKEQ^%ut(1,X,"Test building relavent KIDS Variables FAILED!")
"RTN","A1AEUK1",290,0)
 . Q
"RTN","A1AEUK1",291,0)
 ;
"RTN","A1AEUK1",292,0)
 ;
"RTN","A1AEUK1",293,0)
 ;ACTVERS^A1AEK1
"RTN","A1AEUK1",294,0)
UTP71 ; Test returning Site's Active Version of a package
"RTN","A1AEUK1",295,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",296,0)
 . N PKGPRFX S PKGPRFX="DG"
"RTN","A1AEUK1",297,0)
 . N I S I=$O(^DIC(9.4,"C",PKGPRFX,0))
"RTN","A1AEUK1",298,0)
 . N X S X=($G(I)>0)
"RTN","A1AEUK1",299,0)
 . N DGVER
"RTN","A1AEUK1",300,0)
 . S:X DGVER=$$GET1^DIQ(9.4,I_",",13)
"RTN","A1AEUK1",301,0)
 . S:X X=($G(DGVER)>0)
"RTN","A1AEUK1",302,0)
 . S:X X=(DGVER=$$ACTVERS^A1AEK1("DG"))
"RTN","A1AEUK1",303,0)
 . D CHKEQ^%ut(1,X,"Test finding Site's Active PKG version  FAILED!")
"RTN","A1AEUK1",304,0)
 . Q
"RTN","A1AEUK1",305,0)
 ;
"RTN","A1AEUK1",306,0)
 ;ERRMSG^A1AEK1
"RTN","A1AEUK1",307,0)
UTP72 ; Test building appropriate error message
"RTN","A1AEUK1",308,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",309,0)
 . N MSG,STRNG,X
"RTN","A1AEUK1",310,0)
 . S MSG(1)="Couln't ascertain active package version on system^93"
"RTN","A1AEUK1",311,0)
 . S MSG(2)="Does not represent current package version^93"
"RTN","A1AEUK1",312,0)
 . S MSG(3)="Earler SEQUENCE #'d patches for package not installed^93"
"RTN","A1AEUK1",313,0)
 . S MSG(4)="KIDS install not for your package STREAM^93"
"RTN","A1AEUK1",314,0)
 .; Test finding active package version
"RTN","A1AEUK1",315,0)
 . S MSG=$P($T(PKGVERR^A1AEK1),";;",2)
"RTN","A1AEUK1",316,0)
 . S STRNG=$$ERRMSG^A1AEK1(MSG,93)
"RTN","A1AEUK1",317,0)
 . S X=(STRNG=MSG(1))
"RTN","A1AEUK1",318,0)
 .; Test site not have KIDS package version 
"RTN","A1AEUK1",319,0)
 . S:X MSG=$P($T(VRSNERR^A1AEK1),";;",2)
"RTN","A1AEUK1",320,0)
 . S:X STRNG=$$ERRMSG^A1AEK1(MSG,93)
"RTN","A1AEUK1",321,0)
 . S:X X=(STRNG=MSG(2))
"RTN","A1AEUK1",322,0)
 .; Test earlier SEQ# patch installation
"RTN","A1AEUK1",323,0)
 . S:X MSG=$P($T(MSNGSQN^A1AEK1),";;",2)
"RTN","A1AEUK1",324,0)
 . S:X STRNG=$$ERRMSG^A1AEK1(MSG,93)
"RTN","A1AEUK1",325,0)
 . S:X X=(STRNG=MSG(3))
"RTN","A1AEUK1",326,0)
 .; Test not for your  package stream
"RTN","A1AEUK1",327,0)
 . S:X MSG=$P($T(WRNGSTRM^A1AEK1),";;",2)
"RTN","A1AEUK1",328,0)
 . S:X STRNG=$$ERRMSG^A1AEK1(MSG,93)
"RTN","A1AEUK1",329,0)
 . S:X X=(STRNG=MSG(4))
"RTN","A1AEUK1",330,0)
 .;
"RTN","A1AEUK1",331,0)
 .D CHKEQ^%ut(1,X,"Test building appropriate error message FAILED!")
"RTN","A1AEUK1",332,0)
 . Q
"RTN","A1AEUK1",333,0)
 ;
"RTN","A1AEUK1",334,0)
 ;WARN^A1AEK1
"RTN","A1AEUK1",335,0)
UTP73 ; Test building Warning message
"RTN","A1AEUK1",336,0)
 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK1",337,0)
 . N STRNG S STRNG=$$WARN^A1AEK1(1)
"RTN","A1AEUK1",338,0)
 . S X=(STRNG="*END*")
"RTN","A1AEUK1",339,0)
 . D CHKEQ^%ut(1,X,"Test building warning message FAILED!")
"RTN","A1AEUK1",340,0)
 . Q
"RTN","A1AEUK1",341,0)
 ;
"RTN","A1AEUK1",342,0)
 ;
"RTN","A1AEUK1",343,0)
XTENT ;
"RTN","A1AEUK1",344,0)
 ;;UTP60;Test entering routine at top
"RTN","A1AEUK1",345,0)
 ;;UTP61;Test suitability of patch for install
"RTN","A1AEUK1",346,0)
 ;;UTP62;Test procedures when Patch and Site Stream match
"RTN","A1AEUK1",347,0)
 ;;UTP63;Test procedures when Patch and Site Stream DO NOT match
"RTN","A1AEUK1",348,0)
 ;;UTP64;Test building array of installed patches
"RTN","A1AEUK1",349,0)
 ;;UTP65;Test building missing patches array
"RTN","A1AEUK1",350,0)
 ;;UTP66;Test showing missing patches
"RTN","A1AEUK1",351,0)
 ;;UTP67;Test No/Yes query
"RTN","A1AEUK1",352,0)
 ;;UTP68;Test Test variable for Site = KIDS Stream
"RTN","A1AEUK1",353,0)
 ;;UTP69;Test building relavent Site Variables
"RTN","A1AEUK1",354,0)
 ;;UTP71;Test returning Site's Active Version of a package
"RTN","A1AEUK1",355,0)
 ;;UTP72;Test building appropriate error message
"RTN","A1AEUK1",356,0)
 ;;UTP72;Test building appropriate error message
"RTN","A1AEUK1",357,0)
 ;;UTP73;Test building appropriate error message
"RTN","A1AEUK1",358,0)
 Q
"RTN","A1AEUK1",359,0)
 ;;UTP60;Test entering routine at top
"RTN","A1AEUK1",360,0)
 ;;UTP61;Test suitability of patch for install
"RTN","A1AEUK1",361,0)
 ;;UTP62;Test procedures when Patch and Site Stream match
"RTN","A1AEUK1",362,0)
 ;;UTP63;Test procedures when Patch and Site Stream DO NOT match
"RTN","A1AEUK1",363,0)
 ;;UTP64;Test building array of installed patches
"RTN","A1AEUK1",364,0)
 ;;UTP65;Test building missing patches array
"RTN","A1AEUK1",365,0)
 ;;UTP66;Test showing missing patches
"RTN","A1AEUK1",366,0)
 ;;UTP67;Test No/Yes query
"RTN","A1AEUK1",367,0)
 ;;UTP68;Test variable for Site Stream = KIDS Stream
"RTN","A1AEUK1",368,0)
 ;;UTP69;Test building relavent Site Variables
"RTN","A1AEUK1",369,0)
 ;;UTP70;Test building relavent KIDS Variables
"RTN","A1AEUK1",370,0)
 ;;UTP71;Test returning Site's Active Version of a package
"RTN","A1AEUK1",371,0)
 ;;UTP72;Test building appropriate error message
"RTN","A1AEUK1",372,0)
 ;;UTP73;Test building appropriate error message
"RTN","A1AEUK1",373,0)
 Q
"RTN","A1AEUK1",374,0)
 ;
"RTN","A1AEUK1",375,0)
 ;
"RTN","A1AEUK1",376,0)
EOR ; end of routine A1AEUK1
"RTN","A1AEUK2")
0^47^B265577528
"RTN","A1AEUK2",1,0)
A1AEUK2 ;ven/lgc,jli-unit tests for A1AEK2 ; 6/4/15 12:55am
"RTN","A1AEUK2",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 35
"RTN","A1AEUK2",3,0)
 ;;Submitted to OSEHRA 3 June 2015 by the VISTA Expertise Network
"RTN","A1AEUK2",4,0)
 ;;Licensed under the terms of the Apache License, version 2.0
"RTN","A1AEUK2",5,0)
 ;
"RTN","A1AEUK2",6,0)
 ;
"RTN","A1AEUK2",7,0)
 ;primary change history
"RTN","A1AEUK2",8,0)
 ;2014-03-28: version 2.4 released
"RTN","A1AEUK2",9,0)
 ;
"RTN","A1AEUK2",10,0)
 ; CHANGE VEN/LGC 2015 05 27
"RTN","A1AEUK2",11,0)
 ;   UTP84 modified to add complete message DATA array
"RTN","A1AEUK2",12,0)
 ;
"RTN","A1AEUK2",13,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUK2",14,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUK2",15,0)
 Q
"RTN","A1AEUK2",16,0)
 ;
"RTN","A1AEUK2",17,0)
STARTUP ;
"RTN","A1AEUK2",18,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUK2",19,0)
 L +^A1AE(11007.1):1 I '$T D  Q
"RTN","A1AEUK2",20,0)
 . S A1AEFAIL=1
"RTN","A1AEUK2",21,0)
 . W !,"Unable to obtain lock on DHCP PATCH STREAM  [#11007.1] file"
"RTN","A1AEUK2",22,0)
 . W !," Unable to perform testing."
"RTN","A1AEUK2",23,0)
 ;
"RTN","A1AEUK2",24,0)
 ;
"RTN","A1AEUK2",25,0)
 N MAILGRP S MAILGRP=$O(^XMB(3.8,"B","A1AESTRMCHG",0))
"RTN","A1AEUK2",26,0)
 I 'MAILGRP D  Q
"RTN","A1AEUK2",27,0)
 . S A1AEFAIL=1
"RTN","A1AEUK2",28,0)
 . W !,"G.A1AESTRMCHG mail group is not set up on this system"
"RTN","A1AEUK2",29,0)
 . W !," Unable to perform testing."
"RTN","A1AEUK2",30,0)
 ;
"RTN","A1AEUK2",31,0)
 K ^XTMP("A1AEUK2","UNIT TEST")
"RTN","A1AEUK2",32,0)
 M ^XTMP("A1AEUK2","UNIT TEST",11007.1)=^A1AE(11007.1)
"RTN","A1AEUK2",33,0)
 ;
"RTN","A1AEUK2",34,0)
 Q
"RTN","A1AEUK2",35,0)
 ;
"RTN","A1AEUK2",36,0)
SHUTDOWN I '$G(A1AEFAIL) D
"RTN","A1AEUK2",37,0)
 .; Reverse change in 11007.1
"RTN","A1AEUK2",38,0)
 . D FIXDPS
"RTN","A1AEUK2",39,0)
 L -^XPD(11007.1):1
"RTN","A1AEUK2",40,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUK2",41,0)
 K A1AEFAIL
"RTN","A1AEUK2",42,0)
 Q
"RTN","A1AEUK2",43,0)
 ;
"RTN","A1AEUK2",44,0)
 ; Testing
"RTN","A1AEUK2",45,0)
 ;  STRM^A1AEK2      UTP80
"RTN","A1AEUK2",46,0)
 ;  CONFIRM^A1AEK2   UTP81
"RTN","A1AEUK2",47,0)
 ;  NEWSTRM^A1AEK2   UTP82
"RTN","A1AEUK2",48,0)
 ;  PRCSMAIL^A1AEK2  UTP83
"RTN","A1AEUK2",49,0)
 ;  FCNF0^A1AEK2     UTP84
"RTN","A1AEUK2",50,0)
 ;  FCNF1^A1AEK2     UTP85
"RTN","A1AEUK2",51,0)
 ;  FCNF2^A1AEK2     UTP86
"RTN","A1AEUK2",52,0)
 ;  FCNF3^A1AEK2     UTP87
"RTN","A1AEUK2",53,0)
 ;  FCNF4^A1AEK2     UTP88
"RTN","A1AEUK2",54,0)
 ;  FCNF5^A1AEK2     UTP89
"RTN","A1AEUK2",55,0)
 ;  SNDMAIL^A1AEK2   UTP90
"RTN","A1AEUK2",56,0)
 ;  FND^A1AEK2       UTP91
"RTN","A1AEUK2",57,0)
 ;
"RTN","A1AEUK2",58,0)
 ;
"RTN","A1AEUK2",59,0)
 ; Normally STRM^A1AEK2 is called through an INPUT TRANSFORM
"RTN","A1AEUK2",60,0)
 ;  or an Option when the site's user requests changing
"RTN","A1AEUK2",61,0)
 ;  their Patch Stream.  In this case, an email with a
"RTN","A1AEUK2",62,0)
 ;  special subject "SUBSCRIPTION CHNG REQUEST" is sent
"RTN","A1AEUK2",63,0)
 ;  to the PRCSMAIL linetag in A1AEK2 which forwards it
"RTN","A1AEUK2",64,0)
 ;  to Forum.
"RTN","A1AEUK2",65,0)
 ; To assist in unit testing, the input transform code
"RTN","A1AEUK2",66,0)
 ;  will run as normally EXCEPT setting the SLNT variable
"RTN","A1AEUK2",67,0)
 ;  to 1, for silent to FORUM, will generate a similar
"RTN","A1AEUK2",68,0)
 ;  email message except the subject is prefixed with
"RTN","A1AEUK2",69,0)
 ;  A1AE:::.  This is processed through PRCSMAIL as
"RTN","A1AEUK2",70,0)
 ;  before, however since the subject is prefixed with
"RTN","A1AEUK2",71,0)
 ;  A1AE::: the mail is not forwarded to FORM, but rather
"RTN","A1AEUK2",72,0)
 ;  an indicating email with the subject A1AE FCFN0 is
"RTN","A1AEUK2",73,0)
 ;  generated and again sent to the A1AESTRMCHG mail 
"RTN","A1AEUK2",74,0)
 ;  group.  This second email does not contain a trapping
"RTN","A1AEUK2",75,0)
 ;  string and spawns no further activity.
"RTN","A1AEUK2",76,0)
 ; Thus, we are able to check the entire input transform
"RTN","A1AEUK2",77,0)
 ;  path without bothering FORUM.
"RTN","A1AEUK2",78,0)
 ;
"RTN","A1AEUK2",79,0)
 ;  STRM^A1AEK2
"RTN","A1AEUK2",80,0)
 ;Testing Input Transform on SEQUENCE change
"RTN","A1AEUK2",81,0)
UTP80 I '$G(A1AEFAIL) D
"RTN","A1AEUK2",82,0)
 . N X,MYDT S MYDT=DTIME,DTIME=1
"RTN","A1AEUK2",83,0)
 . N LASTXMZ S LASTXMZ=$O(^XMB(3.9,"A"),-1)
"RTN","A1AEUK2",84,0)
 . N ACTSTRM S ACTSTRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEUK2",85,0)
 . N NSTRM S NSTRM=$O(^A1AE(11007.1,"ASUBS",0,0))
"RTN","A1AEUK2",86,0)
 . N SLNT S SLNT=1
"RTN","A1AEUK2",87,0)
 . D STRM^A1AEK2(NSTRM,"YES",.SLNT)
"RTN","A1AEUK2",88,0)
 .; This should produce two emails. The 1st generates the 2nd
"RTN","A1AEUK2",89,0)
 .;   subj A1AE:::SUBSCRIPTION CHNG REQUEST
"RTN","A1AEUK2",90,0)
 .;   subj A1AE FCNF0
"RTN","A1AEUK2",91,0)
 . H 20 ; Wait for slow email
"RTN","A1AEUK2",92,0)
 . N SUBJ S SUBJ=$E("A1AE:::SUBSCRIPTION CHNG REQUEST",1,30)
"RTN","A1AEUK2",93,0)
 . N NODE S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",94,0)
 . N XMZ1 S XMZ1=$O(@NODE,-1)
"RTN","A1AEUK2",95,0)
 . S X=(XMZ1>LASTXMZ)
"RTN","A1AEUK2",96,0)
 . I 'X S DTIME=MYDT D  Q
"RTN","A1AEUK2",97,0)
 .. D CHKEQ^%ut(1,X,"Testing1 SEQUENCE Input Transform FAILED!")
"RTN","A1AEUK2",98,0)
 . S X=XMZ1
"RTN","A1AEUK2",99,0)
 . S:X X=$O(^XMB(3.9,XMZ1,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",100,0)
 . S:X X=(^XMB(3.9,XMZ1,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",101,0)
 . I 'X S DTIME=MYDT D  Q
"RTN","A1AEUK2",102,0)
 .. D CHKEQ^%ut(1,X,"Testing2 SEQUENCE Input Transform FAILED!")
"RTN","A1AEUK2",103,0)
 . S SUBJ="A1AE FCNF0"
"RTN","A1AEUK2",104,0)
 . S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",105,0)
 .; Wait up to 10 seconds for second email to hit
"RTN","A1AEUK2",106,0)
 . N CNT F CNT=1:1:10 H 1 Q:$O(@NODE,-1)>XMZ1
"RTN","A1AEUK2",107,0)
 . I CNT>9 D  Q
"RTN","A1AEUK2",108,0)
 .. D CHKEQ^%ut(1,X,"Testing3 failed due to slow email!")
"RTN","A1AEUK2",109,0)
 . N XMZ2 S XMZ2=$O(@NODE,-1)
"RTN","A1AEUK2",110,0)
 .; Ensure the second message IEN is after the generating one
"RTN","A1AEUK2",111,0)
 . S X=XMZ2
"RTN","A1AEUK2",112,0)
 . S:X X=(XMZ1<XMZ2)
"RTN","A1AEUK2",113,0)
 . S:X X=$O(^XMB(3.9,XMZ2,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",114,0)
 . S:X X=(^XMB(3.9,XMZ2,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",115,0)
 . S DTIME=MYDT
"RTN","A1AEUK2",116,0)
 . D CHKEQ^%ut(1,X,"Testing4 SEQUENCE Input Transform FAILED!")
"RTN","A1AEUK2",117,0)
 Q
"RTN","A1AEUK2",118,0)
 ;
"RTN","A1AEUK2",119,0)
 ;  CONFIRM^A1AEK2
"RTN","A1AEUK2",120,0)
 ;Testing CONFIRM query
"RTN","A1AEUK2",121,0)
UTP81 I '$G(A1AEFAIL) D
"RTN","A1AEUK2",122,0)
 . N X,MYDT S MYDT=DTIME
"RTN","A1AEUK2",123,0)
 . S DTIME=1,X=$$CONFIRM^A1AEK2,DTIME=MYDT
"RTN","A1AEUK2",124,0)
 . D CHKEQ^%ut(0,X,"Testing CONFIRM query FAILED!")
"RTN","A1AEUK2",125,0)
 Q
"RTN","A1AEUK2",126,0)
 ;
"RTN","A1AEUK2",127,0)
 ;
"RTN","A1AEUK2",128,0)
 ; See notes for UTP70.  This tests the same message
"RTN","A1AEUK2",129,0)
 ;  generating procedures, however, tests the extrinsic
"RTN","A1AEUK2",130,0)
 ;  function, $$NEWSTRM^A1AEK2, specifically
"RTN","A1AEUK2",131,0)
 ;  NEWSTRM^A1AEK2
"RTN","A1AEUK2",132,0)
 ;Testing building formatted stream change email
"RTN","A1AEUK2",133,0)
UTP82 I '$G(A1AEFAIL) D
"RTN","A1AEUK2",134,0)
 . N X,MYDT S MYDT=DTIME
"RTN","A1AEUK2",135,0)
 . N NSTRM S NSTRM=$O(^A1AE(11007.1,"ASUBS",0,0))
"RTN","A1AEUK2",136,0)
 . N ACTSTRM S ACTSTRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEUK2",137,0)
 . N ACTSTRMD S ACTSTRMD=$O(^A1AE(11007.1,+$G(ACTSTRM),1,"B","A"),-1)
"RTN","A1AEUK2",138,0)
 . N SERVER S SERVER=$$GET1^DIQ(8989.3,1_",",.01)
"RTN","A1AEUK2",139,0)
 . N SLNT S SLNT=1
"RTN","A1AEUK2",140,0)
 . N REQDT S REQDT=$$HTFM^XLFDT($H)
"RTN","A1AEUK2",141,0)
 . S X=$$NEWSTRM^A1AEK2(DUZ,REQDT,SERVER,NSTRM,.SLNT)
"RTN","A1AEUK2",142,0)
 .; This should produce two emails. The 1st generates the 2nd
"RTN","A1AEUK2",143,0)
 .;   subj A1AE:::SUBSCRIPTION CHNG REQUEST
"RTN","A1AEUK2",144,0)
 .;   subj A1AE FCNF0
"RTN","A1AEUK2",145,0)
 . N SUBJ S SUBJ=$E("A1AE:::SUBSCRIPTION CHNG REQUEST",1,30)
"RTN","A1AEUK2",146,0)
 . N NODE S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",147,0)
 . N XMZ1 S XMZ1=$O(@NODE,-1)
"RTN","A1AEUK2",148,0)
 . S X=XMZ1
"RTN","A1AEUK2",149,0)
 . S:X X=$O(^XMB(3.9,XMZ1,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",150,0)
 . S:X X=(^XMB(3.9,XMZ1,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",151,0)
 . I 'X S DTIME=MYDT D  Q
"RTN","A1AEUK2",152,0)
 .. D CHKEQ^%ut(1,X,"Testing SEQUENCE Input Transform FAILED!")
"RTN","A1AEUK2",153,0)
 . S SUBJ="A1AE FCNF0"
"RTN","A1AEUK2",154,0)
 . S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",155,0)
 .; Wait up to 10 seconds for second email to hit
"RTN","A1AEUK2",156,0)
 . N CNT F CNT=1:1:10 H 1 Q:$O(@NODE,-1)>XMZ1
"RTN","A1AEUK2",157,0)
 . I CNT>9 D  Q
"RTN","A1AEUK2",158,0)
 .. D CHKEQ^%ut(1,X,"Testing failed due to slow email!")
"RTN","A1AEUK2",159,0)
 . N XMZ2 S XMZ2=$O(@NODE,-1)
"RTN","A1AEUK2",160,0)
 .; Ensure the second message IEN is after the generating one
"RTN","A1AEUK2",161,0)
 . S X=XMZ2
"RTN","A1AEUK2",162,0)
 . S:X X=(XMZ1<XMZ2)
"RTN","A1AEUK2",163,0)
 . S:X X=$O(^XMB(3.9,XMZ2,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",164,0)
 . S:X X=(^XMB(3.9,XMZ2,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",165,0)
 . S DTIME=MYDT
"RTN","A1AEUK2",166,0)
 . D CHKEQ^%ut(1,X,"Testing SEQUENCE Input Transform FAILED!")
"RTN","A1AEUK2",167,0)
 Q
"RTN","A1AEUK2",168,0)
 ;
"RTN","A1AEUK2",169,0)
 ; To check that the server S.A1AENEWSTRM is working
"RTN","A1AEUK2",170,0)
 ;  correctly, build and send an email with a subject
"RTN","A1AEUK2",171,0)
 ;  that is not recognized as email that requires
"RTN","A1AEUK2",172,0)
 ;  processing for FORUM.
"RTN","A1AEUK2",173,0)
 ; If called as a function $$PRCSMAIL^A1AEK2 returns
"RTN","A1AEUK2",174,0)
 ;  the result of the loop searching for a indicator
"RTN","A1AEUK2",175,0)
 ;  subject.  Not finding one, "*END*" is returned.
"RTN","A1AEUK2",176,0)
 ; Note that UTP70 and UTP71 run a similar test,
"RTN","A1AEUK2",177,0)
 ;  however these do trap an indicator subject line.
"RTN","A1AEUK2",178,0)
 ;  PRCSMAIL^A1AEK2
"RTN","A1AEUK2",179,0)
 ;Testing Server on Mailgroup
"RTN","A1AEUK2",180,0)
UTP83 I '$G(A1AEFAIL) D
"RTN","A1AEUK2",181,0)
 .; Build email and send through "G.A1AESTRMCHG" mail group.
"RTN","A1AEUK2",182,0)
 . N DATA S DATA(0)=1,DATA(1)="UNIT TEST UTP73 LINE 1"
"RTN","A1AEUK2",183,0)
 . N XMSUBJ S XMSUBJ="UNIT TEST UTP73"
"RTN","A1AEUK2",184,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",185,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",186,0)
 . N X S X=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",187,0)
 .; I 'X then we have sendmail error, otherwise is XMZ
"RTN","A1AEUK2",188,0)
 . I 'X D  Q
"RTN","A1AEUK2",189,0)
 .. D CHKEQ^%ut(1,X,"Testing Mail Server S.A1AENEWSTRM FAILED!")
"RTN","A1AEUK2",190,0)
 . N XMZ S XMZ=X
"RTN","A1AEUK2",191,0)
 .; OK. Mail through group sucessful. Check Server worked
"RTN","A1AEUK2",192,0)
 .; Check that email (XMZ should = mail) went through
"RTN","A1AEUK2",193,0)
 .;  the A1AESTRMCHG mail group
"RTN","A1AEUK2",194,0)
 . S X=$O(^XMB(3.9,XMZ,6,"B","G.A1AESTRMCHG",0))
"RTN","A1AEUK2",195,0)
 . I 'X D  Q
"RTN","A1AEUK2",196,0)
 .. D CHKEQ^%ut(1,X,"Testing Mail Server S.A1AENEWSTRM FAILED!")
"RTN","A1AEUK2",197,0)
 .; Check that email went through the server
"RTN","A1AEUK2",198,0)
 . S X=$O(^XMB(3.9,XMZ,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",199,0)
 . I 'X D  Q
"RTN","A1AEUK2",200,0)
 .. D CHKEQ^%ut(1,X,"Testing Mail Server S.A1AENEWSTRM FAILED!")
"RTN","A1AEUK2",201,0)
 .; Now check PRCSMAIL piece?
"RTN","A1AEUK2",202,0)
 . S X=$$PRCSMAIL^A1AEK2
"RTN","A1AEUK2",203,0)
 . S X=(X="*END*")
"RTN","A1AEUK2",204,0)
 . D CHKEQ^%ut(1,X,"Testing Mail Server S.A1AENEWSTRM FAILED!")
"RTN","A1AEUK2",205,0)
 Q
"RTN","A1AEUK2",206,0)
 ;
"RTN","A1AEUK2",207,0)
 ; Build and send email to mail group with subject of
"RTN","A1AEUK2",208,0)
 ;  A1AE:::TESTING UTP74 and simple DATA array
"RTN","A1AEUK2",209,0)
 ;  D FCNF0^A1AEK2 generates another email
"RTN","A1AEUK2",210,0)
 ;  with a subject of A1AE FCNF0 SBSCRPT CHNG REQUEST
"RTN","A1AEUK2",211,0)
 ;  proving that the original email was shuttled to the
"RTN","A1AEUK2",212,0)
 ;  correct linetag in A1AEK2
"RTN","A1AEUK2",213,0)
 ;  FCNF0^A1AEK2
"RTN","A1AEUK2",214,0)
 ;Testing Outgoing subscription change request
"RTN","A1AEUK2",215,0)
UTP84 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",216,0)
 . S XMSUBJ="A1AE:::TESTING UTP74"
"RTN","A1AEUK2",217,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",218,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",219,0)
 . N DATA S DATA(0)=5
"RTN","A1AEUK2",220,0)
 . S DATA(1)="SERVER:::"_$$GET1^DIQ(8989.3,1_",",.01)
"RTN","A1AEUK2",221,0)
 . S DATA(2)="DATE SUBSCRIPTION ACTIVE:::3110101.1234"
"RTN","A1AEUK2",222,0)
 . S DATA(3)="REQUESTOR DUZ:::1"
"RTN","A1AEUK2",223,0)
 . S DATA(4)="SWITCH TO SUBSCRIPTION:::10001"
"RTN","A1AEUK2",224,0)
 . S DATA(5)="SWITCH REQUEST DATE:::3110202.1234"
"RTN","A1AEUK2",225,0)
 . N X,XMZ S (X,XMZ)=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",226,0)
 . S:X X=$O(^XMB(3.9,XMZ,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",227,0)
 . S:X X=(^XMB(3.9,XMZ,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",228,0)
 . I 'X D  Q
"RTN","A1AEUK2",229,0)
 .. D CHKEQ^%ut(1,X,"Testing Outgoing Subscription CHNG FAILED!")
"RTN","A1AEUK2",230,0)
 . D FCNF0^A1AEK2
"RTN","A1AEUK2",231,0)
 . S SUBJ="A1AE FCNF0"
"RTN","A1AEUK2",232,0)
 . S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",233,0)
 .; Wait up to 10 seconds for second email to hit
"RTN","A1AEUK2",234,0)
 . N CNT F CNT=1:1:10 H 1 Q:$O(@NODE,-1)>XMZ
"RTN","A1AEUK2",235,0)
 . I CNT>9 D  Q
"RTN","A1AEUK2",236,0)
 .. D CHKEQ^%ut(1,X,"Testing failed due to slow email!")
"RTN","A1AEUK2",237,0)
 . N XMZ2 S XMZ2=$O(@NODE,-1)
"RTN","A1AEUK2",238,0)
 .; Ensure the second message IEN is after the generating one
"RTN","A1AEUK2",239,0)
 . S X=XMZ2
"RTN","A1AEUK2",240,0)
 . S:X X=(XMZ<XMZ2)
"RTN","A1AEUK2",241,0)
 . S:X X=$O(^XMB(3.9,XMZ2,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",242,0)
 . S:X X=(^XMB(3.9,XMZ2,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",243,0)
 . D CHKEQ^%ut(1,X,"Testing Outgoing Subscription CHNG FAILED!")
"RTN","A1AEUK2",244,0)
 Q
"RTN","A1AEUK2",245,0)
 ;
"RTN","A1AEUK2",246,0)
 ;  FCNF1^A1AEK2
"RTN","A1AEUK2",247,0)
 ;Testing Incoming Forum approval
"RTN","A1AEUK2",248,0)
UTP85 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",249,0)
 .; Build and send FORUM APPROVAL email
"RTN","A1AEUK2",250,0)
 . N NSTRM S NSTRM=$O(^A1AE(11007.1,"ASUBS",0,0))
"RTN","A1AEUK2",251,0)
 . N ACTSTRM S ACTSTRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEUK2",252,0)
 . N ACTSTRMD S ACTSTRMD=$O(^A1AE(11007.1,+$G(ACTSTRM),1,"B","A"),-1)
"RTN","A1AEUK2",253,0)
 . N SERVER S SERVER=$$GET1^DIQ(8989.3,1_",",.01)
"RTN","A1AEUK2",254,0)
 . N SLNT S SLNT=1
"RTN","A1AEUK2",255,0)
 . N REQDT S REQDT=$$HTFM^XLFDT($H)
"RTN","A1AEUK2",256,0)
 . N DATA S DATA(0)=7
"RTN","A1AEUK2",257,0)
 . S DATA(1)="SERVER:::"_SERVER
"RTN","A1AEUK2",258,0)
 . S DATA(2)="ACTIVE SUBSCRIPTION:::"_ACTSTRM
"RTN","A1AEUK2",259,0)
 . S DATA(3)="DATE SUBSCRIPTION ACTIVE:::"_ACTSTRMD
"RTN","A1AEUK2",260,0)
 . S DATA(4)="REQUESTOR DUZ:::"_DUZ
"RTN","A1AEUK2",261,0)
 . S DATA(5)="SWITCH TO SUBSCRIPTION:::"_NSTRM
"RTN","A1AEUK2",262,0)
 . S DATA(6)="SWITCH REQUEST DATE:::"_REQDT
"RTN","A1AEUK2",263,0)
 . S DATA(7)="APPROVED:::YES"
"RTN","A1AEUK2",264,0)
 .; Set subject fail server processing
"RTN","A1AEUK2",265,0)
 . N XMSUBJ S XMSUBJ="FCNF1 A1AEK2"
"RTN","A1AEUK2",266,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",267,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",268,0)
 .; Get IEN into 3.9 for outgoing message
"RTN","A1AEUK2",269,0)
 . N XMZ,X S (X,XMZ)=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",270,0)
 . I 'X D  Q
"RTN","A1AEUK2",271,0)
 .. D CHKEQ^%ut(1,X,"Testing Incoming Forum Approval FAILED!")
"RTN","A1AEUK2",272,0)
 .; Run FCNF1 as extrinsic to signal unit testing
"RTN","A1AEUK2",273,0)
 . S X=$$FCNF1^A1AEK2
"RTN","A1AEUK2",274,0)
 . D CHKEQ^%ut(0,X,"Testing Incoming Forum Approval FAILED!")
"RTN","A1AEUK2",275,0)
 .; I X=0 put 11007.1 back as it was before
"RTN","A1AEUK2",276,0)
 . Q
"RTN","A1AEUK2",277,0)
 ;
"RTN","A1AEUK2",278,0)
 ;  FCNF2^A1AEK2
"RTN","A1AEUK2",279,0)
 ;Testing Incoming Forum rejection
"RTN","A1AEUK2",280,0)
UTP86 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",281,0)
 . S XMSUBJ="A1AE:::TESTING UTP76"
"RTN","A1AEUK2",282,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",283,0)
 . N DATA S DATA(0)=1,DATA(1)="UTP76 UNIT TEST"
"RTN","A1AEUK2",284,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",285,0)
 . N X,XMZ S (X,XMZ)=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",286,0)
 . S:X X=$O(^XMB(3.9,XMZ,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",287,0)
 . S:X X=(^XMB(3.9,XMZ,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",288,0)
 . I 'X D  Q
"RTN","A1AEUK2",289,0)
 .. D CHKEQ^%ut(1,X,"Testing Incoming Forum Rejection FAILED!")
"RTN","A1AEUK2",290,0)
 . D FCNF2^A1AEK2
"RTN","A1AEUK2",291,0)
 . S SUBJ="A1AE FCNF2"
"RTN","A1AEUK2",292,0)
 . S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",293,0)
 .; Wait up to 10 seconds for second email to hit
"RTN","A1AEUK2",294,0)
 . N CNT F CNT=1:1:10 H 1 Q:$O(@NODE,-1)>XMZ
"RTN","A1AEUK2",295,0)
 . I CNT>9 D  Q
"RTN","A1AEUK2",296,0)
 .. D CHKEQ^%ut(1,X,"Testing failed due to slow email!")
"RTN","A1AEUK2",297,0)
 . N XMZ2 S XMZ2=$O(@NODE,-1)
"RTN","A1AEUK2",298,0)
 .; Ensure the second message IEN is after the generating one
"RTN","A1AEUK2",299,0)
 . S X=XMZ2
"RTN","A1AEUK2",300,0)
 . S:X X=(XMZ<XMZ2)
"RTN","A1AEUK2",301,0)
 . S:X X=$O(^XMB(3.9,XMZ2,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",302,0)
 . S:X X=(^XMB(3.9,XMZ2,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",303,0)
 . D CHKEQ^%ut(1,X,"Testing Incoming Forum Rejection FAILED!")
"RTN","A1AEUK2",304,0)
 Q
"RTN","A1AEUK2",305,0)
 ;
"RTN","A1AEUK2",306,0)
 ;  FCNF3^A1AEK2
"RTN","A1AEUK2",307,0)
 ;Testing Sending subscription change confirmation
"RTN","A1AEUK2",308,0)
UTP87 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",309,0)
 . S XMSUBJ="A1AE:::TESTING UTP77"
"RTN","A1AEUK2",310,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",311,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",312,0)
 . N DATA S DATA(0)=1,DATA(1)="UTP77 UNIT TEST"
"RTN","A1AEUK2",313,0)
 . N X,XMZ S (X,XMZ)=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",314,0)
 . S:X X=$O(^XMB(3.9,XMZ,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",315,0)
 . S:X X=(^XMB(3.9,XMZ,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",316,0)
 . I 'X D  Q
"RTN","A1AEUK2",317,0)
 .. D CHKEQ^%ut(1,X,"Testing Subscript change confirmed msg FAILED!")
"RTN","A1AEUK2",318,0)
 . D FCNF3^A1AEK2
"RTN","A1AEUK2",319,0)
 . S SUBJ="A1AE FCNF3"
"RTN","A1AEUK2",320,0)
 . S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",321,0)
 .; Wait up to 10 seconds for second email to hit
"RTN","A1AEUK2",322,0)
 . N CNT F CNT=1:1:10 H 1 Q:$O(@NODE,-1)>XMZ
"RTN","A1AEUK2",323,0)
 . I CNT>9 D  Q
"RTN","A1AEUK2",324,0)
 .. D CHKEQ^%ut(1,X,"Testing failed due to slow email!")
"RTN","A1AEUK2",325,0)
 . N XMZ2 S XMZ2=$O(@NODE,-1)
"RTN","A1AEUK2",326,0)
 .; Ensure the second message IEN is after the generating one
"RTN","A1AEUK2",327,0)
 . S X=XMZ2
"RTN","A1AEUK2",328,0)
 . S:X X=(XMZ<XMZ2)
"RTN","A1AEUK2",329,0)
 . S:X X=$O(^XMB(3.9,XMZ2,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",330,0)
 . S:X X=(^XMB(3.9,XMZ2,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",331,0)
 . D CHKEQ^%ut(1,X,"Testing Subscript change confirmed msg FAILED!")
"RTN","A1AEUK2",332,0)
 Q
"RTN","A1AEUK2",333,0)
 ;
"RTN","A1AEUK2",334,0)
 ;  FCNF4^A1AEK2
"RTN","A1AEUK2",335,0)
 ;Testing Sending subscription change failed msg
"RTN","A1AEUK2",336,0)
UTP88 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",337,0)
 . S XMSUBJ="A1AE:::TESTING UTP78"
"RTN","A1AEUK2",338,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",339,0)
 . N DATA S DATA(0)=1,DATA(1)="UTP78 UNIT TEST"
"RTN","A1AEUK2",340,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",341,0)
 . N X,XMZ S (X,XMZ)=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",342,0)
 . S:X X=$O(^XMB(3.9,XMZ,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",343,0)
 . S:X X=(^XMB(3.9,XMZ,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",344,0)
 . I 'X D  Q
"RTN","A1AEUK2",345,0)
 .. D CHKEQ^%ut(1,X,"Testing Subscript change failed msg FAILED!")
"RTN","A1AEUK2",346,0)
 . D FCNF4^A1AEK2
"RTN","A1AEUK2",347,0)
 . S SUBJ="A1AE FCNF4"
"RTN","A1AEUK2",348,0)
 . S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",349,0)
 .; Wait up to 10 seconds for second email to hit
"RTN","A1AEUK2",350,0)
 . N CNT F CNT=1:1:10 H 1 Q:$O(@NODE,-1)>XMZ
"RTN","A1AEUK2",351,0)
 . I CNT>9 D  Q
"RTN","A1AEUK2",352,0)
 .. D CHKEQ^%ut(1,X,"Testing failed due to slow email!")
"RTN","A1AEUK2",353,0)
 . N XMZ2 S XMZ2=$O(@NODE,-1)
"RTN","A1AEUK2",354,0)
 .; Ensure the second message IEN is after the generating one
"RTN","A1AEUK2",355,0)
 . S X=XMZ2
"RTN","A1AEUK2",356,0)
 . S:X X=(XMZ<XMZ2)
"RTN","A1AEUK2",357,0)
 . S:X X=$O(^XMB(3.9,XMZ2,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",358,0)
 . S:X X=(^XMB(3.9,XMZ2,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",359,0)
 . D CHKEQ^%ut(1,X,"Testing Subscript change failed msg FAILED!")
"RTN","A1AEUK2",360,0)
 Q
"RTN","A1AEUK2",361,0)
 ;
"RTN","A1AEUK2",362,0)
 ;  FCNF5^A1AEK2
"RTN","A1AEUK2",363,0)
 ;Testing Forum confirmation of subscription change
"RTN","A1AEUK2",364,0)
UTP89 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",365,0)
 . S XMSUBJ="A1AE:::TESTING UTP79"
"RTN","A1AEUK2",366,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",367,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",368,0)
 . N DATA S DATA(0)=1,DATA(1)="UTP79 UNIT TEST"
"RTN","A1AEUK2",369,0)
 . N X,XMZ S (X,XMZ)=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",370,0)
 . S:X X=$O(^XMB(3.9,XMZ,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",371,0)
 . S:X X=(^XMB(3.9,XMZ,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",372,0)
 . I 'X D  Q
"RTN","A1AEUK2",373,0)
 .. D CHKEQ^%ut(1,X,"Testing Forum Confirms New Subscription FAILED!")
"RTN","A1AEUK2",374,0)
 . D FCNF5^A1AEK2
"RTN","A1AEUK2",375,0)
 . S SUBJ="A1AE FCNF5"
"RTN","A1AEUK2",376,0)
 . S NODE=$NA(^XMB(3.9,"B",SUBJ,"A"))
"RTN","A1AEUK2",377,0)
 .; Wait up to 10 seconds for second email to hit
"RTN","A1AEUK2",378,0)
 . N CNT F CNT=1:1:10 H 1 Q:$O(@NODE,-1)>XMZ
"RTN","A1AEUK2",379,0)
 . I CNT>9 D  Q
"RTN","A1AEUK2",380,0)
 .. D CHKEQ^%ut(1,X,"Testing failed due to slow email!")
"RTN","A1AEUK2",381,0)
 . N XMZ2 S XMZ2=$O(@NODE,-1)
"RTN","A1AEUK2",382,0)
 .; Ensure the second message IEN is after the generating one
"RTN","A1AEUK2",383,0)
 . S X=XMZ2
"RTN","A1AEUK2",384,0)
 . S:X X=(XMZ<XMZ2)
"RTN","A1AEUK2",385,0)
 . S:X X=$O(^XMB(3.9,XMZ2,1,"C","S.A1AENEWSTRM",0))
"RTN","A1AEUK2",386,0)
 . S:X X=(^XMB(3.9,XMZ2,6,1,0)="G.A1AESTRMCHG")
"RTN","A1AEUK2",387,0)
 . D CHKEQ^%ut(1,X,"Testing Forum Confirms New Subscription FAILED!")
"RTN","A1AEUK2",388,0)
 Q
"RTN","A1AEUK2",389,0)
 ;
"RTN","A1AEUK2",390,0)
 ;  SNDMAIL^A1AEK2
"RTN","A1AEUK2",391,0)
 ;Testing Sending mail
"RTN","A1AEUK2",392,0)
UTP90 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",393,0)
 . S XMSUBJ="A1AE:::TESTING SNDMAIL FUNCTION"
"RTN","A1AEUK2",394,0)
 . N MAILGRP S MAILGRP="G.A1AESTRMCHG"
"RTN","A1AEUK2",395,0)
 . N DATA S DATA(0)=1,DATA(1)="UTP80 UNIT TEST"
"RTN","A1AEUK2",396,0)
 . N VAP S VAP="T+1"
"RTN","A1AEUK2",397,0)
 . N X S X=$$SNDMAIL^A1AEK2(XMSUBJ,.DATA,MAILGRP,.VAP)
"RTN","A1AEUK2",398,0)
 .; X=XMZ (IEN of message in ^XMB(3.9 if worked
"RTN","A1AEUK2",399,0)
 . S X=$S(X>0:1,1:0)
"RTN","A1AEUK2",400,0)
 . D CHKEQ^%ut(1,X,"Testing Sending Mail FAILED!")
"RTN","A1AEUK2",401,0)
 Q
"RTN","A1AEUK2",402,0)
 ;
"RTN","A1AEUK2",403,0)
 ;  FND^A1AEK2
"RTN","A1AEUK2",404,0)
 ;Testing Finding data in structured email
"RTN","A1AEUK2",405,0)
UTP91 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",406,0)
 . N ACTSTRM S ACTSTRM=$O(^A1AE(11007.1,"ASUBS",1,0))
"RTN","A1AEUK2",407,0)
 . N ACTSTRMD S ACTSTRMD=$O(^A1AE(11007.1,+$G(ACTSTRM),1,"B","A"),-1)
"RTN","A1AEUK2",408,0)
 . N SERVER S SERVER=$$GET1^DIQ(8989.3,1_",",.01)
"RTN","A1AEUK2",409,0)
 . N UTP81DT S UTP81DT=$$HTFM^XLFDT($H)
"RTN","A1AEUK2",410,0)
 . N DATA
"RTN","A1AEUK2",411,0)
 . S DATA(0)=6
"RTN","A1AEUK2",412,0)
 . S DATA(1)="SERVER:::"_SERVER
"RTN","A1AEUK2",413,0)
 . S DATA(2)="ACTIVE SUBSCRIPTION:::"_ACTSTRM
"RTN","A1AEUK2",414,0)
 . S DATA(3)="DATE SUBSCRIPTION ACTIVE:::"_ACTSTRMD
"RTN","A1AEUK2",415,0)
 . S DATA(4)="REQUESTOR DUZ:::"_DUZ
"RTN","A1AEUK2",416,0)
 . S DATA(5)="SWITCH TO SUBSCRIPTION:::"_1
"RTN","A1AEUK2",417,0)
 . S DATA(6)="SWITCH REQUEST DATE:::"_UTP81DT
"RTN","A1AEUK2",418,0)
 . N X S X=($$FND^A1AEK2(.DATA,"ACTIVE SUBSCRIPTION")=ACTSTRM)
"RTN","A1AEUK2",419,0)
 . D CHKEQ^%ut(1,X,"Testing Finding data in structured email FAILED!")
"RTN","A1AEUK2",420,0)
 . Q
"RTN","A1AEUK2",421,0)
 ;
"RTN","A1AEUK2",422,0)
 ;
"RTN","A1AEUK2",423,0)
UTP92 I '$G(A1AEFAIL) D  Q
"RTN","A1AEUK2",424,0)
 . K ^XTMP($J,"A1AEK2 FROM TOP")
"RTN","A1AEUK2",425,0)
 . D ^A1AEK2
"RTN","A1AEUK2",426,0)
 . S X=$D(^XTMP($J,"A1AEK2 FROM TOP"))
"RTN","A1AEUK2",427,0)
 . D CHKEQ^%ut(1,X,"Testing calling A1AEK2 from Top FAILED!")
"RTN","A1AEUK2",428,0)
 . Q
"RTN","A1AEUK2",429,0)
 ;
"RTN","A1AEUK2",430,0)
FMTMSG ;;FORMATTED MESSAGE LINES 1-6
"RTN","A1AEUK2",431,0)
 ;;SERVER:::^SERVER
"RTN","A1AEUK2",432,0)
 ;;ACTIVE SUBSCRIPTION:::^ACTSTRM
"RTN","A1AEUK2",433,0)
 ;;DATE SUBSCRIPTION ACTIVE:::^ACTSTRMD
"RTN","A1AEUK2",434,0)
 ;;REQUESTOR DUZ:::^DUZ
"RTN","A1AEUK2",435,0)
 ;;SWITCH TO SUBSCRIPTION:::^NSTRM
"RTN","A1AEUK2",436,0)
 ;;SWITCH REQUEST DATE:::^REQDT
"RTN","A1AEUK2",437,0)
 ;;**END**
"RTN","A1AEUK2",438,0)
 ;
"RTN","A1AEUK2",439,0)
 ; Subroutine to put DHCP PATCH STREAM [#11007.1] file
"RTN","A1AEUK2",440,0)
 ;  back to exactly what is was before testing
"RTN","A1AEUK2",441,0)
FIXDPS ;Return DHCP PATCH STREAM file to original structure
"RTN","A1AEUK2",442,0)
 N NODE S NODE=$NA(^A1AE(11007.1))
"RTN","A1AEUK2",443,0)
 F  S NODE=$Q(@NODE) Q:NODE'["^A1AE(11007.1"  D
"RTN","A1AEUK2",444,0)
 .; Build NODX = similar node in ^XTMP
"RTN","A1AEUK2",445,0)
 . S TXT="^XTMP(""A1AEUK2"",""UNIT TEST"","_$P($P(NODE,"(",2),")")_")"
"RTN","A1AEUK2",446,0)
 . S NODX=$NA(@TXT)
"RTN","A1AEUK2",447,0)
 .; If similar node not in ^XTMP, kill the node in 11007.1
"RTN","A1AEUK2",448,0)
 . I '$D(@NODX) K @NODE Q
"RTN","A1AEUK2",449,0)
 .; If similar node in ^XTMP identical, nothing has
"RTN","A1AEUK2",450,0)
 .;  changed since unit test was run.  Keep looking.
"RTN","A1AEUK2",451,0)
 . I (@NODE=@NODX) Q
"RTN","A1AEUK2",452,0)
 .; If simlar node in ^XTMP differs in content
"RTN","A1AEUK2",453,0)
 .;  swap the contents for that in existence befor
"RTN","A1AEUK2",454,0)
 .;  running unit test
"RTN","A1AEUK2",455,0)
 . S (@NODE)=(@NODX)
"RTN","A1AEUK2",456,0)
 ; To be sure all is well, re-index entire file
"RTN","A1AEUK2",457,0)
 N DA,DIK
"RTN","A1AEUK2",458,0)
 S DIK="^A1AE(11007.1,"
"RTN","A1AEUK2",459,0)
 D IXALL2^DIK
"RTN","A1AEUK2",460,0)
 D IXALL^DIK
"RTN","A1AEUK2",461,0)
 Q
"RTN","A1AEUK2",462,0)
 ;;
"RTN","A1AEUK2",463,0)
XTENT ;
"RTN","A1AEUK2",464,0)
 ;;UTP80;Testing Input Transform on SEQUENCE change
"RTN","A1AEUK2",465,0)
 ;;UTP81;Testing CONFIRM query
"RTN","A1AEUK2",466,0)
 ;;UTP82;Testing building formatted stream change email
"RTN","A1AEUK2",467,0)
 ;;UTP83;Testing Server on Mailgroup
"RTN","A1AEUK2",468,0)
 ;;UTP84;Testing Outgoing subscription change request
"RTN","A1AEUK2",469,0)
 ;;UTP85;Testing Incoming Forum approval
"RTN","A1AEUK2",470,0)
 ;;UTP86;Testing Incoming Forum rejection
"RTN","A1AEUK2",471,0)
 ;;UTP87;Testing Sending subscription change confirmation
"RTN","A1AEUK2",472,0)
 ;;UTP88;Testing Sending subscription change failed msg
"RTN","A1AEUK2",473,0)
 ;;UTP89;Testing Forum confirmation of subscription change
"RTN","A1AEUK2",474,0)
 ;;UTP90;Testing Sending mail
"RTN","A1AEUK2",475,0)
 ;;UTP91;Testing Finding data in structured email
"RTN","A1AEUK2",476,0)
 ;;UTP92;Testing Entering A1AEK2 at Top of routine
"RTN","A1AEUK2",477,0)
 Q
"RTN","A1AEUK2",478,0)
 ;
"RTN","A1AEUK2",479,0)
 ;
"RTN","A1AEUK2",480,0)
EOR ; end of routine A1AEUK2
"RTN","A1AEUTL")
0^48^B268167978
"RTN","A1AEUTL",1,0)
A1AEUTL ;ven/toad-patch tools ;2015-06-13  9:16 PM
"RTN","A1AEUTL",2,0)
 ;;2.5;PATCH MODULE;;Jun 13, 2015;Build 35
"RTN","A1AEUTL",3,0)
 ; (c) VISTA Expertise Network
"RTN","A1AEUTL",4,0)
 ;
"RTN","A1AEUTL",5,0)
 ; ***** COMMENTS IN A1AEUTLC ****
"RTN","A1AEUTL",6,0)
 ;
"RTN","A1AEUTL",7,0)
SEQ ; get & set sequence #
"RTN","A1AEUTL",8,0)
 ; called by:
"RTN","A1AEUTL",9,0)
 ;   C^A1AEPHS
"RTN","A1AEUTL",10,0)
 ;   S2R2^A1AEPHS
"RTN","A1AEUTL",11,0)
 ; input:
"RTN","A1AEUTL",12,0)
 ;   DA  =  IEN into DHCP PATCHES [#11005] file
"RTN","A1AEUTL",13,0)
 ;
"RTN","A1AEUTL",14,0)
 ; stream logic here, second trail
"RTN","A1AEUTL",15,0)
 ; sequence number is sensitive to patch stream
"RTN","A1AEUTL",16,0)
 ;
"RTN","A1AEUTL",17,0)
 N A1AESTRM S A1AESTRM=$$GSTRMP(DA)
"RTN","A1AEUTL",18,0)
 ; If the lookup fails fall back on looking at field primary? field in
"RTN","A1AEUTL",19,0)
 ; file dhcp patch stream (11007.1)
"RTN","A1AEUTL",20,0)
 S:'$G(A1AESTRM) A1AESTRM=$$PRIMSTRM()
"RTN","A1AEUTL",21,0)
 L +^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR"):60
"RTN","A1AEUTL",22,0)
 ; 1st seq # is stream number - 1, under stream
"RTN","A1AEUTL",23,0)
 ; use old stream sequence number if no previous
"RTN","A1AEUTL",24,0)
 S SEQ=$G(^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR"))
"RTN","A1AEUTL",25,0)
 I +SEQ=0 D
"RTN","A1AEUTL",26,0)
 . N ISEQ
"RTN","A1AEUTL",27,0)
 . ; get old value for VA FOIA:
"RTN","A1AEUTL",28,0)
 . S ISEQ=$G(^A1AE(11007,A1AEPKIF,"V",A1AEVR,"PR"))
"RTN","A1AEUTL",29,0)
 . ; and if greater than new style set new style to it:
"RTN","A1AEUTL",30,0)
 . I ISEQ>$G(^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,1,"PR")) D
"RTN","A1AEUTL",31,0)
 . . S ^("PR")=ISEQ
"RTN","A1AEUTL",32,0)
 . . Q
"RTN","A1AEUTL",33,0)
 . ; set for va foia as original stream:
"RTN","A1AEUTL",34,0)
 . S ISEQ=$G(^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,1,"PR"))
"RTN","A1AEUTL",35,0)
 . ; set sequence number 1 above the current sequence number
"RTN","A1AEUTL",36,0)
 . ; and finish splitting the stream for the package:
"RTN","A1AEUTL",37,0)
 . I A1AESTRM'=1 D
"RTN","A1AEUTL",38,0)
 . . S PATCHID=$P(^A1AE(11005,DA,0),U)
"RTN","A1AEUTL",39,0)
 . . S PATCHID=$P(PATCHID,"*",1,2)_"*"_A1AESTRM
"RTN","A1AEUTL",40,0)
 . . S DAIEN=$O(^A1AE(11005,"B",PATCHID,"")) I DAIEN'>0 D
"RTN","A1AEUTL",41,0)
 . . . ; create info-only patch for stream:
"RTN","A1AEUTL",42,0)
 . . . D SETPACKG^A1AESPLT(A1AEPKIF,A1AEVR,A1AESTRM)
"RTN","A1AEUTL",43,0)
 . . . S DAIEN=$O(^A1AE(11005,"B",PATCHID,""))
"RTN","A1AEUTL",44,0)
 . . . Q
"RTN","A1AEUTL",45,0)
 . . S SEQ=ISEQ+1 D RELSSTRM^A1AESPLT(DAIEN,A1AEPKIF,A1AEVR,SEQ)
"RTN","A1AEUTL",46,0)
 . . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR")=SEQ
"RTN","A1AEUTL",47,0)
 . . Q
"RTN","A1AEUTL",48,0)
 . Q
"RTN","A1AEUTL",49,0)
 S SEQ=SEQ+1,^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR")=SEQ
"RTN","A1AEUTL",50,0)
 ;
"RTN","A1AEUTL",51,0)
 I A1AENEW="v" D
"RTN","A1AEUTL",52,0)
 . S $P(^A1AE(11005,DA,0),"^",6)=SEQ
"RTN","A1AEUTL",53,0)
 ;
"RTN","A1AEUTL",54,0)
 L -^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR")
"RTN","A1AEUTL",55,0)
 ;
"RTN","A1AEUTL",56,0)
 QUIT  ; end of SEQ
"RTN","A1AEUTL",57,0)
 ;
"RTN","A1AEUTL",58,0)
 ;
"RTN","A1AEUTL",59,0)
DELSEQ ; delete sequence #
"RTN","A1AEUTL",60,0)
 ; called by:
"RTN","A1AEUTL",61,0)
 ;   C^A1AEPHS
"RTN","A1AEUTL",62,0)
 ;   S2R2^A1AEPHS
"RTN","A1AEUTL",63,0)
 ;   RELSSTRM^A1AESPLT
"RTN","A1AEUTL",64,0)
 ;   (if mail message generate fails)
"RTN","A1AEUTL",65,0)
 ; input:
"RTN","A1AEUTL",66,0)
 ;   DA  =  IEN into DHCP PATCHES [#11005] file
"RTN","A1AEUTL",67,0)
 ; output:
"RTN","A1AEUTL",68,0)
 ;   rolls back SEQUENCE NUMBER field in 11007
"RTN","A1AEUTL",69,0)
 ;
"RTN","A1AEUTL",70,0)
 ; sequence # uses correct patch stream
"RTN","A1AEUTL",71,0)
 ;
"RTN","A1AEUTL",72,0)
 ; DA into 11005 should be available
"RTN","A1AEUTL",73,0)
 N A1AESTRM S A1AESTRM=$$GSTRMP($G(DA))
"RTN","A1AEUTL",74,0)
 I 'A1AESTRM D
"RTN","A1AEUTL",75,0)
 . S A1AESTRM=$$PRIMSTRM()
"RTN","A1AEUTL",76,0)
 . Q
"RTN","A1AEUTL",77,0)
 L +^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR"):60
"RTN","A1AEUTL",78,0)
 I $D(^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR")),^("PR") D
"RTN","A1AEUTL",79,0)
 . S ^("PR")=^("PR")-1
"RTN","A1AEUTL",80,0)
 . Q
"RTN","A1AEUTL",81,0)
 L -^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,"PR")
"RTN","A1AEUTL",82,0)
 ;
"RTN","A1AEUTL",83,0)
 QUIT  ; end of DELSEQ
"RTN","A1AEUTL",84,0)
 ;
"RTN","A1AEUTL",85,0)
 ;
"RTN","A1AEUTL",86,0)
IN ; input transform for field .01 in file 11005
"RTN","A1AEUTL",87,0)
 ; called from the input transform file 11005, field .01
"RTN","A1AEUTL",88,0)
 N X1,X2
"RTN","A1AEUTL",89,0)
 S X1=$P(X,"*",1)
"RTN","A1AEUTL",90,0)
 I X1']""!'($P(X,"*",2)=+$P(X,"*",2)) D  Q
"RTN","A1AEUTL",91,0)
 . K X
"RTN","A1AEUTL",92,0)
 . Q
"RTN","A1AEUTL",93,0)
 S X2=$O(^DIC(9.4,"C",X1,0))
"RTN","A1AEUTL",94,0)
 I 'X2 D  Q
"RTN","A1AEUTL",95,0)
 . W !?3,"'",X1,"' is not a valid namespace"
"RTN","A1AEUTL",96,0)
 . K X
"RTN","A1AEUTL",97,0)
 . Q
"RTN","A1AEUTL",98,0)
 ;
"RTN","A1AEUTL",99,0)
 ; if this is not a forum site we do not need the rest of
"RTN","A1AEUTL",100,0)
 ; this input transform
"RTN","A1AEUTL",101,0)
 ;
"RTN","A1AEUTL",102,0)
 N PRIM S PRIM=+$O(^A1AE(11007.1,"APRIM",1,0))
"RTN","A1AEUTL",103,0)
 N FMAIL S FMAIL=$$GET1^DIQ(4.3,"1,",.01)
"RTN","A1AEUTL",104,0)
 Q:FMAIL=""
"RTN","A1AEUTL",105,0)
 Q:'$D(^A1AE(11007.1,"AFORUM",FMAIL,PRIM))
"RTN","A1AEUTL",106,0)
 ;
"RTN","A1AEUTL",107,0)
 I '$D(^A1AE(11007,"B",X2)) D  Q
"RTN","A1AEUTL",108,0)
 . W !?3,"'",X1
"RTN","A1AEUTL",109,0)
 . W "' is not a package in the 'DHCP Patch/Problem' file"
"RTN","A1AEUTL",110,0)
 . K X
"RTN","A1AEUTL",111,0)
 . Q
"RTN","A1AEUTL",112,0)
 I '$D(A1AETY) D  Q
"RTN","A1AEUTL",113,0)
 . W !?3,"Please use the Edit Template."
"RTN","A1AEUTL",114,0)
 . K X
"RTN","A1AEUTL",115,0)
 . Q
"RTN","A1AEUTL",116,0)
 I A1AETY="PH",'$D(^A1AE(11007,X2,"V",+$P(X,"*",2),0)) D  Q
"RTN","A1AEUTL",117,0)
 . W !?3,"'",$P(X,"*",2)
"RTN","A1AEUTL",118,0)
 . W "' is not a valid version number for this package"
"RTN","A1AEUTL",119,0)
 . K X
"RTN","A1AEUTL",120,0)
 . Q
"RTN","A1AEUTL",121,0)
 I A1AETY="PK",$D(^A1AE(11007,X2,"V",+$P(X,"*",2))) D  Q
"RTN","A1AEUTL",122,0)
 . W !,?3,"'",$P(X,"*",2)
"RTN","A1AEUTL",123,0)
 . W "' is not a new package version."
"RTN","A1AEUTL",124,0)
 . K X
"RTN","A1AEUTL",125,0)
 . Q
"RTN","A1AEUTL",126,0)
 ; check for A1AE IMPORT besides the user
"RTN","A1AEUTL",127,0)
 N A1AEIMP S A1AEIMP=$D(^XUSEC("A1AE IMPORT",DUZ))
"RTN","A1AEUTL",128,0)
 I '$D(^A1AE(11007,X2,$S(A1AEX=11005:"PH",1:"PB"),DUZ,0)),'A1AEIMP D  Q
"RTN","A1AEUTL",129,0)
 . W !?3,"You are not an authorized user"
"RTN","A1AEUTL",130,0)
 . K X
"RTN","A1AEUTL",131,0)
 . Q
"RTN","A1AEUTL",132,0)
 I $D(^A1AE(A1AEX,"B",X)) D  Q
"RTN","A1AEUTL",133,0)
 . W !?3,"Another error designation with the '"
"RTN","A1AEUTL",134,0)
 . W X,"' specification already exists"
"RTN","A1AEUTL",135,0)
 . K X
"RTN","A1AEUTL",136,0)
 . Q
"RTN","A1AEUTL",137,0)
 ;
"RTN","A1AEUTL",138,0)
 QUIT  ;  end of IN-FORUM
"RTN","A1AEUTL",139,0)
 ;
"RTN","A1AEUTL",140,0)
 ;
"RTN","A1AEUTL",141,0)
PKG ; select a patch/problem package
"RTN","A1AEUTL",142,0)
 ; called throughout patch module
"RTN","A1AEUTL",143,0)
 ;
"RTN","A1AEUTL",144,0)
 K A1AEPKIF,A1AEPK
"RTN","A1AEUTL",145,0)
 S DIC("A")="Select PACKAGE: "
"RTN","A1AEUTL",146,0)
 S DIC="^A1AE(11007,"
"RTN","A1AEUTL",147,0)
 S DIC(0)=$S($D(A1AE(0)):A1AE(0),1:"AEMQZ")
"RTN","A1AEUTL",148,0)
 W !
"RTN","A1AEUTL",149,0)
 D ^DIC
"RTN","A1AEUTL",150,0)
 K DIC,A1AE(0)
"RTN","A1AEUTL",151,0)
 Q:Y<0
"RTN","A1AEUTL",152,0)
 S A1AEPKIF=+Y
"RTN","A1AEUTL",153,0)
 I $D(^DIC(9.4,A1AEPKIF,0)) D
"RTN","A1AEUTL",154,0)
 . S A1AEPKNM=$P(^(0),"^",1)
"RTN","A1AEUTL",155,0)
 . S A1AEPK=$P(^(0),"^",2)
"RTN","A1AEUTL",156,0)
 . Q
"RTN","A1AEUTL",157,0)
 ;
"RTN","A1AEUTL",158,0)
 QUIT  ; end of PKG
"RTN","A1AEUTL",159,0)
 ;
"RTN","A1AEUTL",160,0)
 ;
"RTN","A1AEUTL",161,0)
VER ; select an application version
"RTN","A1AEUTL",162,0)
 ; called throughout patch module
"RTN","A1AEUTL",163,0)
 ;
"RTN","A1AEUTL",164,0)
 F A1AEVR=0:0 D  Q:'A1AEVR
"RTN","A1AEUTL",165,0)
 . S A1AEVR=$O(^A1AE(11007,A1AEPKIF,"V",A1AEVR))
"RTN","A1AEUTL",166,0)
 . Q:'A1AEVR
"RTN","A1AEUTL",167,0)
 . Q:A1AEVR=999
"RTN","A1AEUTL",168,0)
 . S DIC("B")=A1AEVR
"RTN","A1AEUTL",169,0)
 I '$D(^A1AE(11007,A1AEPKIF,"V",0)) D
"RTN","A1AEUTL",170,0)
 . S ^(0)="^11007.01I^^"
"RTN","A1AEUTL",171,0)
 . Q
"RTN","A1AEUTL",172,0)
 K A1AEVR
"RTN","A1AEUTL",173,0)
 S DA=A1AEPKIF
"RTN","A1AEUTL",174,0)
 S DIC="^A1AE(11007,A1AEPKIF,""V"","
"RTN","A1AEUTL",175,0)
 S DIC(0)=$S($D(A1AE(0)):A1AE(0),1:"AEQ")
"RTN","A1AEUTL",176,0)
 D ^DIC
"RTN","A1AEUTL",177,0)
 S:Y>0 A1AEVR=+Y
"RTN","A1AEUTL",178,0)
 K DIC,A1AE(0)
"RTN","A1AEUTL",179,0)
 ;
"RTN","A1AEUTL",180,0)
 QUIT  ; end of VER
"RTN","A1AEUTL",181,0)
 ;
"RTN","A1AEUTL",182,0)
 ;
"RTN","A1AEUTL",183,0)
NUM ; SEE Comments
"RTN","A1AEUTL",184,0)
 ; get primary stream & lock:
"RTN","A1AEUTL",185,0)
 N A1AESTRM S A1AESTRM=$$PRIMSTRM ; get primary stream
"RTN","A1AEUTL",186,0)
 L +^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY):3 E  D  Q  ; lock
"RTN","A1AEUTL",187,0)
 . W $C(7),!!,"Someone else is adding a patch at the moment."
"RTN","A1AEUTL",188,0)
 . W !,"Please try again later."
"RTN","A1AEUTL",189,0)
 . Q
"RTN","A1AEUTL",190,0)
 ;
"RTN","A1AEUTL",191,0)
 D NUMINIT(A1AEPKIF,A1AEVR,A1AESTRM,"PB","A1AEPB") ; init next problem #
"RTN","A1AEUTL",192,0)
 D NUMINIT(A1AEPKIF,A1AEVR,A1AESTRM,"PH","A1AEPH") ; init next patch #
"RTN","A1AEUTL",193,0)
 ;
"RTN","A1AEUTL",194,0)
 ; get number & unlock:
"RTN","A1AEUTL",195,0)
 S $P(^A1AE(11007,A1AEPKIF,"V",0),U,3)=A1AEVR
"RTN","A1AEUTL",196,0)
 S A1AENB=^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,A1AETY)
"RTN","A1AEUTL",197,0)
 L -^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY) ; unlock
"RTN","A1AEUTL",198,0)
 ;
"RTN","A1AEUTL",199,0)
 D SETNUM ; get & set last # and create stub record
"RTN","A1AEUTL",200,0)
 ;
"RTN","A1AEUTL",201,0)
 QUIT  ; end of NUM
"RTN","A1AEUTL",202,0)
 ;
"RTN","A1AEUTL",203,0)
 ;
"RTN","A1AEUTL",204,0)
NUMINIT(A1AEPKIF,A1AEVR,A1AESTRM,A1AETY,A1AEVAR) ; See comments
"RTN","A1AEUTL",205,0)
 ; 1. ensure next # defined for application version
"RTN","A1AEUTL",206,0)
 ;
"RTN","A1AEUTL",207,0)
 ; if next patch/problem # is not yet defined for this app version
"RTN","A1AEUTL",208,0)
 I '$D(^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY)) D
"RTN","A1AEUTL",209,0)
 . ; then initialize next patch/problem number by primary stream
"RTN","A1AEUTL",210,0)
 . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY)=A1AESTRM
"RTN","A1AEUTL",211,0)
 . Q
"RTN","A1AEUTL",212,0)
 ;
"RTN","A1AEUTL",213,0)
 ; 2. ensure next # defined for foia vista patch stream
"RTN","A1AEUTL",214,0)
 ;
"RTN","A1AEUTL",215,0)
 ; if next # for this app version for foia vista is not defined
"RTN","A1AEUTL",216,0)
 I '$D(^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,1,A1AETY)) D
"RTN","A1AEUTL",217,0)
 . ; we initialize next # for foia vista (next # = 1)
"RTN","A1AEUTL",218,0)
 . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,1,A1AETY)=1
"RTN","A1AEUTL",219,0)
 . Q
"RTN","A1AEUTL",220,0)
 ;
"RTN","A1AEUTL",221,0)
 ; 3. ensure next # defined for current patch stream
"RTN","A1AEUTL",222,0)
 ;
"RTN","A1AEUTL",223,0)
 ; if next # for this app version for current stream isn't defined
"RTN","A1AEUTL",224,0)
 I '$D(^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,A1AETY)) D
"RTN","A1AEUTL",225,0)
 . ; if this is a patch, then we must be splitting the app-version's
"RTN","A1AEUTL",226,0)
 . ; stream for the first time, so we need to:
"RTN","A1AEUTL",227,0)
 . I A1AETY="PH" D  ; create the info-only patch for split stream:
"RTN","A1AEUTL",228,0)
 . . D SETPACKG^A1AESPLT(A1AEPKIF,A1AEVR,A1AESTRM)
"RTN","A1AEUTL",229,0)
 . . Q
"RTN","A1AEUTL",230,0)
 . ; we initialize next # based for the current stream (e.g., 10001)
"RTN","A1AEUTL",231,0)
 . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,A1AETY)=A1AESTRM
"RTN","A1AEUTL",232,0)
 . Q
"RTN","A1AEUTL",233,0)
 ;
"RTN","A1AEUTL",234,0)
 ; 4. get next # based on current patch stream
"RTN","A1AEUTL",235,0)
 ;
"RTN","A1AEUTL",236,0)
 ; e.g., set A1AEPH based on PH node for current stream
"RTN","A1AEUTL",237,0)
 S @A1AEVAR=^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,A1AETY)
"RTN","A1AEUTL",238,0)
 ;
"RTN","A1AEUTL",239,0)
 ; 5. ensure next # is within range for current stream
"RTN","A1AEUTL",240,0)
 ;
"RTN","A1AEUTL",241,0)
 ; if next # is outside the range for current stream
"RTN","A1AEUTL",242,0)
 ; I (A1AEPH<A1AESTRM)!(A1AEPH>(A1AESTRM+999)) D  ; JLI 150607 commented out A1AEPH undefined
"RTN","A1AEUTL",243,0)
 I (@A1AEVAR<A1AESTRM)!(@A1AEVAR>(A1AESTRM+999)) D  ; JLI 150607 replaces previous line
"RTN","A1AEUTL",244,0)
 . ; reset current stream's next # to start of range
"RTN","A1AEUTL",245,0)
 . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,A1AESTRM,A1AETY)=A1AESTRM
"RTN","A1AEUTL",246,0)
 . ; and get next # based on that
"RTN","A1AEUTL",247,0)
 . S @A1AEVAR=A1AESTRM
"RTN","A1AEUTL",248,0)
 . Q
"RTN","A1AEUTL",249,0)
 ;
"RTN","A1AEUTL",250,0)
 QUIT  ; end of NUMINIT
"RTN","A1AEUTL",251,0)
 ;
"RTN","A1AEUTL",252,0)
 ;
"RTN","A1AEUTL",253,0)
 ; The logic under NUM always assigns the original form of PH and PB
"RTN","A1AEUTL",254,0)
 ; values to the stream number, with the ones that now are broken out
"RTN","A1AEUTL",255,0)
 ; under the streams, the code checked for whether the ones under VA
"RTN","A1AEUTL",256,0)
 ; FOIA existed or not, and if not set them to that value.  Well for a
"RTN","A1AEUTL",257,0)
 ; new version, which doesn't have a VA FOIA equivalent, this ended up
"RTN","A1AEUTL",258,0)
 ; setting the VA FOIA to the stream value for the other stream...
"RTN","A1AEUTL",259,0)
 ; So, yes, it needs to be changed.
"RTN","A1AEUTL",260,0)
 ;
"RTN","A1AEUTL",261,0)
 ;
"RTN","A1AEUTL",262,0)
SETNUM ; get & set last number & create stub record
"RTN","A1AEUTL",263,0)
 ;private;procedure
"RTN","A1AEUTL",264,0)
 ; called by:
"RTN","A1AEUTL",265,0)
 ;   SETNUM
"RTN","A1AEUTL",266,0)
 ;   ADDPATCH^A1AEK2M0: importing patches
"RTN","A1AEUTL",267,0)
 ; input:
"RTN","A1AEUTL",268,0)
 ;   A1AEPK = application prefix
"RTN","A1AEUTL",269,0)
 ;   A1AEVR = version #
"RTN","A1AEUTL",270,0)
 ;   A1AENB = patch/problem #
"RTN","A1AEUTL",271,0)
 ;   A1AEFL = file to update (11005)
"RTN","A1AEUTL",272,0)
 ; output:
"RTN","A1AEUTL",273,0)
 ;   DA = new patch/problem record #
"RTN","A1AEUTL",274,0)
 ;   A1AEPD = new patch's ID
"RTN","A1AEUTL",275,0)
 ; sets last # using new ab index
"RTN","A1AEUTL",276,0)
 ;
"RTN","A1AEUTL",277,0)
 ; a. retrieve primary patch stream, if missing
"RTN","A1AEUTL",278,0)
 ;
"RTN","A1AEUTL",279,0)
 ; if called from ADDPATCH^A1AEK2M0, init primary stream
"RTN","A1AEUTL",280,0)
 I '$D(A1AESTRM) N A1AESTRM D
"RTN","A1AEUTL",281,0)
 . S A1AESTRM=$$PRIMSTRM
"RTN","A1AEUTL",282,0)
 . Q
"RTN","A1AEUTL",283,0)
 ;
"RTN","A1AEUTL",284,0)
 ; b. set patch/problem id for new patch/problem
"RTN","A1AEUTL",285,0)
 ;
"RTN","A1AEUTL",286,0)
 ; patch laygo lookup value, e.g., ZZZ*2*next #
"RTN","A1AEUTL",287,0)
 N X S X=A1AEPK_"*"_A1AEVR_"*"_A1AENB ; set draft patch/problem id
"RTN","A1AEUTL",288,0)
 ; for passing into SETNUM1, as input to its ^DIC call
"RTN","A1AEUTL",289,0)
 ;
"RTN","A1AEUTL",290,0)
 ; if version has patches/problems
"RTN","A1AEUTL",291,0)
 I $D(^A1AE(A1AEFL,"AB",A1AEPK,A1AEVR)) D
"RTN","A1AEUTL",292,0)
 . ; get last patch/problem in stream (greatest number)
"RTN","A1AEUTL",293,0)
 . N XEND S XEND=$O(^A1AE(A1AEFL,"AB",A1AEPK,A1AEVR,A1AESTRM+990),-1)
"RTN","A1AEUTL",294,0)
 . ; nb use above of 990 instead of 999; that's to leave room for
"RTN","A1AEUTL",295,0)
 . ; utility patches, like XU*8*991, which are not actually part of the
"RTN","A1AEUTL",296,0)
 . ; main VA FOIA patch stream and should not be involved in the
"RTN","A1AEUTL",297,0)
 . ; last-patch calculation.
"RTN","A1AEUTL",298,0)
 . I XEND<A1AENB ; if our number is >= greatest, ok
"RTN","A1AEUTL",299,0)
 . E  D  ; else our patch is one greater than greatest
"RTN","A1AEUTL",300,0)
 . . S A1AENB=XEND+1 ; move next #
"RTN","A1AEUTL",301,0)
 . . S $P(X,"*",3)=A1AENB ; and update laygo lookup value
"RTN","A1AEUTL",302,0)
 . . Q
"RTN","A1AEUTL",303,0)
 ;
"RTN","A1AEUTL",304,0)
 ; c. create stub record
"RTN","A1AEUTL",305,0)
 ;
"RTN","A1AEUTL",306,0)
 N Y ; unneeded output from SETNUM1's ^DIC call
"RTN","A1AEUTL",307,0)
 D SETNUM1 ; create patch/problem stub record with new #
"RTN","A1AEUTL",308,0)
 ;
"RTN","A1AEUTL",309,0)
 ; d. update version & stream's next #
"RTN","A1AEUTL",310,0)
 ;
"RTN","A1AEUTL",311,0)
 I Y>0 D  ; if laygo lookup worked, update the last used
"RTN","A1AEUTL",312,0)
 . ; try lock for 1 sec, otherwise, quit. acuracy not that important
"RTN","A1AEUTL",313,0)
 . L +^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY):1 E  Q
"RTN","A1AEUTL",314,0)
 . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY)=A1AENB+1 ; set next #
"RTN","A1AEUTL",315,0)
 . ; and set it at the stream level as well:
"RTN","A1AEUTL",316,0)
 . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,1,$$PRIMSTRM,A1AETY)=A1AENB+1
"RTN","A1AEUTL",317,0)
 . L -^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY) ; unlock
"RTN","A1AEUTL",318,0)
 ;
"RTN","A1AEUTL",319,0)
 QUIT  ; end of SETNUM
"RTN","A1AEUTL",320,0)
 ;
"RTN","A1AEUTL",321,0)
 ;
"RTN","A1AEUTL",322,0)
SETNUM1 ; create patch/problem stub record
"RTN","A1AEUTL",323,0)
 ;private;procedure;not especially clean;silent;sac-compliant
"RTN","A1AEUTL",324,0)
 ; called by:
"RTN","A1AEUTL",325,0)
 ;   SETNUM
"RTN","A1AEUTL",326,0)
 ;   ADDPATCH^A1AEK2M0: importing patches
"RTN","A1AEUTL",327,0)
 ; input:
"RTN","A1AEUTL",328,0)
 ;   A1AEFL = file to update (11005)
"RTN","A1AEUTL",329,0)
 ;   A1AENB = new patch # to assign
"RTN","A1AEUTL",330,0)
 ;   A1AEPKIF = new patch's package namespace
"RTN","A1AEUTL",331,0)
 ;   A1AEVR = new patch's version #
"RTN","A1AEUTL",332,0)
 ;   X = new patch's ID
"RTN","A1AEUTL",333,0)
 ; output:
"RTN","A1AEUTL",334,0)
 ;   DA = new patch's record #
"RTN","A1AEUTL",335,0)
 ;   A1AEPD = new patch's ID
"RTN","A1AEUTL",336,0)
 ;   Y = new patch's record #
"RTN","A1AEUTL",337,0)
 ;
"RTN","A1AEUTL",338,0)
 S DIC="^A1AE(A1AEFL," ; either patch (11005) or problem (11006) file
"RTN","A1AEUTL",339,0)
 S DIC(0)=$G(DIC(0),"LE") ; laygo, echo, unless already defined
"RTN","A1AEUTL",340,0)
 D ^DIC ; do laygo lookup
"RTN","A1AEUTL",341,0)
 Q:Y<0
"RTN","A1AEUTL",342,0)
 S DA=+Y
"RTN","A1AEUTL",343,0)
 S A1AEPD=$P(Y,U,2) ; patch/problem id
"RTN","A1AEUTL",344,0)
 S $P(^A1AE(A1AEFL,DA,0),U,2,4)=A1AEPKIF_U_A1AEVR_U_A1AENB ; stub record
"RTN","A1AEUTL",345,0)
 S ^A1AE(A1AEFL,"D",A1AEPKIF,DA)="" ; ensure D index entry is made
"RTN","A1AEUTL",346,0)
 ;
"RTN","A1AEUTL",347,0)
 QUIT  ; end of SETNUM1
"RTN","A1AEUTL",348,0)
 ;
"RTN","A1AEUTL",349,0)
 ;
"RTN","A1AEUTL",350,0)
PRT ; print field record printed by
"RTN","A1AEUTL",351,0)
 ; Called by last line of print template A1AE STANDARD PRINT
"RTN","A1AEUTL",352,0)
 ;
"RTN","A1AEUTL",353,0)
 L +^A1AE(11005,D0,2):60
"RTN","A1AEUTL",354,0)
 ;
"RTN","A1AEUTL",355,0)
 I '$D(^A1AE(11005,D0,2,0)) D
"RTN","A1AEUTL",356,0)
 . S ^(0)="^11005.02P^^"
"RTN","A1AEUTL",357,0)
 . Q
"RTN","A1AEUTL",358,0)
 I '$D(^A1AE(11005,D0,2,DUZ,0)) D
"RTN","A1AEUTL",359,0)
 . S $P(^(0),U,1,2)=DUZ_"^"_DT
"RTN","A1AEUTL",360,0)
 . S $P(^(0),U,4)=$P(^A1AE(11005,D0,2,0),U,4)+1
"RTN","A1AEUTL",361,0)
 . Q
"RTN","A1AEUTL",362,0)
 S $P(^A1AE(11005,D0,2,DUZ,0),U,3)=DT
"RTN","A1AEUTL",363,0)
 S $P(^A1AE(11005,D0,2,0),U,3)=DUZ
"RTN","A1AEUTL",364,0)
 S ^A1AE(11005,"AU",DUZ,+$P(^A1AE(11005,D0,0),U,2),(9999999-DT))=""
"RTN","A1AEUTL",365,0)
 ;
"RTN","A1AEUTL",366,0)
 L -^A1AE(11005,D0,2)
"RTN","A1AEUTL",367,0)
 ;
"RTN","A1AEUTL",368,0)
 QUIT  ; end of PRT
"RTN","A1AEUTL",369,0)
 ;
"RTN","A1AEUTL",370,0)
EASCREEN(PATHDR) ; screen patch selection for option A1AE POST VERIFY
"RTN","A1AEUTL",371,0)
 ; called by DIC("S") by ^DIC from ENVER
"RTN","A1AEUTL",372,0)
 ; input:
"RTN","A1AEUTL",373,0)
 ;   PATHDR = header (0) node of patch record in file 11005
"RTN","A1AEUTL",374,0)
 ; output = true (1) if patch may be selected, else false (0)
"RTN","A1AEUTL",375,0)
 ;
"RTN","A1AEUTL",376,0)
 N ALLOW S ALLOW=0 ; default to not allowing selection
"RTN","A1AEUTL",377,0)
 D
"RTN","A1AEUTL",378,0)
 . Q:$P(PATHDR,U,8)'="v"  ; field patch status (8) must be verified
"RTN","A1AEUTL",379,0)
 . Q:$P(PATHDR,U,14)'=.5  ; field user verify (14) must be postmaster
"RTN","A1AEUTL",380,0)
 . Q:$P(PATHDR,U,9)=DUZ  ; field user entering (9) can't be current user
"RTN","A1AEUTL",381,0)
 . Q:$P(PATHDR,U,13)=DUZ  ; field user completion (13) can't be current
"RTN","A1AEUTL",382,0)
 . ; get hdr node of record for current user in subfile support
"RTN","A1AEUTL",383,0)
 . ; personnel (100/11007.02) in file dhcp patch/problem package (11007)
"RTN","A1AEUTL",384,0)
 . N USER S USER=$G(^A1AE(11007,+$P(PATHDR,U,2),"PB",DUZ,0))
"RTN","A1AEUTL",385,0)
 . Q:USER=""  ; current user must be listed as support personnel
"RTN","A1AEUTL",386,0)
 . ; current user's field verify personnel (2) must indicate current
"RTN","A1AEUTL",387,0)
 . Q:$P(USER,U,2)'="V"  ; user is a verifier for this application
"RTN","A1AEUTL",388,0)
 . S ALLOW=1 ; if patch passes all those tests, we can select it
"RTN","A1AEUTL",389,0)
 ;
"RTN","A1AEUTL",390,0)
 QUIT ALLOW
"RTN","A1AEUTL",391,0)
 ;
"RTN","A1AEUTL",392,0)
NEWVER(PKIEN,PCHIEN) ; set up a new version for application
"RTN","A1AEUTL",393,0)
 ; called when a new version of an application is released
"RTN","A1AEUTL",394,0)
 ; called by:
"RTN","A1AEUTL",395,0)
 ;   C^A1AEPHS
"RTN","A1AEUTL",396,0)
 ;   S2R2^A1AEPHS
"RTN","A1AEUTL",397,0)
 ;
"RTN","A1AEUTL",398,0)
 ;^A1AE(11007,A1AEPKIF,"V",A1AEVR)
"RTN","A1AEUTL",399,0)
 N X S X=$G(^A1AE(11005,PCHIEN,0))
"RTN","A1AEUTL",400,0)
 N NAME S NAME=$P($G(^A1AE(11005,PCHIEN,4)),U)
"RTN","A1AEUTL",401,0)
 Q:'$L(NAME)  ; not an application-version release
"RTN","A1AEUTL",402,0)
 N PV S PV=+$P(NAME," ",$L(NAME," "))
"RTN","A1AEUTL",403,0)
 N IEN S IEN="+1,"_PKIEN_","
"RTN","A1AEUTL",404,0)
 S IEN(1)=PV
"RTN","A1AEUTL",405,0)
 N FDA S FDA(11007.01,IEN,.01)=PV
"RTN","A1AEUTL",406,0)
 S FDA(11007.01,IEN,2)=$$DT^XLFDT
"RTN","A1AEUTL",407,0)
 K IEN
"RTN","A1AEUTL",408,0)
 N Y
"RTN","A1AEUTL",409,0)
 D UPDATE^DIE("","FDA","IEN")
"RTN","A1AEUTL",410,0)
 ;
"RTN","A1AEUTL",411,0)
 QUIT
"RTN","A1AEUTL",412,0)
 ;
"RTN","A1AEUTL",413,0)
 ;
"RTN","A1AEUTL",414,0)
PRIMSTRM() ; See comments
"RTN","A1AEUTL",415,0)
 ; if no records, add FOIA VISTA
"RTN","A1AEUTL",416,0)
 I '$D(^A1AE(11007.1,1,0)) D
"RTN","A1AEUTL",417,0)
 . S ^(0)="FOIA VISTA^0^^^FV" ; set Name, Primary?, & Abbreviation
"RTN","A1AEUTL",418,0)
 . N DA S DA=1
"RTN","A1AEUTL",419,0)
 . N DIK S DIK="^A1AE(11007.1,"
"RTN","A1AEUTL",420,0)
 . D IX1^DIK ; cross-reference
"RTN","A1AEUTL",421,0)
 . Q
"RTN","A1AEUTL",422,0)
 ;
"RTN","A1AEUTL",423,0)
 ; get primary stream number using APRIM index
"RTN","A1AEUTL",424,0)
 N PSN S PSN=$O(^A1AE(11007.1,"APRIM",1,"")) ; primary stream #
"RTN","A1AEUTL",425,0)
 ; if not found, site is unconfigured
"RTN","A1AEUTL",426,0)
 I 'PSN S PSN=10**6+1 ; default to 1,000,001
"RTN","A1AEUTL",427,0)
 ;
"RTN","A1AEUTL",428,0)
 QUIT PSN
"RTN","A1AEUTL",429,0)
 ;
"RTN","A1AEUTL",430,0)
 ;
"RTN","A1AEUTL",431,0)
ID11005 ; See comments
"RTN","A1AEUTL",432,0)
 N ID S ID="" ; initialize identifier
"RTN","A1AEUTL",433,0)
 I '$G(DIQUIET),$X<33 W ?32 ; align subject column
"RTN","A1AEUTL",434,0)
 N X S X=$X ; current X position
"RTN","A1AEUTL",435,0)
 N IDLEN S IDLEN=80-X ; maximum room for identifier
"RTN","A1AEUTL",436,0)
 N DELIM S DELIM=" " ; write ID component delimiter, default to space
"RTN","A1AEUTL",437,0)
 I $G(DIQUIET) S DELIM="|" ; | delim in silent mode
"RTN","A1AEUTL",438,0)
 ;
"RTN","A1AEUTL",439,0)
 N PATCH S PATCH=^(0) ; DHCP Patches record's header
"RTN","A1AEUTL",440,0)
 N NODE5 S NODE5=$G(^(5)) ; DHCP Patches record's node 5
"RTN","A1AEUTL",441,0)
 ;
"RTN","A1AEUTL",442,0)
 ; [Stream]Subject
"RTN","A1AEUTL",443,0)
 S ID=$$STRMSUBJ(.IDLEN,PATCH,DELIM)
"RTN","A1AEUTL",444,0)
 ;
"RTN","A1AEUTL",445,0)
 ; padding:
"RTN","A1AEUTL",446,0)
 N PAD S $P(PAD," ",IDLEN-8)="" ; create pad
"RTN","A1AEUTL",447,0)
 I '$G(DIQUIET) S ID=ID_PAD ; add pad to ID
"RTN","A1AEUTL",448,0)
 ;
"RTN","A1AEUTL",449,0)
 ; Status:
"RTN","A1AEUTL",450,0)
 N STATUS S STATUS=$P(PATCH,U,8) ; field Status of Patch (8)
"RTN","A1AEUTL",451,0)
 N DDSTATUS S DDSTATUS=^DD(11005,8,0) ; definition of field 8, header
"RTN","A1AEUTL",452,0)
 N DDSET S DDSET=$P(DDSTATUS,U,3) ; definition of set of codes
"RTN","A1AEUTL",453,0)
 N STATCODE S STATCODE=$P($P(DDSET,STATUS_":",2),";") ; external val
"RTN","A1AEUTL",454,0)
 I $E(STATUS)=2 D  ; special abbreviations for sec statuses
"RTN","A1AEUTL",455,0)
 . I STATUS="i2" S STATCODE="2IR" Q  ; in review
"RTN","A1AEUTL",456,0)
 . I STATUS="d2" S STATCODE="2UN" Q  ; sec development
"RTN","A1AEUTL",457,0)
 . I STATUS="s2" S STATCODE="2CO" Q  ; sec completion
"RTN","A1AEUTL",458,0)
 . I STATUS="r2" S STATCODE="2VE" Q  ; sec release
"RTN","A1AEUTL",459,0)
 . I STATUS="n2" S STATCODE="2NO" Q  ; not for sec release
"RTN","A1AEUTL",460,0)
 S ID=ID_$E(STATCODE,1,3)_DELIM ; add Status to ID
"RTN","A1AEUTL",461,0)
 ;
"RTN","A1AEUTL",462,0)
 ; User:
"RTN","A1AEUTL",463,0)
 N USERENTR S USERENTR=+$P(PATCH,U,9) ; field User Entering (9)
"RTN","A1AEUTL",464,0)
 N USER S USER=$G(^VA(200,USERENTR,0)) ; New Person record's header
"RTN","A1AEUTL",465,0)
 N INITIAL S INITIAL=$P(USER,U,2) ; field Initial (1) of file 200
"RTN","A1AEUTL",466,0)
 I INITIAL="" S INITIAL="unknown" ; if no user or no initials
"RTN","A1AEUTL",467,0)
 S ID=ID_$E(INITIAL,1,3) ; add User to ID
"RTN","A1AEUTL",468,0)
 ;
"RTN","A1AEUTL",469,0)
 ; output write ID:
"RTN","A1AEUTL",470,0)
 N TAB S TAB=$S(X<33:32,1:X-1) ; tab for terminal
"RTN","A1AEUTL",471,0)
 I $G(DIQUIET) S TAB=0 ; don't tab for GUI
"RTN","A1AEUTL",472,0)
 D EN^DDIOL(ID,"","?"_TAB) ; output the write ID
"RTN","A1AEUTL",473,0)
 ;
"RTN","A1AEUTL",474,0)
 N DERIVED S DERIVED=$P(NODE5,U,2) ; field Derived from Patch
"RTN","A1AEUTL",475,0)
 Q:'DERIVED  ; line 2 of identifier is only for derived patches
"RTN","A1AEUTL",476,0)
 N ORIG S ORIG=$G(^A1AE(11005,DERIVED,0)) ; derived patch's header
"RTN","A1AEUTL",477,0)
 Q:ORIG=""  ; if no real patch, then no line 2
"RTN","A1AEUTL",478,0)
 ;
"RTN","A1AEUTL",479,0)
 ; derived from [Stream]Subject
"RTN","A1AEUTL",480,0)
 S IDLEN=45 ; plenty of room
"RTN","A1AEUTL",481,0)
 N IDLINE2 S IDLINE2="derived from "_$$STRMSUBJ(.IDLEN,ORIG,DELIM)
"RTN","A1AEUTL",482,0)
 S IDLINE2=$P(IDLINE2,"]")_"]"_$P(ORIG,U) ; **FIX THIS LATER**
"RTN","A1AEUTL",483,0)
 ;
"RTN","A1AEUTL",484,0)
 ; output write ID:
"RTN","A1AEUTL",485,0)
 S TAB=32 ; tab for terminal
"RTN","A1AEUTL",486,0)
 I $G(DIQUIET) S TAB=0 ; don't tab for GUI
"RTN","A1AEUTL",487,0)
 D EN^DDIOL(IDLINE2,"","!?"_TAB) ; output the write ID
"RTN","A1AEUTL",488,0)
 ;
"RTN","A1AEUTL",489,0)
 QUIT  ; end of ID11005
"RTN","A1AEUTL",490,0)
 ;
"RTN","A1AEUTL",491,0)
 ;
"RTN","A1AEUTL",492,0)
STRMSUBJ(IDLEN,PATCH,DELIM) ; [Stream]Subject; See comments
"RTN","A1AEUTL",493,0)
 N ID S ID="" ; return value
"RTN","A1AEUTL",494,0)
 ;
"RTN","A1AEUTL",495,0)
 ; Stream:
"RTN","A1AEUTL",496,0)
 N STREAMDA S STREAMDA=$P(PATCH,U,20) ; field Patch Stream (.2)
"RTN","A1AEUTL",497,0)
 N STREAM S STREAM=$G(^A1AE(11007.1,+STREAMDA,0)) ; record hdr
"RTN","A1AEUTL",498,0)
 S STRABB=$P(STREAM,U,5) ; field Abbreviation (.05)
"RTN","A1AEUTL",499,0)
 I STRABB'="" D  ; skip stream if empty
"RTN","A1AEUTL",500,0)
 . S ID="["_STRABB_"]" ; add Stream to ID
"RTN","A1AEUTL",501,0)
 . S IDLEN=IDLEN-$L(ID) ; decrease room
"RTN","A1AEUTL",502,0)
 ;
"RTN","A1AEUTL",503,0)
 ; Subject:
"RTN","A1AEUTL",504,0)
 N SUBJECT S SUBJECT=$P(PATCH,U,5) ; field Patch Subject (5)
"RTN","A1AEUTL",505,0)
 N SUBJABB S SUBJABB=$E(SUBJECT,1,IDLEN-10) ; make it fit
"RTN","A1AEUTL",506,0)
 S ID=ID_SUBJABB_DELIM ; add Subject to ID
"RTN","A1AEUTL",507,0)
 S IDLEN=IDLEN-$L(SUBJABB) ; decrease room
"RTN","A1AEUTL",508,0)
 ;
"RTN","A1AEUTL",509,0)
 QUIT ID ; end of $$STRMSUBJ(): return [Stream]Subject
"RTN","A1AEUTL",510,0)
 ;
"RTN","A1AEUTL",511,0)
 ;
"RTN","A1AEUTL",512,0)
ASUBCNG(D0) ; See comments
"RTN","A1AEUTL",513,0)
 N DIERR,A1AEFDA,A1AEFDAI
"RTN","A1AEUTL",514,0)
 S A1AEFDA(3,11007.12,"+1,"_D0_",",.01)=$$HTFM^XLFDT($H)
"RTN","A1AEUTL",515,0)
 S A1AEFDA(3,11007.12,"+1,"_D0_",",1)=$G(DUZ)
"RTN","A1AEUTL",516,0)
 D UPDATE^DIE("","A1AEFDA(3)","A1AEFDAI")
"RTN","A1AEUTL",517,0)
 QUIT
"RTN","A1AEUTL",518,0)
 ;
"RTN","A1AEUTL",519,0)
STRMBPN ; get PATCH STREAM by evaluating the PATCH NUMBER
"RTN","A1AEUTL",520,0)
 ; input:
"RTN","A1AEUTL",521,0)
 ;   DA = entry under construction in file DHCP PATCHES (11005)
"RTN","A1AEUTL",522,0)
 ; output:
"RTN","A1AEUTL",523,0)
 ;   sets field patch stream (.2) based on patch number
"RTN","A1AEUTL",524,0)
 ;
"RTN","A1AEUTL",525,0)
 ; 1. id patch's proper stream
"RTN","A1AEUTL",526,0)
 ;
"RTN","A1AEUTL",527,0)
 Q:'DA
"RTN","A1AEUTL",528,0)
 N STRM S STRM=$$GSTRMP(DA) ; get patch's stream
"RTN","A1AEUTL",529,0)
 Q:'STRM
"RTN","A1AEUTL",530,0)
 ;
"RTN","A1AEUTL",531,0)
 ; 2. assign stream and repair index
"RTN","A1AEUTL",532,0)
 ;
"RTN","A1AEUTL",533,0)
 S $P(^A1AE(11005,DA,0),U,20)=STRM ; save in field .2
"RTN","A1AEUTL",534,0)
 ;
"RTN","A1AEUTL",535,0)
 N DIK S DIK="^A1AE(11005,"
"RTN","A1AEUTL",536,0)
 S DIK(1)=.2
"RTN","A1AEUTL",537,0)
 D EN1^DIK ; reindex
"RTN","A1AEUTL",538,0)
 ;
"RTN","A1AEUTL",539,0)
 QUIT  ; end of STRMBPN
"RTN","A1AEUTL",540,0)
 ;
"RTN","A1AEUTL",541,0)
 ;
"RTN","A1AEUTL",542,0)
GSTRMP(DA) ; get PATCH STREAM by evaluating the PATCH NUMBER
"RTN","A1AEUTL",543,0)
 ; input:
"RTN","A1AEUTL",544,0)
 ;  DA into DHCP PATCHES [#11005] file
"RTN","A1AEUTL",545,0)
 ; output:
"RTN","A1AEUTL",546,0)
 ;  PATCH STREAM or 0
"RTN","A1AEUTL",547,0)
 ;
"RTN","A1AEUTL",548,0)
 ; 1. id patch
"RTN","A1AEUTL",549,0)
 ;
"RTN","A1AEUTL",550,0)
 Q:'$G(DA) 0
"RTN","A1AEUTL",551,0)
 Q:'$D(^A1AE(11005,DA,0)) 0
"RTN","A1AEUTL",552,0)
 N PNM S PNM=$P($P($G(^A1AE(11005,DA,0)),U),"*",3)
"RTN","A1AEUTL",553,0)
 Q:'PNM 0
"RTN","A1AEUTL",554,0)
 ;
"RTN","A1AEUTL",555,0)
 ; 2. id its stream
"RTN","A1AEUTL",556,0)
 ;
"RTN","A1AEUTL",557,0)
 ; Find STRM by checking patch number against 11007.1
"RTN","A1AEUTL",558,0)
 N STRM S STRM=$O(^A1AE(11007.1,PNM),-1)
"RTN","A1AEUTL",559,0)
 S:'STRM STRM=$O(^A1AE(11007.1,PNM+1),-1)
"RTN","A1AEUTL",560,0)
 ;
"RTN","A1AEUTL",561,0)
 QUIT STRM ; end of $$GSTRMP ; return patch stream
"RTN","XPDIJ1")
0^1^B31760393
"RTN","XPDIJ1",1,0)
XPDIJ1 ;SFISC/RSD - Cont. of Install Job ;2015-06-13  8:27 PM
"RTN","XPDIJ1",2,0)
 ;;8.0;KERNEL;**41,68,108,200,559,PM2.5**;Jul 10, 1995;Build 35
"RTN","XPDIJ1",3,0)
 ;Per VHA Directive  2004-038, this routine should not be modified.
"RTN","XPDIJ1",4,0)
 ; 20141119 VEN/JLI - insertion made to support updating DHCP PATHCHES file (#11005) if functionality exists
"RTN","XPDIJ1",5,0)
IN ;install XPDA
"RTN","XPDIJ1",6,0)
 ;XPDA=ien of file 9.7, XPDNM=package name
"RTN","XPDIJ1",7,0)
 Q:'$D(^XTMP("XPDI",XPDA))!'$D(^XPD(9.7,XPDA,0))
"RTN","XPDIJ1",8,0)
 ;check if already installed
"RTN","XPDIJ1",9,0)
 I $P($G(^XPD(9.7,XPDA,1)),U,3) D BMES^XPDUTL(" "_XPDNM_" Already Installed ") Q
"RTN","XPDIJ1",10,0)
 N DIFROM,XPD,XPD0,XPDBLD,XPDCHECK,XPDCP,XPDI,XPDGREF,XPDIST,XPDIDTOT,XPDIDCNT,XPDIDMOD,XPDRTN
"RTN","XPDIJ1",11,0)
 ;XPDBLD subscript for build entry i.e. ^XTMP("XPDI",XPDA,"BLD",XPDBLD
"RTN","XPDIJ1",12,0)
 S DIFROM=$$VER^XPDUTL(XPDNM),XPDBLD=$O(^XTMP("XPDI",XPDA,"BLD",0)),XPDGREF="^XTMP(""XPDI"","_XPDA_",""TEMP"")"
"RTN","XPDIJ1",13,0)
 D TITLE^XPDID(XPDNM)
"RTN","XPDIJ1",14,0)
 ;^XTMP("XPDI",XPDA,"BLD",XPDBLD,6) is set when the msg is loaded.  Forum adds this as the last line of the msg.
"RTN","XPDIJ1",15,0)
 ;add Package file entry if sent, set TEST # & SEQ #
"RTN","XPDIJ1",16,0)
 S Y=$$PKGADD^XPDIP,XPD0=^XTMP("XPDI",XPDA,"BLD",XPDBLD,0),Y=$G(^(6)),XPDNM("TST")=$P(Y,U),XPDNM("SEQ")=$P(Y,U,2)
"RTN","XPDIJ1",17,0)
 I '$$CHK(11) D
"RTN","XPDIJ1",18,0)
 .D BMES^XPDUTL(" Install Started for "_XPDNM_" : "),STMP(11)
"RTN","XPDIJ1",19,0)
 .;update status, installed by fields and distribution date
"RTN","XPDIJ1",20,0)
 .S XPD(9.7,XPDA_",",.02)=2,XPD(9.7,XPDA_",",9)=DUZ,XPD(9.7,XPDA_",",51)=$P(XPD0,U,4)
"RTN","XPDIJ1",21,0)
 .D FILE^DIE("","XPD")
"RTN","XPDIJ1",22,0)
 E  D BMES^XPDUTL(" Install Restarted for "_XPDNM_" at "_$$HTE^XLFDT($H))
"RTN","XPDIJ1",23,0)
 D BMES^XPDUTL("Build Distribution Date: "_$$FMTE^XLFDT($P(XPD0,U,4)))
"RTN","XPDIJ1",24,0)
 D RTN Q:$D(XPDABORT)
"RTN","XPDIJ1",25,0)
 ; 20141119 VEN/JLI - the following line added to update PATCH file (#11004) if functionality exists and patch includes data for file #11004
"RTN","XPDIJ1",26,0)
 I $T(INSTALL^A1AEBLD)'="" D INSTALL^A1AEBLD(XPDNM)
"RTN","XPDIJ1",27,0)
 ; VEN/JLI 20141119 - end of insertion
"RTN","XPDIJ1",28,0)
 D PRE Q:$D(XPDABORT)
"RTN","XPDIJ1",29,0)
 D FMDATA Q:$D(XPDABORT)
"RTN","XPDIJ1",30,0)
 D COMP Q:$D(XPDABORT)
"RTN","XPDIJ1",31,0)
 D POST:$G(XPDT("MASTER"))'=XPDA
"RTN","XPDIJ1",32,0)
 Q  ;Finshed
"RTN","XPDIJ1",33,0)
 ;
"RTN","XPDIJ1",34,0)
RTN I '$$CHK(12) D
"RTN","XPDIJ1",35,0)
 .D BMES^XPDUTL(" Installing Routines:"),SETTOT^XPDID(9.8),RTN^XPDIJ(XPDA),STMP(12)
"RTN","XPDIJ1",36,0)
 E  D BMES^XPDUTL(" Routines already installed.")
"RTN","XPDIJ1",37,0)
 Q
"RTN","XPDIJ1",38,0)
 ;
"RTN","XPDIJ1",39,0)
PRE S XPDCP="INI"
"RTN","XPDIJ1",40,0)
 ;check if pre-install has completed
"RTN","XPDIJ1",41,0)
 I '$$VERCP^XPDUTL("XPD PREINSTALL COMPLETED") D  Q:$D(XPDABORT)
"RTN","XPDIJ1",42,0)
 .;setup XPDQUES array with pre-install questions/answers
"RTN","XPDIJ1",43,0)
 .D QUES^XPDIQ("PRE")
"RTN","XPDIJ1",44,0)
 .;XPDCHECK=ien of current checkpoint, (0)=name of checkpoint
"RTN","XPDIJ1",45,0)
 .;XPDCP="INI"-pre install or "INIT"-post install
"RTN","XPDIJ1",46,0)
 .;loop thru check points starting with INSTALL STARTED
"RTN","XPDIJ1",47,0)
 .S XPDCHECK=1
"RTN","XPDIJ1",48,0)
 .F  S XPDCHECK=$O(^XPD(9.7,XPDA,"INI",XPDCHECK)) Q:'XPDCHECK  S XPD=^(XPDCHECK,0) D  Q:$D(XPDABORT)
"RTN","XPDIJ1",49,0)
 ..;if there is no call back, quit
"RTN","XPDIJ1",50,0)
 ..Q:$G(^XPD(9.7,XPDA,"INI",XPDCHECK,1))=""  S XPDRTN=^(1)
"RTN","XPDIJ1",51,0)
 ..;check if checkpoint has been completed
"RTN","XPDIJ1",52,0)
 ..Q:$P(XPD,U,2)
"RTN","XPDIJ1",53,0)
 ..I XPDCHECK=2 D BMES^XPDUTL(" Running Pre-Install Routine: "_XPDRTN)
"RTN","XPDIJ1",54,0)
 ..;zero the progress bar
"RTN","XPDIJ1",55,0)
 ..I $D(XPDIDVT) S XPDIDTOT=0 D UPDATE^XPDID(0)
"RTN","XPDIJ1",56,0)
 ..D @XPDRTN
"RTN","XPDIJ1",57,0)
 ..;write message and abort if developer wants
"RTN","XPDIJ1",58,0)
 ..I $D(XPDABORT) D BMES^XPDUTL("Install ** ABORTED ** in Pre-Install program") Q
"RTN","XPDIJ1",59,0)
 ..S %=$$COMCP^XPDUTL(XPDCHECK)
"RTN","XPDIJ1",60,0)
 .Q:$D(XPDABORT)
"RTN","XPDIJ1",61,0)
 .;complete pre-init check point
"RTN","XPDIJ1",62,0)
 .S %=$$COMCP^XPDUTL("XPD PREINSTALL COMPLETED")
"RTN","XPDIJ1",63,0)
 E  D BMES^XPDUTL(" Pre-Install already finished.")
"RTN","XPDIJ1",64,0)
 Q
"RTN","XPDIJ1",65,0)
 ;
"RTN","XPDIJ1",66,0)
FMDATA ;build XPDQUES arrays for all of the FM Files
"RTN","XPDIJ1",67,0)
 D QUES^XPDIQ("XPF")
"RTN","XPDIJ1",68,0)
 ;check the last file and see if it's already installed
"RTN","XPDIJ1",69,0)
 S XPD=$G(^(+$O(^XPD(9.7,XPDA,4,"A"),-1),0))
"RTN","XPDIJ1",70,0)
 I '$P(XPD,U,2) D:$D(^XTMP("XPDI",XPDA,"FIA"))
"RTN","XPDIJ1",71,0)
 .D BMES^XPDUTL(" Installing Data Dictionaries: "),SETTOT^XPDID(4),FIA^XPDIK,MES^XPDUTL("               "_$$HTE^XLFDT($H))
"RTN","XPDIJ1",72,0)
 E  D BMES^XPDUTL(" Data Dictionaries already installed.")
"RTN","XPDIJ1",73,0)
 S %=+$O(^XTMP("XPDI",XPDA,"DATA",""),-1),XPD=$G(^XPD(9.7,XPDA,4,%,0))
"RTN","XPDIJ1",74,0)
 I '$P(XPD,U,3) D:%
"RTN","XPDIJ1",75,0)
 .D BMES^XPDUTL(" Installing Data: "),DAT^XPDIK,MES^XPDUTL("               "_$$HTE^XLFDT($H))
"RTN","XPDIJ1",76,0)
 E  D BMES^XPDUTL(" Data already installed.")
"RTN","XPDIJ1",77,0)
 Q
"RTN","XPDIJ1",78,0)
 ;
"RTN","XPDIJ1",79,0)
COMP S (%,XPD)=""
"RTN","XPDIJ1",80,0)
 F  S %=+$O(^XPD(9.7,XPDA,"KRN",%)) Q:'%  S XPD=$G(^(%,0)) Q:'$P(XPD,U,2)
"RTN","XPDIJ1",81,0)
 I '$P(XPD,U,2) D:$D(^XTMP("XPDI",XPDA,"KRN"))
"RTN","XPDIJ1",82,0)
 .D BMES^XPDUTL(" Installing PACKAGE COMPONENTS: "),KRN^XPDIK,MES^XPDUTL("               "_$$HTE^XLFDT($H))
"RTN","XPDIJ1",83,0)
 E  D BMES^XPDUTL(" PACKAGE COMPONENTS already installed.")
"RTN","XPDIJ1",84,0)
 Q
"RTN","XPDIJ1",85,0)
 ;
"RTN","XPDIJ1",86,0)
POST S XPDCP="INIT"
"RTN","XPDIJ1",87,0)
 ;check if post-install has completed
"RTN","XPDIJ1",88,0)
 I '$$VERCP^XPDUTL("XPD POSTINSTALL COMPLETED") D  Q:$D(XPDABORT)
"RTN","XPDIJ1",89,0)
 .;setup XPDQUES array with post-install questions/answers
"RTN","XPDIJ1",90,0)
 .D QUES^XPDIQ("POS")
"RTN","XPDIJ1",91,0)
 .;loop thru check points starting with INSTALL STARTED
"RTN","XPDIJ1",92,0)
 .S XPDCHECK=1
"RTN","XPDIJ1",93,0)
 .F  S XPDCHECK=$O(^XPD(9.7,XPDA,"INIT",XPDCHECK)) Q:'XPDCHECK  S XPD=^(XPDCHECK,0) D  Q:$D(XPDABORT)
"RTN","XPDIJ1",94,0)
 ..;if there is no call back, quit
"RTN","XPDIJ1",95,0)
 ..Q:$G(^XPD(9.7,XPDA,"INIT",XPDCHECK,1))=""  S XPDRTN=^(1)
"RTN","XPDIJ1",96,0)
 ..;quit if checkpoint has completed time
"RTN","XPDIJ1",97,0)
 ..Q:$P(XPD,U,2)
"RTN","XPDIJ1",98,0)
 ..I XPDCHECK=2 D BMES^XPDUTL(" Running Post-Install Routine: "_XPDRTN)
"RTN","XPDIJ1",99,0)
 ..;zero the progress bar
"RTN","XPDIJ1",100,0)
 ..I $D(XPDIDVT) S XPDIDTOT=0 D UPDATE^XPDID(0)
"RTN","XPDIJ1",101,0)
 ..D @XPDRTN
"RTN","XPDIJ1",102,0)
 ..;write message and abort if developer wants
"RTN","XPDIJ1",103,0)
 ..I $D(XPDABORT) D BMES^XPDUTL("Install ** ABORTED ** in Post-Install program") Q
"RTN","XPDIJ1",104,0)
 ..S %=$$COMCP^XPDUTL(XPDCHECK)
"RTN","XPDIJ1",105,0)
 .Q:$D(XPDABORT)
"RTN","XPDIJ1",106,0)
 .;complete post-init check point
"RTN","XPDIJ1",107,0)
 .S %=$$COMCP^XPDUTL("XPD POSTINSTALL COMPLETED")
"RTN","XPDIJ1",108,0)
 E  D BMES^XPDUTL(" Post-Install already finished.")
"RTN","XPDIJ1",109,0)
 ;move routines to install file & Routine file
"RTN","XPDIJ1",110,0)
 D BMES^XPDUTL(" Updating Routine file..."),SETTOT^XPDID(9.8),RTN^XPDIP
"RTN","XPDIJ1",111,0)
 ;XPDIST is flag for site tracking^A/B install message, it is set in PKG^XPDIP
"RTN","XPDIJ1",112,0)
 ;install Package file, OERR parameter multiple, and Build file
"RTN","XPDIJ1",113,0)
 S XPDIST="" D BMES^XPDUTL(" Updating KIDS files..."),PKG^XPDIP
"RTN","XPDIJ1",114,0)
 D BMES^XPDUTL(" "_XPDNM_" Installed. "),STMP(17)
"RTN","XPDIJ1",115,0)
 ;sends install messages local/forum
"RTN","XPDIJ1",116,0)
 S %=$$EN^XPDIST(XPDA,XPDIST) D BMES^XPDUTL(" "_$P("NO ",U,'$P(%,"#",2))_"Install Message sent "_%)
"RTN","XPDIJ1",117,0)
 Q
"RTN","XPDIJ1",118,0)
CHK(X) ;check checkpoints in file 9.7, X=field #, returns 1=completed, 0=not completed
"RTN","XPDIJ1",119,0)
 Q $$GET1^DIQ(9.7,XPDA_",",X,"I")]""
"RTN","XPDIJ1",120,0)
 ;
"RTN","XPDIJ1",121,0)
STMP(X) ;timestamp checkpoints in file 9.7, X=field #
"RTN","XPDIJ1",122,0)
 N XPD,%
"RTN","XPDIJ1",123,0)
 S %=$$NOW^XLFDT,XPD(9.7,XPDA_",",X)=%
"RTN","XPDIJ1",124,0)
 D MES^XPDUTL("               "_$$FMTE^XLFDT(%)),FILE^DIE("","XPD")
"RTN","XPDIJ1",125,0)
 Q
"RTN","XPDIJ1",126,0)
 ;
"RTN","XPDIJ1",127,0)
INHIBIT(SET) ;Set/Clear the Inhibit logon field.
"RTN","XPDIJ1",128,0)
 N VOL,IEN
"RTN","XPDIJ1",129,0)
 F IEN=0:0 S IEN=$O(^%ZIS(14.5,IEN)) Q:IEN'>0  D
"RTN","XPDIJ1",130,0)
 . I $P(^%ZIS(14.5,IEN,0),U,11)=1 S VOL(14.5,IEN_",",1)=SET
"RTN","XPDIJ1",131,0)
 . Q
"RTN","XPDIJ1",132,0)
 D FILE^DIE("","VOL")
"RTN","XPDIJ1",133,0)
 Q
"RTN","XPDIL")
0^40^B25314349
"RTN","XPDIL",1,0)
XPDIL ;SFISC/RSD - load Distribution Global ;2015-06-13  8:28 PM
"RTN","XPDIL",2,0)
 ;;8.0;KERNEL;**15,44,58,68,108,422,525,PM2.5**;Jul 10, 1995;Build 35
"RTN","XPDIL",3,0)
 ;
"RTN","XPDIL",4,0)
 ; CHANGE: (VEN/LGC) 4/9/2015
"RTN","XPDIL",5,0)
 ;   Routine modified to filter install through A1AEK1
"RTN","XPDIL",6,0)
 ;    before allowing installation.  The filter checks
"RTN","XPDIL",7,0)
 ;    that the site attempting to install the KIDS has
"RTN","XPDIL",8,0)
 ;    the correct PATCH STREAM and has previously installed
"RTN","XPDIL",9,0)
 ;    all earlier SEQ# patches for this package, if 
"RTN","XPDIL",10,0)
 ;    they have switch PATCH STREAMS in the past.
"RTN","XPDIL",11,0)
 ;
"RTN","XPDIL",12,0)
EN1 N POP,XPDA,XPDST,XPDIT,XPDT,XPDGP,XPDQUIT,XPDREQAB,XPDSKPE
"RTN","XPDIL",13,0)
 S:'$D(DT) DT=$$DT^XLFDT S:'$D(U) U="^"
"RTN","XPDIL",14,0)
 S XPDST=0
"RTN","XPDIL",15,0)
 ; CHANGE: (VEN/LGC) 4/9/2015
"RTN","XPDIL",16,0)
 N A1AEHDR
"RTN","XPDIL",17,0)
 ;
"RTN","XPDIL",18,0)
 D ST I $G(XPDQUIT) D ABRTALL^XPDI(1) G NONE
"RTN","XPDIL",19,0)
 ;XPDST= starting Build
"RTN","XPDIL",20,0)
 ;XPDT("DA",ien)=seq # to install
"RTN","XPDIL",21,0)
 ;XPDT("NM",build name)=seq #
"RTN","XPDIL",22,0)
 ;XPDT(seq #)=ien^Build name
"RTN","XPDIL",23,0)
 ;XPDT("GP",global)= 1-replace, 0-overwrite^ien
"RTN","XPDIL",24,0)
 ;XPDGP=globals from a Global Package
"RTN","XPDIL",25,0)
 ;XPDSKPE=1 don't run Environment Check^has question been asked
"RTN","XPDIL",26,0)
 ;
"RTN","XPDIL",27,0)
 ;CHANGE: (VEN/LGC) 4/9/2015
"RTN","XPDIL",28,0)
 I $L($T(^A1AEK1)),$$EN^A1AEK1(.A1AEHDR) D ABRTALL^XPDI(1) G NONE
"RTN","XPDIL",29,0)
 ;
"RTN","XPDIL",30,0)
 S XPDIT=0,XPDSKPE="0^0"
"RTN","XPDIL",31,0)
 F  S XPDIT=$O(XPDT(XPDIT)) Q:'XPDIT  S XPDA=+XPDT(XPDIT) D  I '$D(XPDT) Q
"RTN","XPDIL",32,0)
 .;check if this Build has an Envir. Check
"RTN","XPDIL",33,0)
 .I $G(^XTMP("XPDI",XPDA,"PRE"))]"" D  I $G(XPDQUIT) D ABRTALL^XPDI(1) Q
"RTN","XPDIL",34,0)
 ..;quit if we already asked this question
"RTN","XPDIL",35,0)
 ..Q:$P(XPDSKPE,U,2)
"RTN","XPDIL",36,0)
 ..S $P(XPDSKPE,U,2)=1
"RTN","XPDIL",37,0)
 ..N DIR,DIRUT
"RTN","XPDIL",38,0)
 ..S DIR(0)="Y",DIR("A")="Want to RUN the Environment Check Routine",DIR("B")="YES"
"RTN","XPDIL",39,0)
 ..S DIR("A",1)="Build "_$P(XPDT(XPDIT),U,2)_" has an Environmental Check Routine"
"RTN","XPDIL",40,0)
 ..D ^DIR I $D(DIRUT) S XPDQUIT=1 Q
"RTN","XPDIL",41,0)
 ..S:'Y XPDSKPE="1^1"
"RTN","XPDIL",42,0)
 .D PKG^XPDIL1(XPDA)
"RTN","XPDIL",43,0)
 ;Global Package
"RTN","XPDIL",44,0)
 G:$D(XPDGP) ^XPDIGP
"RTN","XPDIL",45,0)
 I $D(XPDT),$D(^XPD(9.7,+XPDST,0)) W !,"Use INSTALL NAME: ",$P(^(0),U)," to install this Distribution.",!
"RTN","XPDIL",46,0)
 Q
"RTN","XPDIL",47,0)
ST ;global input
"RTN","XPDIL",48,0)
 N DIR,DIRUT,GR,IOP,X,Y,Z,%ZIS
"RTN","XPDIL",49,0)
 G:'$D(^DD(3.5,0)) OPEN
"RTN","XPDIL",50,0)
 I '$D(^%ZIS(1,"B","HFS")) W !!,"You must have a device called 'HFS' in order to load a distribution!",*7 S XPDQUIT=1 Q
"RTN","XPDIL",51,0)
 D HOME^%ZIS
"RTN","XPDIL",52,0)
 S DIR(0)="F^3:75",DIR("A")="Enter a Host File",DIR("?")="Enter a filename and/or path to input Distribution."
"RTN","XPDIL",53,0)
 D ^DIR I $D(DIRUT) S XPDQUIT=1 Q
"RTN","XPDIL",54,0)
 S %ZIS="",%ZIS("HFSNAME")=Y,%ZIS("HFSMODE")="R",IOP="HFS"
"RTN","XPDIL",55,0)
 D ^%ZIS I POP W !,"Couldn't open file or HFS device!!",*7 S XPDQUIT=1 Q
"RTN","XPDIL",56,0)
 ;don't close device if we have a global package, we need to bring in the globals now
"RTN","XPDIL",57,0)
 D GI,^%ZISC:'$D(XPDGP)!$G(XPDQUIT)
"RTN","XPDIL",58,0)
 Q
"RTN","XPDIL",59,0)
 ;
"RTN","XPDIL",60,0)
 ;if no device file, Virgin Install
"RTN","XPDIL",61,0)
OPEN ;use open command
"RTN","XPDIL",62,0)
 N IO,IOPAR,DIR,DIRUT,DTOUT,DUOUT
"RTN","XPDIL",63,0)
 S DIR(0)="F^1:79",DIR("A")="Device Name"
"RTN","XPDIL",64,0)
 S DIR("?",1)="Device Name is either the name of the HFS file or the name of the HFS Device.",DIR("?",2)="i.e.  for MSM enter  51",DIR("?")="      for DSM enter  DISK$USER::[ANONYMOUS]:KRN8.KID"
"RTN","XPDIL",65,0)
 D ^DIR I $D(DIRUT) S POP=1 Q
"RTN","XPDIL",66,0)
 S IO=Y,DIR(0)="FO^1:79",DIR("A")="Device Parameters"
"RTN","XPDIL",67,0)
 S DIR("?",1)="Device Parameter is the Open parameter this M operating system needs to",DIR("?",2)="open the Device Name.",DIR("?",3)="i.e. for MSM enter  (""B:\KRN8.KID"":""R"")",DIR("?")="     for DSM enter  READONLY"
"RTN","XPDIL",68,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) S POP=1 Q
"RTN","XPDIL",69,0)
 S IOPAR=Y
"RTN","XPDIL",70,0)
 X "O IO:"_IOPAR_":10" E  U $P W !,"Couldn't open ",IO S POP=1 Q
"RTN","XPDIL",71,0)
 S IO(0)=$P
"RTN","XPDIL",72,0)
 D GI D ^%ZISC
"RTN","XPDIL",73,0)
 Q
"RTN","XPDIL",74,0)
 ;
"RTN","XPDIL",75,0)
GI N X,XPDSEQ,Y,Z
"RTN","XPDIL",76,0)
 U IO R X:10,Y:10 ;rwf was :0
"RTN","XPDIL",77,0)
 ;CHANGE: (VEN/LGC) 4/9/2015
"RTN","XPDIL",78,0)
 S A1AEHDR=X
"RTN","XPDIL",79,0)
 ;
"RTN","XPDIL",80,0)
 U IO(0) W !!,X,!,"Comment: ",Y
"RTN","XPDIL",81,0)
 S XPDST("H")=Y,XPDST("H1")=Y_"  ;Created on "_$P(X,"KIDS Distribution saved on ",2)
"RTN","XPDIL",82,0)
 ;Z is the string of Builds in this file
"RTN","XPDIL",83,0)
 U IO F X=1:1 R Z:1 S Z=$P(Z,"**KIDS**",2,99) Q:Z=""  S X(X)=Z
"RTN","XPDIL",84,0)
 U IO(0) I $G(X(1))="" W !!,"This is not a Distribution HFS File!" S XPDQUIT=1 Q
"RTN","XPDIL",85,0)
 ;global package, set XPDGP=flag;global^flag;global^...  flag=1 replace
"RTN","XPDIL",86,0)
 I $P(X(1),":")="GLOBALS" S XPDGP=$P(X(1),U,2,99),X(1)=$P(X(1),U)
"RTN","XPDIL",87,0)
 S XPDIT=0,X(1)=$P(X(1),":",2,99)
"RTN","XPDIL",88,0)
 W !!,"This Distribution contains Transport Globals for the following Package(s):"
"RTN","XPDIL",89,0)
 F X=1:1:X-1 F Z=1:1 S Y=$P(X(X),U,Z) Q:Y=""  D  Q:$G(XPDQUIT)
"RTN","XPDIL",90,0)
 . ;can't install if global exist, that means Build never finish install
"RTN","XPDIL",91,0)
 . ;INST will show name
"RTN","XPDIL",92,0)
 . S XPDIT=XPDIT+1 I '$$INST^XPDIL1(Y) S XPDQUIT=1 Q
"RTN","XPDIL",93,0)
 Q:$G(XPDQUIT)
"RTN","XPDIL",94,0)
 W !,"Distribution OK!",!
"RTN","XPDIL",95,0)
 D:$D(XPDGP) DISP^XPDIGP
"RTN","XPDIL",96,0)
 S DIR(0)="Y",DIR("A")="Want to Continue with Load",DIR("B")="YES"
"RTN","XPDIL",97,0)
 D ^DIR I $D(DIRUT)!'Y S XPDQUIT=1 Q
"RTN","XPDIL",98,0)
 W !,"Loading Distribution...",!
"RTN","XPDIL",99,0)
 ;reset expiration date to T+7 on transport global
"RTN","XPDIL",100,0)
 S ^XTMP("XPDI",0)=$$FMADD^XLFDT(DT,7)_U_DT
"RTN","XPDIL",101,0)
 ;start reading the HFS again
"RTN","XPDIL",102,0)
 U IO R X:10,Y:10 ;rwf was :0
"RTN","XPDIL",103,0)
 ;the next read must be the INSTALL NAME
"RTN","XPDIL",104,0)
 I X'="**INSTALL NAME**"!'$D(XPDT("NM",Y)) U IO(0) W !!,"ERROR in HFS file format!" S XPDQUIT=1 Q
"RTN","XPDIL",105,0)
 ;XPDSEQ is the disk sequence number
"RTN","XPDIL",106,0)
 S %=XPDT("NM",Y),GR="^XTMP(""XPDI"","_+XPDT(%)_",",XPDSEQ=1
"RTN","XPDIL",107,0)
 ;X=global ref, Y=global value. DIRUT is when user aborts
"RTN","XPDIL",108,0)
 ;rwf next line was :0
"RTN","XPDIL",109,0)
 F  R X:10,Y:10 Q:X="**END**"  D  I $D(DIRUT) S XPDQUIT=1 Q
"RTN","XPDIL",110,0)
 .I X="**INSTALL NAME**" D  Q
"RTN","XPDIL",111,0)
 ..S %=+$G(XPDT("NM",Y)) I '% S DIRUT=1 Q
"RTN","XPDIL",112,0)
 ..S GR="^XTMP(""XPDI"","_+XPDT(%)_","
"RTN","XPDIL",113,0)
 .S @(GR_X)=Y
"RTN","XPDIL",114,0)
 U IO(0)
"RTN","XPDIL",115,0)
 Q
"RTN","XPDIL",116,0)
 ;
"RTN","XPDIL",117,0)
NONE W !!,"**NOTHING LOADED**",!
"RTN","XPDIL",118,0)
 Q
"RTN","XPDIPM")
0^41^B4751809
"RTN","XPDIPM",1,0)
XPDIPM ;SFISC/RSD - Load a Packman Message ;2015-06-13  9:20 PM
"RTN","XPDIPM",2,0)
 ;;8.0;KERNEL;**21,28,68,108,PM2.5**;Jul 05, 1995;Build 35
"RTN","XPDIPM",3,0)
 ;
"RTN","XPDIPM",4,0)
 ; CHANGE: (VEN/LGC) 4/9/2015
"RTN","XPDIPM",5,0)
 ;   Routine modified to filter install through A1AEK1
"RTN","XPDIPM",6,0)
 ;    before allowing installation.  The filter checks
"RTN","XPDIPM",7,0)
 ;    that the site attempting to install the KIDS has
"RTN","XPDIPM",8,0)
 ;    the correct PATCH STREAM and has previously installed
"RTN","XPDIPM",9,0)
 ;    all earlier SEQ# patches for this package, if 
"RTN","XPDIPM",10,0)
 ;    they have switch PATCH STREAMS in the past.
"RTN","XPDIPM",11,0)
 ;
"RTN","XPDIPM",12,0)
 ; CHANGE: (VEN/LGC) 6/2/2105
"RTN","XPDIPM",13,0)
 ;   Modified code at GI +5 to set XPDQUIT and QUIT rather than
"RTN","XPDIPM",14,0)
 ;    handle the abort myself
"RTN","XPDIPM",15,0)
 ;    
"RTN","XPDIPM",16,0)
 ;
"RTN","XPDIPM",17,0)
 Q:'$D(^XMB(3.9,+$G(XMZ),0))
"RTN","XPDIPM",18,0)
 ;
"RTN","XPDIPM",19,0)
 N X,XPD,Y S XPD=0
"RTN","XPDIPM",20,0)
 F  S XPD=$O(^XMB(3.9,XMZ,2,XPD)) Q:+XPD'=XPD  S X=^(XPD,0) I $E(X,1,11)="$TXT $KIDS " Q
"RTN","XPDIPM",21,0)
 S Y=$P(X,"$KIDS ",2)
"RTN","XPDIPM",22,0)
EN I 'XPD!'$L(Y) W !!,"Couldn't find a KIDS package!!",*7 Q
"RTN","XPDIPM",23,0)
 N DIR,DIRUT,GR,XPDA,XPDST,XPDIT,XPDT,XPDNM,XPDQUIT,XPDREQAB
"RTN","XPDIPM",24,0)
 S XPDST("H1")=$P(^XMB(3.9,XMZ,0),U),XPDST=0,XPDIT=1
"RTN","XPDIPM",25,0)
 S XPDA=$$INST^XPDIL1(Y) G:'XPDA NONE^XPDIL
"RTN","XPDIPM",26,0)
 W !
"RTN","XPDIPM",27,0)
 S DIR(0)="Y",DIR("A")="Want to Continue with Load",DIR("B")="YES"
"RTN","XPDIPM",28,0)
 D ^DIR I 'Y!$D(DIRUT) D ABRTALL^XPDI(1) G NONE^XPDIL
"RTN","XPDIPM",29,0)
 W !,"Loading Distribution...",!
"RTN","XPDIPM",30,0)
 S ^XTMP("XPDI",0)=$$FMADD^XLFDT(DT,7)_U_DT
"RTN","XPDIPM",31,0)
 D GI I $G(XPDQUIT) D ABRTALL^XPDI(1) G NONE^XPDIL
"RTN","XPDIPM",32,0)
 D PKG^XPDIL1(XPDA)
"RTN","XPDIPM",33,0)
 Q
"RTN","XPDIPM",34,0)
GI D NXT Q:$G(XPDQUIT)
"RTN","XPDIPM",35,0)
 I X'="**INSTALL NAME**"!'$D(XPDT("NM",Y)) S XPDQUIT=1 Q
"RTN","XPDIPM",36,0)
 S GR="^XTMP(""XPDI"","_XPDA_","
"RTN","XPDIPM",37,0)
 F  D NXT Q:X=""!$D(XPDQUIT)  D
"RTN","XPDIPM",38,0)
 .S @(GR_X)=Y
"RTN","XPDIPM",39,0)
 ;
"RTN","XPDIPM",40,0)
 ;CHANGE: (VEN/LGC) 4/9/2015
"RTN","XPDIPM",41,0)
 ;CHANGE: (VEN/LGC) 6/2/2015
"RTN","XPDIPM",42,0)
 N A1AEHDR S A1AEHDR=$G(^XMB(3.9,+$G(XMZ),0))
"RTN","XPDIPM",43,0)
 ;new code
"RTN","XPDIPM",44,0)
 I $L($T(^A1AEK1)),$$EN^A1AEK1(A1AEHDR) S XPDQUIT=1 Q
"RTN","XPDIPM",45,0)
 ;old code
"RTN","XPDIPM",46,0)
 ;I $L($T(^A1AEK1)),$$EN^A1AEK1(A1AEHDR) D ABRTALL^XPDI(1) G NONE^XPDIL
"RTN","XPDIPM",47,0)
 Q
"RTN","XPDIPM",48,0)
NXT S (X,Y)="",XPD=$O(^XMB(3.9,XMZ,2,XPD)) G:+XPD'=XPD ERR S X=^(XPD,0)
"RTN","XPDIPM",49,0)
 I $E(X,1,5)="$END " S X="" Q
"RTN","XPDIPM",50,0)
 S XPD=$O(^XMB(3.9,XMZ,2,XPD)) G:+XPD'=XPD ERR
"RTN","XPDIPM",51,0)
 S Y=^XMB(3.9,XMZ,2,XPD,0)
"RTN","XPDIPM",52,0)
 Q
"RTN","XPDIPM",53,0)
XMP2 ;called from XMP2
"RTN","XPDIPM",54,0)
 N X,XPD,Y
"RTN","XPDIPM",55,0)
 S XPD=XCN,X=$G(^XMB(3.9,XMZ,2,XPD,0)),Y=$P(X,"$KID ",2)
"RTN","XPDIPM",56,0)
 D EN
"RTN","XPDIPM",57,0)
 S XMOUT=1
"RTN","XPDIPM",58,0)
 Q
"RTN","XPDIPM",59,0)
ERR W !!,"Error in Packman Message, ABORTING load!!"
"RTN","XPDIPM",60,0)
 S (X,Y)="",XPDQUIT=1
"RTN","XPDIPM",61,0)
 Q
"SEC","^DIC",11004,11004,0,"AUDIT")

"SEC","^DIC",11004,11004,0,"DD")
#
"SEC","^DIC",11004,11004,0,"DEL")
#
"SEC","^DIC",11004,11004,0,"LAYGO")

"SEC","^DIC",11004,11004,0,"RD")

"SEC","^DIC",11004,11004,0,"WR")

"SEC","^DIC",11007.1,11007.1,0,"AUDIT")

"SEC","^DIC",11007.1,11007.1,0,"DD")
#
"SEC","^DIC",11007.1,11007.1,0,"DEL")
#
"SEC","^DIC",11007.1,11007.1,0,"LAYGO")

"SEC","^DIC",11007.1,11007.1,0,"RD")

"SEC","^DIC",11007.1,11007.1,0,"WR")

"VER")
8.0^22.0
"^DD",11004,11004,0)
FIELD^^5.6^17
"^DD",11004,11004,0,"DT")
3140812
"^DD",11004,11004,0,"IX","AC",11004.05,.01)

"^DD",11004,11004,0,"IX","AP",11004,7)

"^DD",11004,11004,0,"IX","BA",11004,.01)

"^DD",11004,11004,0,"IX","C",11004,5)

"^DD",11004,11004,0,"IX","CD",11004,18)

"^DD",11004,11004,0,"IX","D",11004,2)

"^DD",11004,11004,0,"IX","PK",11004,40)

"^DD",11004,11004,0,"IX","PS",11004,5)

"^DD",11004,11004,0,"IX","R",11004.03,.01)

"^DD",11004,11004,0,"NM","PATCH")

"^DD",11004,11004,0,"PT",11004,5.2)

"^DD",11004,11004,0,"PT",11004,5.7)

"^DD",11004,11004,0,"VRPK")
A1AE
"^DD",11004,11004,.01,0)
PATCH DESIGNATION^RFJ20X^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<6)!'(X?1U.UN1"*".2N.1P.2N1"*"1N.N) X S A1AEX=11004 D IN^A1AEUTL:$D(X) K A1AEX
"^DD",11004,11004,.01,1,0)
^.1^^-1
"^DD",11004,11004,.01,1,3,0)
11004^BA^MUMPS
"^DD",11004,11004,.01,1,3,1)
S:$P(X,"*",2)=999 ^A1AE(11004,"B",$P(X,"*")_"*DBA*"_$P(X,"*",3),DA)=""
"^DD",11004,11004,.01,1,3,2)
K:$P(X,"*",2)=999 ^A1AE(11004,"B",$P(X,"*")_"*DBA*"_$P(X,"*",3),DA)
"^DD",11004,11004,.01,2)
S Y(0)=Y S:$P(Y,"*",2)=999 $P(Y,"*",2)="DBA"
"^DD",11004,11004,.01,2.1)
S:$P(Y,"*",2)=999 $P(Y,"*",2)="DBA"
"^DD",11004,11004,.01,3)
ANSWER MUST BE 6-20 CHARACTERS IN LENGTH
"^DD",11004,11004,.01,7.5)
D PLU11004^A1AEDD1
"^DD",11004,11004,.01,21,0)
^^1^1^3140110^^^^
"^DD",11004,11004,.01,21,1,0)
Patch Designation has the following format: Package Namespace*Version Number*System Assigned Patch Number.
"^DD",11004,11004,.01,"DT")
3140813
"^DD",11004,11004,.2,0)
PATCH STREAM^RP11007.1'^A1AE(11007.1,^0;20^Q
"^DD",11004,11004,.2,3)
Select a patch stream.
"^DD",11004,11004,.2,9)
^
"^DD",11004,11004,.2,21,0)
^^3^3^3140225^
"^DD",11004,11004,.2,21,1,0)
If this Patch Module supports more than one stream of patches (VA does 
"^DD",11004,11004,.2,21,2,0)
not, OSEHRA does), select the patch stream this patch is part of. 
"^DD",11004,11004,.2,21,3,0)
Otherwise, leave this field empty.
"^DD",11004,11004,.2,23,0)
^^24^24^3140225^
"^DD",11004,11004,.2,23,1,0)
This field is used by ID11004^A1AEUTL, which is called by 
"^DD",11004,11004,.2,23,2,0)
S ^DD(11004,0,"ID","WRITE"), the file's write identifier. The write 
"^DD",11004,11004,.2,23,3,0)
identifier will now include field Abbreviation (.05) of file DHCP Patch 
"^DD",11004,11004,.2,23,4,0)
Stream (11007.1) for the record pointed to by this field, if this field 
"^DD",11004,11004,.2,23,5,0)
is filled in. That is, if this Patch Module supports more than one patch 
"^DD",11004,11004,.2,23,6,0)
stream, an abbreviation of that stream will be included in the write 
"^DD",11004,11004,.2,23,7,0)
identifier to help keep developers and other VISTA hardhats from getting 
"^DD",11004,11004,.2,23,8,0)
confused when they hop from stream to stream. If this Patch Module only 
"^DD",11004,11004,.2,23,9,0)
supports one stream, then no such assistance is needed, so this field is 
"^DD",11004,11004,.2,23,10,0)
left blank to save space and excluded from the write identifier.
"^DD",11004,11004,.2,23,11,0)
 
"^DD",11004,11004,.2,23,12,0)
The field is not set by users. It is set automatically by the Patch 
"^DD",11004,11004,.2,23,13,0)
Module itself when importing patches for redistribution or secondary 
"^DD",11004,11004,.2,23,14,0)
development. During the import process, the patch stream is calculated 
"^DD",11004,11004,.2,23,15,0)
and this field is set.
"^DD",11004,11004,.2,23,16,0)
 
"^DD",11004,11004,.2,23,17,0)
Change History:
"^DD",11004,11004,.2,23,18,0)
 
"^DD",11004,11004,.2,23,19,0)
Monday, 10 February 2014: Frederick D. S. Marshall of the VISTA Expertise 
"^DD",11004,11004,.2,23,20,0)
Network (VEN/TOAD) created this field.
"^DD",11004,11004,.2,23,21,0)
 
"^DD",11004,11004,.2,23,22,0)
Tuesday, 25 February 2014: (VEN/TOAD) Revised Description, wrote 
"^DD",11004,11004,.2,23,23,0)
Technical Description, added Change History, and write-protected the 
"^DD",11004,11004,.2,23,24,0)
field to prevent user editing.
"^DD",11004,11004,.2,"DT")
3140813
"^DD",11004,11004,2,0)
PACKAGE^RP9.4'I^DIC(9.4,^0;2^Q
"^DD",11004,11004,2,1,0)
^.1
"^DD",11004,11004,2,1,1,0)
11004^D
"^DD",11004,11004,2,1,1,1)
S ^A1AE(11004,"D",$E(X,1,30),DA)=""
"^DD",11004,11004,2,1,1,2)
K ^A1AE(11004,"D",$E(X,1,30),DA)
"^DD",11004,11004,2,9)
^
"^DD",11004,11004,2,21,0)
^^2^2^2871110^^^^
"^DD",11004,11004,2,21,1,0)
The Package must reside in the Package File(#9.4) and in the
"^DD",11004,11004,2,21,2,0)
DHCP Patch/Problem File(#11007) to be used in the Patch Module.
"^DD",11004,11004,2,"DT")
3140324
"^DD",11004,11004,3,0)
VERSION^RFXOI^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>10!($L(X)<1) X
"^DD",11004,11004,3,1,0)
^.1^^0
"^DD",11004,11004,3,2)
S Y(0)=Y S Y=$S(Y=999:"DBA",1:Y)
"^DD",11004,11004,3,2.1)
S Y=$S(Y=999:"DBA",1:Y)
"^DD",11004,11004,3,3)
ANSWER MUST BE 1-10 CHARACTERS IN LENGTH
"^DD",11004,11004,3,9)
^
"^DD",11004,11004,3,21,0)
^^3^3^2891206^^^^
"^DD",11004,11004,3,21,1,0)
The most recent Version is used as the default, but other valid
"^DD",11004,11004,3,21,2,0)
Version Numbers may be entered. Version '999' is reserved for DBA
"^DD",11004,11004,3,21,3,0)
type patches.
"^DD",11004,11004,3,"DT")
3140812
"^DD",11004,11004,4,0)
PATCH NUMBER^RNJ5,0I^^0;4^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",11004,11004,4,1,0)
^.1^^0
"^DD",11004,11004,4,3)
TYPE A WHOLE NUMBER BETWEEN 0 AND 99999
"^DD",11004,11004,4,9)
^
"^DD",11004,11004,4,21,0)
^^2^2^2861020^^^
"^DD",11004,11004,4,21,1,0)
The patch number is assigned by the system, a number may be
"^DD",11004,11004,4,21,2,0)
re-assigned if an Unverified Patch is Deleted.
"^DD",11004,11004,4,"DT")
3140324
"^DD",11004,11004,5,0)
PATCH SUBJECT^RF^^0;5^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>80!($L(X)<3) X
"^DD",11004,11004,5,1,0)
^.1
"^DD",11004,11004,5,1,1,0)
11004^PS
"^DD",11004,11004,5,1,1,1)
S ^A1AE(11004,"PS",$E(X,1,30),DA)=""
"^DD",11004,11004,5,1,1,2)
K ^A1AE(11004,"PS",$E(X,1,30),DA)
"^DD",11004,11004,5,1,2,0)
11004^C^KWIC
"^DD",11004,11004,5,1,2,1)
F %=1:1 Q:$P(X," ",%,99)=""  S I=$P(X," ",%) I $L(I)>2,$L(I)<31,^DD("KWIC")'[I S ^A1AE(11004,"C",I,DA)=""
"^DD",11004,11004,5,1,2,2)
F %=1:1 Q:$P(X," ",%,99)=""  S I=$P(X," ",%) I $L(I)>2,$L(I)<31 K ^A1AE(11004,"C",I,DA)
"^DD",11004,11004,5,3)
Answer must be 3-80 characters in length.
"^DD",11004,11004,5,21,0)
^^1^1^2981007^^^^
"^DD",11004,11004,5,21,1,0)
Enter a brief description which will be used to identify the Patch Designation.
"^DD",11004,11004,5,"DT")
2981007
"^DD",11004,11004,5.2,0)
DERIVED FROM PATCH^P11004'^A1AE(11004,^5;2^Q
"^DD",11004,11004,5.2,1,0)
^.1^^0
"^DD",11004,11004,5.2,3)
Select an entry
"^DD",11004,11004,5.2,21,0)
^^4^4^3140303^
"^DD",11004,11004,5.2,21,1,0)
If this patch is a copy of another patch, this field will be filled in by 
"^DD",11004,11004,5.2,21,2,0)
the A1AEK2M importer routine. The purpose of this field is to identify 
"^DD",11004,11004,5.2,21,3,0)
the original patch that a derived patch came from. Such will help us to 
"^DD",11004,11004,5.2,21,4,0)
track the patch and correctly resolve dependencies.
"^DD",11004,11004,5.2,"DT")
3140306
"^DD",11004,11004,5.5,0)
PATCH DESCRIPTION^11004.01^^D;0
"^DD",11004,11004,5.5,21,0)
^^16^16^2971112^^^^
"^DD",11004,11004,5.5,21,1,0)
This field should contain a detailed description of the purpose of
"^DD",11004,11004,5.5,21,2,0)
the patch. If the category of the patch is for a data dictionary,
"^DD",11004,11004,5.5,21,3,0)
input template, print template, sort template or other it should
"^DD",11004,11004,5.5,21,4,0)
be described in this section. Routine type patches have their own
"^DD",11004,11004,5.5,21,5,0)
section under the Routine Name field for coding changes, however,
"^DD",11004,11004,5.5,21,6,0)
a description of the purpose and impacts of the patch should be
"^DD",11004,11004,5.5,21,7,0)
entered in this section for this type of patch as well.
"^DD",11004,11004,5.5,21,8,0)
 
"^DD",11004,11004,5.5,21,9,0)
The patch description should also contain a detailed description of
"^DD",11004,11004,5.5,21,10,0)
procedures or steps required as a result of entering this patch, ie.
"^DD",11004,11004,5.5,21,11,0)
recompiling templates or re-running reports etc...
"^DD",11004,11004,5.5,21,12,0)
 
"^DD",11004,11004,5.5,21,13,0)
If a patch is the result of an 'entered in error' patch it should
"^DD",11004,11004,5.5,21,14,0)
refer to the previous patch which was incorrect, just as the
"^DD",11004,11004,5.5,21,15,0)
incorrect patch should refer to the correct patch in the Entered in
"^DD",11004,11004,5.5,21,16,0)
Error Description field.
"^DD",11004,11004,5.7,0)
UPDATE TO PATCH^P11004'^A1AE(11004,^5;7^Q
"^DD",11004,11004,5.7,"DT")
3140324
"^DD",11004,11004,6,0)
SEQUENTIAL RELEASE NUMBER^NJ5,0^^0;6^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11004,11004,6,3)
Type a Number between 1 and 99999, 0 Decimal Digits
"^DD",11004,11004,6,"DT")
2920917
"^DD",11004,11004,6.5,0)
CATEGORY OF PATCH^11004.05SA^^C;0
"^DD",11004,11004,6.5,21,0)
^^7^7^2920606^^^^
"^DD",11004,11004,6.5,21,1,0)
Since a Patch may fall under more then one Category this
"^DD",11004,11004,6.5,21,2,0)
field has been made a multiple. Enter one or more Category
"^DD",11004,11004,6.5,21,3,0)
code to describe the type of Patch.
"^DD",11004,11004,6.5,21,4,0)
 
"^DD",11004,11004,6.5,21,5,0)
DBA type patches fall under only one type of Category, the
"^DD",11004,11004,6.5,21,6,0)
'database' category. This information is put in by the system
"^DD",11004,11004,6.5,21,7,0)
when a DBA type patch is entered.
"^DD",11004,11004,7,0)
PRIORITY^R*SX^p:PATCH FOR A PATCH;n:NOT URGENT;m:MANDATORY;i:INFORMATIONAL;e:EMERGENCY;^0;7^I "EeMm"'[$E(X_0) K X
"^DD",11004,11004,7,1,0)
^.1
"^DD",11004,11004,7,1,1,0)
11004^AP^MUMPS
"^DD",11004,11004,7,1,1,1)
S ^A1AE(11004,"AP",+$P(^A1AE(11004,DA,0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA)=""
"^DD",11004,11004,7,1,1,2)
K ^A1AE(11004,"AP",+$P(^A1AE(11004,DA,0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA)
"^DD",11004,11004,7,3)
Enter E for Emergency, M for Mandatory
"^DD",11004,11004,7,12)
Only Emergency or Mandatory Patches are allowed
"^DD",11004,11004,7,12.1)
I "eEmM"[X
"^DD",11004,11004,7,21,0)
^^8^8^2921201^^^^
"^DD",11004,11004,7,21,1,0)
This field indicates the seriousness of the bug that this patch corrects.
"^DD",11004,11004,7,21,2,0)
There are two priorities allowed:
"^DD",11004,11004,7,21,3,0)
 
"^DD",11004,11004,7,21,4,0)
    EMERGENCY         -- patch must be installed within 1 working day
"^DD",11004,11004,7,21,5,0)
                         of receipt.
"^DD",11004,11004,7,21,6,0)
 
"^DD",11004,11004,7,21,7,0)
    MANDATORY         -- patch must be installed within 5 days of receipt
"^DD",11004,11004,7,21,8,0)
                         because it solves what could be a major problem.
"^DD",11004,11004,7,21,9,0)
 
"^DD",11004,11004,7,21,10,0)
    NOT URGENT        -- patch includes cosmetic type changes that can
"^DD",11004,11004,7,21,11,0)
                         wait for the next release but are offered to
"^DD",11004,11004,7,21,12,0)
                         the site now if they desire it.
"^DD",11004,11004,7,21,13,0)
 
"^DD",11004,11004,7,21,14,0)
    INFORMATIONAL     -- patch provides general or pertinent information
"^DD",11004,11004,7,21,15,0)
                         about the package.
"^DD",11004,11004,7,"DT")
2920606
"^DD",11004,11004,18,0)
COMPLIANCE DATE^DaX^^0;18^S %DT="EF" D ^%DT S X=Y K:Y<1 X
"^DD",11004,11004,18,1,0)
^.1
"^DD",11004,11004,18,1,1,0)
11004^CD^MUMPS
"^DD",11004,11004,18,1,1,1)
S ^A1AE(11004,"CD",+$P(^A1AE(11004,DA,0),U,2),9999999-X,DA)=""
"^DD",11004,11004,18,1,1,2)
K ^A1AE(11004,"CD",+$P(^A1AE(11004,DA,0),U,2),9999999-X,DA)
"^DD",11004,11004,18,1,1,"%D",0)
^^1^1^3030122^
"^DD",11004,11004,18,1,1,"%D",1,0)
This is the compliance date cross-reference sorted by package.
"^DD",11004,11004,18,1,1,"DT")
3030122
"^DD",11004,11004,18,21,0)
^.001^10^10^3040603^^^^
"^DD",11004,11004,18,21,1,0)
Each patch will now have a compliance date. The compliance date is  the 
"^DD",11004,11004,18,21,2,0)
deadline date for installation. The compliance date will entered at time 
"^DD",11004,11004,18,21,3,0)
of the patch release by the NVS staff releasing the patch. The software 
"^DD",11004,11004,18,21,4,0)
will present a default to the releaser based on the rules defined in 
"^DD",11004,11004,18,21,5,0)
directive 2001-023: 1 day for emergency patches and 30 days for mandatory 
"^DD",11004,11004,18,21,6,0)
(all other) patches. The default may be changed to a date agreed to by 
"^DD",11004,11004,18,21,7,0)
SD&D, NVS, and the stakeholders for the project. For example, a patch 
"^DD",11004,11004,18,21,8,0)
might have a directive that allows for 45 day window of installation or 
"^DD",11004,11004,18,21,9,0)
an emergency patch might be a 2 day install instead of 1 day installation 
"^DD",11004,11004,18,21,10,0)
deadline. 
"^DD",11004,11004,18,"AUDIT")
y
"^DD",11004,11004,18,"DT")
3030122
"^DD",11004,11004,19,0)
COMPLIANCE DATE COMMENT^11004.019^^3;0
"^DD",11004,11004,40,0)
NEW PACKAGE^F^^4;1^K:$L(X)>30!($L(X)<4)!'(X?1.AN1" "1.NP) X
"^DD",11004,11004,40,1,0)
^.1
"^DD",11004,11004,40,1,1,0)
11004^PK
"^DD",11004,11004,40,1,1,1)
S ^A1AE(11004,"PK",$E(X,1,30),DA)=""
"^DD",11004,11004,40,1,1,2)
K ^A1AE(11004,"PK",$E(X,1,30),DA)
"^DD",11004,11004,40,1,1,"DT")
3060524
"^DD",11004,11004,40,3)
Answer must be 4-30 characters in length.
"^DD",11004,11004,40,21,0)
^^2^2^3060524^
"^DD",11004,11004,40,21,1,0)
This field holds the new Package name when a patch entry is used to
"^DD",11004,11004,40,21,2,0)
control a new package version.
"^DD",11004,11004,40,"DT")
3060524
"^DD",11004,11004,100,0)
ROUTINE NAME^11004.03A^^P;0
"^DD",11004,11004,100,21,0)
^^2^2^2921213^^^^
"^DD",11004,11004,100,21,1,0)
If a programming change has been made to a Routine, enter
"^DD",11004,11004,100,21,2,0)
the name of the Routine.
"^DD",11004,11004,102,0)
SECOND LINE^F^^P2;1^K:$L(X)>200!($L(X)<2) X
"^DD",11004,11004,102,3)
Answer must be 2-200 characters in length.
"^DD",11004,11004,102,21,0)
^^2^2^3070614^
"^DD",11004,11004,102,21,1,0)
This holds a sample of what the second line of each routine should look 
"^DD",11004,11004,102,21,2,0)
like.
"^DD",11004,11004,102,"DT")
3070614
"^DD",11004,11004.01,0)
PATCH DESCRIPTION SUB-FIELD^NL^.01^1
"^DD",11004,11004.01,0,"DT")
2971112
"^DD",11004,11004.01,0,"NM","PATCH DESCRIPTION")

"^DD",11004,11004.01,0,"UP")
11004
"^DD",11004,11004.01,.01,0)
PATCH DESCRIPTION^WL^^0;1^Q
"^DD",11004,11004.01,.01,"DT")
3140317
"^DD",11004,11004.019,0)
COMPLIANCE DATE COMMENT SUB-FIELD^^.01^1
"^DD",11004,11004.019,0,"DT")
3030116
"^DD",11004,11004.019,0,"NM","COMPLIANCE DATE COMMENT")

"^DD",11004,11004.019,0,"UP")
11004
"^DD",11004,11004.019,.01,0)
COMPLIANCE DATE COMMENT^W^^0;1^Q
"^DD",11004,11004.019,.01,3)
Enter the reason for editing the Compliance Date
"^DD",11004,11004.019,.01,21,0)
^^1^1^3030116^
"^DD",11004,11004.019,.01,21,1,0)
This is the reason for editing the compliance date
"^DD",11004,11004.019,.01,"DT")
3030116
"^DD",11004,11004.03,0)
ROUTINE NAME SUB-FIELD^NL^5^6
"^DD",11004,11004.03,0,"IX","B",11004.03,.01)

"^DD",11004,11004.03,0,"NM","ROUTINE NAME")

"^DD",11004,11004.03,0,"UP")
11004
"^DD",11004,11004.03,.01,0)
ROUTINE NAME^MFX^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>8!($L(X)<2)!'((X?.UN)!(X?1"%".UN)) X I $D(X) S SAVX=X,X="A1AEM2" X ^%ZOSF("TEST") S X=SAVX I $T D RCHK^A1AEM2
"^DD",11004,11004.03,.01,1,0)
^.1
"^DD",11004,11004.03,.01,1,1,0)
11004^R
"^DD",11004,11004.03,.01,1,1,1)
S ^A1AE(11004,"R",$E(X,1,30),DA(1),DA)=""
"^DD",11004,11004.03,.01,1,1,2)
K ^A1AE(11004,"R",$E(X,1,30),DA(1),DA)
"^DD",11004,11004.03,.01,1,1,"DT")
3050927
"^DD",11004,11004.03,.01,1,2,0)
11004.03^B
"^DD",11004,11004.03,.01,1,2,1)
S ^A1AE(11004,DA(1),"P","B",$E(X,1,30),DA)=""
"^DD",11004,11004.03,.01,1,2,2)
K ^A1AE(11004,DA(1),"P","B",$E(X,1,30),DA)
"^DD",11004,11004.03,.01,1,2,"%D",0)
^^1^1^3050927^
"^DD",11004,11004.03,.01,1,2,"%D",1,0)
This is the normal "B" lookup index.
"^DD",11004,11004.03,.01,1,2,"DT")
3050927
"^DD",11004,11004.03,.01,3)
ANSWER MUST BE 2-8 CHARACTERS IN LENGTH
"^DD",11004,11004.03,.01,21,0)
^^10^10^2921213^^^^
"^DD",11004,11004.03,.01,21,1,0)
If a programming change has been made to a Routine, enter
"^DD",11004,11004.03,.01,21,2,0)
the name of the Routine.  Each patched routine should have 
"^DD",11004,11004.03,.01,21,3,0)
a separate entry.
"^DD",11004,11004.03,.01,21,4,0)
If the routine can be found in the routine directory you
"^DD",11004,11004.03,.01,21,5,0)
will have the option of extracting lines from the routine
"^DD",11004,11004.03,.01,21,6,0)
and stuffing them into the Description of Routine Changes
"^DD",11004,11004.03,.01,21,7,0)
field.
"^DD",11004,11004.03,.01,21,8,0)
If the routine is in an input PackMan message you will have
"^DD",11004,11004.03,.01,21,9,0)
the option of extracting lines from the routine and adding
"^DD",11004,11004.03,.01,21,10,0)
them to the Description of Routine Changes field.
"^DD",11004,11004.03,.01,22)

"^DD",11004,11004.03,.01,"DT")
3141006
"^DD",11004,11004.03,2,0)
ROUTINE CHECKSUM^11004.32^^X;0
"^DD",11004,11004.03,2.5,0)
DESCRIPTION OF ROUTINE CHANGES^11004.04^^D;0
"^DD",11004,11004.03,2.5,21,0)
^^21^21^2871110^^^^
"^DD",11004,11004.03,2.5,21,1,0)
When changes are made to routines the description should include
"^DD",11004,11004.03,2.5,21,2,0)
1)  the LINE  2)  the previous code  3)  the new code  and any
"^DD",11004,11004.03,2.5,21,3,0)
other information which would help to clearly explain the fix
"^DD",11004,11004.03,2.5,21,4,0)
that was done. Finally, show the lines of code that were changed
"^DD",11004,11004.03,2.5,21,5,0)
in their entirety.
"^DD",11004,11004.03,2.5,21,6,0)
 
"^DD",11004,11004.03,2.5,21,7,0)
 note: r  means 'replace' and
"^DD",11004,11004.03,2.5,21,8,0)
       w  means 'with'
"^DD",11004,11004.03,2.5,21,9,0)
 
"^DD",11004,11004.03,2.5,21,10,0)
The convention for entering code changes are as follows:
"^DD",11004,11004.03,2.5,21,11,0)
 
"^DD",11004,11004.03,2.5,21,12,0)
LINE: EN
"^DD",11004,11004.03,2.5,21,13,0)
    r  DPT
"^DD",11004,11004.03,2.5,21,14,0)
    w  ^DPT
"^DD",11004,11004.03,2.5,21,15,0)
 
"^DD",11004,11004.03,2.5,21,16,0)
THE LINE SHOULD LOOK LIKE THE FOLLOWING:
"^DD",11004,11004.03,2.5,21,17,0)
---------------------------------------
"^DD",11004,11004.03,2.5,21,18,0)
EN       S DA=DFN,DIE="^DPT(",DR=".01" D ^DIE
"^DD",11004,11004.03,2.5,21,19,0)
 
"^DD",11004,11004.03,2.5,21,20,0)
 
"^DD",11004,11004.03,2.5,21,21,0)
A1AEINTEG= -94
"^DD",11004,11004.03,3,0)
KIDS CHECKSUM^F^^0;2^K:$L(X)>15!($L(X)<3) X
"^DD",11004,11004.03,3,3)
Answer must be 3-15 characters in length.
"^DD",11004,11004.03,3,"DT")
3050912
"^DD",11004,11004.03,4,0)
PATCH LIST^F^^0;3^K:$L(X)>200!($L(X)<5)!'(X?2"*"1.NP2"*") X
"^DD",11004,11004.03,4,3)
Answer must be 5-200 characters in length.
"^DD",11004,11004.03,4,21,0)
^^2^2^3050926^
"^DD",11004,11004.03,4,21,1,0)
This field holds the routine patch list at the time the patch was loaded 
"^DD",11004,11004.03,4,21,2,0)
into FORUM.
"^DD",11004,11004.03,4,"DT")
3050926
"^DD",11004,11004.03,5,0)
OLD CHECKSUM^F^^0;4^K:$L(X)>15!($L(X)<3) X
"^DD",11004,11004.03,5,3)
Answer must be 3-15 characters in length.
"^DD",11004,11004.03,5,21,0)
^^3^3^3051012^
"^DD",11004,11004.03,5,21,1,0)
This field holds the before checksum at the time the patch is loaded into 
"^DD",11004,11004.03,5,21,2,0)
the patch module.  This old checksum value is pulled from the ROUTINE 
"^DD",11004,11004.03,5,21,3,0)
file.
"^DD",11004,11004.03,5,"DT")
3051012
"^DD",11004,11004.04,0)
DESCRIPTION OF ROUTINE CHANGES SUB-FIELD^NL^.01^1
"^DD",11004,11004.04,0,"NM","DESCRIPTION OF ROUTINE CHANGES")

"^DD",11004,11004.04,0,"UP")
11004.03
"^DD",11004,11004.04,.01,0)
DESCRIPTION OF ROUTINE CHANGES^WL^^0;1^Q
"^DD",11004,11004.04,.01,21,0)
^^4^4^2871009^^^^
"^DD",11004,11004.04,.01,21,1,0)
When Changes are made to Routines the Description should include
"^DD",11004,11004.04,.01,21,2,0)
1)  the TAG  2) the previous code  3)  the new code  and any
"^DD",11004,11004.04,.01,21,3,0)
other information which would help to clearly explain the fix
"^DD",11004,11004.04,.01,21,4,0)
that was done.
"^DD",11004,11004.04,.01,"DT")
2860717
"^DD",11004,11004.05,0)
CATEGORY OF PATCH SUB-FIELD^NL^.01^1
"^DD",11004,11004.05,0,"NM","CATEGORY OF PATCH")

"^DD",11004,11004.05,0,"UP")
11004
"^DD",11004,11004.05,.01,0)
CATEGORY OF PATCH^MRSX^d:DATA DICTIONARY;i:INPUT TEMPLATE;p:PRINT TEMPLATE;r:ROUTINE;s:SORT TEMPLATE;o:OTHER;db:DATABASE;e:ENHANCEMENT;pp:PATCH FOR A PATCH;inf:INFORMATIONAL;^0;1^I $T(^A1AEM)'="" D DD^A1AEM
"^DD",11004,11004.05,.01,1,0)
^.1
"^DD",11004,11004.05,.01,1,1,0)
11004^AC^MUMPS
"^DD",11004,11004.05,.01,1,1,1)
S ^A1AE(11004,"AC",+$P(^A1AE(11004,DA(1),0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA(1),DA)=""
"^DD",11004,11004.05,.01,1,1,2)
K ^A1AE(11004,"AC",+$P(^A1AE(11004,DA(1),0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA(1),DA)
"^DD",11004,11004.05,.01,21,0)
^^6^6^2921123^^^^
"^DD",11004,11004.05,.01,21,1,0)
Since a Patch may fall under more than one Category this
"^DD",11004,11004.05,.01,21,2,0)
field has been made a multiple. Enter one or more Category
"^DD",11004,11004.05,.01,21,3,0)
code to describe the type of Patch.
"^DD",11004,11004.05,.01,21,4,0)
 
"^DD",11004,11004.05,.01,21,5,0)
The new category Enhancement indicates that the patch contains less than
"^DD",11004,11004.05,.01,21,6,0)
5% of the full package's routines, docuementation, install time, etc.
"^DD",11004,11004.05,.01,23,0)
^^3^3^2920928^
"^DD",11004,11004.05,.01,23,1,0)
 
"^DD",11004,11004.05,.01,23,2,0)
 
"^DD",11004,11004.05,.01,23,3,0)
 
"^DD",11004,11004.05,.01,"DT")
2921123
"^DD",11004,11004.32,0)
ROUTINE CHECKSUM SUB-FIELD^^.01^1
"^DD",11004,11004.32,0,"NM","ROUTINE CHECKSUM")

"^DD",11004,11004.32,0,"UP")
11004.03
"^DD",11004,11004.32,.01,0)
ROUTINE CHECKSUM^W^^0;1^Q
"^DD",11004,11004.32,.01,"DT")
2910319
"^DD",11007.1,11007.1,0)
FIELD^^.07^10
"^DD",11007.1,11007.1,0,"DT")
3150402
"^DD",11007.1,11007.1,0,"NM","DHCP PATCH STREAM")

"^DD",11007.1,11007.1,0,"PT",11005,.2)

"^DD",11007.1,11007.1,0,"PT",11007.04,4)

"^DD",11007.1,11007.1,0,"PT",11007.1,.03)

"^DD",11007.1,11007.1,0,"PT",11007.128,.01)

"^DD",11007.1,11007.1,0,"PT",11007.2,.02)

"^DD",11007.1,11007.1,.001,0)
PATCH NUMBER START^NJ9,0X^^ ^K:+X'=X!(X>999999999)!(X<1)!(X[".")!(X#1000'=1) X
"^DD",11007.1,11007.1,.001,3)
Type a number whose modulus of 1000 is 1.
"^DD",11007.1,11007.1,.001,21,0)
^.001^7^7^3140727^^
"^DD",11007.1,11007.1,.001,21,1,0)
Enter the number to assign to the first patch created for a new version 
"^DD",11007.1,11007.1,.001,21,2,0)
of any package, when patches to it are released as part of this patch 
"^DD",11007.1,11007.1,.001,21,3,0)
stream. For example, VA VISTA patches start their enumeration with 1, IHS 
"^DD",11007.1,11007.1,.001,21,4,0)
RPMS patches start at 1001, and OSEHRA VISTA patches start at 10001.
"^DD",11007.1,11007.1,.001,21,5,0)
 
"^DD",11007.1,11007.1,.001,21,6,0)
To create a new patch stream, start at a number whose modulus of 1000 is 
"^DD",11007.1,11007.1,.001,21,7,0)
1. For example, 2001 and 10001 are valid numbers; 2000 and 10000 are not.
"^DD",11007.1,11007.1,.001,23,0)
^.001^16^16^3140727^^
"^DD",11007.1,11007.1,.001,23,1,0)
This field is used by $$PRIMSTRM^A1AEUTL, which is called by SEQ &
"^DD",11007.1,11007.1,.001,23,2,0)
NUM^A1AEUTL
"^DD",11007.1,11007.1,.001,23,3,0)
 
"^DD",11007.1,11007.1,.001,23,4,0)
in assigning patch numbers.
"^DD",11007.1,11007.1,.001,23,5,0)
 
"^DD",11007.1,11007.1,.001,23,6,0)
Convention: when field .01 of a file is a pointer to this field, Dinum it.
"^DD",11007.1,11007.1,.001,23,7,0)
 
"^DD",11007.1,11007.1,.001,23,8,0)
Change History:
"^DD",11007.1,11007.1,.001,23,9,0)
 
"^DD",11007.1,11007.1,.001,23,10,0)
Wednesday, 22 January 2014: (VEN/SMH) Created field Patch Number Start 
"^DD",11007.1,11007.1,.001,23,11,0)
(.001) for Patch Module version 2.4 as part of the OSEHRA Forum Project 
"^DD",11007.1,11007.1,.001,23,12,0)
Phase One.
"^DD",11007.1,11007.1,.001,23,13,0)
 
"^DD",11007.1,11007.1,.001,23,14,0)
Tuesday, 11 February 2014: (VEN/TOAD) Revised Description, wrote 
"^DD",11007.1,11007.1,.001,23,15,0)
Technical Description, added Change History. Fixed bug in Input 
"^DD",11007.1,11007.1,.001,23,16,0)
Transform: was enforcing X#10000'=1 instead of X#1000'=1.
"^DD",11007.1,11007.1,.001,"DT")
3140728
"^DD",11007.1,11007.1,.01,0)
NAME^RFJ30^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",11007.1,11007.1,.01,.1)
VISTA DIALECT NAME
"^DD",11007.1,11007.1,.01,1,0)
^.1^^0
"^DD",11007.1,11007.1,.01,3)
Answer must be 3-30 characters in length.
"^DD",11007.1,11007.1,.01,21,0)
^.001^4^4^3140728^^
"^DD",11007.1,11007.1,.01,21,1,0)
Enter the name of this patch stream; it should be the name of the VISTA 
"^DD",11007.1,11007.1,.01,21,2,0)
dialect supported by this patch stream. Examples include: VA VISTA, FOIA 
"^DD",11007.1,11007.1,.01,21,3,0)
VISTA, OSEHRA VISTA, IHS RPMS, FOIA RPMS, OSEHRA RPMS, MEDSPHERE 
"^DD",11007.1,11007.1,.01,21,4,0)
OPENVISTA, DSS VXVISTA, WORLDVISTA EHR, DOD CHCS, and FOIA CHCS.
"^DD",11007.1,11007.1,.01,23,0)
^.001^12^12^3140728^^
"^DD",11007.1,11007.1,.01,23,1,0)
Field Name (.01) will be used extensively by the Patch Module in creating 
"^DD",11007.1,11007.1,.01,23,2,0)
subjects for e-mail distributions, header lines for host-file 
"^DD",11007.1,11007.1,.01,23,3,0)
distributions, patch boilerplate text, and so on.
"^DD",11007.1,11007.1,.01,23,4,0)
 
"^DD",11007.1,11007.1,.01,23,5,0)
Change History:
"^DD",11007.1,11007.1,.01,23,6,0)
 
"^DD",11007.1,11007.1,.01,23,7,0)
Monday, 13 January 2014: (VEN/SMH) Created field Name (.01) for Patch 
"^DD",11007.1,11007.1,.01,23,8,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.01,23,9,0)
 
"^DD",11007.1,11007.1,.01,23,10,0)
Tuesday, 11 February 2014: (VEN/TOAD) Wrote Description, Technical 
"^DD",11007.1,11007.1,.01,23,11,0)
Description, and Change History for Patch Module version 2.4 as part of 
"^DD",11007.1,11007.1,.01,23,12,0)
the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.01,"DEL",.01,0)
D EN^DDIOL("Cannot delete an existing entry.") I 1
"^DD",11007.1,11007.1,.01,"DT")
3140805
"^DD",11007.1,11007.1,.02,0)
PRIMARY?^RS^1:YES;0:NO;^0;2^Q
"^DD",11007.1,11007.1,.02,3)
Enter YES or NO.
"^DD",11007.1,11007.1,.02,21,0)
^.001^10^10^3140806^^^^
"^DD",11007.1,11007.1,.02,21,1,0)
Enter YES if this patch stream will be considered the primary stream for 
"^DD",11007.1,11007.1,.02,21,2,0)
this site. There can be only one primary stream at a time. If you set 
"^DD",11007.1,11007.1,.02,21,3,0)
this field to YES for a second stream, this field in all other patch 
"^DD",11007.1,11007.1,.02,21,4,0)
streams will be set to NO.
"^DD",11007.1,11007.1,.02,21,5,0)
 
"^DD",11007.1,11007.1,.02,21,6,0)
A primary patch stream is the default stream under which a new patch 
"^DD",11007.1,11007.1,.02,21,7,0)
developed using this Patch Module will be numberspaced. For example, if 
"^DD",11007.1,11007.1,.02,21,8,0)
the primary patch stream is numberspaced to be 3001, then any patch you 
"^DD",11007.1,11007.1,.02,21,9,0)
develop using this Patch Module system will assign patch numbers 
"^DD",11007.1,11007.1,.02,21,10,0)
enumerating from 3001.
"^DD",11007.1,11007.1,.02,23,0)
^.001^17^17^3140806^^^^
"^DD",11007.1,11007.1,.02,23,1,0)
The purpose of field Primary? (.02) is to set up the PRIM index, which is 
"^DD",11007.1,11007.1,.02,23,2,0)
used by $$PRIMSTRM^A1AEUTL to assign patch numbers. Cross-reference APRIM 
"^DD",11007.1,11007.1,.02,23,3,0)
ensures that only one patch stream at a time may be primary.
"^DD",11007.1,11007.1,.02,23,4,0)
 
"^DD",11007.1,11007.1,.02,23,5,0)
Change History:
"^DD",11007.1,11007.1,.02,23,6,0)
 
"^DD",11007.1,11007.1,.02,23,7,0)
Monday, 13 January 2014: (VEN/SMH) Created field Primary? (2) for Patch 
"^DD",11007.1,11007.1,.02,23,8,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.02,23,9,0)
 
"^DD",11007.1,11007.1,.02,23,10,0)
Wednesday, 22 January 2014: (VEN/SMH) Revised Description to explain 
"^DD",11007.1,11007.1,.02,23,11,0)
numberspacing for Patch Module version 2.4 as part of the OSEHRA Forum 
"^DD",11007.1,11007.1,.02,23,12,0)
Project Phase One.
"^DD",11007.1,11007.1,.02,23,13,0)
 
"^DD",11007.1,11007.1,.02,23,14,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted field Primary? (2) and 
"^DD",11007.1,11007.1,.02,23,15,0)
created field Primary? (.02); revised Description; added Technical 
"^DD",11007.1,11007.1,.02,23,16,0)
Description and Change History for Patch Module version 2.4 as part of 
"^DD",11007.1,11007.1,.02,23,17,0)
the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.02,"DT")
3150402
"^DD",11007.1,11007.1,.03,0)
FEEDS INTO STREAM^*P11007.1'^A1AE(11007.1,^0;3^S DIC("S")="I D0'=Y" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",11007.1,11007.1,.03,3)
Select a patch stream.
"^DD",11007.1,11007.1,.03,12)
You can select any other streams but not yourself.
"^DD",11007.1,11007.1,.03,12.1)
S DIC("S")="I D0'=Y"
"^DD",11007.1,11007.1,.03,21,0)
^^3^3^3140211^
"^DD",11007.1,11007.1,.03,21,1,0)
You may select a derived patch stream, to which incoming patches to this 
"^DD",11007.1,11007.1,.03,21,2,0)
stream will be bifurcated. Defaults to bifurcating to the primary patch 
"^DD",11007.1,11007.1,.03,21,3,0)
stream. This field is optional.
"^DD",11007.1,11007.1,.03,23,0)
^^17^17^3140211^
"^DD",11007.1,11007.1,.03,23,1,0)
Field Feeds into Stream (.03) was designed to allow OSEHRA Forum to 
"^DD",11007.1,11007.1,.03,23,2,0)
redistribute FOIA VISTA patches unchanged while simultaneously 
"^DD",11007.1,11007.1,.03,23,3,0)
distributing renamed and renumbered copies of those same patches, some in 
"^DD",11007.1,11007.1,.03,23,4,0)
modified form, as part of the new OSEHRA VISTA patch stream. This is 
"^DD",11007.1,11007.1,.03,23,5,0)
similar to what IHS does with FOIA VISTA patches to create their IHS RPMS 
"^DD",11007.1,11007.1,.03,23,6,0)
patch stream
"^DD",11007.1,11007.1,.03,23,7,0)
 
"^DD",11007.1,11007.1,.03,23,8,0)
Change History:
"^DD",11007.1,11007.1,.03,23,9,0)
 
"^DD",11007.1,11007.1,.03,23,10,0)
Monday, 13 January 2014: (VEN/SMH) Created field Feeds into Stream (3) 
"^DD",11007.1,11007.1,.03,23,11,0)
for Patch Module version 2.4 as part of the OSEHRA Forum Project Phase 
"^DD",11007.1,11007.1,.03,23,12,0)
One.
"^DD",11007.1,11007.1,.03,23,13,0)
 
"^DD",11007.1,11007.1,.03,23,14,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted field Feeds into Stream (3) 
"^DD",11007.1,11007.1,.03,23,15,0)
and created field Feeds into Stream (.03); revised Description; added 
"^DD",11007.1,11007.1,.03,23,16,0)
Technical Description and Change History for Patch Module version 2.4 as 
"^DD",11007.1,11007.1,.03,23,17,0)
part of the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.03,"DT")
3140211
"^DD",11007.1,11007.1,.04,0)
DOMAIN^FJ60^^0;4^K:$L(X)>60!($L(X)<1) X
"^DD",11007.1,11007.1,.04,3)
Answer must be 1-60 characters in length.
"^DD",11007.1,11007.1,.04,21,0)
^^2^2^3140211^
"^DD",11007.1,11007.1,.04,21,1,0)
Enter the domain associated with incoming patches from this patch stream. 
"^DD",11007.1,11007.1,.04,21,2,0)
This field is optional.
"^DD",11007.1,11007.1,.04,23,0)
^^15^15^3140211^
"^DD",11007.1,11007.1,.04,23,1,0)
Field Domain (.04) was designed to support and differentiate multiple 
"^DD",11007.1,11007.1,.04,23,2,0)
inbound patch streams. For example, is OSEHRA Forum at some point 
"^DD",11007.1,11007.1,.04,23,3,0)
supports both VISTA and RPMS, the Patch Module would need to be able to 
"^DD",11007.1,11007.1,.04,23,4,0)
distinguish IHS's patches from VA's.
"^DD",11007.1,11007.1,.04,23,5,0)
 
"^DD",11007.1,11007.1,.04,23,6,0)
Change History:
"^DD",11007.1,11007.1,.04,23,7,0)
 
"^DD",11007.1,11007.1,.04,23,8,0)
Monday, 13 January 2014: (VEN/SMH) Created field Domain (4) for Patch 
"^DD",11007.1,11007.1,.04,23,9,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One. This 
"^DD",11007.1,11007.1,.04,23,10,0)
field is not yet in use.
"^DD",11007.1,11007.1,.04,23,11,0)
 
"^DD",11007.1,11007.1,.04,23,12,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted field Domain (4) and 
"^DD",11007.1,11007.1,.04,23,13,0)
created field Domain (.04); revised Description; added Technical 
"^DD",11007.1,11007.1,.04,23,14,0)
Description and Change History for Patch Module version 2.4 as part of 
"^DD",11007.1,11007.1,.04,23,15,0)
the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.04,"DT")
3140211
"^DD",11007.1,11007.1,.05,0)
ABBREVIATION^RFJ2^^0;5^K:$L(X)>2!($L(X)<2)!'(X?2U) X
"^DD",11007.1,11007.1,.05,.1)
TWO-LETTER CODE
"^DD",11007.1,11007.1,.05,3)
Answer must be 2 characters in length.
"^DD",11007.1,11007.1,.05,21,0)
^.001^2^2^3140211^^
"^DD",11007.1,11007.1,.05,21,1,0)
Enter a unique two-letter abbreviation for this patch stream. This will 
"^DD",11007.1,11007.1,.05,21,2,0)
be used to help identify or select patch streams.
"^DD",11007.1,11007.1,.05,23,0)
^^8^8^3140211^
"^DD",11007.1,11007.1,.05,23,1,0)
This field is accessed by file DHCP Patches (11005)'s WRITE identifier.
"^DD",11007.1,11007.1,.05,23,2,0)
 
"^DD",11007.1,11007.1,.05,23,3,0)
Change History:
"^DD",11007.1,11007.1,.05,23,4,0)
 
"^DD",11007.1,11007.1,.05,23,5,0)
Tuesday, 11 February 2014: (VEN/TOAD) Created field Abbreviation (.05); 
"^DD",11007.1,11007.1,.05,23,6,0)
cross-referenced it; made it a key field; and made file DHCP Patches 
"^DD",11007.1,11007.1,.05,23,7,0)
(11005)'s WRITE identifier display it for Patch Module version 2.4 as 
"^DD",11007.1,11007.1,.05,23,8,0)
part of the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.05,"DT")
3140211
"^DD",11007.1,11007.1,.06,0)
SUBSCRIPTION^RSX^1:YES;0:NO;^0;6^D STRM^A1AEK2($G(DIEDA),$G(Y(0))) K:'$D(A1AEFOAP) X
"^DD",11007.1,11007.1,.06,3)
Only editable by Forum Action
"^DD",11007.1,11007.1,.06,21,0)
^^12^12^3140806^
"^DD",11007.1,11007.1,.06,21,1,0)
Enter YES if this SUBSCRIPTION represents the Patch Stream in use at
"^DD",11007.1,11007.1,.06,21,2,0)
this site. There can be only one SUBSCRIPTION at a time. If you set this
"^DD",11007.1,11007.1,.06,21,3,0)
field to YES, this SUBSCRIPTION field in all other patch streams
"^DD",11007.1,11007.1,.06,21,4,0)
will be set to NO.
"^DD",11007.1,11007.1,.06,21,5,0)
 
"^DD",11007.1,11007.1,.06,21,6,0)
The SUBSCRIPTION represents the default Patch Stream under which patch 
"^DD",11007.1,11007.1,.06,21,7,0)
installs at this site will use.  For instance, a site set for 
"^DD",11007.1,11007.1,.06,21,8,0)
SUBSCRIPTION - YES as a FOIA VISTA site, will only be able to install 
"^DD",11007.1,11007.1,.06,21,9,0)
patches number spaced in the FOIA VISTA range.
"^DD",11007.1,11007.1,.06,21,10,0)
 
"^DD",11007.1,11007.1,.06,21,11,0)
This field not only documents the Patch Stream in use by this site, but
"^DD",11007.1,11007.1,.06,21,12,0)
prevents installation of patches developed for other streams.
"^DD",11007.1,11007.1,.06,23,0)
^^16^16^3140806^
"^DD",11007.1,11007.1,.06,23,1,0)
SUBSCRIPTION is set to FOIA VISTA by the KIDS installing the DHCP PATCH 
"^DD",11007.1,11007.1,.06,23,2,0)
STREAM [#11007.1] file.  However, a post-install will allow the 
"^DD",11007.1,11007.1,.06,23,3,0)
installing user to select another Patch Subscription.
"^DD",11007.1,11007.1,.06,23,4,0)
 
"^DD",11007.1,11007.1,.06,23,5,0)
Enter YES if this SUBSCRIPTION represents the Patch Stream in use at
"^DD",11007.1,11007.1,.06,23,6,0)
this site. There can be only one SUBSCRIPTION at a time. If you set this
"^DD",11007.1,11007.1,.06,23,7,0)
field to YES, this SUBSCRIPTION field in all other patch streams
"^DD",11007.1,11007.1,.06,23,8,0)
will be set to NO.
"^DD",11007.1,11007.1,.06,23,9,0)
 
"^DD",11007.1,11007.1,.06,23,10,0)
The SUBSCRIPTION represents the default Patch Stream under which patch
"^DD",11007.1,11007.1,.06,23,11,0)
installs at this site will use.  For instance, a site set for
"^DD",11007.1,11007.1,.06,23,12,0)
SUBSCRIPTION - YES as a FOIA VISTA site, will only be able to install
"^DD",11007.1,11007.1,.06,23,13,0)
patches number spaced in the FOIA VISTA range.
"^DD",11007.1,11007.1,.06,23,14,0)
 
"^DD",11007.1,11007.1,.06,23,15,0)
This field not only documents the Patch Stream in use by this site, but
"^DD",11007.1,11007.1,.06,23,16,0)
prevents installation of patches developed for other streams.
"^DD",11007.1,11007.1,.06,"DT")
3150610
"^DD",11007.1,11007.1,.07,0)
FORUM DOMAIN^FJ30^^0;7^K:$L(X)>30!($L(X)<1) X
"^DD",11007.1,11007.1,.07,3)
Answer must be 1-30 characters in length.
"^DD",11007.1,11007.1,.07,21,0)
^^5^5^3140808^
"^DD",11007.1,11007.1,.07,21,1,0)
FORUM DOMAIN is designed to hold the name of MAILMAN PARAMETERS [#4.3]
"^DD",11007.1,11007.1,.07,21,2,0)
entry that represent this DHCP PATCH STREAM [#11007.1] entry as a FORUM
"^DD",11007.1,11007.1,.07,21,3,0)
site. The field is used to trigger the PRIMARY? [#.02] field in
"^DD",11007.1,11007.1,.07,21,4,0)
recognition of this site's ability to build and distribute KIDS patches 
"^DD",11007.1,11007.1,.07,21,5,0)
under this PATCH STREAM.
"^DD",11007.1,11007.1,.07,"DT")
3140808
"^DD",11007.1,11007.1,1,0)
SUBSCRIPTION DATE^11007.12DA^^1;0
"^DD",11007.1,11007.1,10,0)
ROUTINE^11007.11^^RTN;0
"^DD",11007.1,11007.1,10,21,0)
^.001^5^5^3140805^^^^
"^DD",11007.1,11007.1,10,21,1,0)
Contains routines and their current checksums for this stream.
"^DD",11007.1,11007.1,10,21,2,0)
 
"^DD",11007.1,11007.1,10,21,3,0)
Used to calculate the before checksums in $$BCS^A1AEUTL2
"^DD",11007.1,11007.1,10,21,4,0)
 
"^DD",11007.1,11007.1,10,21,5,0)
Updated upon release to the after values of the routines in the released KIDS Build.
"^DD",11007.1,11007.11,0)
ROUTINE SUB-FIELD^^1.1^5
"^DD",11007.1,11007.11,0,"DT")
3140307
"^DD",11007.1,11007.11,0,"IX","B",11007.11,.01)

"^DD",11007.1,11007.11,0,"NM","ROUTINE")

"^DD",11007.1,11007.11,0,"UP")
11007.1
"^DD",11007.1,11007.11,.01,0)
ROUTINE^MFJ16^^0;1^K:$L(X)>16!($L(X)<1) X
"^DD",11007.1,11007.11,.01,1,0)
^.1
"^DD",11007.1,11007.11,.01,1,1,0)
11007.11^B
"^DD",11007.1,11007.11,.01,1,1,1)
S ^A1AE(11007.1,DA(1),"RTN","B",$E(X,1,30),DA)=""
"^DD",11007.1,11007.11,.01,1,1,2)
K ^A1AE(11007.1,DA(1),"RTN","B",$E(X,1,30),DA)
"^DD",11007.1,11007.11,.01,3)
Enter a routine name without the caret.
"^DD",11007.1,11007.11,.01,9)
^
"^DD",11007.1,11007.11,.01,"DT")
3140307
"^DD",11007.1,11007.11,.02,0)
CURRENT CHECKSUM^FJ15^^0;2^K:$L(X)>15!($L(X)<1)!'(X?1A1.N) X
"^DD",11007.1,11007.11,.02,3)
Answer must be 1 Alpha 1-14 Numerics in length.
"^DD",11007.1,11007.11,.02,9)
^
"^DD",11007.1,11007.11,.02,21,0)
^.001^5^5^3140307^^
"^DD",11007.1,11007.11,.02,21,1,0)
This is the routine's New style checksum (starts with a B)
"^DD",11007.1,11007.11,.02,21,2,0)
 
"^DD",11007.1,11007.11,.02,21,3,0)
This field holds the checksum (based on $$SUMB^XPDRSUM(routine)) calculated for Class I release loaded by KIDS.
"^DD",11007.1,11007.11,.02,21,4,0)
 
"^DD",11007.1,11007.11,.02,21,5,0)
The letter at the front tells us what checksum algorithm was used.  
"^DD",11007.1,11007.11,.02,"DT")
3140307
"^DD",11007.1,11007.11,.03,0)
CHECKSUM DATE^D^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",11007.1,11007.11,.03,3)
Enter a precise Date/Time for when this entry was made
"^DD",11007.1,11007.11,.03,9)
^
"^DD",11007.1,11007.11,.03,21,0)
^^1^1^3140307^
"^DD",11007.1,11007.11,.03,21,1,0)
This field holds the date the Checksum was last saved.
"^DD",11007.1,11007.11,.03,"DT")
3140307
"^DD",11007.1,11007.11,.04,0)
PATCH LIST AT CHECKSUM TIME^FJ200^^0;4^K:$L(X)>200!($L(X)<1) X
"^DD",11007.1,11007.11,.04,3)
Answer must be 1-200 characters in length.
"^DD",11007.1,11007.11,.04,9)
^
"^DD",11007.1,11007.11,.04,21,0)
^^1^1^3140307^
"^DD",11007.1,11007.11,.04,21,1,0)
This field holds the patch list from the second line of the routine at the time the checksum is field from the patch module.
"^DD",11007.1,11007.11,.04,"DT")
3140307
"^DD",11007.1,11007.11,1.1,0)
DELETED BY PATCH^P11005'^A1AE(11005,^1;1^Q
"^DD",11007.1,11007.11,1.1,3)

"^DD",11007.1,11007.11,1.1,21,0)
^^1^1^3140307^^^
"^DD",11007.1,11007.11,1.1,21,1,0)
If a patch deletes a routine, this is noted here.
"^DD",11007.1,11007.11,1.1,"DT")
3140307
"^DD",11007.1,11007.12,0)
SUBSCRIPTION DATE SUB-FIELD^^2^3
"^DD",11007.1,11007.12,0,"DT")
3140805
"^DD",11007.1,11007.12,0,"IX","B",11007.12,.01)

"^DD",11007.1,11007.12,0,"NM","SUBSCRIPTION DATE")

"^DD",11007.1,11007.12,0,"UP")
11007.1
"^DD",11007.1,11007.12,.01,0)
SUBSCRIPTION DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",11007.1,11007.12,.01,1,0)
^.1
"^DD",11007.1,11007.12,.01,1,1,0)
11007.12^B
"^DD",11007.1,11007.12,.01,1,1,1)
S ^A1AE(11007.1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",11007.1,11007.12,.01,1,1,2)
K ^A1AE(11007.1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",11007.1,11007.12,.01,21,0)
^^1^1^3140805^
"^DD",11007.1,11007.12,.01,21,1,0)
SUBSCRIPTION DATE documents the date a new SUBSCRIPTION path was selected.
"^DD",11007.1,11007.12,.01,"DT")
3140806
"^DD",11007.1,11007.12,1,0)
AUTHORIZING INDIVIDUAL^P200'^VA(200,^0;2^Q
"^DD",11007.1,11007.12,1,21,0)
^.001^2^2^3140805^^
"^DD",11007.1,11007.12,1,21,1,0)
The authorized user who changed the site's SUBSCRIPTION to this PATCH 
"^DD",11007.1,11007.12,1,21,2,0)
STREAM
"^DD",11007.1,11007.12,1,"DT")
3140805
"^DD",11007.1,11007.12,2,0)
COMMENTS^11007.122^^1;0
"^DD",11007.1,11007.122,0)
COMMENTS SUB-FIELD^^.01^1
"^DD",11007.1,11007.122,0,"DT")
3140805
"^DD",11007.1,11007.122,0,"NM","COMMENTS")

"^DD",11007.1,11007.122,0,"UP")
11007.12
"^DD",11007.1,11007.122,.01,0)
COMMENTS^Wx^^0;1^Q
"^DD",11007.1,11007.122,.01,21,0)
^^2^2^3140805^
"^DD",11007.1,11007.122,.01,21,1,0)
All pertinent information surrounding the decision to make this PATCH 
"^DD",11007.1,11007.122,.01,21,2,0)
STREAM the site's SUBSCRIPTION
"^DD",11007.1,11007.122,.01,"DT")
3140805
"^DIC",11004,11004,0)
PATCH^11004I
"^DIC",11004,11004,0,"GL")
^A1AE(11004,
"^DIC",11004,11004,"%",0)
^1.005^^
"^DIC",11004,11004,"%D",0)
^^3^3^3150630^
"^DIC",11004,11004,"%D",1,0)
This file contains patch information from the Patch Module. It is 
"^DIC",11004,11004,"%D",2,0)
automatically populated by the installation of each patch by KIDS. It 
"^DIC",11004,11004,"%D",3,0)
acts as the authoritative source of what a patch is on the VISTA system.
"^DIC",11004,"B","PATCH",11004)

"^DIC",11007.1,11007.1,0)
DHCP PATCH STREAM^11007.1
"^DIC",11007.1,11007.1,0,"GL")
^A1AE(11007.1,
"^DIC",11007.1,11007.1,"%",0)
^1.005^^
"^DIC",11007.1,11007.1,"%D",0)
^1.001^45^45^3140728^^^
"^DIC",11007.1,11007.1,"%D",1,0)
This file enables the concept of patch streams. A patch stream is the 
"^DIC",11007.1,11007.1,"%D",2,0)
primary output of a Patch Module system for each package.
"^DIC",11007.1,11007.1,"%D",3,0)
 
"^DIC",11007.1,11007.1,"%D",4,0)
This file enables the numberspacing of patch streams. If you decide 
"^DIC",11007.1,11007.1,"%D",5,0)
patches coming out of this Patch Module need to be numberspaced starting 
"^DIC",11007.1,11007.1,"%D",6,0)
at 20001, you must create an entry here with an IEN of 20001 (in the 
"^DIC",11007.1,11007.1,"%D",7,0)
NUMBER field) and set it as Primary.
"^DIC",11007.1,11007.1,"%D",8,0)
 
"^DIC",11007.1,11007.1,"%D",9,0)
Technical Description:
"^DIC",11007.1,11007.1,"%D",10,0)
 
"^DIC",11007.1,11007.1,"%D",11,0)
The logic to use this file can be found in the routine A1AEUTL in the 
"^DIC",11007.1,11007.1,"%D",12,0)
tags SEQ and NUM.
"^DIC",11007.1,11007.1,"%D",13,0)
 
"^DIC",11007.1,11007.1,"%D",14,0)
Multiplexing of patches (having multiple input and multiple output 
"^DIC",11007.1,11007.1,"%D",15,0)
streams) is supported in the file design but has not been implemented as 
"^DIC",11007.1,11007.1,"%D",16,0)
of Jan 24 2014.
"^DIC",11007.1,11007.1,"%D",17,0)
 
"^DIC",11007.1,11007.1,"%D",18,0)
This file requires Fileman 22.2 patched up to at least DI*22.2*2 to be 
"^DIC",11007.1,11007.1,"%D",19,0)
operational. Contact the developer for details or see the APRIM 
"^DIC",11007.1,11007.1,"%D",20,0)
cross-reference which uses the new capabilities.
"^DIC",11007.1,11007.1,"%D",21,0)
 
"^DIC",11007.1,11007.1,"%D",22,0)
Change History:
"^DIC",11007.1,11007.1,"%D",23,0)
 
"^DIC",11007.1,11007.1,"%D",24,0)
Monday, 13 January 2014: Sam Habiel of the VISTA Expertise Network 
"^DIC",11007.1,11007.1,"%D",25,0)
(VEN/SMH) created file DHCP Patch Stream (11007.1) for Patch Module 
"^DIC",11007.1,11007.1,"%D",26,0)
version 2.4 as part of the OSEHRA Forum Project Phase One. Handling of 
"^DIC",11007.1,11007.1,"%D",27,0)
multiple patch streams is the major innovation of Patch Module version 
"^DIC",11007.1,11007.1,"%D",28,0)
2.4, giving this file central importance to that version.
"^DIC",11007.1,11007.1,"%D",29,0)
 
"^DIC",11007.1,11007.1,"%D",30,0)
Wednesday, 22 January 2014: (VEN/SMH) Upgraded the file to numberspace 
"^DIC",11007.1,11007.1,"%D",31,0)
patch streams, and to ensure there is only one primary stream at a time. 
"^DIC",11007.1,11007.1,"%D",32,0)
For Patch Module version 2.4 as part of the OSEHRA Forum Project Phase 
"^DIC",11007.1,11007.1,"%D",33,0)
One.
"^DIC",11007.1,11007.1,"%D",34,0)
 
"^DIC",11007.1,11007.1,"%D",35,0)
Tuesday, 11 February 2014: Rick Marshall (VEN/TOAD) Added technical 
"^DIC",11007.1,11007.1,"%D",36,0)
descriptions & change histories; revised descriptions; renumbered fields 
"^DIC",11007.1,11007.1,"%D",37,0)
Primary? (2), Feeds into Stream (3), and Domain (4) as .02, .03, and .04; 
"^DIC",11007.1,11007.1,"%D",38,0)
renamed field Patch Stream Name (.01) as Name; replaced traditional 
"^DIC",11007.1,11007.1,"%D",39,0)
cross-references with new-style cross-references; added field 
"^DIC",11007.1,11007.1,"%D",40,0)
Abbreviation (.05); added two new keys, primary on field Name, secondary 
"^DIC",11007.1,11007.1,"%D",41,0)
on field Abbreviation; added pointer to it from file DHCP Patches 
"^DIC",11007.1,11007.1,"%D",42,0)
(11005)' field Patch Stream (.05), so patches can be linked to patch 
"^DIC",11007.1,11007.1,"%D",43,0)
streams, and so DHCP Patches records can be identified in part by the 
"^DIC",11007.1,11007.1,"%D",44,0)
Patch Stream Abbreviation. For Patch Module version 2.4 as part of the 
"^DIC",11007.1,11007.1,"%D",45,0)
OSEHRA Forum Project Phase One.
"^DIC",11007.1,"B","DHCP PATCH STREAM",11007.1)

**END**
**END**
