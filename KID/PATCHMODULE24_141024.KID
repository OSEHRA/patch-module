KIDS Distribution saved on Oct 24, 2014@19:40:04
Updated build for DHCP PATCHES and related files
**KIDS**:PATCH MODULE 2.4^

**INSTALL NAME**
PATCH MODULE 2.4
"BLD",9262,0)
PATCH MODULE 2.4^PATCH MODULE^0^3141024^n
"BLD",9262,1,0)
^^2^2^3141024^
"BLD",9262,1,1,0)
The PATCH Module from FORUM.VA.GOV modified to handle OSEHRA Community 
"BLD",9262,1,2,0)
requirements.
"BLD",9262,4,0)
^9.64PA^11005.2^7
"BLD",9262,4,11005,0)
11005
"BLD",9262,4,11005,222)
y^y^f^^^^n
"BLD",9262,4,11005.1,0)
11005.1
"BLD",9262,4,11005.1,222)
y^y^f^^^^n
"BLD",9262,4,11005.2,0)
11005.2
"BLD",9262,4,11005.2,222)
y^y^f^^n^^y^o^n
"BLD",9262,4,11005.5,0)
11005.5
"BLD",9262,4,11005.5,222)
y^y^f^^^^n
"BLD",9262,4,11006,0)
11006
"BLD",9262,4,11006,222)
y^y^f^^^^n
"BLD",9262,4,11007,0)
11007
"BLD",9262,4,11007,222)
y^y^f^^^^n^^
"BLD",9262,4,11007,224)

"BLD",9262,4,11007.1,0)
11007.1
"BLD",9262,4,11007.1,222)
y^y^f^^^^n
"BLD",9262,4,"B",11005,11005)

"BLD",9262,4,"B",11005.1,11005.1)

"BLD",9262,4,"B",11005.2,11005.2)

"BLD",9262,4,"B",11005.5,11005.5)

"BLD",9262,4,"B",11006,11006)

"BLD",9262,4,"B",11007,11007)

"BLD",9262,4,"B",11007.1,11007.1)

"BLD",9262,6.3)
14
"BLD",9262,"INID")
^n
"BLD",9262,"INIT")
A1AE2POS
"BLD",9262,"KRN",0)
^9.67PA^779.2^20
"BLD",9262,"KRN",.4,0)
.4
"BLD",9262,"KRN",.4,"NM",0)
^9.68A^17^17
"BLD",9262,"KRN",.4,"NM",1,0)
A1AE FULL SUMMARY BY DATE    FILE #11005^11005^0
"BLD",9262,"KRN",.4,"NM",2,0)
A1AE GT 500    FILE #11007^11007^0
"BLD",9262,"KRN",.4,"NM",3,0)
A1AE PACKAGE USERS    FILE #11007^11007^0
"BLD",9262,"KRN",.4,"NM",4,0)
A1AE PATCH COMPL/COMMENT RPT    FILE #11005^11005^0
"BLD",9262,"KRN",.4,"NM",5,0)
A1AE PATCH COMPLIANCE PRT    FILE #11005^11005^0
"BLD",9262,"KRN",.4,"NM",6,0)
A1AE PATCH OPTS DOC    FILE #19^19^0
"BLD",9262,"KRN",.4,"NM",7,0)
A1AE PATCH SUMMARY    FILE #11005^11005^0
"BLD",9262,"KRN",.4,"NM",8,0)
A1AE PROBLEM DETAILS    FILE #11006^11006^0
"BLD",9262,"KRN",.4,"NM",9,0)
A1AE ROUTINE INQUIRE    FILE #9.8^9.8^0
"BLD",9262,"KRN",.4,"NM",10,0)
A1AE RTN CHECKSUM    FILE #9.8^9.8^0
"BLD",9262,"KRN",.4,"NM",11,0)
A1AE SELECTED USERS    FILE #11007^11007^0
"BLD",9262,"KRN",.4,"NM",12,0)
A1AE STANDARD HEADER    FILE #11005^11005^0
"BLD",9262,"KRN",.4,"NM",13,0)
A1AE STANDARD PRINT    FILE #11005^11005^0
"BLD",9262,"KRN",.4,"NM",14,0)
A1AE TABLED PROBLEM    FILE #11006^11006^0
"BLD",9262,"KRN",.4,"NM",15,0)
A1AE VERIFIED PATCH SUMMARY    FILE #11005^11005^0
"BLD",9262,"KRN",.4,"NM",16,0)
A1AEZPKE    FILE #11005^11005^0
"BLD",9262,"KRN",.4,"NM",17,0)
A1AE PATCH RELATIONSHIPS    FILE #11005^11005^0
"BLD",9262,"KRN",.4,"NM","B","A1AE FULL SUMMARY BY DATE    FILE #11005",1)

"BLD",9262,"KRN",.4,"NM","B","A1AE GT 500    FILE #11007",2)

"BLD",9262,"KRN",.4,"NM","B","A1AE PACKAGE USERS    FILE #11007",3)

"BLD",9262,"KRN",.4,"NM","B","A1AE PATCH COMPL/COMMENT RPT    FILE #11005",4)

"BLD",9262,"KRN",.4,"NM","B","A1AE PATCH COMPLIANCE PRT    FILE #11005",5)

"BLD",9262,"KRN",.4,"NM","B","A1AE PATCH OPTS DOC    FILE #19",6)

"BLD",9262,"KRN",.4,"NM","B","A1AE PATCH RELATIONSHIPS    FILE #11005",17)

"BLD",9262,"KRN",.4,"NM","B","A1AE PATCH SUMMARY    FILE #11005",7)

"BLD",9262,"KRN",.4,"NM","B","A1AE PROBLEM DETAILS    FILE #11006",8)

"BLD",9262,"KRN",.4,"NM","B","A1AE ROUTINE INQUIRE    FILE #9.8",9)

"BLD",9262,"KRN",.4,"NM","B","A1AE RTN CHECKSUM    FILE #9.8",10)

"BLD",9262,"KRN",.4,"NM","B","A1AE SELECTED USERS    FILE #11007",11)

"BLD",9262,"KRN",.4,"NM","B","A1AE STANDARD HEADER    FILE #11005",12)

"BLD",9262,"KRN",.4,"NM","B","A1AE STANDARD PRINT    FILE #11005",13)

"BLD",9262,"KRN",.4,"NM","B","A1AE TABLED PROBLEM    FILE #11006",14)

"BLD",9262,"KRN",.4,"NM","B","A1AE VERIFIED PATCH SUMMARY    FILE #11005",15)

"BLD",9262,"KRN",.4,"NM","B","A1AEZPKE    FILE #11005",16)

"BLD",9262,"KRN",.401,0)
.401
"BLD",9262,"KRN",.401,"NM",0)
^9.68A^13^13
"BLD",9262,"KRN",.401,"NM",1,0)
A1AE FULL SUMARY SORT    FILE #11005^11005^0
"BLD",9262,"KRN",.401,"NM",2,0)
A1AE FULL SUMMARY BY DATE    FILE #11005^11005^0
"BLD",9262,"KRN",.401,"NM",3,0)
A1AE GT 500    FILE #11007^11007^0
"BLD",9262,"KRN",.401,"NM",4,0)
A1AE PATCH COMPL/COMM SORT    FILE #11005^11005^0
"BLD",9262,"KRN",.401,"NM",5,0)
A1AE PROBLEM SORT    FILE #11006^11006^0
"BLD",9262,"KRN",.401,"NM",6,0)
A1AE SEQ REV SAVE    FILE #11005^11005^0
"BLD",9262,"KRN",.401,"NM",7,0)
A1AE SEQ REV SUMMARY SORT    FILE #11005^11005^0
"BLD",9262,"KRN",.401,"NM",8,0)
A1AE SEQ SAVE    FILE #11005^11005^0
"BLD",9262,"KRN",.401,"NM",9,0)
A1AE SEQ SUMMARY SORT    FILE #11005^11005^0
"BLD",9262,"KRN",.401,"NM",10,0)
A1AE STANDARD SORT    FILE #11005^11005^0
"BLD",9262,"KRN",.401,"NM",11,0)
A1AE SUMMARY SORT    FILE #11005^11005^1^
"BLD",9262,"KRN",.401,"NM",12,0)
A1AEZPKE    FILE #11005^11005^0
"BLD",9262,"KRN",.401,"NM",13,0)
A1AE COM PATCH BY STRM BY DT    FILE #11005^11005^0
"BLD",9262,"KRN",.401,"NM","B","A1AE COM PATCH BY STRM BY DT    FILE #11005",13)

"BLD",9262,"KRN",.401,"NM","B","A1AE FULL SUMARY SORT    FILE #11005",1)

"BLD",9262,"KRN",.401,"NM","B","A1AE FULL SUMMARY BY DATE    FILE #11005",2)

"BLD",9262,"KRN",.401,"NM","B","A1AE GT 500    FILE #11007",3)

"BLD",9262,"KRN",.401,"NM","B","A1AE PATCH COMPL/COMM SORT    FILE #11005",4)

"BLD",9262,"KRN",.401,"NM","B","A1AE PROBLEM SORT    FILE #11006",5)

"BLD",9262,"KRN",.401,"NM","B","A1AE SEQ REV SAVE    FILE #11005",6)

"BLD",9262,"KRN",.401,"NM","B","A1AE SEQ REV SUMMARY SORT    FILE #11005",7)

"BLD",9262,"KRN",.401,"NM","B","A1AE SEQ SAVE    FILE #11005",8)

"BLD",9262,"KRN",.401,"NM","B","A1AE SEQ SUMMARY SORT    FILE #11005",9)

"BLD",9262,"KRN",.401,"NM","B","A1AE STANDARD SORT    FILE #11005",10)

"BLD",9262,"KRN",.401,"NM","B","A1AE SUMMARY SORT    FILE #11005",11)

"BLD",9262,"KRN",.401,"NM","B","A1AEZPKE    FILE #11005",12)

"BLD",9262,"KRN",.402,0)
.402
"BLD",9262,"KRN",.402,"NM",0)
^9.68A^5^5
"BLD",9262,"KRN",.402,"NM",1,0)
A1AE ADD/EDIT PATCHES    FILE #11005^11005^0
"BLD",9262,"KRN",.402,"NM",2,0)
A1AE ADD/EDIT PROBLEMS    FILE #11006^11006^0
"BLD",9262,"KRN",.402,"NM",3,0)
A1AE ADD/EDIT USERS    FILE #11007^11007^0
"BLD",9262,"KRN",.402,"NM",4,0)
A1AE CHANGE PROBLEM STATUS    FILE #11006^11006^0
"BLD",9262,"KRN",.402,"NM",5,0)
A1AE COMP DATE    FILE #11005^11005^0
"BLD",9262,"KRN",.402,"NM","B","A1AE ADD/EDIT PATCHES    FILE #11005",1)

"BLD",9262,"KRN",.402,"NM","B","A1AE ADD/EDIT PROBLEMS    FILE #11006",2)

"BLD",9262,"KRN",.402,"NM","B","A1AE ADD/EDIT USERS    FILE #11007",3)

"BLD",9262,"KRN",.402,"NM","B","A1AE CHANGE PROBLEM STATUS    FILE #11006",4)

"BLD",9262,"KRN",.402,"NM","B","A1AE COMP DATE    FILE #11005",5)

"BLD",9262,"KRN",.403,0)
.403
"BLD",9262,"KRN",.5,0)
.5
"BLD",9262,"KRN",.84,0)
.84
"BLD",9262,"KRN",3.6,0)
3.6
"BLD",9262,"KRN",3.6,"NM",0)
^9.68A^12^12
"BLD",9262,"KRN",3.6,"NM",1,0)
A1AE COMPLETED PATCH^^0
"BLD",9262,"KRN",3.6,"NM",2,0)
A1AE COMPLIANCE DATE EDIT^^0
"BLD",9262,"KRN",3.6,"NM",3,0)
A1AE ENTERED IN ERROR PATCH^^0
"BLD",9262,"KRN",3.6,"NM",4,0)
A1AE PKG^^0
"BLD",9262,"KRN",3.6,"NM",5,0)
A1AE RETIRED PATCH^^0
"BLD",9262,"KRN",3.6,"NM",6,0)
A1AE VERIFIED PACKAGE^^0
"BLD",9262,"KRN",3.6,"NM",7,0)
A1AE VERIFIED PATCH^^0
"BLD",9262,"KRN",3.6,"NM",8,0)
A1AE LOAD RELEASED PATCH^^0
"BLD",9262,"KRN",3.6,"NM",9,0)
A1AE DENIED SEC RELEASE PATCH^^0
"BLD",9262,"KRN",3.6,"NM",10,0)
A1AE SEC COMPLETION PATCH^^0
"BLD",9262,"KRN",3.6,"NM",11,0)
A1AE SEC DEVELOPMENT PATCH^^0
"BLD",9262,"KRN",3.6,"NM",12,0)
A1AE SEC RELEASE PATCH^^0
"BLD",9262,"KRN",3.6,"NM","B","A1AE COMPLETED PATCH",1)

"BLD",9262,"KRN",3.6,"NM","B","A1AE COMPLIANCE DATE EDIT",2)

"BLD",9262,"KRN",3.6,"NM","B","A1AE DENIED SEC RELEASE PATCH",9)

"BLD",9262,"KRN",3.6,"NM","B","A1AE ENTERED IN ERROR PATCH",3)

"BLD",9262,"KRN",3.6,"NM","B","A1AE LOAD RELEASED PATCH",8)

"BLD",9262,"KRN",3.6,"NM","B","A1AE PKG",4)

"BLD",9262,"KRN",3.6,"NM","B","A1AE RETIRED PATCH",5)

"BLD",9262,"KRN",3.6,"NM","B","A1AE SEC COMPLETION PATCH",10)

"BLD",9262,"KRN",3.6,"NM","B","A1AE SEC DEVELOPMENT PATCH",11)

"BLD",9262,"KRN",3.6,"NM","B","A1AE SEC RELEASE PATCH",12)

"BLD",9262,"KRN",3.6,"NM","B","A1AE VERIFIED PACKAGE",6)

"BLD",9262,"KRN",3.6,"NM","B","A1AE VERIFIED PATCH",7)

"BLD",9262,"KRN",3.8,0)
3.8
"BLD",9262,"KRN",3.8,"NM",0)
^9.68A^4^4
"BLD",9262,"KRN",3.8,"NM",1,0)
A1AE HFS MESSAGES^^0
"BLD",9262,"KRN",3.8,"NM",2,0)
A1AE PACKAGE RELEASE^^0
"BLD",9262,"KRN",3.8,"NM",3,0)
A1AE PATCH ERRORS^^0
"BLD",9262,"KRN",3.8,"NM",4,0)
A1AE LOAD RELEASED PATCH^^0
"BLD",9262,"KRN",3.8,"NM","B","A1AE HFS MESSAGES",1)

"BLD",9262,"KRN",3.8,"NM","B","A1AE LOAD RELEASED PATCH",4)

"BLD",9262,"KRN",3.8,"NM","B","A1AE PACKAGE RELEASE",2)

"BLD",9262,"KRN",3.8,"NM","B","A1AE PATCH ERRORS",3)

"BLD",9262,"KRN",9.2,0)
9.2
"BLD",9262,"KRN",9.8,0)
9.8
"BLD",9262,"KRN",9.8,"NM",0)
^9.68A^66^51
"BLD",9262,"KRN",9.8,"NM",2,0)
A1AEAU^^0^B22106203
"BLD",9262,"KRN",9.8,"NM",3,0)
A1AECL1^^0^B14940706
"BLD",9262,"KRN",9.8,"NM",4,0)
A1AECOPD^^0^B22696041
"BLD",9262,"KRN",9.8,"NM",5,0)
A1AECOPR^^0^B25294236
"BLD",9262,"KRN",9.8,"NM",6,0)
A1AECOPY^^0^B25072086
"BLD",9262,"KRN",9.8,"NM",7,0)
A1AEHSVR^^0^B8406742
"BLD",9262,"KRN",9.8,"NM",8,0)
A1AEKEY^^0^B20742998
"BLD",9262,"KRN",9.8,"NM",10,0)
A1AEM^^0^B42478438
"BLD",9262,"KRN",9.8,"NM",11,0)
A1AEM1^^0^B57050036
"BLD",9262,"KRN",9.8,"NM",12,0)
A1AEM2^^0^B9023362
"BLD",9262,"KRN",9.8,"NM",13,0)
A1AEMAL^^0^B44810612
"BLD",9262,"KRN",9.8,"NM",14,0)
A1AEMAL1^^0^B24198637
"BLD",9262,"KRN",9.8,"NM",15,0)
A1AEMGR^^0^B10155661
"BLD",9262,"KRN",9.8,"NM",19,0)
A1AEPB1^^0^B13048468
"BLD",9262,"KRN",9.8,"NM",22,0)
A1AEPH1^^0^B33099177
"BLD",9262,"KRN",9.8,"NM",23,0)
A1AEPH2^^0^B117299389
"BLD",9262,"KRN",9.8,"NM",24,0)
A1AEPH3^^0^B8359714
"BLD",9262,"KRN",9.8,"NM",25,0)
A1AEPH4^^0^B13752635
"BLD",9262,"KRN",9.8,"NM",26,0)
A1AEPH5^^0^B8392255
"BLD",9262,"KRN",9.8,"NM",27,0)
A1AEPH6^^0^B21002501
"BLD",9262,"KRN",9.8,"NM",29,0)
A1AEPH8^^0^B13651595
"BLD",9262,"KRN",9.8,"NM",31,0)
A1AEPHS^^0^B270112857
"BLD",9262,"KRN",9.8,"NM",34,0)
A1AEPK^^0^B41374404
"BLD",9262,"KRN",9.8,"NM",36,0)
A1AERCON^^0^B5359981
"BLD",9262,"KRN",9.8,"NM",37,0)
A1AERD^^0^B4000086
"BLD",9262,"KRN",9.8,"NM",38,0)
A1AESP^^0^B24364626
"BLD",9262,"KRN",9.8,"NM",40,0)
A1AEUTL^^0^B149432462
"BLD",9262,"KRN",9.8,"NM",41,0)
A1AEUTL1^^0^B11371584
"BLD",9262,"KRN",9.8,"NM",42,0)
A1AEUTL2^^0^B14417128
"BLD",9262,"KRN",9.8,"NM",44,0)
A1AEVP^^0^B30091569
"BLD",9262,"KRN",9.8,"NM",45,0)
A1AEVP1^^0^B7355089
"BLD",9262,"KRN",9.8,"NM",46,0)
A1AEZCON^^0^B10420189
"BLD",9262,"KRN",9.8,"NM",47,0)
A1AEZTST^^0^B2013390
"BLD",9262,"KRN",9.8,"NM",48,0)
A1AEK2M^^0^B151576275
"BLD",9262,"KRN",9.8,"NM",49,0)
A1AEK2M0^^0^B191388494
"BLD",9262,"KRN",9.8,"NM",50,0)
A1AEK2M1^^0^B24426174
"BLD",9262,"KRN",9.8,"NM",51,0)
A1AEK2M2^^0^B30902735
"BLD",9262,"KRN",9.8,"NM",52,0)
A1AEK2MT^^0^B47121510
"BLD",9262,"KRN",9.8,"NM",54,0)
A1AEUT1^^0^B188694393
"BLD",9262,"KRN",9.8,"NM",55,0)
A1AEUT2^^0^B101446265
"BLD",9262,"KRN",9.8,"NM",56,0)
A1AEPSVR^^0^B231769506
"BLD",9262,"KRN",9.8,"NM",57,0)
A1AEM2K^^0^B39456093
"BLD",9262,"KRN",9.8,"NM",58,0)
A1AEK2V0^^0^B64294184
"BLD",9262,"KRN",9.8,"NM",59,0)
A1AEK2VC^^0^B128816935
"BLD",9262,"KRN",9.8,"NM",60,0)
A1AEOS^^0^B4736088
"BLD",9262,"KRN",9.8,"NM",61,0)
A1AEK2M3^^0^B12404493
"BLD",9262,"KRN",9.8,"NM",62,0)
A1AEPHS1^^0^B2767511
"BLD",9262,"KRN",9.8,"NM",63,0)
A1AEDD1^^0^B3134313
"BLD",9262,"KRN",9.8,"NM",64,0)
A1AEUDD^^0^B7792804
"BLD",9262,"KRN",9.8,"NM",65,0)
A1AEUPS1^^0^B38575503
"BLD",9262,"KRN",9.8,"NM",66,0)
A1AEUPS2^^0^B98966818
"BLD",9262,"KRN",9.8,"NM","B","A1AEAU",2)

"BLD",9262,"KRN",9.8,"NM","B","A1AECL1",3)

"BLD",9262,"KRN",9.8,"NM","B","A1AECOPD",4)

"BLD",9262,"KRN",9.8,"NM","B","A1AECOPR",5)

"BLD",9262,"KRN",9.8,"NM","B","A1AECOPY",6)

"BLD",9262,"KRN",9.8,"NM","B","A1AEDD1",63)

"BLD",9262,"KRN",9.8,"NM","B","A1AEHSVR",7)

"BLD",9262,"KRN",9.8,"NM","B","A1AEK2M",48)

"BLD",9262,"KRN",9.8,"NM","B","A1AEK2M0",49)

"BLD",9262,"KRN",9.8,"NM","B","A1AEK2M1",50)

"BLD",9262,"KRN",9.8,"NM","B","A1AEK2M2",51)

"BLD",9262,"KRN",9.8,"NM","B","A1AEK2M3",61)

"BLD",9262,"KRN",9.8,"NM","B","A1AEK2MT",52)

"BLD",9262,"KRN",9.8,"NM","B","A1AEK2V0",58)

"BLD",9262,"KRN",9.8,"NM","B","A1AEK2VC",59)

"BLD",9262,"KRN",9.8,"NM","B","A1AEKEY",8)

"BLD",9262,"KRN",9.8,"NM","B","A1AEM",10)

"BLD",9262,"KRN",9.8,"NM","B","A1AEM1",11)

"BLD",9262,"KRN",9.8,"NM","B","A1AEM2",12)

"BLD",9262,"KRN",9.8,"NM","B","A1AEM2K",57)

"BLD",9262,"KRN",9.8,"NM","B","A1AEMAL",13)

"BLD",9262,"KRN",9.8,"NM","B","A1AEMAL1",14)

"BLD",9262,"KRN",9.8,"NM","B","A1AEMGR",15)

"BLD",9262,"KRN",9.8,"NM","B","A1AEOS",60)

"BLD",9262,"KRN",9.8,"NM","B","A1AEPB1",19)

"BLD",9262,"KRN",9.8,"NM","B","A1AEPH1",22)

"BLD",9262,"KRN",9.8,"NM","B","A1AEPH2",23)

"BLD",9262,"KRN",9.8,"NM","B","A1AEPH3",24)

"BLD",9262,"KRN",9.8,"NM","B","A1AEPH4",25)

"BLD",9262,"KRN",9.8,"NM","B","A1AEPH5",26)

"BLD",9262,"KRN",9.8,"NM","B","A1AEPH6",27)

"BLD",9262,"KRN",9.8,"NM","B","A1AEPH8",29)

"BLD",9262,"KRN",9.8,"NM","B","A1AEPHS",31)

"BLD",9262,"KRN",9.8,"NM","B","A1AEPHS1",62)

"BLD",9262,"KRN",9.8,"NM","B","A1AEPK",34)

"BLD",9262,"KRN",9.8,"NM","B","A1AEPSVR",56)

"BLD",9262,"KRN",9.8,"NM","B","A1AERCON",36)

"BLD",9262,"KRN",9.8,"NM","B","A1AERD",37)

"BLD",9262,"KRN",9.8,"NM","B","A1AESP",38)

"BLD",9262,"KRN",9.8,"NM","B","A1AEUDD",64)

"BLD",9262,"KRN",9.8,"NM","B","A1AEUPS1",65)

"BLD",9262,"KRN",9.8,"NM","B","A1AEUPS2",66)

"BLD",9262,"KRN",9.8,"NM","B","A1AEUT1",54)

"BLD",9262,"KRN",9.8,"NM","B","A1AEUT2",55)

"BLD",9262,"KRN",9.8,"NM","B","A1AEUTL",40)

"BLD",9262,"KRN",9.8,"NM","B","A1AEUTL1",41)

"BLD",9262,"KRN",9.8,"NM","B","A1AEUTL2",42)

"BLD",9262,"KRN",9.8,"NM","B","A1AEVP",44)

"BLD",9262,"KRN",9.8,"NM","B","A1AEVP1",45)

"BLD",9262,"KRN",9.8,"NM","B","A1AEZCON",46)

"BLD",9262,"KRN",9.8,"NM","B","A1AEZTST",47)

"BLD",9262,"KRN",19,0)
19
"BLD",9262,"KRN",19,"NM",0)
^9.68A^75^75
"BLD",9262,"KRN",19,"NM",1,0)
A1AE AUTHORIZED DOMAINS^^0
"BLD",9262,"KRN",19,"NM",2,0)
A1AE COMPLIANCE COMMENT PRT^^0
"BLD",9262,"KRN",19,"NM",3,0)
A1AE COMPLIANCE DISPLAY^^0
"BLD",9262,"KRN",19,"NM",4,0)
A1AE COMPLIANCE EDIT^^0
"BLD",9262,"KRN",19,"NM",5,0)
A1AE COPY PATCH^^0
"BLD",9262,"KRN",19,"NM",6,0)
A1AE DEV CREATE^^0
"BLD",9262,"KRN",19,"NM",7,0)
A1AE DEV FORWARD^^0
"BLD",9262,"KRN",19,"NM",8,0)
A1AE DEVELOPER^^0
"BLD",9262,"KRN",19,"NM",9,0)
A1AE DISCOMPH^^0
"BLD",9262,"KRN",19,"NM",10,0)
A1AE FORWARD^^0
"BLD",9262,"KRN",19,"NM",11,0)
A1AE FULL SUMMARY BY DATE^^0
"BLD",9262,"KRN",19,"NM",12,0)
A1AE HFS CHKSUM SVR^^0
"BLD",9262,"KRN",19,"NM",13,0)
A1AE MGR^^0
"BLD",9262,"KRN",19,"NM",14,0)
A1AE MGRADD^^0
"BLD",9262,"KRN",19,"NM",15,0)
A1AE PATCHDOC^^0
"BLD",9262,"KRN",19,"NM",16,0)
A1AE PBADD^^0
"BLD",9262,"KRN",19,"NM",17,0)
A1AE PBDEL^^0
"BLD",9262,"KRN",19,"NM",18,0)
A1AE PBEDIT^^0
"BLD",9262,"KRN",19,"NM",19,0)
A1AE PBPROBLEM^^0
"BLD",9262,"KRN",19,"NM",20,0)
A1AE PBPRT^^1^
"BLD",9262,"KRN",19,"NM",21,0)
A1AE PBRESREV^^0
"BLD",9262,"KRN",19,"NM",22,0)
A1AE PHADD^^0
"BLD",9262,"KRN",19,"NM",23,0)
A1AE PHDEL^^0
"BLD",9262,"KRN",19,"NM",24,0)
A1AE PHEDIT^^0
"BLD",9262,"KRN",19,"NM",25,0)
A1AE PHEXTEND^^0
"BLD",9262,"KRN",19,"NM",26,0)
A1AE PHVER^^0
"BLD",9262,"KRN",19,"NM",27,0)
A1AE PKADD^^0
"BLD",9262,"KRN",19,"NM",28,0)
A1AE PKDEL^^0
"BLD",9262,"KRN",19,"NM",29,0)
A1AE PKEDIT^^0
"BLD",9262,"KRN",19,"NM",30,0)
A1AE PKGEDIT^^0
"BLD",9262,"KRN",19,"NM",31,0)
A1AE PKGLIST^^0
"BLD",9262,"KRN",19,"NM",32,0)
A1AE PKGMGT^^0
"BLD",9262,"KRN",19,"NM",33,0)
A1AE PKGPRT^^0
"BLD",9262,"KRN",19,"NM",34,0)
A1AE PKGSEL^^0
"BLD",9262,"KRN",19,"NM",35,0)
A1AE PKMENU^^0
"BLD",9262,"KRN",19,"NM",36,0)
A1AE PKVER^^0
"BLD",9262,"KRN",19,"NM",37,0)
A1AE POST VERIFY^^0
"BLD",9262,"KRN",19,"NM",38,0)
A1AE PRT SUM DT ORG^^0
"BLD",9262,"KRN",19,"NM",39,0)
A1AE PRTCNRP^^0
"BLD",9262,"KRN",19,"NM",40,0)
A1AE PRTCOMDETDT^^0
"BLD",9262,"KRN",19,"NM",41,0)
A1AE PRTCOMPH^^0
"BLD",9262,"KRN",19,"NM",42,0)
A1AE PRTCOMPHDTE^^0
"BLD",9262,"KRN",19,"NM",43,0)
A1AE PRTCOMPHVER^^0
"BLD",9262,"KRN",19,"NM",44,0)
A1AE PRTCOMSUMDT^^0
"BLD",9262,"KRN",19,"NM",45,0)
A1AE PRTDETDT ORG^^0
"BLD",9262,"KRN",19,"NM",46,0)
A1AE PRTNEWPH^^0
"BLD",9262,"KRN",19,"NM",47,0)
A1AE PRTNEWPHNUM^^0
"BLD",9262,"KRN",19,"NM",48,0)
A1AE PRTPHA^^0
"BLD",9262,"KRN",19,"NM",49,0)
A1AE PRTPHD^^0
"BLD",9262,"KRN",19,"NM",50,0)
A1AE PRTPHS^^0
"BLD",9262,"KRN",19,"NM",51,0)
A1AE PRTPHS ORG^^0
"BLD",9262,"KRN",19,"NM",52,0)
A1AE PRTUDP^^0
"BLD",9262,"KRN",19,"NM",53,0)
A1AE PRTUDVPH^^0
"BLD",9262,"KRN",19,"NM",54,0)
A1AE PRTUDVPH VER^^0
"BLD",9262,"KRN",19,"NM",55,0)
A1AE PRTVRPH^^0
"BLD",9262,"KRN",19,"NM",56,0)
A1AE RELEASE SUMMARY^^0
"BLD",9262,"KRN",19,"NM",57,0)
A1AE ROUTINE INQUIRE^^0
"BLD",9262,"KRN",19,"NM",58,0)
A1AE ROUTINES IN A PATCH^^0
"BLD",9262,"KRN",19,"NM",59,0)
A1AE ROUTINES THAT OVERLAP^^0
"BLD",9262,"KRN",19,"NM",60,0)
A1AE SERVER VERIFIED^^0
"BLD",9262,"KRN",19,"NM",61,0)
A1AE SUPPORT^^0
"BLD",9262,"KRN",19,"NM",62,0)
A1AE TEST SCANNER^^0
"BLD",9262,"KRN",19,"NM",63,0)
A1AE USER^^0
"BLD",9262,"KRN",19,"NM",64,0)
A1AE VERIFIER^^0
"BLD",9262,"KRN",19,"NM",65,0)
A1AE XUSEC^^0
"BLD",9262,"KRN",19,"NM",66,0)
A1AE LOAD RELEASED PATCH^^0
"BLD",9262,"KRN",19,"NM",67,0)
A1AE EXPORT PATCH TO HFS^^0
"BLD",9262,"KRN",19,"NM",68,0)
A1AE IMPORT MENU^^0
"BLD",9262,"KRN",19,"NM",69,0)
A1AE IMPORT RECURSIVE^^0
"BLD",9262,"KRN",19,"NM",70,0)
A1AE IMPORT SINGLE DIR^^0
"BLD",9262,"KRN",19,"NM",71,0)
A1AE SHOW PATCH RELATIONSHIPS^^0
"BLD",9262,"KRN",19,"NM",72,0)
A1AE PRT BY SEC ST BY DATE SUM^^0
"BLD",9262,"KRN",19,"NM",73,0)
A1AE PRTPHS SEC^^0
"BLD",9262,"KRN",19,"NM",74,0)
A1AE SEC REPORTS^^0
"BLD",9262,"KRN",19,"NM",75,0)
A1AE PRTPHA SEC^^0
"BLD",9262,"KRN",19,"NM","B","A1AE AUTHORIZED DOMAINS",1)

"BLD",9262,"KRN",19,"NM","B","A1AE COMPLIANCE COMMENT PRT",2)

"BLD",9262,"KRN",19,"NM","B","A1AE COMPLIANCE DISPLAY",3)

"BLD",9262,"KRN",19,"NM","B","A1AE COMPLIANCE EDIT",4)

"BLD",9262,"KRN",19,"NM","B","A1AE COPY PATCH",5)

"BLD",9262,"KRN",19,"NM","B","A1AE DEV CREATE",6)

"BLD",9262,"KRN",19,"NM","B","A1AE DEV FORWARD",7)

"BLD",9262,"KRN",19,"NM","B","A1AE DEVELOPER",8)

"BLD",9262,"KRN",19,"NM","B","A1AE DISCOMPH",9)

"BLD",9262,"KRN",19,"NM","B","A1AE EXPORT PATCH TO HFS",67)

"BLD",9262,"KRN",19,"NM","B","A1AE FORWARD",10)

"BLD",9262,"KRN",19,"NM","B","A1AE FULL SUMMARY BY DATE",11)

"BLD",9262,"KRN",19,"NM","B","A1AE HFS CHKSUM SVR",12)

"BLD",9262,"KRN",19,"NM","B","A1AE IMPORT MENU",68)

"BLD",9262,"KRN",19,"NM","B","A1AE IMPORT RECURSIVE",69)

"BLD",9262,"KRN",19,"NM","B","A1AE IMPORT SINGLE DIR",70)

"BLD",9262,"KRN",19,"NM","B","A1AE LOAD RELEASED PATCH",66)

"BLD",9262,"KRN",19,"NM","B","A1AE MGR",13)

"BLD",9262,"KRN",19,"NM","B","A1AE MGRADD",14)

"BLD",9262,"KRN",19,"NM","B","A1AE PATCHDOC",15)

"BLD",9262,"KRN",19,"NM","B","A1AE PBADD",16)

"BLD",9262,"KRN",19,"NM","B","A1AE PBDEL",17)

"BLD",9262,"KRN",19,"NM","B","A1AE PBEDIT",18)

"BLD",9262,"KRN",19,"NM","B","A1AE PBPROBLEM",19)

"BLD",9262,"KRN",19,"NM","B","A1AE PBPRT",20)

"BLD",9262,"KRN",19,"NM","B","A1AE PBRESREV",21)

"BLD",9262,"KRN",19,"NM","B","A1AE PHADD",22)

"BLD",9262,"KRN",19,"NM","B","A1AE PHDEL",23)

"BLD",9262,"KRN",19,"NM","B","A1AE PHEDIT",24)

"BLD",9262,"KRN",19,"NM","B","A1AE PHEXTEND",25)

"BLD",9262,"KRN",19,"NM","B","A1AE PHVER",26)

"BLD",9262,"KRN",19,"NM","B","A1AE PKADD",27)

"BLD",9262,"KRN",19,"NM","B","A1AE PKDEL",28)

"BLD",9262,"KRN",19,"NM","B","A1AE PKEDIT",29)

"BLD",9262,"KRN",19,"NM","B","A1AE PKGEDIT",30)

"BLD",9262,"KRN",19,"NM","B","A1AE PKGLIST",31)

"BLD",9262,"KRN",19,"NM","B","A1AE PKGMGT",32)

"BLD",9262,"KRN",19,"NM","B","A1AE PKGPRT",33)

"BLD",9262,"KRN",19,"NM","B","A1AE PKGSEL",34)

"BLD",9262,"KRN",19,"NM","B","A1AE PKMENU",35)

"BLD",9262,"KRN",19,"NM","B","A1AE PKVER",36)

"BLD",9262,"KRN",19,"NM","B","A1AE POST VERIFY",37)

"BLD",9262,"KRN",19,"NM","B","A1AE PRT BY SEC ST BY DATE SUM",72)

"BLD",9262,"KRN",19,"NM","B","A1AE PRT SUM DT ORG",38)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTCNRP",39)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTCOMDETDT",40)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTCOMPH",41)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTCOMPHDTE",42)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTCOMPHVER",43)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTCOMSUMDT",44)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTDETDT ORG",45)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTNEWPH",46)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTNEWPHNUM",47)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTPHA",48)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTPHA SEC",75)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTPHD",49)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTPHS",50)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTPHS ORG",51)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTPHS SEC",73)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTUDP",52)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTUDVPH",53)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTUDVPH VER",54)

"BLD",9262,"KRN",19,"NM","B","A1AE PRTVRPH",55)

"BLD",9262,"KRN",19,"NM","B","A1AE RELEASE SUMMARY",56)

"BLD",9262,"KRN",19,"NM","B","A1AE ROUTINE INQUIRE",57)

"BLD",9262,"KRN",19,"NM","B","A1AE ROUTINES IN A PATCH",58)

"BLD",9262,"KRN",19,"NM","B","A1AE ROUTINES THAT OVERLAP",59)

"BLD",9262,"KRN",19,"NM","B","A1AE SEC REPORTS",74)

"BLD",9262,"KRN",19,"NM","B","A1AE SERVER VERIFIED",60)

"BLD",9262,"KRN",19,"NM","B","A1AE SHOW PATCH RELATIONSHIPS",71)

"BLD",9262,"KRN",19,"NM","B","A1AE SUPPORT",61)

"BLD",9262,"KRN",19,"NM","B","A1AE TEST SCANNER",62)

"BLD",9262,"KRN",19,"NM","B","A1AE USER",63)

"BLD",9262,"KRN",19,"NM","B","A1AE VERIFIER",64)

"BLD",9262,"KRN",19,"NM","B","A1AE XUSEC",65)

"BLD",9262,"KRN",19.1,0)
19.1
"BLD",9262,"KRN",19.1,"NM",0)
^9.68A^9^9
"BLD",9262,"KRN",19.1,"NM",1,0)
A1AE COMPDATE^^0
"BLD",9262,"KRN",19.1,"NM",2,0)
A1AE DEVELOPER^^0
"BLD",9262,"KRN",19.1,"NM",3,0)
A1AE MGR^^0
"BLD",9262,"KRN",19.1,"NM",4,0)
A1AE PHVER^^0
"BLD",9262,"KRN",19.1,"NM",5,0)
A1AE PKGEDIT^^0
"BLD",9262,"KRN",19.1,"NM",6,0)
A1AE SCAN MESSAGE^^0
"BLD",9262,"KRN",19.1,"NM",7,0)
A1AE SUPPORT^^0
"BLD",9262,"KRN",19.1,"NM",8,0)
A1AE XUSEC^^0
"BLD",9262,"KRN",19.1,"NM",9,0)
A1AE IMPORT^^0
"BLD",9262,"KRN",19.1,"NM","B","A1AE COMPDATE",1)

"BLD",9262,"KRN",19.1,"NM","B","A1AE DEVELOPER",2)

"BLD",9262,"KRN",19.1,"NM","B","A1AE IMPORT",9)

"BLD",9262,"KRN",19.1,"NM","B","A1AE MGR",3)

"BLD",9262,"KRN",19.1,"NM","B","A1AE PHVER",4)

"BLD",9262,"KRN",19.1,"NM","B","A1AE PKGEDIT",5)

"BLD",9262,"KRN",19.1,"NM","B","A1AE SCAN MESSAGE",6)

"BLD",9262,"KRN",19.1,"NM","B","A1AE SUPPORT",7)

"BLD",9262,"KRN",19.1,"NM","B","A1AE XUSEC",8)

"BLD",9262,"KRN",101,0)
101
"BLD",9262,"KRN",409.61,0)
409.61
"BLD",9262,"KRN",771,0)
771
"BLD",9262,"KRN",779.2,0)
779.2
"BLD",9262,"KRN",870,0)
870
"BLD",9262,"KRN",8989.51,0)
8989.51
"BLD",9262,"KRN",8989.52,0)
8989.52
"BLD",9262,"KRN",8994,0)
8994
"BLD",9262,"KRN","B",.4,.4)

"BLD",9262,"KRN","B",.401,.401)

"BLD",9262,"KRN","B",.402,.402)

"BLD",9262,"KRN","B",.403,.403)

"BLD",9262,"KRN","B",.5,.5)

"BLD",9262,"KRN","B",.84,.84)

"BLD",9262,"KRN","B",3.6,3.6)

"BLD",9262,"KRN","B",3.8,3.8)

"BLD",9262,"KRN","B",9.2,9.2)

"BLD",9262,"KRN","B",9.8,9.8)

"BLD",9262,"KRN","B",19,19)

"BLD",9262,"KRN","B",19.1,19.1)

"BLD",9262,"KRN","B",101,101)

"BLD",9262,"KRN","B",409.61,409.61)

"BLD",9262,"KRN","B",771,771)

"BLD",9262,"KRN","B",779.2,779.2)

"BLD",9262,"KRN","B",870,870)

"BLD",9262,"KRN","B",8989.51,8989.51)

"BLD",9262,"KRN","B",8989.52,8989.52)

"BLD",9262,"KRN","B",8994,8994)

"BLD",9262,"QDEF")
^^^^^^^^YES
"BLD",9262,"QUES",0)
^9.62^^
"DATA",11005.2,1,0)
u^UNDER DEVELOPMENT^Under Development^^^^Display Patch^1
"DATA",11005.2,2,0)
c^COMPLETED/UNVERIFIED^Completed/Unreleased^A1AE COMPLETED PATCH^the CS team^COMPLETED/NOTRELEASED^Display a Completed/NotReleased Patch^0
"DATA",11005.2,3,0)
v^VERIFIED^Released^A1AE VERIFIED PATCH^select users^^New Patch Report^0
"DATA",11005.2,4,0)
e^ENTERED IN ERROR^Entered in Error^A1AE ENTERED IN ERROR PATCH^users who have viewed this patch^^Display Patch^0
"DATA",11005.2,5,0)
r^RETIRED^Retired^A1AE RETIRED PATCH^users who have viewed this patch^^Display Patch^0
"DATA",11005.2,6,0)
x^cancel^Canceled^^^^Display Patch^0
"DATA",11005.2,7,0)
i2^IN REVIEW^In Review^A1AE LOAD RELEASED PATCH^the reviewers^^Extended (DIQ) Display of a Patch^1
"DATA",11005.2,8,0)
d2^SEC DEVELOPMENT^Secondary Development^A1AE SEC DEVELOPMENT PATCH^the developers^SECONDARY DEVELOPED^Extended (DIQ) Display of a Patch^1
"DATA",11005.2,9,0)
s2^SEC COMPLETION^Secondary Completion^A1AE SEC COMPLETION PATCH^the CS team^SECONDARY COMPLETION^Display a Completed/NotReleased Patch^0
"DATA",11005.2,10,0)
r2^SEC RELEASE^Secondary Released^A1AE SEC RELEASE PATCH^select users^SECONDARY VERIFIED^New Patch Report^0
"DATA",11005.2,11,0)
n2^NOT FOR SEC RELEASE^Denied Secondary Release^A1AE DENIED SEC RELEASE PATCH^users who have viewed this patch^NOT FOR SECONDARY RELEASE^Extended (DIQ) Display of a Patch^0
"FIA",11005)
DHCP PATCHES
"FIA",11005,0)
^A1AE(11005,
"FIA",11005,0,0)
11005I
"FIA",11005,0,1)
y^y^f^^^^n
"FIA",11005,0,10)

"FIA",11005,0,11)

"FIA",11005,0,"RLRO")

"FIA",11005,0,"VR")
2.4^PATCH MODULE
"FIA",11005,11005)
0
"FIA",11005,11005.01)
0
"FIA",11005,11005.016)
0
"FIA",11005,11005.019)
0
"FIA",11005,11005.02)
0
"FIA",11005,11005.026)
0
"FIA",11005,11005.027)
0
"FIA",11005,11005.028)
0
"FIA",11005,11005.03)
0
"FIA",11005,11005.04)
0
"FIA",11005,11005.05)
0
"FIA",11005,11005.06)
0
"FIA",11005,11005.07)
0
"FIA",11005,11005.08)
0
"FIA",11005,11005.09)
0
"FIA",11005,11005.32)
0
"FIA",11005.1)
DHCP PATCH MESSAGE
"FIA",11005.1,0)
^A1AE(11005.1,
"FIA",11005.1,0,0)
11005.1P
"FIA",11005.1,0,1)
y^y^f^^^^n
"FIA",11005.1,0,10)

"FIA",11005.1,0,11)

"FIA",11005.1,0,"RLRO")

"FIA",11005.1,0,"VR")
2.4^PATCH MODULE
"FIA",11005.1,11005.1)
0
"FIA",11005.1,11005.11)
0
"FIA",11005.2)
DHCP PATCH STATUS
"FIA",11005.2,0)
^A1AE(11005.2,
"FIA",11005.2,0,0)
11005.2
"FIA",11005.2,0,1)
y^y^f^^n^^y^o^n
"FIA",11005.2,0,10)

"FIA",11005.2,0,11)

"FIA",11005.2,0,"RLRO")

"FIA",11005.2,0,"VR")
2.4^PATCH MODULE
"FIA",11005.2,11005.2)
0
"FIA",11005.5)
DHCP HFS MESSAGE
"FIA",11005.5,0)
^A1AE(11005.5,
"FIA",11005.5,0,0)
11005.5P
"FIA",11005.5,0,1)
y^y^f^^^^n
"FIA",11005.5,0,10)

"FIA",11005.5,0,11)

"FIA",11005.5,0,"RLRO")

"FIA",11005.5,0,"VR")
2.4^PATCH MODULE
"FIA",11005.5,11005.5)
0
"FIA",11005.5,11005.511)
0
"FIA",11005.5,11005.521)
0
"FIA",11006)
DHCP PROBLEMS
"FIA",11006,0)
^A1AE(11006,
"FIA",11006,0,0)
11006I
"FIA",11006,0,1)
y^y^f^^^^n
"FIA",11006,0,10)

"FIA",11006,0,11)

"FIA",11006,0,"RLRO")

"FIA",11006,0,"VR")
2.4^PATCH MODULE
"FIA",11006,11006)
0
"FIA",11006,11006.01)
0
"FIA",11006,11006.02)
0
"FIA",11006,11006.03)
0
"FIA",11007)
DHCP PATCH/PROBLEM PACKAGE
"FIA",11007,0)
^A1AE(11007,
"FIA",11007,0,0)
11007PI
"FIA",11007,0,1)
y^y^f^^^^n^^
"FIA",11007,0,10)

"FIA",11007,0,11)

"FIA",11007,0,"RLRO")

"FIA",11007,0,"VR")
2.4^PATCH MODULE
"FIA",11007,11007)
0
"FIA",11007,11007.01)
0
"FIA",11007,11007.02)
0
"FIA",11007,11007.03)
0
"FIA",11007,11007.04)
0
"FIA",11007,11007.05)
0
"FIA",11007.1)
DHCP PATCH STREAM
"FIA",11007.1,0)
^A1AE(11007.1,
"FIA",11007.1,0,0)
11007.1
"FIA",11007.1,0,1)
y^y^f^^^^n
"FIA",11007.1,0,10)

"FIA",11007.1,0,11)

"FIA",11007.1,0,"RLRO")

"FIA",11007.1,0,"VR")
2.4^PATCH MODULE
"FIA",11007.1,11007.1)
0
"FIA",11007.1,11007.11)
0
"FIA",11007.1,11007.12)
0
"FIA",11007.1,11007.122)
0
"INIT")
A1AE2POS
"IX",11005,11005,"AB",0)
11005^AB^Index used to figure out next patch numbers and walk through the patches^R^^F^IR^I^11005^^^^^S
"IX",11005,11005,"AB",1)
S ^A1AE(11005,"AB",X(2),X(3),X(4),DA)=""
"IX",11005,11005,"AB",2)
K ^A1AE(11005,"AB",X(2),X(3),X(4),DA)
"IX",11005,11005,"AB",2.5)
K ^A1AE(11005,"AB")
"IX",11005,11005,"AB",11.1,0)
^.114IA^4^4
"IX",11005,11005,"AB",11.1,1,0)
1^F^11005^.01^^^F
"IX",11005,11005,"AB",11.1,1,3)

"IX",11005,11005,"AB",11.1,2,0)
2^C^^^^1
"IX",11005,11005,"AB",11.1,2,1.5)
S X=$P(X(1),"*")
"IX",11005,11005,"AB",11.1,3,0)
3^C^^^^2
"IX",11005,11005,"AB",11.1,3,1.5)
S X=$P(X(1),"*",2)
"IX",11005,11005,"AB",11.1,4,0)
4^C^^^^3
"IX",11005,11005,"AB",11.1,4,1.5)
S X=$P(X(1),"*",3)
"IX",11005,11005,"ADERIVED",0)
11005^ADERIVED^This is used by the importer (A1AEK2M) prevent importing a patch twice.^R^^F^IR^I^11005^^^^^S
"IX",11005,11005,"ADERIVED",1)
S ^A1AE(11005,"ADERIVED",X(2),DA)=""
"IX",11005,11005,"ADERIVED",2)
K ^A1AE(11005,"ADERIVED",X(2),DA)
"IX",11005,11005,"ADERIVED",2.5)
K ^A1AE(11005,"ADERIVED")
"IX",11005,11005,"ADERIVED",11.1,0)
^.114IA^2^2
"IX",11005,11005,"ADERIVED",11.1,1,0)
1^F^11005^5.2^^^F
"IX",11005,11005,"ADERIVED",11.1,2,0)
2^C^^^^1
"IX",11005,11005,"ADERIVED",11.1,2,1.5)
S X=$$EXTERNAL^DILFD(11005,5.2,,X(1))
"IX",11005,11005,"ADERIVEDK",0)
11005^ADERIVEDK^This kills any entries in ADERIVED index when the pointed to entry is killed.^MU^^F^IR^I^11005^^^^^A
"IX",11005,11005,"ADERIVEDK",1)
Q
"IX",11005,11005,"ADERIVEDK",2)
K ^A1AE(11005,"ADERIVED",X)
"IX",11005,11005,"ADERIVEDK",2.5)
K ^A1AE(11005,"ADREIVED")
"IX",11005,11005,"ADERIVEDK",11.1,0)
^.114IA^1^1
"IX",11005,11005,"ADERIVEDK",11.1,1,0)
1^F^11005^.01^^1^F
"IX",11005,11005,"APTCSTM",0)
11005^APTCSTM^Quick lookup for patch and patch stream^R^^R^IR^I^11005^^^^^S
"IX",11005,11005,"APTCSTM",1)
S ^A1AE(11005,"APTCSTM",$E(X(1),1,30),X(2),DA)=""
"IX",11005,11005,"APTCSTM",2)
K ^A1AE(11005,"APTCSTM",$E(X(1),1,30),X(2),DA)
"IX",11005,11005,"APTCSTM",2.5)
K ^A1AE(11005,"APTCSTM")
"IX",11005,11005,"APTCSTM",11.1,0)
^.114IA^2^2
"IX",11005,11005,"APTCSTM",11.1,1,0)
1^F^11005^.01^30^1^F
"IX",11005,11005,"APTCSTM",11.1,2,0)
2^F^11005^.2^^2^F
"IX",11005,11005,"B",0)
11005^B^Select patches by field Patch Designation (.01)^R^^F^IR^I^11005^^^^^LS
"IX",11005,11005,"B",1)
S ^A1AE(11005,"B",X,DA)=""
"IX",11005,11005,"B",2)
K ^A1AE(11005,"B",X,DA)
"IX",11005,11005,"B",2.5)
K ^A1AE(11005,"B")
"IX",11005,11005,"B",11.1,0)
^.114IA^1^1
"IX",11005,11005,"B",11.1,1,0)
1^F^11005^.01^^1^F
"IX",11005.2,11005.2,"B",0)
11005.2^B^select Status by code^R^^F^IR^I^11005.2^^^^^LS
"IX",11005.2,11005.2,"B",1)
S ^A1AE(11005.2,"B",X,DA)=""
"IX",11005.2,11005.2,"B",2)
K ^A1AE(11005.2,"B",X,DA)
"IX",11005.2,11005.2,"B",2.5)
K ^A1AE(11005.2,"B")
"IX",11005.2,11005.2,"B",11.1,0)
^.114IA^1^1
"IX",11005.2,11005.2,"B",11.1,1,0)
1^F^11005.2^.01^^1^F
"IX",11005.2,11005.2,"B",11.1,1,3)

"IX",11005.2,11005.2,"C",0)
11005.2^C^select Status by meaning^R^^F^IR^I^11005.2^^^^^LS
"IX",11005.2,11005.2,"C",1)
S ^A1AE(11005.2,"C",X,DA)=""
"IX",11005.2,11005.2,"C",2)
K ^A1AE(11005.2,"C",X,DA)
"IX",11005.2,11005.2,"C",2.5)
K ^A1AE(11005.2,"C")
"IX",11005.2,11005.2,"C",11.1,0)
^.114IA^1^1
"IX",11005.2,11005.2,"C",11.1,1,0)
1^F^11005.2^.02^^1^F
"IX",11005.2,11005.2,"D",0)
11005.2^D^select Status by display^R^^F^IR^I^11005.2^^^^^LS
"IX",11005.2,11005.2,"D",1)
S ^A1AE(11005.2,"D",X,DA)=""
"IX",11005.2,11005.2,"D",2)
K ^A1AE(11005.2,"D",X,DA)
"IX",11005.2,11005.2,"D",2.5)
K ^A1AE(11005.2,"D")
"IX",11005.2,11005.2,"D",11.1,0)
^.114IA^1^1
"IX",11005.2,11005.2,"D",11.1,1,0)
1^F^11005.2^.03^^1^F
"IX",11005.2,11005.2,"D",11.1,1,2)
S X=$$UP^XLFSTR(X)
"IX",11005.2,11005.2,"D",11.1,1,4)
S X=$$UP^XLFSTR(X)
"IX",11005.2,11005.2,"E",0)
11005.2^E^select Status by alternate meaning^R^^F^IR^I^11005.2^^^^^LS
"IX",11005.2,11005.2,"E",1)
S ^A1AE(11005.2,"E",X,DA)=""
"IX",11005.2,11005.2,"E",2)
K ^A1AE(11005.2,"E",X,DA)
"IX",11005.2,11005.2,"E",2.5)
K ^A1AE(11005.2,"E")
"IX",11005.2,11005.2,"E",11.1,0)
^.114IA^1^1
"IX",11005.2,11005.2,"E",11.1,1,0)
1^F^11005.2^.06^^1^F
"IX",11007.1,11007.1,"AFORUM",0)
11007.1^AFORUM^Indicate DHCP PATCH STREAM site as FORUM ^R^^F^IR^I^11007.1^^^^^S
"IX",11007.1,11007.1,"AFORUM",1)
S ^A1AE(11007.1,"AFORUM",$E(X,1,30),DA)=""
"IX",11007.1,11007.1,"AFORUM",2)
K ^A1AE(11007.1,"AFORUM",$E(X,1,30),DA)
"IX",11007.1,11007.1,"AFORUM",2.5)
K ^A1AE(11007.1,"AFORUM")
"IX",11007.1,11007.1,"AFORUM",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"AFORUM",11.1,1,0)
1^F^11007.1^.07^30^1^F
"IX",11007.1,11007.1,"AFORUM",11.1,1,3)

"IX",11007.1,11007.1,"APRIM",0)
11007.1^APRIM^Support computation of initial patch number by identifying primary patch stream^R^^F^IR^I^11007.1^^^^^S
"IX",11007.1,11007.1,"APRIM",.1,0)
^^25^25^3140805^^
"IX",11007.1,11007.1,"APRIM",.1,1,0)
Cross-reference APRIM builds index APRIM on file DHCP Patch Stream 
"IX",11007.1,11007.1,"APRIM",.1,2,0)
(11007.1) to allow selection of patch streams by whether they are primary.
"IX",11007.1,11007.1,"APRIM",.1,3,0)
 
"IX",11007.1,11007.1,"APRIM",.1,4,0)
Technical Description:
"IX",11007.1,11007.1,"APRIM",.1,5,0)
 
"IX",11007.1,11007.1,"APRIM",.1,6,0)
Index APRIM is used by $$PRIMSTRM^A1AEUTL to identify the primary patch 
"IX",11007.1,11007.1,"APRIM",.1,7,0)
stream so its field Patch Number Start (.001) can be used to seed the 
"IX",11007.1,11007.1,"APRIM",.1,8,0)
assignment of patch numbers for a new version of a package within a patch 
"IX",11007.1,11007.1,"APRIM",.1,9,0)
stream. To create this index is why this field exists.
"IX",11007.1,11007.1,"APRIM",.1,10,0)
 
"IX",11007.1,11007.1,"APRIM",.1,11,0)
Change History:
"IX",11007.1,11007.1,"APRIM",.1,12,0)
 
"IX",11007.1,11007.1,"APRIM",.1,13,0)
Wednesday, 22 January 2014: (VEN/SMH) Created traditional PRIM 
"IX",11007.1,11007.1,"APRIM",.1,14,0)
cross-reference to build index PRIM for Patch Module version 2.4 as part 
"IX",11007.1,11007.1,"APRIM",.1,15,0)
of the OSEHRA Forum Project Phase One.
"IX",11007.1,11007.1,"APRIM",.1,16,0)
 
"IX",11007.1,11007.1,"APRIM",.1,17,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted traditional PRIM 
"IX",11007.1,11007.1,"APRIM",.1,18,0)
cross-reference and created new-style APRIM cross-reference; revised 
"IX",11007.1,11007.1,"APRIM",.1,19,0)
Description; wrote Change History; for Patch Module version 2.4 as part 
"IX",11007.1,11007.1,"APRIM",.1,20,0)
of the OSEHRA Forum Project Phase One. The cross-reference was renamed 
"IX",11007.1,11007.1,"APRIM",.1,21,0)
from PRIM to APRIM to change it from a lookup-and-sorting index to a 
"IX",11007.1,11007.1,"APRIM",.1,22,0)
sorting-only index; previously, a user could select the primary patch 
"IX",11007.1,11007.1,"APRIM",.1,23,0)
stream by typing YES at the selection prompt, which was not a desired 
"IX",11007.1,11007.1,"APRIM",.1,24,0)
feature. $$PRIMSTRM^A1AEUTL had to be simultaneously changed from using 
"IX",11007.1,11007.1,"APRIM",.1,25,0)
removed index PRIM to using replacement index APRIM.
"IX",11007.1,11007.1,"APRIM",1)
S ^A1AE(11007.1,"APRIM",X,DA)=""
"IX",11007.1,11007.1,"APRIM",2)
K ^A1AE(11007.1,"APRIM",X,DA)
"IX",11007.1,11007.1,"APRIM",2.5)
K ^A1AE(11007.1,"APRIM")
"IX",11007.1,11007.1,"APRIM",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"APRIM",11.1,1,0)
1^F^11007.1^.02^^1^F
"IX",11007.1,11007.1,"APRIM1",0)
11007.1^APRIM1^Ensure only one record is marked primary at a time^MU^^F^^I^11007.1^^^^^A
"IX",11007.1,11007.1,"APRIM1",.1,0)
^^21^21^3140805^^
"IX",11007.1,11007.1,"APRIM1",.1,1,0)
Cross-reference APRIM1 on file DHCP Patch Stream (11007.1) ensures only 
"IX",11007.1,11007.1,"APRIM1",.1,2,0)
one record is marked primary at a time. Whenever field Primary? (.02) is 
"IX",11007.1,11007.1,"APRIM1",.1,3,0)
set to YES for one record, APRIM1 fires the kill logic for all 
"IX",11007.1,11007.1,"APRIM1",.1,4,0)
cross-references on Primary? for all records in the file, sets Primary? 
"IX",11007.1,11007.1,"APRIM1",.1,5,0)
to NO for all other records, and then fires the set logic for all 
"IX",11007.1,11007.1,"APRIM1",.1,6,0)
cross-references on Primary? for all records in the file.
"IX",11007.1,11007.1,"APRIM1",.1,7,0)
 
"IX",11007.1,11007.1,"APRIM1",.1,8,0)
Change History:
"IX",11007.1,11007.1,"APRIM1",.1,9,0)
 
"IX",11007.1,11007.1,"APRIM1",.1,10,0)
Wednesday, 22 January 2014: (VEN/SMH) Created traditional APRIM 
"IX",11007.1,11007.1,"APRIM1",.1,11,0)
cross-reference (which required fixing a File Manager bug in routine DIK 
"IX",11007.1,11007.1,"APRIM1",.1,12,0)
to support firing cross-references re-entrantly) for Patch Module version 
"IX",11007.1,11007.1,"APRIM1",.1,13,0)
2.4 as part of the OSEHRA Forum Project Phase One.
"IX",11007.1,11007.1,"APRIM1",.1,14,0)
 
"IX",11007.1,11007.1,"APRIM1",.1,15,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted traditional APRIM 
"IX",11007.1,11007.1,"APRIM1",.1,16,0)
cross-reference and created new-style APRIM1 cross-reference; revised code
"IX",11007.1,11007.1,"APRIM1",.1,17,0)
to operate on new field .02 instead of old, deleted field 2; revised 
"IX",11007.1,11007.1,"APRIM1",.1,18,0)
Description; wrote Change History; for Patch Module version 2.4 as part of
"IX",11007.1,11007.1,"APRIM1",.1,19,0)
the OSEHRA Forum Project Phase One. For an explanation of the renaming of 
"IX",11007.1,11007.1,"APRIM1",.1,20,0)
this cross-reference, see the description of new-style cross-reference 
"IX",11007.1,11007.1,"APRIM1",.1,21,0)
APRIM.
"IX",11007.1,11007.1,"APRIM1",1)
N DIK,DA S DIK(1)=".02",DIK="^A1AE(11007.1," D ENALL2^DIK N A1AEI X "F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  I A1AEI'=D0 S $P(^(A1AEI,0),U,2)=0" D ENALL^DIK
"IX",11007.1,11007.1,"APRIM1",1.4)
I X
"IX",11007.1,11007.1,"APRIM1",2)
Q
"IX",11007.1,11007.1,"APRIM1",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"APRIM1",11.1,1,0)
1^F^11007.1^.02^^^F
"IX",11007.1,11007.1,"ASUBCNG",0)
11007.1^ASUBCNG^Force a new entry into SUBSCRIPTION DATE^MU^^F^^I^11007.1^^^^^A
"IX",11007.1,11007.1,"ASUBCNG",.1,0)
^^3^3^3140805^
"IX",11007.1,11007.1,"ASUBCNG",.1,1,0)
This cross is to force a new entry in the SUBSCRIPTION DATE and 
"IX",11007.1,11007.1,"ASUBCNG",.1,2,0)
AUTHORIZING INDIVIDUAL field when the SUBSCRIPTION field for this Patch 
"IX",11007.1,11007.1,"ASUBCNG",.1,3,0)
Stream entry is toggled as the account SUBSCRIPTION
"IX",11007.1,11007.1,"ASUBCNG",1)
D ASUBCNG^A1AEUTL(D0)
"IX",11007.1,11007.1,"ASUBCNG",1.4)
I X
"IX",11007.1,11007.1,"ASUBCNG",2)
Q
"IX",11007.1,11007.1,"ASUBCNG",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"ASUBCNG",11.1,1,0)
1^F^11007.1^.06^^^F
"IX",11007.1,11007.1,"ASUBS",0)
11007.1^ASUBS^Indicate Subscription Stream active in this account^R^^F^IR^I^11007.1^^^^^S
"IX",11007.1,11007.1,"ASUBS",1)
S ^A1AE(11007.1,"ASUBS",X,DA)=""
"IX",11007.1,11007.1,"ASUBS",1.4)

"IX",11007.1,11007.1,"ASUBS",2)
K ^A1AE(11007.1,"ASUBS",X,DA)
"IX",11007.1,11007.1,"ASUBS",2.5)
K ^A1AE(11007.1,"ASUBS")
"IX",11007.1,11007.1,"ASUBS",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"ASUBS",11.1,1,0)
1^F^11007.1^.06^^1^F
"IX",11007.1,11007.1,"ASUBS1",0)
11007.1^ASUBS1^Ensure only one record is marked SUBSCRIBER at a time^MU^^F^^I^11007.1^^^^^A
"IX",11007.1,11007.1,"ASUBS1",.1,0)
^^2^2^3140805^
"IX",11007.1,11007.1,"ASUBS1",.1,1,0)
Ensure only one record is marked as SUSCRIBER at a time.  More 
"IX",11007.1,11007.1,"ASUBS1",.1,2,0)
description will be added later
"IX",11007.1,11007.1,"ASUBS1",1)
N DIK,DA S DIK(1)=".06",DIK="^A1AE(11007.1," D ENALL2^DIK N A1AEI X "F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  I A1AEI'=D0 S $P(^(A1AEI,0),U,6)=0" D ENALL^DIK
"IX",11007.1,11007.1,"ASUBS1",1.4)
I X
"IX",11007.1,11007.1,"ASUBS1",2)
Q
"IX",11007.1,11007.1,"ASUBS1",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"ASUBS1",11.1,1,0)
1^F^11007.1^.06^^^F
"IX",11007.1,11007.1,"ASUBS1",11.1,1,3)

"IX",11007.1,11007.1,"B",0)
11007.1^B^Selects Patch Streams by Name^R^^F^IR^I^11007.1^^^^^LS
"IX",11007.1,11007.1,"B",.1,0)
^^14^14^3140211^
"IX",11007.1,11007.1,"B",.1,1,0)
Cross-reference B builds index B on file DHCP Patch Stream (11007.1) to
"IX",11007.1,11007.1,"B",.1,2,0)
support the selection of patch streams by field Name (.01).
"IX",11007.1,11007.1,"B",.1,3,0)
 
"IX",11007.1,11007.1,"B",.1,4,0)
Change History:
"IX",11007.1,11007.1,"B",.1,5,0)
 
"IX",11007.1,11007.1,"B",.1,6,0)
Monday, 13 January 2014: (VEN/SMH) Created traditional B cross-reference
"IX",11007.1,11007.1,"B",.1,7,0)
automatically by creating file DHCP Patch Stream (11007.1) for Patch
"IX",11007.1,11007.1,"B",.1,8,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One.
"IX",11007.1,11007.1,"B",.1,9,0)
 
"IX",11007.1,11007.1,"B",.1,10,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted traditional B 
"IX",11007.1,11007.1,"B",.1,11,0)
cross-reference and created new-style B cross-reference to support 
"IX",11007.1,11007.1,"B",.1,12,0)
creation of primary key on field Name (.01) for Patch Module version 2.4 
"IX",11007.1,11007.1,"B",.1,13,0)
as part of the OSEHRA Forum Project Phase One. Write Description and 
"IX",11007.1,11007.1,"B",.1,14,0)
Change History.
"IX",11007.1,11007.1,"B",1)
S ^A1AE(11007.1,"B",X,DA)=""
"IX",11007.1,11007.1,"B",2)
K ^A1AE(11007.1,"B",X,DA)
"IX",11007.1,11007.1,"B",2.5)
K ^A1AE(11007.1,"B")
"IX",11007.1,11007.1,"B",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"B",11.1,1,0)
1^F^11007.1^.01^^1^F
"IX",11007.1,11007.1,"C",0)
11007.1^C^Select DHCP Patch Streams by Abbreviation^R^^F^IR^I^11007.1^^^^^LS
"IX",11007.1,11007.1,"C",.1,0)
^^8^8^3140211^
"IX",11007.1,11007.1,"C",.1,1,0)
Cross-reference C builds index C on file DHCP Patch Stream (11007.1) to 
"IX",11007.1,11007.1,"C",.1,2,0)
support the selection of patch streams by field Abbreviation (.05).
"IX",11007.1,11007.1,"C",.1,3,0)
 
"IX",11007.1,11007.1,"C",.1,4,0)
Change History:
"IX",11007.1,11007.1,"C",.1,5,0)
 
"IX",11007.1,11007.1,"C",.1,6,0)
Tuesday, 11 February 2014: (VEN/TOAD) Created new-style cross-reference C 
"IX",11007.1,11007.1,"C",.1,7,0)
to support creation of primary key on field Abbreviation (.05) for Patch 
"IX",11007.1,11007.1,"C",.1,8,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One.
"IX",11007.1,11007.1,"C",1)
S ^A1AE(11007.1,"C",X,DA)=""
"IX",11007.1,11007.1,"C",2)
K ^A1AE(11007.1,"C",X,DA)
"IX",11007.1,11007.1,"C",2.5)
K ^A1AE(11007.1,"C")
"IX",11007.1,11007.1,"C",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"C",11.1,1,0)
1^F^11007.1^.05^^1^F
"IX",11007.1,11007.1,"C",11.1,1,3)

"IX",11007.1,11007.1,"SUBSDT",0)
11007.1^SUBSDT^CROSS TO DOCUMENT PATCH STREAM HISTORY^R^^F^IR^W^11007.12^^^^^LS
"IX",11007.1,11007.1,"SUBSDT",.1,0)
^^4^4^3140806^
"IX",11007.1,11007.1,"SUBSDT",.1,1,0)
This cross-reference will be useful when installing a patch that has 
"IX",11007.1,11007.1,"SUBSDT",.1,2,0)
previous patch dependencies.  It may be that one patch that needs 
"IX",11007.1,11007.1,"SUBSDT",.1,3,0)
installed was distributed under the FOIA VISTA stream, and another after 
"IX",11007.1,11007.1,"SUBSDT",.1,4,0)
the site had converted to the OSEHRA VISTA stream.
"IX",11007.1,11007.1,"SUBSDT",1)
S ^A1AE(11007.1,"SUBSDT",X,DA(1),DA)=""
"IX",11007.1,11007.1,"SUBSDT",2)
K ^A1AE(11007.1,"SUBSDT",X,DA(1),DA)
"IX",11007.1,11007.1,"SUBSDT",2.5)
K ^A1AE(11007.1,"SUBSDT")
"IX",11007.1,11007.1,"SUBSDT",11.1,0)
^.114IA^1^1
"IX",11007.1,11007.1,"SUBSDT",11.1,1,0)
1^F^11007.12^.01^^1^F
"IX",11007.1,11007.1,"SUBSDT",11.1,1,3)

"KEY",11005,11005,"A",0)
11005^A^P^1030
"KEY",11005,11005,"A",2,0)
^.312IA^1^1
"KEY",11005,11005,"A",2,1,0)
.01^11005^1
"KEY",11005.2,11005.2,"A",0)
11005.2^A^P^1102
"KEY",11005.2,11005.2,"A",2,0)
^.312IA^1^1
"KEY",11005.2,11005.2,"A",2,1,0)
.01^11005.2^1
"KEY",11005.2,11005.2,"B",0)
11005.2^B^S^1103
"KEY",11005.2,11005.2,"B",2,0)
^.312IA^1^1
"KEY",11005.2,11005.2,"B",2,1,0)
.02^11005.2^1
"KEY",11007.1,11007.1,"A",0)
11007.1^A^P^1024
"KEY",11007.1,11007.1,"A",2,0)
^.312IA^1^1
"KEY",11007.1,11007.1,"A",2,1,0)
.01^11007.1^1
"KEY",11007.1,11007.1,"B",0)
11007.1^B^S^1027
"KEY",11007.1,11007.1,"B",2,0)
^.312IA^1^1
"KEY",11007.1,11007.1,"B",2,1,0)
.05^11007.1^1
"KEYPTR",11005,11005,"A")
11005^B
"KEYPTR",11005.2,11005.2,"A")
11005.2^B
"KEYPTR",11005.2,11005.2,"B")
11005.2^C
"KEYPTR",11007.1,11007.1,"A")
11007.1^B
"KEYPTR",11007.1,11007.1,"B")
11007.1^C
"KRN",.4,1530,-1)
0^14
"KRN",.4,1530,0)
A1AE TABLED PROBLEM^2860128^^11006^^^^
"KRN",.4,1530,"F",1)
"Problem Designation:";C1~.01;""~5;C40;""~"Reporting Station:";C1;S1~6;""~"Reported By/Phone:";C1~7;""~"Date Reported:";C1~9;""~
"KRN",.4,1530,"F",2)
"Problem Description:";C1;S1~5.5,.01;""~"Current Status of Problem:";C1;S1~10;""~
"KRN",.4,1530,"F",3)
W !!,"----------------------------TABLED DETAILS-------------------------------------";X;Z;"W !!,"----------------------------TABLED DETAILS-------------------------------------""~
"KRN",.4,1530,"F",4)
"Problem Tabled by:";C1;S1~15;""~"Date Tabled:";C1~11;""~"Tabled Comments:";C1~11.5,.01;""~W ! F I=1:1:79 W "-";X;Z;"W ! F I=1:1:79 W "-""~
"KRN",.4,1530,"H")
TABLED PROBLEMS
"KRN",.4,1531,-1)
0^8
"KRN",.4,1531,0)
A1AE PROBLEM DETAILS^2860128^^11006^^^^
"KRN",.4,1531,"F",1)
"Problem Designation:";C1~.01;""~5;C40;""~"Reporting Station:";C1;S1~6;""~"Reported By/Phone:";C1~7;""~"Date Reported:";C1~9;""~
"KRN",.4,1531,"F",2)
"Problem Description:";C1;S1~5.5,.01;""~"Current Status of Problem:";C1;S1~10;""~W ! F I=1:1:79 W "-";X;Z;"W ! F I=1:1:79 W "-""~
"KRN",.4,1531,"H")
PROBLEM DETAILS
"KRN",.4,1532,-1)
0^7
"KRN",.4,1532,0)
A1AE PATCH SUMMARY^2920929.1347^^11005^^^3060223^
"KRN",.4,1532,"DXS",1,9)
S YY=^(0),YZ=$P(YY,U,8),Y=$S(YZ="v":$P(YY,U,11),YZ="c":$P(YY,U,10),YZ="u":$P(YY,U,12),1:"") I Y]"" D TM^A1AEUTL1 W ?50,Y K YY,YZ
"KRN",.4,1532,"F",1)
.01;"Designation";L13;C1~5;"Subject";L30;C15~8;L1;C48;X~
"KRN",.4,1532,"F",2)
X DXS(1,9);"Status";Z;"S YY=^(0),YZ=$P(YY,U,8),Y=$S(YZ="v":$P(YY,U,11),YZ="c":$P(YY,U,10),YZ="u":$P(YY,U,12),1:"") I Y]"" D TM^A1AEUTL1 W ?50,Y K YY,YZ"~
"KRN",.4,1532,"F",3)
100,.01;"Routine";C64;L8~"-----------------------------------------------------------------------------";C1~
"KRN",.4,1532,"H")
DHCP Patch Summary Report
"KRN",.4,1533,-1)
0^13
"KRN",.4,1533,0)
A1AE STANDARD PRINT^3140326.1739^^11005^^^3140325^
"KRN",.4,1533,"DXS")
4
"KRN",.4,1533,"DXS",1,9)
I $D(^A1AE(11005,D0,"Q","B")) S A1AEPD=$P(^A1AE(11005,D0,0),"^"),PRINT="" D PCHK^A1AEUTL1 K AZ,PRINT
"KRN",.4,1533,"DXS",2,9)
I $P(^A1AE(11005,D0,0),U,20) S X=$G(^A1AE(11005,D0,0)) S Y=$P(X,U,20) S Y=$S(Y="":Y,$D(^A1AE(11007.1,Y,0))#2:$P(^(0),U),1:Y) W !,"Source: "_Y
"KRN",.4,1533,"DXS",3,9)
I $P(^A1AE(11005,D0,5),U,2) S X=$G(^A1AE(11005,D0,5)) S Y=$P(X,U,2) S Y=$S(Y="":Y,$D(^A1AE(11005,Y,0))#2:$P(^(0),U),1:Y) W !!,"Derived from Patch: "_Y
"KRN",.4,1533,"F",1)
X DXS(1,9);Z;"I $D(^A1AE(11005,D0,"Q","B")) S A1AEPD=$P(^A1AE(11005,D0,0),"^"),PRINT="" D PCHK^A1AEUTL1 K AZ,PRINT"~
"KRN",.4,1533,"F",2)
X DXS(2,9);Z;"I $P(^A1AE(11005,D0,0),U,20) S X=$G(^A1AE(11005,D0,0)) S Y=$P(X,U,20) S Y=$S(Y="":Y,$D(^A1AE(11007.1,Y,0))#2:$P(^(0),U),1:Y) W !,"Source: "_Y"~
"KRN",.4,1533,"F",3)
X DXS(3,9);Z;"I $P(^A1AE(11005,D0,5),U,2) S X=$G(^A1AE(11005,D0,5)) S Y=$P(X,U,2) S Y=$S(Y="":Y,$D(^A1AE(11005,Y,0))#2:$P(^(0),U),1:Y) W !!,"Derived from Patch: "_Y"~
"KRN",.4,1533,"F",4)
"Subject:";C1;S1~5;"";L70~"Category:";C1;S1~6.5,.01;""~"Description:";C1;S1~"===========";C1~" ";C1~5.5,.01;"";C1~"Routine Information:";C1;S2~
"KRN",.4,1533,"F",5)
"====================";C1~D RTNINFO^A1AEUTL2();C1;S1;Z;"D RTNINFO^A1AEUTL2()"~
"KRN",.4,1533,"F",6)
"=============================================================================";C1;S2~"User Information:";C1~
"KRN",.4,1533,"F",7)
S Y=$P(^A1AE(11005,D0,0),"^",17) I Y X ^DD("DD") W ?40,"   Hold Date :   "_Y;Z;"S Y=$P(^A1AE(11005,D0,0),"^",17) I Y X ^DD("DD") W ?40,"   Hold Date :   "_Y"~
"KRN",.4,1533,"F",8)
"Entered By  : ";C3~9;L20;""~"Date Entered  : ";C40~12;L15;""~"Completed By: ";C3~13;L20;""~"Date Completed: ";C40~10;L15;""~"Released By : ";C3~
"KRN",.4,1533,"F",9)
14;L20;""~"Date Released : ";C40~11;L15;""~N A1AEPRNT S A1AEPRNT=1 D USERS^A1AEMAL(D0);C1;S1;Z;"N A1AEPRNT S A1AEPRNT=1 D USERS^A1AEMAL(D0)"~
"KRN",.4,1533,"F",10)
"=============================================================================";C1~
"KRN",.4,1533,"F",11)
S:'$D(A1AEHD) A1AEHD="Patch Details" D PRT^A1AEUTL:A1AEHD'["Display"&(A1AEOUT'["^");X;Z;"S:'$D(A1AEHD) A1AEHD="Patch Details" D PRT^A1AEUTL:A1AEHD'["Display"&(A1AEOUT'["^")"~
"KRN",.4,1533,"H")
@
"KRN",.4,1533,"IOM")
80
"KRN",.4,1533,"LAST")

"KRN",.4,1533,"ROU")
^A1AEP
"KRN",.4,1533,"ROUOLD")
A1AEP
"KRN",.4,1533,"SUB")
1
"KRN",.4,1534,-1)
0^12
"KRN",.4,1534,0)
A1AE STANDARD HEADER^2920929.1322^^11005^^^^
"KRN",.4,1534,"F",1)
W !,$S($D(A1AEHD):A1AEHD,1:"Patch Details");"";X;Z;"W !,$S($D(A1AEHD):A1AEHD,1:"Patch Details")"~
"KRN",.4,1534,"F",2)
S:'$D(A1AEPGE) A1AEPGE=0 S A1AEPGE=A1AEPGE+1 W ?70,"Page: ",A1AEPGE;"";X;Z;"S:'$D(A1AEPGE) A1AEPGE=0 S A1AEPGE=A1AEPGE+1 W ?70,"Page: ",A1AEPGE"~
"KRN",.4,1534,"F",3)
"=============================================================================";C1~
"KRN",.4,1534,"F",4)
W !,"Run Date:  " S Y=DT D DT^DIQ;"";X;Z;"W !,"Run Date:  " S Y=DT D DT^DIQ"~"Designation:";C44~.01;""~"Package :";C1~2;""~"Status     :";C44~8;""~
"KRN",.4,1534,"F",5)
"=============================================================================";C1~
"KRN",.4,1534,"H")
@
"KRN",.4,1534,"SUB")
1
"KRN",.4,1535,-1)
0^3
"KRN",.4,1535,0)
A1AE PACKAGE USERS^2860311^^11007^^^3100818^
"KRN",.4,1535,"F",1)
"Package:";C3~.01;""~"User Selection Allowed:";C40~2;""~"Developers: ";C3;S2~200,.01;"";C37~
"KRN",.4,1535,"F",2)
"-------------------------------------------------------------------------------";C1~"Support Personnel: ";C3~100,.01;C37;L25;""~100,2;"";C65~
"KRN",.4,1535,"F",3)
"-------------------------------------------------------------------------------";C1~"User Selected For Notification: ";C3~50,.01;C37;""~
"KRN",.4,1535,"H")
Package Users
"KRN",.4,1536,-1)
0^11
"KRN",.4,1536,0)
A1AE SELECTED USERS^2860328^@^11007^^@
"KRN",.4,1536,"DXS",1,9.2)
S I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^A1AE(11007,D0,0)):^(0),1:""),D0=$P(DIP(1),U,1) S:'$D(^DIC(9.4,+D0,0)) D0=-1 S DIP(101)=$S($D(^DIC(9.4,D0,0)):^(0),1:"")
"KRN",.4,1536,"DXS",2,9.2)
S I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^A1AE(11007,D0,1,D1,0)):^(0),1:""),D0=$P(DIP(1),U,1) S:'$D(^DIC(3,+D0,0)) D0=-1 S DIP(101)=$S($D(^DIC(3,D0,6000)):^(6000),1:"")
"KRN",.4,1536,"F",1)
X DXS(1,9.2) S X=$P(DIP(101),U,2) S D0=I(0,0) W X K DIP;"Package";Z;".01:PREFIX"~50,.01;"User"~
"KRN",.4,1536,"F",2)
50,X DXS(2,9.2) S X=$P(DIP(101),U,1) S D0=I(0,0) W X K DIP;"";Z;".01:INSTITUTION"~
"KRN",.4,1536,"H")
Selected Users
"KRN",.4,1537,-1)
0^16
"KRN",.4,1537,0)
A1AEZPKE^2920715.1522^@^11005^^@^2920715
"KRN",.4,1537,"F",2)
.01;L12~5;L25~9;L14~12;L12~13;L14~10;L12~14;L14~11;L12~
"KRN",.4,1537,"H")
DHCP PATCHES LIST
"KRN",.4,1538,-1)
0^15
"KRN",.4,1538,0)
A1AE VERIFIED PATCH SUMMARY^3140327.1425^^11005^^^3141001^
"KRN",.4,1538,"DXS")
2
"KRN",.4,1538,"DXS",1,9)
I $D(^A1AE(11005,D0,"Q","B")) S A1AEPD=$P(^A1AE(11005,D0,0),"^"),PRINT="" D PCHK^A1AEUTL1 K AZ,PRINT,A1AEPD
"KRN",.4,1538,"F",1)
S YY=^(0);X;Z;"S YY=^(0)"~.01;"Patch ID";L13;C1~6;"SEQ";C15;R3~5;"Subject";L37;C20~8;L1;C60;X~
"KRN",.4,1538,"F",2)
S Y=$$LASTDATE^A1AEPH2(D0) I Y]"" S Y=$$FMTE^XLFDT(Y,4) W ?61,Y;"Status";Z;"S Y=$$LASTDATE^A1AEPH2(D0) I Y]"" S Y=$$FMTE^XLFDT(Y,4) W ?61,Y"~
"KRN",.4,1538,"F",3)
100,.01;"Routine";C72;L8~
"KRN",.4,1538,"F",4)
S Y=$P(YY,"^",17) I Y]"" S Y=$$FMTE^XLFDT(Y,4) W !,?39,"Hold date  "_Y;X;Z;"S Y=$P(YY,"^",17) I Y]"" S Y=$$FMTE^XLFDT(Y,4) W !,?39,"Hold date  "_Y"~
"KRN",.4,1538,"F",5)
X DXS(1,9);"";X;Z;"I $D(^A1AE(11005,D0,"Q","B")) S A1AEPD=$P(^A1AE(11005,D0,0),"^"),PRINT="" D PCHK^A1AEUTL1 K AZ,PRINT,A1AEPD"~
"KRN",.4,1538,"F",6)
"-------------------------------------------------------------------------------";C1~K YY;X;Z;"K YY"~
"KRN",.4,1538,"H")
DHCP Patch Summary Report
"KRN",.4,1539,-1)
0^6
"KRN",.4,1539,0)
A1AE PATCH OPTS DOC^2981106^^19^^^3140325
"KRN",.4,1539,"DXS",1,9.2)
S I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^DIC(19,D0,10,D1,0)):^(0),1:""),D0=$P(DIP(1),U,1) S:'$D(^DIC(19,+D0,0)) D0=-1 S DIP(101)=$S($D(^DIC(19,D0,0)):^(0),1:"")
"KRN",.4,1539,"F",1)
"Option Name:";C1~.01;""~"Menu Text:";C1;S1~1;""~":";C1;S1~3.5,.01;C3;S1;""~" ";C1;S1~
"KRN",.4,1539,"F",2)
I $P(^DIC(19,D0,0),U,4)="M" W "Menu Options:";X;Z;"I $P(19,D0,0),U,4)="M" W "Menu Options:""~" ";C1;S1~10,.01;C5;L15;""~
"KRN",.4,1539,"F",3)
10,X DXS(1,9.2) S X=$P(DIP(101),U,2) S D0=I(0,0) W X K DIP;5
"KRN",.4,1539,"F",4)
"-------------------------------------------------------------------------------";C1~
"KRN",.4,1539,"H")
National Patch Module Options
"KRN",.4,1540,-1)
0^1
"KRN",.4,1540,0)
A1AE FULL SUMMARY BY DATE^3020513.105^@^11005^^@^3140331
"KRN",.4,1540,"F",2)
.01;L15~5;L30~11~
"KRN",.4,1540,"H")
DHCP PATCHES SEARCH
"KRN",.4,1541,-1)
0^5
"KRN",.4,1541,0)
A1AE PATCH COMPLIANCE PRT^3030708.1903^^11005^^^3070314
"KRN",.4,1541,"F",2)
.01;C1;S1;""~7;"";C13~18~6.5,.01;C45;"CATEGORY"~2;C65;""~
"KRN",.4,1541,"H")
COMPLIANCE DATE REPORTS
"KRN",.4,1542,-1)
0^4
"KRN",.4,1542,0)
A1AE PATCH COMPL/COMMENT RPT^3070327.1^^11005^^^3140912
"KRN",.4,1542,"F",2)
.01;C1;S1;""~7;"";C13~18~6.5,.01;C45;"CATEGORY"~2;C62;L18~19,.01;"REASON FOR CHANGE"~
"KRN",.4,1542,"H")
PATCH COMPL/COMMENT RPT
"KRN",.4,1543,-1)
0^10
"KRN",.4,1543,0)
A1AE RTN CHECKSUM^3070612.1121^^9.8^^@^3140108
"KRN",.4,1543,"F",1)
.01;"Routine Name";L13~"Current Checksum: ";C2~7.2;X~" Date: ";C35~7.1;X~"Patch List: ";C8~7.3;X~"---Patch-----------Checksum----";C1~8,.01;C4;L15;X~
"KRN",.4,1543,"F",2)
8,2;X;C20~8,3;C4;X~
"KRN",.4,1543,"H")
Routine Checksum List
"KRN",.4,1544,-1)
0^9
"KRN",.4,1544,0)
A1AE ROUTINE INQUIRE^3070612.0933^^9.8^^@^3070612
"KRN",.4,1544,"F",1)
"Routine Name: ";C2~.01;X~"Checksum Report: ";C40~6;X~"Checksum Date: ";C3~7.1;X~"Checksum Value: ";C2~7.2;X~"Patch List: ";C6~7.3;X~8,"Patch: ";C5~
"KRN",.4,1544,"F",2)
8,.01;X~8,"Checksum: ";C40~8,2;X~
"KRN",.4,1544,"H")
ROUTINE LIST
"KRN",.4,1545,-1)
0^2
"KRN",.4,1545,0)
A1AE GT 500^3070614.1209^#^11007^^#^3070614
"KRN",.4,1545,"F",2)
.01~300,.01~300,26~
"KRN",.4,1545,"H")
DHCP PACKAGE'S >500 PATCHES
"KRN",.4,1546,-1)
0^17
"KRN",.4,1546,0)
A1AE PATCH RELATIONSHIPS^3140327.1738^@^11005^^@^3140327^
"KRN",.4,1546,"DXS")
2
"KRN",.4,1546,"DXS",1,9)
I $D(^A1AE(11005,D0,"Q","B")) S A1AEPD=$P(^A1AE(11005,D0,0),"^"),PRINT="" D PCHK^A1AEUTL1 K AZ,PRINT,A1AEPD
"KRN",.4,1546,"F",1)
"Patch Designation: ";X;C1;S1;""~.01;C21;""~"Derived from: ";X;C1;S1;""~5.2;C21;""~
"KRN",.4,1546,"F",2)
X DXS(1,9);"";S1;X;Z;"I $D(^A1AE(11005,D0,"Q","B")) S A1AEPD=$P(^A1AE(11005,D0,0),"^"),PRINT="" D PCHK^A1AEUTL1 K AZ,PRINT,A1AEPD"~
"KRN",.4,1546,"H")
Patch Relationships
"KRN",.401,917,-1)
0^5
"KRN",.401,917,0)
A1AE PROBLEM SORT^2860128^^11006^^^^
"KRN",.401,917,2,1)
11006^^PACKAGE^]@"2^
"KRN",.401,917,2,1,"CM")
S Y(1)=$S($D(^A1AE(11006,D0,0)):^(0),1:"") S X=$S('$D(^DIC(9.4,+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1)) I D0>0 S X(1)=X
"KRN",.401,917,2,2)
11006^3^VERSION^@^
"KRN",.401,917,2,3)
11006^10^STATUS OF PROBLEM^@^
"KRN",.401,917,2,4)
11006^.01^PROBLEM DESIGNATION^@^
"KRN",.401,917,2,4,"IX")
^A1AE(11006,"B",^A1AE(11006,^2
"KRN",.401,918,-1)
0^10
"KRN",.401,918,0)
A1AE STANDARD SORT^2860306^^11005^^^2961010^
"KRN",.401,918,2,0)
^.4014^1^1
"KRN",.401,918,2,1,0)
11005^.01^PATCH DESIGNATION^]#^^^^^^4
"KRN",.401,918,2,1,"ASK")
1
"KRN",.401,918,2,1,"F")
PRC*5)z^PRC*5*
"KRN",.401,918,2,1,"GET")
S DISX(1)=$P($G(^A1AE(11005,D0,0)),U,1),Y=DISX(1) S Y(0)=Y S:$P(Y,"*",2)=999 $P(Y,"*",2)="DBA" S DISX(1)=Y
"KRN",.401,918,2,1,"IX")
^A1AE(11005,"B",^A1AE(11005,^2
"KRN",.401,918,2,1,"QCON")
I (DISX(1)]]"PRC*5)z")&(DISX(1)']]"PRC*5*999")
"KRN",.401,918,2,1,"SER")
998^998
"KRN",.401,918,2,1,"T")
PRC*5*999^PRC*5*999
"KRN",.401,918,2,1,"TXT")
PATCH DESIGNATION from PRC*5* to PRC*5*999
"KRN",.401,918,2,"B",11005,1)

"KRN",.401,920,-1)
0^12
"KRN",.401,920,0)
A1AEZPKE^2920715.1449^@^11005^^@^2920715
"KRN",.401,920,2,1)
11005^.01^PATCH DESIGNATION^^
"KRN",.401,920,2,2)
11005^11^DATE PATCH VERIFIED^^
"KRN",.401,920,2,2,"ASK")

"KRN",.401,920,2,2,"F")
2920100.99999^1.1.92
"KRN",.401,920,2,2,"T")
z^
"KRN",.401,921,-1)
0^9
"KRN",.401,921,0)
A1AE SEQ SUMMARY SORT^2950413.2038^^11005^^^2980226
"KRN",.401,921,2,0)
^.4014^2^2
"KRN",.401,921,2,1,0)
11005^^INTERNAL(#3)^@"^^^^^^4
"KRN",.401,921,2,1,"ASK")
1
"KRN",.401,921,2,1,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X I D0>0 S DISX(1)=X
"KRN",.401,921,2,1,"F")
REFz^REG
"KRN",.401,921,2,1,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X I D0>0 S DISX(1)=X
"KRN",.401,921,2,1,"QCON")
I DISX(1)]]"REFz"
"KRN",.401,921,2,1,"T")
z^
"KRN",.401,921,2,1,"TXT")
INTERNAL(#3) from REG
"KRN",.401,921,2,2,0)
11005^6^SEQUENTIAL RELEASE NUMBER^^^^^^^2
"KRN",.401,921,2,2,"ASK")
1
"KRN",.401,921,2,2,"F")
?z^@
"KRN",.401,921,2,2,"GET")
S DISX(2)=$P($G(^A1AE(11005,D0,0)),U,6)
"KRN",.401,921,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,921,2,2,"SER")
0.2772^0.2772
"KRN",.401,921,2,2,"T")
99999^99999
"KRN",.401,921,2,2,"TXT")
SEQUENTIAL RELEASE NUMBER not null
"KRN",.401,921,2,"B",11005,1)

"KRN",.401,921,2,"B",11005,2)

"KRN",.401,922,-1)
0^7
"KRN",.401,922,0)
A1AE SEQ REV SUMMARY SORT^2950413.2035^^11005^^^2980225
"KRN",.401,922,2,0)
^.4014^2^2
"KRN",.401,922,2,1,0)
11005^^INTERNAL(#3)^@"^^^^^^4
"KRN",.401,922,2,1,"ASK")
1
"KRN",.401,922,2,1,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X I D0>0 S DISX(1)=X
"KRN",.401,922,2,1,"F")
-1^0
"KRN",.401,922,2,1,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X I D0>0 S DISX(1)=X
"KRN",.401,922,2,1,"QCON")
I (DISX(1)]]-1)&(DISX(1)']]99999)
"KRN",.401,922,2,1,"T")
99999^99999
"KRN",.401,922,2,1,"TXT")
INTERNAL(#3) from 0 to 99999
"KRN",.401,922,2,2,0)
11005^6^SEQUENTIAL RELEASE NUMBER^-^^^^^^2
"KRN",.401,922,2,2,"ASK")
1
"KRN",.401,922,2,2,"F")
?z^@
"KRN",.401,922,2,2,"GET")
S DISX(2)=$P($G(^A1AE(11005,D0,0)),U,6)
"KRN",.401,922,2,2,"QCON")
I DISX(2)']]99999
"KRN",.401,922,2,2,"SER")
0.0000^0.0000
"KRN",.401,922,2,2,"T")
99999^99999
"KRN",.401,922,2,2,"TXT")
SEQUENTIAL RELEASE NUMBER to 99999 (includes nulls)
"KRN",.401,922,2,"B",11005,1)

"KRN",.401,922,2,"B",11005,2)

"KRN",.401,923,-1)
0^6
"KRN",.401,923,0)
A1AE SEQ REV SAVE^2950413.2031^@^11005^^@^2950413
"KRN",.401,923,2,0)
^.4014^2^2
"KRN",.401,923,2,1,0)
11005^^INTERNAL(#.01)^'@"^^^^^^4
"KRN",.401,923,2,1,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,1),X=X I D0>0 S DISX(1)=X
"KRN",.401,923,2,1,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,1),X=X I D0>0 S DISX(1)=X
"KRN",.401,923,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,923,2,1,"TXT")
INTERNAL(#.01) not null
"KRN",.401,923,2,2,0)
11005^6^SEQUENTIAL RELEASE NUMBER^-^^^^^^2
"KRN",.401,923,2,2,"GET")
S DISX(2)=$P($G(^A1AE(11005,D0,0)),U,6)
"KRN",.401,923,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,923,2,2,"SER")
0.3267^0.3267
"KRN",.401,923,2,2,"TXT")
SEQUENTIAL RELEASE NUMBER not null
"KRN",.401,923,2,"B",11005,1)

"KRN",.401,923,2,"B",11005,2)

"KRN",.401,924,-1)
0^8
"KRN",.401,924,0)
A1AE SEQ SAVE^2950413.2032^@^11005^^@^2950413
"KRN",.401,924,2,0)
^.4014^2^2
"KRN",.401,924,2,1,0)
11005^^INTERNAL(#.01)^'@"^^^^^^4
"KRN",.401,924,2,1,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,1),X=X I D0>0 S DISX(1)=X
"KRN",.401,924,2,1,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,1),X=X I D0>0 S DISX(1)=X
"KRN",.401,924,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,924,2,1,"TXT")
INTERNAL(#.01) not null
"KRN",.401,924,2,2,0)
11005^6^SEQUENTIAL RELEASE NUMBER^^^^^^^2
"KRN",.401,924,2,2,"GET")
S DISX(2)=$P($G(^A1AE(11005,D0,0)),U,6)
"KRN",.401,924,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,924,2,2,"SER")
0.3267^0.3267
"KRN",.401,924,2,2,"TXT")
SEQUENTIAL RELEASE NUMBER not null
"KRN",.401,924,2,"B",11005,1)

"KRN",.401,924,2,"B",11005,2)

"KRN",.401,925,-1)
0^2
"KRN",.401,925,0)
A1AE FULL SUMMARY BY DATE^3020513.0936^@^11005^^@^3070327
"KRN",.401,925,"DA")
DIS("A1",
"KRN",.401,925,"DA",1)
X DIS("A1",9.2) S X1=Y(3) S X2=Y(2) S:X<X1 %=X1,X1=X,X=% S X=X2'>X&(X2'<X1)
"KRN",.401,925,"DC",1)
-1^=1
"KRN",.401,925,"DIS",0)
X DIS("A1",9.2) S X1=Y(3) S X2=Y(2) S:X<X1 %=X1,X1=X,X=% S X=X2'>X&(X2'<X1) I X=1
"KRN",.401,925,"DIS","A1",9.2)
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),Y(2)=X S X=3020101,Y(3)=X S X=3020331
"KRN",.401,925,"DL")
1
"KRN",.401,925,"DL",0)
^1^
"KRN",.401,925,"O",0)
^
"KRN",.401,925,"O",1,0)
BETWEEN(DATE PATCH VERIFIED,3020101,3020331) EQUALS 1
"KRN",.401,925,"QR")
3020513.09384^15
"KRN",.401,926,-1)
0^1
"KRN",.401,926,0)
A1AE FULL SUMARY SORT^3140325.1307^^11005^^@^3140331
"KRN",.401,926,2,0)
^.4014^3^3
"KRN",.401,926,2,1,0)
11005^^PATCH STREAM^@".2^^^^^^4
"KRN",.401,926,2,1,"ASK")
1
"KRN",.401,926,2,1,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^A1AE(11007.1,+$P(Y(1),U,20),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,926,2,1,"F")
FOI@z^FOIA
"KRN",.401,926,2,1,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^A1AE(11007.1,+$P(Y(1),U,20),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,926,2,1,"QCON")
I (DISX(1)]]"FOI@z")&(DISX(1)']]"FOIAZZ")
"KRN",.401,926,2,1,"T")
FOIAZZ^FOIAZZ
"KRN",.401,926,2,1,"TXT")
PATCH STREAM from FOIA to FOIAZZ
"KRN",.401,926,2,2,0)
11005^.01^PATCH DESIGNATION^^^^^^^4
"KRN",.401,926,2,2,"GET")
S DISX(2)=$P($G(^A1AE(11005,D0,0)),U)
"KRN",.401,926,2,2,"IX")
^A1AE(11005,"B",^A1AE(11005,^2
"KRN",.401,926,2,2,"LANG")
PATCH DESIGNATION
"KRN",.401,926,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,926,2,2,"SER")
0^0
"KRN",.401,926,2,2,"TXT")
 PATCH DESIGNATION not null
"KRN",.401,926,2,3,0)
11005^11^DATE PATCH VERIFIED^^^^^^^1
"KRN",.401,926,2,3,"ASK")
1
"KRN",.401,926,2,3,"F")
3100800.999999^AUG 1,2010^AUG 1,2010
"KRN",.401,926,2,3,"GET")
S DISX(3)=$P($G(^A1AE(11005,D0,0)),U,11)
"KRN",.401,926,2,3,"LANG")
DATE PATCH VERIFIED
"KRN",.401,926,2,3,"QCON")
I (DISX(3)]]3100800.999999)&(DISX(3)']]3140102.24)
"KRN",.401,926,2,3,"SER")
0.0103^0.0103
"KRN",.401,926,2,3,"T")
3140102.24^JAN 2,2014@2400^JAN 2,2014@24:00
"KRN",.401,926,2,3,"TXT")
DATE PATCH VERIFIED from AUG 1,2010 to JAN 2,2014@24:00
"KRN",.401,926,2,"B",11005,1)

"KRN",.401,926,2,"B",11005,2)

"KRN",.401,926,2,"B",11005,3)

"KRN",.401,927,-1)
0^4
"KRN",.401,927,0)
A1AE PATCH COMPL/COMM SORT^3140325.1337^@^11005^^@^3140912
"KRN",.401,927,2,0)
^.4014^3^3
"KRN",.401,927,2,1,0)
11005^^PATCH STREAM^@".2^^^^^^4
"KRN",.401,927,2,1,"ASK")
1
"KRN",.401,927,2,1,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^A1AE(11007.1,+$P(Y(1),U,20),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,927,2,1,"F")
FOIA VIST@z^FOIA VISTA
"KRN",.401,927,2,1,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^A1AE(11007.1,+$P(Y(1),U,20),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,927,2,1,"QCON")
I DISX(1)="FOIA VISTA"
"KRN",.401,927,2,1,"T")
FOIA VISTA^FOIA VISTA
"KRN",.401,927,2,1,"TXT")
PATCH STREAM equals FOIA VISTA
"KRN",.401,927,2,2,0)
11005^11^DATE PATCH VERIFIED^^^^^^^1
"KRN",.401,927,2,2,"ASK")
1
"KRN",.401,927,2,2,"F")
3100600.999999^JUN 1,2010^JUN 1,2010
"KRN",.401,927,2,2,"GET")
S DISX(2)=$P($G(^A1AE(11005,D0,0)),U,11)
"KRN",.401,927,2,2,"LANG")
DATE PATCH VERIFIED
"KRN",.401,927,2,2,"QCON")
I DISX(2)]]3100600.999999
"KRN",.401,927,2,2,"SER")
0.0000^0.0000
"KRN",.401,927,2,2,"T")
z^
"KRN",.401,927,2,2,"TXT")
DATE PATCH VERIFIED from JUN 1,2010
"KRN",.401,927,2,3,0)
11005^^PACKAGE^"2^^^^^^4
"KRN",.401,927,2,3,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^DIC(9.4,+$P(Y(1),U,2),0)),U) I D0>0 S DISX(3)=X
"KRN",.401,927,2,3,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^DIC(9.4,+$P(Y(1),U,2),0)),U) I D0>0 S DISX(3)=X
"KRN",.401,927,2,3,"IX")
^A1AE(11005,"D",^A1AE(11005,^2
"KRN",.401,927,2,3,"PTRIX")
^DIC(9.4,"B",
"KRN",.401,927,2,3,"QCON")
I DISX(3)'=""
"KRN",.401,927,2,3,"SER")
0.0000^0.0000
"KRN",.401,927,2,3,"TXT")
 PACKAGE not null
"KRN",.401,927,2,"B",11005,1)

"KRN",.401,927,2,"B",11005,2)

"KRN",.401,927,2,"B",11005,3)

"KRN",.401,928,-1)
0^3
"KRN",.401,928,0)
A1AE GT 500^3070614.1223^@^11007^^@^3070614
"KRN",.401,928,"%D",0)
^^1^1^3070614^
"KRN",.401,928,"%D",1,0)
Find packages with patch numbers > 500.
"KRN",.401,928,"DC",1)
300,26^>500
"KRN",.401,928,"DIS",0)
S D1=+$O(^A1AE(11007,D0,"V",0)) X DIS("0A") I $T
"KRN",.401,928,"DIS","0A")
F  X DIS("0AA") X:D1'>0 "IF 0" Q:$T  S D1=$O(^A1AE(11007,D0,"V",D1)) Q:D1'>0
"KRN",.401,928,"DIS","0AA")
I $P($G(^A1AE(11007,D0,"V",D1,"PH")),U,1)>500
"KRN",.401,928,"DL")
1
"KRN",.401,928,"DL",0)
^1^
"KRN",.401,928,"O",0)
^
"KRN",.401,928,"O",1,0)
DHCP PATCH/PROBLEM PACKAGE NEXT PATCH NUMBER GREATER THAN 500
"KRN",.401,928,"QR")
3070614.12244^2
"KRN",.401,931,-1)
0^13
"KRN",.401,931,0)
A1AE COM PATCH BY STRM BY DT^3140327.165^^11005^^^3140912
"KRN",.401,931,2,0)
^.4014^3^3
"KRN",.401,931,2,1,0)
11005^^PATCH STREAM^@".2^^^^^^4
"KRN",.401,931,2,1,"ASK")
1
"KRN",.401,931,2,1,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^A1AE(11007.1,+$P(Y(1),U,20),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,931,2,1,"F")
FOIA VIST@z^FOIA VISTA
"KRN",.401,931,2,1,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P($G(^A1AE(11007.1,+$P(Y(1),U,20),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,931,2,1,"QCON")
I (DISX(1)]]"FOIA VIST@z")&(DISX(1)']]"OSEHRA VISTA")
"KRN",.401,931,2,1,"T")
OSEHRA VISTA^OSEHRA VISTA
"KRN",.401,931,2,1,"TXT")
PATCH STREAM from FOIA VISTA to OSEHRA VISTA
"KRN",.401,931,2,2,0)
11005^^INTERNAL(STATUS OF PATCH)="c"^"@B^;L1^^^^^4
"KRN",.401,931,2,2,"CM")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S X=X="c" I D0>0 S DISX(2)=X
"KRN",.401,931,2,2,"F")
0
"KRN",.401,931,2,2,"GET")
S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S X=X="c" I D0>0 S DISX(2)=X
"KRN",.401,931,2,2,"QCON")
I DISX(2)
"KRN",.401,931,2,2,"T")
1
"KRN",.401,931,2,2,"TXT")
INTERNAL(STATUS OF PATCH)=""c""
"KRN",.401,931,2,3,0)
11005^10^DATE PATCH COMPLETED^@^^^^^^1
"KRN",.401,931,2,3,"ASK")
1
"KRN",.401,931,2,3,"F")
3000302.999999^MAR 3,2000^MAR 3,2000
"KRN",.401,931,2,3,"GET")
S DISX(3)=$P($G(^A1AE(11005,D0,0)),U,10)
"KRN",.401,931,2,3,"LANG")
DATE PATCH COMPLETED
"KRN",.401,931,2,3,"QCON")
I DISX(3)]]3000302.999999
"KRN",.401,931,2,3,"SER")
0.0000^0.0000
"KRN",.401,931,2,3,"T")
z^
"KRN",.401,931,2,3,"TXT")
DATE PATCH COMPLETED from MAR 3,2000
"KRN",.401,931,2,"B",11005,1)

"KRN",.401,931,2,"B",11005,2)

"KRN",.401,931,2,"B",11005,3)

"KRN",.401,932,-1)
1^11
"KRN",.401,932,0)
A1AE SUMMARY SORT    FILE #11005
"KRN",.402,1760,-1)
0^2
"KRN",.402,1760,0)
A1AE ADD/EDIT PROBLEMS^2860121^^11006^^^^
"KRN",.402,1760,"DR",1,11006)
5;5.5;6;7;10;
"KRN",.402,1761,-1)
0^4
"KRN",.402,1761,0)
A1AE CHANGE PROBLEM STATUS^2860211^^11006^^^^
"KRN",.402,1761,"DR",1,11006)
Q;S A1AESTA=$P(^A1AE(11006,DA,0),U,10),DIE("NO^")="";Q;Q;@10;10;S Y=$S(X="T":"@20",X="R":"@30",X="C"!(X="U"):"@99",1:"@40");@20;11.5;S Y="@99";@30;12.5;13;S Y="@99";@40;Q;Q;Q;Q;
"KRN",.402,1761,"DR",1,11006,1)
W !?3,*7,"Please enter 'T'abled, or 'R'esolved, or 'U'nder Review.",!?3,"You can also leave status as 'C'omplete/Release for Review.";Q;10///^S X=A1AESTA;S Y="@10";@99;K A1AESTA,DIE("NO^");
"KRN",.402,1762,-1)
0^1
"KRN",.402,1762,0)
A1AE ADD/EDIT PATCHES^3140331.1846^^11005^^^3141007
"KRN",.402,1762,"DIAB",1,0,11005,5)
DHCP PATCH MESSAGE:
"KRN",.402,1762,"DIAB",1,1,11005.05,0)
ALL
"KRN",.402,1762,"DIAB",1,1,11005.09,0)
ALL
"KRN",.402,1762,"DIAB",2,0,11005,0)
LAST EDITED///NOW
"KRN",.402,1762,"DR",1,11005)
Q;20///^N %I,%H,% D NOW^%DTC S X=%;S A1AETVR=$P(^A1AE(11005,DA,0),U,3);S A1AEST=$P(^A1AE(11005,DA,0),U,8);S A1AEKIDS=0;I A1AEST'="u" S DIE("NO^")="OUTOK";I A1AEST="u" S Y="@6";I A1AEST="c" S Y="@2";I A1AEST="v" S Y="@10";
"KRN",.402,1762,"DR",1,11005,1)
I A1AEST="e" S Y="@20";I A1AEST="r" S Y="@30";I A1AEST="x" S Y="@10";I A1AEST="i2" S Y="@10";I A1AEST="d2" S Y="@6";I A1AEST="s2" S Y="@3";I A1AEST="r2" S Y="@50";I A1AEST="n2" S Y="@10";S Y="@6";@1;8///R2;S A1AEST="r2";S Y="@99";
"KRN",.402,1762,"DR",1,11005,2)
@2;5;17;W !;D CONT^A1AEM;8///U;S A1AEST="u";K DIE("NO^");S Y="@6";@3;5;17;W !;D CONTS2^A1AEM;K DIE("NO^");I A1AEMNEW="" S Y="@99";I A1AEMNEW="R2" S Y="@1";I A1AEMNEW="I2" S Y="@4";I A1AEMNEW="N2" S Y="@5";8///D2;S A1AEST="d2";
"KRN",.402,1762,"DR",1,11005,3)
S Y="@6";@4;8///I2;S A1AEST="i2";26;S Y="@99";@5;8///N2;S A1AEST="n2";28;S Y="@99";@6;N % S %=$$PRIMSTRM^A1AEUTL I $D(^A1AE(11007.1,%)) S $P(^A1AE(11005,DA,0),U,20)=% N DIK S DIK="^A1AE(11005,",DIK(1)=.2 D EN1^DIK;5;17;@7;7;
"KRN",.402,1762,"DR",1,11005,4)
I A1AETVR=999 S Y="@8";6.5;@8;D ^A1AECOPD;5.5;I A1AETVR=999 S Y="@10";
"KRN",.402,1762,"DR",1,11005,5)
^11005.1^A1AE(11005.1,^^S I(0,0)=$G(D0),D0=D0 S:'D0!'$D(^A1AE(11005.1,+D0,0)) D0=-1 S D(0)=D0 S Y(101)=$S($D(^A1AE(11005.1,D0,0)):^(0),1:"") S X=$P($G(^A1AE(11005,+$P(Y(101),U,1),0)),U) S D0=I(0,0) S X=$S(D(0)>0:D(0),1:"");
"KRN",.402,1762,"DR",1,11005,6)
I A1AEKIDS S Y="@9";100;@9;103//Yes;W !,"editing comments only seen by releasers/developers";16;150;W !;I A1AEST'="d2" S Y="@10";27;W !;@10;8;I X="e" S Y="@20";I X="r" S Y="@30";I X="i2" S Y="@40";I X="n2" S Y="@60";S Y="@99";@20;
"KRN",.402,1762,"DR",1,11005,7)
8.5;S Y="@99";@30;15;15.5;S Y="@99";@40;26;S Y="@99";@50;W !,"Secondary released patches cannot be edited after release.";S Y="@99";@60;28;S Y="@99";@99;K A1AEKIDS,A1AEMNEW,A1AEST,A1AETVR;
"KRN",.402,1762,"DR",2,11005.03)
.01;W !?20,"editing DESCRIPTION OF ROUTINE CHANGES";D ^A1AECOPY;D ^A1AECOPR;2.5;2;
"KRN",.402,1762,"DR",2,11005.05)
.01
"KRN",.402,1762,"DR",2,11005.09)
.01:2
"KRN",.402,1762,"DR",2,11005.1)
W !?20,"editing MESSAGE TEXT";D ^A1AEM1;W !;20;
"KRN",.402,1763,-1)
0^3
"KRN",.402,1763,0)
A1AE ADD/EDIT USERS^3030108.1107^^11007^^^3141002
"KRN",.402,1763,"DIAB",1,1,11007.03,0)
ALL
"KRN",.402,1763,"DR",1,11007)
S A1AE2=$P(^A1AE(11007,DA,0),U,2),A1AE4=$P(^(0),U,4);I A1AE4="y" W !!,"This package is considered a TEST SITE PACKAGE in the Patch Module.",!!;S MASTER=$O(^DIC(9.4,"C","A1AE",0)) I MASTER'=DA K MASTER;
"KRN",.402,1763,"DR",1,11007,1)
W !,"-------------------------------------------------------------------------------";I A1AE4="y" S Y="@5";2//^S X="NO";@5;3//^S X="YES";I '$D(^XUSEC("A1AE MGR",DUZ)) S Y="@10";4//^S X="NO";S A1AE4=X;6;@10;5;I A1AE4'="y" S Y="@20";
"KRN",.402,1763,"DR",1,11007,2)
W !,"-------------------------------------------------------------------------------";50;@20;W !,"-------------------------------------------------------------------------------";100;
"KRN",.402,1763,"DR",1,11007,3)
W !,"-------------------------------------------------------------------------------";200;W !,"-------------------------------------------------------------------------------";I '$D(MASTER) S Y="@99";
"KRN",.402,1763,"DR",1,11007,4)
W !,"-------------------------------------------------------------------------------";400;@99;K A1AE2,A1AE4,MASTER;
"KRN",.402,1763,"DR",2,11007.02)
.01;2;I X'="V" S Y="";3;
"KRN",.402,1763,"DR",2,11007.03)
.01
"KRN",.402,1763,"DR",2,11007.04)
.01;2;I $D(X) W !,"For Verified Patches";3;
"KRN",.402,1763,"DR",2,11007.05)
.01;2///^S X="TODAY";I A1AE4'="y" S Y="@20";3;
"KRN",.402,1764,-1)
0^5
"KRN",.402,1764,0)
A1AE COMP DATE^3070327.1036^@^11005^^@^3100804
"KRN",.402,1764,"DIAB",4,0,11005,0)
19;REQ;"REASON FOR CHANGE"
"KRN",.402,1764,"DR",1,11005)
S A1AEPRE=$P(^A1AE(11005,D0,0),"^",18);18;@1;19REASON FOR CHANGE~R~;S CDC=$$GET1^DIQ(11005,D0,19,"Z","CDC");S (I,CNT,CNT1)=0 I CDC'="" F I=1:1 S I=$O(CDC(I)) Q:'I  S CNT=CNT+$L(CDC(I,0)),CNT1=I;
"KRN",.402,1764,"DR",1,11005,1)
I CNT>256 W !!,"Text is too long. You have ",CNT," characters.  Maximum characters is 256",! K CDC,CNT,I S Y="@1";
"KRN",.402,1764,"DR",1,11005,2)
I CNT1>5 W !!,"Please enter text on less than 5 lines so text will fit in the bulletin message",! K CDC,CNT,CNT1,I S Y="@1";D:$P(^A1AE(11005,D0,0),"^",18)'=A1AEPRE ^A1AECDE;
"KRN",3.6,205,-1)
0^3
"KRN",3.6,205,0)
A1AE ENTERED IN ERROR PATCH^Entered in error patch for |1|
"KRN",3.6,205,1,0)
^^5^5^2870310^^^^
"KRN",3.6,205,1,1,0)
A patch has been entered in error for '|1|'.
"KRN",3.6,205,1,2,0)
 
"KRN",3.6,205,1,3,0)
The patch is '|2|' and the subject is '|3|'.
"KRN",3.6,205,1,4,0)
 
"KRN",3.6,205,1,5,0)
Use the 'Display Patch' option for more details.
"KRN",3.6,205,4,0)
^3.64A^3^3
"KRN",3.6,205,4,1,0)
1
"KRN",3.6,205,4,1,1,0)
^^1^1^2860310^^^^
"KRN",3.6,205,4,1,1,1,0)
Package Name
"KRN",3.6,205,4,2,0)
2
"KRN",3.6,205,4,2,1,0)
^^1^1^2860310^^^^
"KRN",3.6,205,4,2,1,1,0)
Patch Designation
"KRN",3.6,205,4,3,0)
3
"KRN",3.6,205,4,3,1,0)
^^1^1^2860327^^^^
"KRN",3.6,205,4,3,1,1,0)
Subject
"KRN",3.6,206,-1)
0^1
"KRN",3.6,206,0)
A1AE COMPLETED PATCH^New Completed Patch |2|
"KRN",3.6,206,1,0)
^3.61A^12^12^3011003^^^^
"KRN",3.6,206,1,1,0)
A new patch has been completed for '|1|'.
"KRN",3.6,206,1,2,0)
 
"KRN",3.6,206,1,3,0)
The Patch is '|2|' and its status is 'COMPLETED/NOT RELEASED'.
"KRN",3.6,206,1,4,0)
     Patch Subject : |3|
"KRN",3.6,206,1,5,0)
     Patch Priority: |4|
"KRN",3.6,206,1,6,0)
 |7|
"KRN",3.6,206,1,7,0)
 
"KRN",3.6,206,1,8,0)
See 'Display a Completed/NotReleased Patch' for details.
"KRN",3.6,206,1,9,0)
 
"KRN",3.6,206,1,10,0)
A patch message has been sent.
"KRN",3.6,206,1,11,0)
     Number        : |5|
"KRN",3.6,206,1,12,0)
     Subject       : |6|
"KRN",3.6,206,4,0)
^3.64A^7^5
"KRN",3.6,206,4,1,0)
1
"KRN",3.6,206,4,1,1,0)
^3.65^1^1^3000406^^^^
"KRN",3.6,206,4,1,1,1,0)
Package Name
"KRN",3.6,206,4,2,0)
2
"KRN",3.6,206,4,2,1,0)
^^1^1^2871105^^^
"KRN",3.6,206,4,2,1,1,0)
Patch Designation
"KRN",3.6,206,4,3,0)
3
"KRN",3.6,206,4,3,1,0)
^^1^1^2860312^^^^
"KRN",3.6,206,4,3,1,1,0)
Subject
"KRN",3.6,206,4,4,0)
4
"KRN",3.6,206,4,4,1,0)
^^1^1^2920608^^^^
"KRN",3.6,206,4,4,1,1,0)
Priority of the patch
"KRN",3.6,206,4,7,0)
7
"KRN",3.6,206,4,7,1,0)
^3.65^1^1^3011003^^^^
"KRN",3.6,206,4,7,1,1,0)
display category if PATCH FOR A PATCH
"KRN",3.6,207,-1)
0^4
"KRN",3.6,207,0)
A1AE PKG^New DHCP Problem/Patch Package
"KRN",3.6,207,1,0)
^^12^12^2951031^^^^
"KRN",3.6,207,1,1,0)
The |1| package is available for user selection as 
"KRN",3.6,207,1,2,0)
part of the patch module. The package prefix is '|2|' and the
"KRN",3.6,207,1,3,0)
short description of the package is as follows:
"KRN",3.6,207,1,4,0)
 
"KRN",3.6,207,1,5,0)
 |3|
"KRN",3.6,207,1,6,0)
 
"KRN",3.6,207,1,7,0)
If you choose to select this package you will receive automatic
"KRN",3.6,207,1,8,0)
notification of new |1| patches, and automatic
"KRN",3.6,207,1,9,0)
printing of these patches when using the 'New Patch Report' option.
"KRN",3.6,207,1,10,0)
 
"KRN",3.6,207,1,11,0)
To add |1| as a selected package use the 'Select
"KRN",3.6,207,1,12,0)
Packages for Notification' option on the 'Patch User Menu'.
"KRN",3.6,207,3,0)
^^2^2^2951031^^^^
"KRN",3.6,207,3,1,0)
This bulletin notifies users when a package is available
"KRN",3.6,207,3,2,0)
for user selection in the patch module.
"KRN",3.6,207,4,0)
^3.64A^3^3
"KRN",3.6,207,4,1,0)
1
"KRN",3.6,207,4,1,1,0)
^^1^1^2880125^^^^
"KRN",3.6,207,4,1,1,1,0)
Package
"KRN",3.6,207,4,2,0)
2
"KRN",3.6,207,4,2,1,0)
^^1^1^2880125^^
"KRN",3.6,207,4,2,1,1,0)
Prefix
"KRN",3.6,207,4,3,0)
3
"KRN",3.6,207,4,3,1,0)
^^1^1^2951031^^^^
"KRN",3.6,207,4,3,1,1,0)
Short Description
"KRN",3.6,208,-1)
0^7
"KRN",3.6,208,0)
A1AE VERIFIED PATCH^New Released Patch |2|
"KRN",3.6,208,1,0)
^^11^11^3021204^
"KRN",3.6,208,1,1,0)
A new patch has been entered for '|1|'.
"KRN",3.6,208,1,2,0)
 
"KRN",3.6,208,1,3,0)
The Patch is '|2|' and its status is 'RELEASED'.
"KRN",3.6,208,1,4,0)
     Patch Subject : |3|
"KRN",3.6,208,1,5,0)
     Patch Priority: |4|
"KRN",3.6,208,1,6,0)
 |7|
"KRN",3.6,208,1,7,0)
 
"KRN",3.6,208,1,8,0)
 |8|
"KRN",3.6,208,1,9,0)
 |9|
"KRN",3.6,208,1,10,0)
 
"KRN",3.6,208,1,11,0)
See 'New Patch Report' for details.
"KRN",3.6,208,3,0)
^3.63^1^1^3021204^^^^
"KRN",3.6,208,3,1,0)
 
"KRN",3.6,208,4,0)
^3.64A^9^7
"KRN",3.6,208,4,1,0)
1
"KRN",3.6,208,4,1,1,0)
^^1^1^2870925^
"KRN",3.6,208,4,1,1,1,0)
Package Name
"KRN",3.6,208,4,2,0)
2
"KRN",3.6,208,4,2,1,0)
^^1^1^2870925^
"KRN",3.6,208,4,2,1,1,0)
Package Designation
"KRN",3.6,208,4,3,0)
3
"KRN",3.6,208,4,3,1,0)
^^1^1^2921110^^
"KRN",3.6,208,4,3,1,1,0)
Subject
"KRN",3.6,208,4,4,0)
4
"KRN",3.6,208,4,4,1,0)
^^1^1^2870925^^
"KRN",3.6,208,4,4,1,1,0)
Priority of the patch
"KRN",3.6,208,4,7,0)
7
"KRN",3.6,208,4,7,1,0)
^3.65^1^1^3011017^^^^
"KRN",3.6,208,4,7,1,1,0)
Display category when PATCH FOR A PATCH
"KRN",3.6,208,4,8,0)
8
"KRN",3.6,208,4,8,1,0)
^^1^1^3011017^
"KRN",3.6,208,4,8,1,1,0)
Install by Date
"KRN",3.6,208,4,9,0)
9
"KRN",3.6,208,4,9,1,0)
^3.65^1^1^3021204^^
"KRN",3.6,208,4,9,1,1,0)
Compliance Statement
"KRN",3.6,209,-1)
0^5
"KRN",3.6,209,0)
A1AE RETIRED PATCH^Retired Patch for |1|
"KRN",3.6,209,1,0)
^^5^5^2951031^^^
"KRN",3.6,209,1,1,0)
A patch has been retired for '|1|'.
"KRN",3.6,209,1,2,0)
 
"KRN",3.6,209,1,3,0)
The patch is '|2|' and the subject is '|3|'.
"KRN",3.6,209,1,4,0)
 
"KRN",3.6,209,1,5,0)
Use the 'Display Patch' option for more details.
"KRN",3.6,209,4,0)
^3.64A^3^3
"KRN",3.6,209,4,1,0)
1
"KRN",3.6,209,4,1,1,0)
^^1^1^2891211^
"KRN",3.6,209,4,1,1,1,0)
Package Name
"KRN",3.6,209,4,2,0)
2
"KRN",3.6,209,4,2,1,0)
^^1^1^2891211^
"KRN",3.6,209,4,2,1,1,0)
Patch Description
"KRN",3.6,209,4,3,0)
3
"KRN",3.6,209,4,3,1,0)
^^1^1^2951031^^^
"KRN",3.6,209,4,3,1,1,0)
Subject
"KRN",3.6,210,-1)
0^2
"KRN",3.6,210,0)
A1AE COMPLIANCE DATE EDIT^PATCH |2| COMPLIANCE DATE CHANGE
"KRN",3.6,210,1,0)
^^14^14^3070516^
"KRN",3.6,210,1,1,0)
The Compliance Date has been edited for a "|1|" patch.
"KRN",3.6,210,1,2,0)
 
"KRN",3.6,210,1,3,0)
Patch:   |2|
"KRN",3.6,210,1,4,0)
Patch Subject:  |3|
"KRN",3.6,210,1,5,0)
Patch Priority: |4|
"KRN",3.6,210,1,6,0)
|8|
"KRN",3.6,210,1,7,0)
|9|
"KRN",3.6,210,1,8,0)
|10|
"KRN",3.6,210,1,9,0)
|11|
"KRN",3.6,210,1,10,0)
|12|
"KRN",3.6,210,1,11,0)
|13|
"KRN",3.6,210,1,12,0)
|14|
"KRN",3.6,210,1,13,0)
|15|
"KRN",3.6,210,1,14,0)
|16|
"KRN",3.6,210,4,0)
^3.64A^16^13
"KRN",3.6,210,4,1,0)
1
"KRN",3.6,210,4,1,1,0)
^^1^1^3040629^
"KRN",3.6,210,4,1,1,1,0)
Package Name
"KRN",3.6,210,4,2,0)
2
"KRN",3.6,210,4,2,1,0)
^^1^1^3040629^
"KRN",3.6,210,4,2,1,1,0)
Package Designation
"KRN",3.6,210,4,3,0)
3
"KRN",3.6,210,4,3,1,0)
^^1^1^3040629^
"KRN",3.6,210,4,3,1,1,0)
Subject
"KRN",3.6,210,4,4,0)
4
"KRN",3.6,210,4,4,1,0)
^^1^1^3040629^
"KRN",3.6,210,4,4,1,1,0)
Priority of patch
"KRN",3.6,210,4,8,0)
8
"KRN",3.6,210,4,9,0)
9
"KRN",3.6,210,4,9,1,0)
^3.65^1^1^3070516^^^^
"KRN",3.6,210,4,9,1,1,0)
Compliance Statement
"KRN",3.6,210,4,10,0)
10
"KRN",3.6,210,4,11,0)
11
"KRN",3.6,210,4,11,1,0)
^^1^1^3070326^
"KRN",3.6,210,4,11,1,1,0)
Compliance Date comments 11-16
"KRN",3.6,210,4,12,0)
12
"KRN",3.6,210,4,13,0)
13
"KRN",3.6,210,4,14,0)
14
"KRN",3.6,210,4,15,0)
15
"KRN",3.6,210,4,16,0)
16
"KRN",3.6,211,-1)
0^6
"KRN",3.6,211,0)
A1AE VERIFIED PACKAGE^New Released Package |2|
"KRN",3.6,211,1,0)
^^4^4^3060601^
"KRN",3.6,211,1,1,0)
A new package '|1|' has been Released.
"KRN",3.6,211,1,2,0)
 
"KRN",3.6,211,1,3,0)
 |8|
"KRN",3.6,211,1,4,0)
 |9|
"KRN",3.6,211,3,0)
^3.63^1^1^3060601^^^^
"KRN",3.6,211,3,1,0)
 
"KRN",3.6,211,4,0)
^3.64A^6^9
"KRN",3.6,211,4,1,0)
1
"KRN",3.6,211,4,1,1,0)
^3.65^1^1^3060601^^
"KRN",3.6,211,4,1,1,1,0)
Package Name
"KRN",3.6,211,4,2,0)
2
"KRN",3.6,211,4,2,1,0)
^3.65^1^1^3060601^^
"KRN",3.6,211,4,2,1,1,0)
Package Designation
"KRN",3.6,211,4,3,0)
3
"KRN",3.6,211,4,3,1,0)
^3.65^1^1^3060601^^^
"KRN",3.6,211,4,3,1,1,0)
Subject
"KRN",3.6,211,4,4,0)
4
"KRN",3.6,211,4,4,1,0)
^^1^1^3060601^
"KRN",3.6,211,4,4,1,1,0)
Priority of the package
"KRN",3.6,211,4,5,0)
5
"KRN",3.6,211,4,6,0)
6
"KRN",3.6,211,4,7,0)
7
"KRN",3.6,211,4,7,1,0)
^3.65^1^1^3060601^^^^
"KRN",3.6,211,4,7,1,1,0)
Display category when PATCH FOR A PATCH
"KRN",3.6,211,4,8,0)
8
"KRN",3.6,211,4,8,1,0)
^3.65^1^1^3060601^^
"KRN",3.6,211,4,8,1,1,0)
Install by Date
"KRN",3.6,211,4,9,0)
9
"KRN",3.6,211,4,9,1,0)
^3.65^1^1^3060601^^^
"KRN",3.6,211,4,9,1,1,0)
Compliance Statement
"KRN",3.6,212,-1)
0^8
"KRN",3.6,212,0)
A1AE LOAD RELEASED PATCH^Patches imported into the Patch Module^^0
"KRN",3.6,212,1,0)
^^1^1^3140304^
"KRN",3.6,212,1,1,0)
The following patches were loaded by |1| and are ready for review.
"KRN",3.6,212,3,0)
^^3^3^3140304^
"KRN",3.6,212,3,1,0)
This bulletin will be sent to members of A1AE LOAD RELEASED PATCH
"KRN",3.6,212,3,2,0)
whenever a new released patch has been imported from Mailman or
"KRN",3.6,212,3,3,0)
the host file system.
"KRN",3.6,212,4,0)
^3.64A^1^1
"KRN",3.6,212,4,1,0)
1
"KRN",3.6,212,4,1,1,0)
^^1^1^3140304^
"KRN",3.6,212,4,1,1,1,0)
The user loading the patches.
"KRN",3.6,213,-1)
0^11
"KRN",3.6,213,0)
A1AE SEC DEVELOPMENT PATCH^New Secondary Development Patch |2|^^0
"KRN",3.6,213,1,0)
^^12^12^3140326^
"KRN",3.6,213,1,1,0)
A new patch has entered secondary development for '|1|'.
"KRN",3.6,213,1,2,0)
 
"KRN",3.6,213,1,3,0)
The Patch is '|2|' and its status is 'SECONDARY DEVELOPMENT'.
"KRN",3.6,213,1,4,0)
     Patch Subject : |3|
"KRN",3.6,213,1,5,0)
     Patch Priority: |4|
"KRN",3.6,213,1,6,0)
 |7|
"KRN",3.6,213,1,7,0)
 
"KRN",3.6,213,1,8,0)
See 'Extended (DIQ) Display of a Patch' for details.
"KRN",3.6,213,1,9,0)
 
"KRN",3.6,213,1,10,0)
A patch message has been sent.
"KRN",3.6,213,1,11,0)
     Number        : |5|
"KRN",3.6,213,1,12,0)
     Subject       : |6|
"KRN",3.6,213,4,0)
^3.64A^7^5
"KRN",3.6,213,4,1,0)
1
"KRN",3.6,213,4,1,1,0)
^^1^1^3140326^
"KRN",3.6,213,4,1,1,1,0)
Package Name
"KRN",3.6,213,4,2,0)
2
"KRN",3.6,213,4,2,1,0)
^^1^1^3140326^
"KRN",3.6,213,4,2,1,1,0)
Patch Designation
"KRN",3.6,213,4,3,0)
3
"KRN",3.6,213,4,3,1,0)
^^1^1^3140326^
"KRN",3.6,213,4,3,1,1,0)
Subject
"KRN",3.6,213,4,4,0)
4
"KRN",3.6,213,4,4,1,0)
^^1^1^3140326^
"KRN",3.6,213,4,4,1,1,0)
Priority of the patch
"KRN",3.6,213,4,7,0)
7
"KRN",3.6,213,4,7,1,0)
^^1^1^3140326^
"KRN",3.6,213,4,7,1,1,0)
display category if PATCH FOR A PATCH
"KRN",3.6,214,-1)
0^10
"KRN",3.6,214,0)
A1AE SEC COMPLETION PATCH^New Secondary Completion Patch |2|^^0
"KRN",3.6,214,1,0)
^^12^12^3140326^
"KRN",3.6,214,1,1,0)
A new patch has been secondarily completed for '|1|'.
"KRN",3.6,214,1,2,0)
 
"KRN",3.6,214,1,3,0)
The Patch is '|2|' and its status is 'SECONDARY COMPLETION'.
"KRN",3.6,214,1,4,0)
     Patch Subject : |3|
"KRN",3.6,214,1,5,0)
     Patch Priority: |4|
"KRN",3.6,214,1,6,0)
 |7|
"KRN",3.6,214,1,7,0)
 
"KRN",3.6,214,1,8,0)
See 'Display a Completed/NotReleased Patch' for details.
"KRN",3.6,214,1,9,0)
 
"KRN",3.6,214,1,10,0)
A patch message has been sent.
"KRN",3.6,214,1,11,0)
     Number        : |5|
"KRN",3.6,214,1,12,0)
     Subject       : |6|
"KRN",3.6,214,4,0)
^3.64A^7^5
"KRN",3.6,214,4,1,0)
1
"KRN",3.6,214,4,1,1,0)
^^1^1^3140326^
"KRN",3.6,214,4,1,1,1,0)
Package Name
"KRN",3.6,214,4,2,0)
2
"KRN",3.6,214,4,2,1,0)
^^1^1^3140326^
"KRN",3.6,214,4,2,1,1,0)
Patch Designation
"KRN",3.6,214,4,3,0)
3
"KRN",3.6,214,4,3,1,0)
^^1^1^3140326^
"KRN",3.6,214,4,3,1,1,0)
Subject
"KRN",3.6,214,4,4,0)
4
"KRN",3.6,214,4,4,1,0)
^^1^1^3140326^
"KRN",3.6,214,4,4,1,1,0)
Priority of the patch
"KRN",3.6,214,4,7,0)
7
"KRN",3.6,214,4,7,1,0)
^^1^1^3140326^
"KRN",3.6,214,4,7,1,1,0)
display category if PATCH FOR A PATCH
"KRN",3.6,215,-1)
0^12
"KRN",3.6,215,0)
A1AE SEC RELEASE PATCH^New Secondary Released Patch |2|^^0
"KRN",3.6,215,1,0)
^^11^11^3140326^
"KRN",3.6,215,1,1,0)
A new patch has been entered for '|1|'.
"KRN",3.6,215,1,2,0)
 
"KRN",3.6,215,1,3,0)
The Patch is '|2|' and its status is 'SECONDARY RELEASED'.
"KRN",3.6,215,1,4,0)
     Patch Subject : |3|
"KRN",3.6,215,1,5,0)
     Patch Priority: |4|
"KRN",3.6,215,1,6,0)
 |7|
"KRN",3.6,215,1,7,0)
 
"KRN",3.6,215,1,8,0)
 |8|
"KRN",3.6,215,1,9,0)
 |9|
"KRN",3.6,215,1,10,0)
 
"KRN",3.6,215,1,11,0)
See 'New Patch Report' for details.
"KRN",3.6,215,4,0)
^3.64A^9^7
"KRN",3.6,215,4,1,0)
1
"KRN",3.6,215,4,1,1,0)
^^1^1^3140326^
"KRN",3.6,215,4,1,1,1,0)
Package Name
"KRN",3.6,215,4,2,0)
2
"KRN",3.6,215,4,2,1,0)
^^1^1^3140326^
"KRN",3.6,215,4,2,1,1,0)
Package Designation
"KRN",3.6,215,4,3,0)
3
"KRN",3.6,215,4,3,1,0)
^^1^1^3140326^
"KRN",3.6,215,4,3,1,1,0)
Subject
"KRN",3.6,215,4,4,0)
4
"KRN",3.6,215,4,4,1,0)
^^1^1^3140326^
"KRN",3.6,215,4,4,1,1,0)
Priority of the patch
"KRN",3.6,215,4,7,0)
7
"KRN",3.6,215,4,7,1,0)
^^1^1^3140326^
"KRN",3.6,215,4,7,1,1,0)
Display category when PATCH FOR A PATCH
"KRN",3.6,215,4,8,0)
8
"KRN",3.6,215,4,8,1,0)
^^1^1^3140326^
"KRN",3.6,215,4,8,1,1,0)
Install by Date
"KRN",3.6,215,4,9,0)
9
"KRN",3.6,215,4,9,1,0)
^^1^1^3140326^
"KRN",3.6,215,4,9,1,1,0)
Compliance Statement
"KRN",3.6,216,-1)
0^9
"KRN",3.6,216,0)
A1AE DENIED SEC RELEASE PATCH^New Denied Secondary Release Patch |2|^^0
"KRN",3.6,216,1,0)
^^12^12^3140326^
"KRN",3.6,216,1,1,0)
A new patch has been denied secondary release for '|1|'.
"KRN",3.6,216,1,2,0)
 
"KRN",3.6,216,1,3,0)
The Patch is '|2|' and its status is 'NOT FOR SECONDARY RELEASE'.
"KRN",3.6,216,1,4,0)
     Patch Subject : |3|
"KRN",3.6,216,1,5,0)
     Patch Priority: |4|
"KRN",3.6,216,1,6,0)
 |7|
"KRN",3.6,216,1,7,0)
 
"KRN",3.6,216,1,8,0)
See 'Extended (DIQ) Display of a Patch' for details.
"KRN",3.6,216,1,9,0)
 
"KRN",3.6,216,1,10,0)
A patch message has been sent.
"KRN",3.6,216,1,11,0)
     Number        : |5|
"KRN",3.6,216,1,12,0)
     Subject       : |6|
"KRN",3.6,216,4,0)
^3.64A^7^5
"KRN",3.6,216,4,1,0)
1
"KRN",3.6,216,4,1,1,0)
^^1^1^3140326^
"KRN",3.6,216,4,1,1,1,0)
Package Name
"KRN",3.6,216,4,2,0)
2
"KRN",3.6,216,4,2,1,0)
^^1^1^3140326^
"KRN",3.6,216,4,2,1,1,0)
Patch Designation
"KRN",3.6,216,4,3,0)
3
"KRN",3.6,216,4,3,1,0)
^^1^1^3140326^
"KRN",3.6,216,4,3,1,1,0)
Subject
"KRN",3.6,216,4,4,0)
4
"KRN",3.6,216,4,4,1,0)
^^1^1^3140326^
"KRN",3.6,216,4,4,1,1,0)
Priority of the patch
"KRN",3.6,216,4,7,0)
7
"KRN",3.6,216,4,7,1,0)
^^1^1^3140326^
"KRN",3.6,216,4,7,1,1,0)
display category if PATCH FOR A PATCH
"KRN",3.8,308,-1)
0^3
"KRN",3.8,308,0)
A1AE PATCH ERRORS^PU^y^^^^
"KRN",3.8,308,2,0)
^3.801^1^1^3140108^^^^
"KRN",3.8,308,2,1,0)
To get alerts when there are problems with the patch module.
"KRN",3.8,308,3)

"KRN",3.8,309,-1)
0^2
"KRN",3.8,309,0)
A1AE PACKAGE RELEASE^PU^n^^^^
"KRN",3.8,309,2,0)
^3.801^2^2^3140304^^^^
"KRN",3.8,309,2,1,0)
This mail group will get a message when a package is released thru the 
"KRN",3.8,309,2,2,0)
NPM.
"KRN",3.8,309,3)

"KRN",3.8,310,-1)
0^1
"KRN",3.8,310,0)
A1AE HFS MESSAGES^PU^y^^^^
"KRN",3.8,310,2,0)
^3.801^2^2^3081009^^^
"KRN",3.8,310,2,1,0)
This mail group gets forwarded messages from the HFS checksum
"KRN",3.8,310,2,2,0)
server in A1AEHSVR so problems can be tracked.
"KRN",3.8,310,3)

"KRN",3.8,311,-1)
0^4
"KRN",3.8,311,0)
A1AE LOAD RELEASED PATCH^PU^^^^^
"KRN",3.8,311,3)

"KRN",19,11468,-1)
0^63
"KRN",19,11468,0)
A1AE USER^Patch User Menu^^M^^^^^^^^^y
"KRN",19,11468,1,0)
^19.06^3^3^3060622^^^^
"KRN",19,11468,1,1,0)
This is the main menu for the Patch/Problem options. All users
"KRN",19,11468,1,2,0)
enter the patch module through this menu. However, depending on
"KRN",19,11468,1,3,0)
what keys the user holds, some options will or will not appear.
"KRN",19,11468,10,0)
^19.01IP^26^26
"KRN",19,11468,10,1,0)
11469^
"KRN",19,11468,10,1,"^")
A1AE PKGSEL
"KRN",19,11468,10,2,0)
11470^
"KRN",19,11468,10,2,"^")
A1AE PRTNEWPH
"KRN",19,11468,10,6,0)
11486^DP
"KRN",19,11468,10,6,"^")
A1AE PRTPHD
"KRN",19,11468,10,7,0)
11488^AD
"KRN",19,11468,10,7,"^")
A1AE PRTPHA
"KRN",19,11468,10,8,0)
11479^E
"KRN",19,11468,10,8,"^")
A1AE DEVELOPER
"KRN",19,11468,10,9,0)
11501^VER
"KRN",19,11468,10,9,"^")
A1AE VERIFIER
"KRN",19,11468,10,10,0)
11492^
"KRN",19,11468,10,10,"^")
A1AE MGR
"KRN",19,11468,10,11,0)
11496^
"KRN",19,11468,10,11,"^")
A1AE PATCHDOC
"KRN",19,11468,10,12,0)
11502^RPSR
"KRN",19,11468,10,12,"^")
A1AE PRTCOMSUMDT
"KRN",19,11468,10,13,0)
11503^RPDR
"KRN",19,11468,10,13,"^")
A1AE PRTCOMDETDT
"KRN",19,11468,10,14,0)
11505^DNNP
"KRN",19,11468,10,14,"^")
A1AE PRTNEWPHNUM
"KRN",19,11468,10,15,0)
11507^
"KRN",19,11468,10,15,"^")
A1AE FORWARD
"KRN",19,11468,10,16,0)
11509^
"KRN",19,11468,10,16,"^")
A1AE PKGPRT
"KRN",19,11468,10,19,0)
11519^SUMM
"KRN",19,11468,10,19,"^")
A1AE PRTPHS ORG
"KRN",19,11468,10,20,0)
11520^FSBD
"KRN",19,11468,10,20,"^")
A1AE FULL SUMMARY BY DATE
"KRN",19,11468,10,21,0)
11521
"KRN",19,11468,10,21,"^")
A1AE RELEASE SUMMARY
"KRN",19,11468,10,22,0)
11526
"KRN",19,11468,10,22,"^")
A1AE PRTUDP
"KRN",19,11468,10,23,0)
11527
"KRN",19,11468,10,23,"^")
A1AE PRTCNRP
"KRN",19,11468,10,24,0)
11515
"KRN",19,11468,10,24,"^")
A1AE ROUTINE INQUIRE
"KRN",19,11468,10,25,0)
11547
"KRN",19,11468,10,25,"^")
A1AE IMPORT MENU
"KRN",19,11468,10,26,0)
11553^SEC
"KRN",19,11468,10,26,"^")
A1AE SEC REPORTS
"KRN",19,11468,15)

"KRN",19,11468,20)

"KRN",19,11468,99)
63274,45323
"KRN",19,11468,99.1)
61956,81227
"KRN",19,11468,"U")
PATCH USER MENU
"KRN",19,11469,-1)
0^34
"KRN",19,11469,0)
A1AE PKGSEL^Select Packages for Notification^^R^^^^^^^^
"KRN",19,11469,1,0)
^19.06^15^15^3011128^^^^
"KRN",19,11469,1,1,0)
This option permits the user to choose which packages they want
"KRN",19,11469,1,2,0)
to receive automatic notification of new patches via mailman.
"KRN",19,11469,1,3,0)
 
"KRN",19,11469,1,4,0)
Once the user selects a package s/he will be shown the number of
"KRN",19,11469,1,5,0)
new patches associated with the package(s) when s/he signs into the
"KRN",19,11469,1,6,0)
patch module and these new patches will automatically be available
"KRN",19,11469,1,7,0)
via the 'New Patch Report' option.
"KRN",19,11469,1,8,0)
 
"KRN",19,11469,1,9,0)
Packages may be entered individually, or the user can enter
"KRN",19,11469,1,10,0)
'ALL' to receive patches for all user selectable packages.
"KRN",19,11469,1,11,0)
 
"KRN",19,11469,1,12,0)
The user may also stop notification of patches for a particular
"KRN",19,11469,1,13,0)
package via this option by selecting the package and responding
"KRN",19,11469,1,14,0)
'Yes' to stop notification. The user can also enter at the package
"KRN",19,11469,1,15,0)
prompt, a '-'PACKAGE NAME to stop notification.
"KRN",19,11469,25)
2^A1AEAU
"KRN",19,11469,99.1)
60575,39996
"KRN",19,11469,"U")
SELECT PACKAGES FOR NOTIFICATI
"KRN",19,11470,-1)
0^46
"KRN",19,11470,0)
A1AE PRTNEWPH^New Patch Report^^R^^^^^^^^
"KRN",19,11470,1,0)
^^13^13^2931208^^^^
"KRN",19,11470,1,1,0)
This print option generates a report of 'new' patches for any selectable
"KRN",19,11470,1,2,0)
package in the patch file, or all your selected packages.
"KRN",19,11470,1,3,0)
 
"KRN",19,11470,1,4,0)
A patch is 'new' if it has not been printed by the user and it has a status
"KRN",19,11470,1,5,0)
of 'verified'. Once a 'new' patch has been printed it is no longer available
"KRN",19,11470,1,6,0)
under this option, but can be viewed via any of the other print options
"KRN",19,11470,1,7,0)
for verified patches.
"KRN",19,11470,1,8,0)
 
"KRN",19,11470,1,9,0)
The report contains detailed information about each patch including
"KRN",19,11470,1,10,0)
the Patch Subject, Description, Category, Priority and Status. The
"KRN",19,11470,1,11,0)
report also contains information about the users who entered the
"KRN",19,11470,1,12,0)
patch, completed the patch and verified the patch. There is also
"KRN",19,11470,1,13,0)
a section for coding changes in the Routine Section of the report.
"KRN",19,11470,25)
PRTNEW^A1AEVP
"KRN",19,11470,99.1)
59214,39995
"KRN",19,11470,"U")
NEW PATCH REPORT
"KRN",19,11471,-1)
0^55
"KRN",19,11471,0)
A1AE PRTVRPH^Released Patch Report^^R^^^^^^^^
"KRN",19,11471,1,0)
^^12^12^2860314^^^^
"KRN",19,11471,1,1,0)
This print option generates a report of all 'verified' patches
"KRN",19,11471,1,2,0)
for a selected package and version. The user must be an authorized
"KRN",19,11471,1,3,0)
developer or support person of the package.
"KRN",19,11471,1,4,0)
 
"KRN",19,11471,1,5,0)
The user has the option of sorting the report by one of the
"KRN",19,11471,1,6,0)
following fields: Patch Designation, Category or Priority.
"KRN",19,11471,1,7,0)
 
"KRN",19,11471,1,8,0)
The report contains detailed information about each patch;
"KRN",19,11471,1,9,0)
including the Patch Subject, Description, Category, Priority
"KRN",19,11471,1,10,0)
and Status. The report also contains information about users
"KRN",19,11471,1,11,0)
who entered the patch and completed and/or verified the patch,
"KRN",19,11471,1,12,0)
and any Routine information.
"KRN",19,11471,25)
4^A1AEPH2
"KRN",19,11471,"U")
RELEASED PATCH REPORT
"KRN",19,11472,-1)
0^61
"KRN",19,11472,0)
A1AE SUPPORT^Support Menu^^M^^A1AE SUPPORT^^^^^^
"KRN",19,11472,1,0)
^^6^6^2860403^^^^
"KRN",19,11472,1,1,0)
This menu provides the holder of the A1AE SUPPORT key with
"KRN",19,11472,1,2,0)
the following print options: Verified Patch Report and
"KRN",19,11472,1,3,0)
Completed/Unverified Patch Report.
"KRN",19,11472,1,4,0)
 
"KRN",19,11472,1,5,0)
This menu also permits the holder of the A1AE PHVER key
"KRN",19,11472,1,6,0)
to see the 'Verifiy a Patch' option.
"KRN",19,11472,10,0)
^19.01PI^8^8
"KRN",19,11472,10,3,0)
11471^
"KRN",19,11472,10,3,"^")
A1AE PRTVRPH
"KRN",19,11472,10,4,0)
11473^
"KRN",19,11472,10,4,"^")
A1AE PRTCOMPH
"KRN",19,11472,10,5,0)
11497^
"KRN",19,11472,10,5,"^")
A1AE PRTUDVPH VER
"KRN",19,11472,10,7,0)
11474^
"KRN",19,11472,10,7,"^")
A1AE PBPROBLEM
"KRN",19,11472,10,8,0)
11489^
"KRN",19,11472,10,8,"^")
A1AE PHVER
"KRN",19,11472,15)

"KRN",19,11472,20)

"KRN",19,11472,99)
63187,50318
"KRN",19,11472,99.1)
61956,81227
"KRN",19,11472,"U")
SUPPORT MENU
"KRN",19,11473,-1)
0^41
"KRN",19,11473,0)
A1AE PRTCOMPH^Completed/NotReleased Patches Report^^R^^^^^^^^
"KRN",19,11473,1,0)
^^12^12^2971027^
"KRN",19,11473,1,1,0)
This print option generates a report of 'completed/unverified'
"KRN",19,11473,1,2,0)
patches for a selected package and version. The user must be an
"KRN",19,11473,1,3,0)
authorized developer or verifier of the package to use this option.
"KRN",19,11473,1,4,0)
 
"KRN",19,11473,1,5,0)
The user has the option of sorting the report by one of the following
"KRN",19,11473,1,6,0)
fields: Patch Designation, Category or Priority.
"KRN",19,11473,1,7,0)
 
"KRN",19,11473,1,8,0)
The report contains detailed information about each patch including the
"KRN",19,11473,1,9,0)
Patch Subject, Description, Category, Priority and Status. The report also
"KRN",19,11473,1,10,0)
contains information about the users who entered the patch and completed
"KRN",19,11473,1,11,0)
the patch. There is also a section for coding changes in the Routine
"KRN",19,11473,1,12,0)
Section of the report.
"KRN",19,11473,25)
1^A1AEPH2
"KRN",19,11473,"U")
COMPLETED/NOTRELEASED PATCHES 
"KRN",19,11474,-1)
0^19
"KRN",19,11474,0)
A1AE PBPROBLEM^Problem Menu^NOT AVAILABLE^M^^OBSOLETE^^^^^^
"KRN",19,11474,10,0)
^19.01PI^3^3
"KRN",19,11474,10,1,0)
11475^
"KRN",19,11474,10,1,"^")
A1AE PBADD
"KRN",19,11474,10,2,0)
11476^
"KRN",19,11474,10,2,"^")
A1AE PBDEL
"KRN",19,11474,10,3,0)
11477^
"KRN",19,11474,10,3,"^")
A1AE PBEDIT
"KRN",19,11474,99)
63295,3145
"KRN",19,11474,"U")
PROBLEM MENU
"KRN",19,11475,-1)
0^16
"KRN",19,11475,0)
A1AE PBADD^Add a New Problem^^R^^^^^^^^
"KRN",19,11475,25)
1^A1AEPB1
"KRN",19,11475,"U")
ADD A NEW PROBLEM
"KRN",19,11476,-1)
0^17
"KRN",19,11476,0)
A1AE PBDEL^Delete a Problem^^R^^^^^^^^
"KRN",19,11476,25)
2^A1AEPB1
"KRN",19,11476,"U")
DELETE A PROBLEM
"KRN",19,11477,-1)
0^18
"KRN",19,11477,0)
A1AE PBEDIT^Edit a Problem^^R^^^^^^^^
"KRN",19,11477,25)
3^A1AEPB1
"KRN",19,11477,"U")
EDIT A PROBLEM
"KRN",19,11479,-1)
0^8
"KRN",19,11479,0)
A1AE DEVELOPER^Developer's Menu^^M^^A1AE DEVELOPER^^^^^^^y^1^1
"KRN",19,11479,1,0)
^19.06^14^14^3090813^^^^
"KRN",19,11479,1,1,0)
This menu permits the holder of the A1AE DEVELOPER key who is an
"KRN",19,11479,1,2,0)
authorized developer, to add/edit patches. Also using the 'Package
"KRN",19,11479,1,3,0)
Management' option developer's can indicate other Development,
"KRN",19,11479,1,4,0)
Support Personnel and Verifiers associated with the package.
"KRN",19,11479,1,5,0)
 
"KRN",19,11479,1,6,0)
Using the 'Delete an Unverified Patch' option, developers can delete
"KRN",19,11479,1,7,0)
patches which have a status of 'Under Development' or 'Completed/
"KRN",19,11479,1,8,0)
unverified'. Using the 'Copy a patch into a new patch' option,
"KRN",19,11479,1,9,0)
developers can copy existing patches into new patches under the
"KRN",19,11479,1,10,0)
same or a different version.
"KRN",19,11479,1,11,0)
 
"KRN",19,11479,1,12,0)
The menu also provides the following print options: Extended Display
"KRN",19,11479,1,13,0)
of a Patch, Display a Completed/Unverified Patch, Completed/
"KRN",19,11479,1,14,0)
Unverified Patch Report and Under Development Patch Report.
"KRN",19,11479,10,0)
^19.01IP^25^25
"KRN",19,11479,10,1,0)
11481^
"KRN",19,11479,10,1,"^")
A1AE PHADD
"KRN",19,11479,10,9,0)
11482^
"KRN",19,11479,10,9,"^")
A1AE PHDEL
"KRN",19,11479,10,11,0)
11495^
"KRN",19,11479,10,11,"^")
A1AE PHEXTEND
"KRN",19,11479,10,12,0)
11483^
"KRN",19,11479,10,12,"^")
A1AE PHEDIT
"KRN",19,11479,10,13,0)
11500^
"KRN",19,11479,10,13,"^")
A1AE DISCOMPH
"KRN",19,11479,10,14,0)
11473^
"KRN",19,11479,10,14,"^")
A1AE PRTCOMPH
"KRN",19,11479,10,15,0)
11484^
"KRN",19,11479,10,15,"^")
A1AE PRTUDVPH
"KRN",19,11479,10,16,0)
11491^
"KRN",19,11479,10,16,"^")
A1AE PKGMGT
"KRN",19,11479,10,17,0)
11498^
"KRN",19,11479,10,17,"^")
A1AE COPY PATCH
"KRN",19,11479,10,18,0)
11506^
"KRN",19,11479,10,18,"^")
A1AE DEV CREATE
"KRN",19,11479,10,19,0)
11508^
"KRN",19,11479,10,19,"^")
A1AE DEV FORWARD
"KRN",19,11479,10,20,0)
11486^DP
"KRN",19,11479,10,20,"^")
A1AE PRTPHD
"KRN",19,11479,10,21,0)
11516^TS
"KRN",19,11479,10,21,"^")
A1AE TEST SCANNER
"KRN",19,11479,10,22,0)
11524
"KRN",19,11479,10,22,"^")
A1AE ROUTINES THAT OVERLAP
"KRN",19,11479,10,23,0)
11532
"KRN",19,11479,10,23,"^")
A1AE PKMENU
"KRN",19,11479,10,24,0)
11515^IN
"KRN",19,11479,10,24,"^")
A1AE ROUTINE INQUIRE
"KRN",19,11479,10,25,0)
11551
"KRN",19,11479,10,25,"^")
A1AE SHOW PATCH RELATIONSHIPS
"KRN",19,11479,15)
Q  ;S X=$ZC(%DELLOG,"EDTSYS","PROCESS")
"KRN",19,11479,20)
Q  ;S X=$ZC(%CRELOG,"EDTSYS","SYS$COMMON:[SYSMGR]A1AE.EDT","PROCESS")
"KRN",19,11479,99)
63273,64874
"KRN",19,11479,99.1)
61956,81227
"KRN",19,11479,"U")
DEVELOPER'S MENU
"KRN",19,11480,-1)
0^21
"KRN",19,11480,0)
A1AE PBRESREV^Resolve/Review a Problem^^R^^A1AE DEVELOPER^^^^^^
"KRN",19,11480,25)
4^A1AEPB1
"KRN",19,11480,"U")
RESOLVE/REVIEW A PROBLEM
"KRN",19,11481,-1)
0^22
"KRN",19,11481,0)
A1AE PHADD^Add a Patch^^R^^^^^^^^
"KRN",19,11481,1,0)
13^19.06^30^30^3020319^^^^
"KRN",19,11481,1,1,0)
This function permits authorized developers of a package to
"KRN",19,11481,1,2,0)
add a new patch to a specific version of the package.
"KRN",19,11481,1,3,0)
 
"KRN",19,11481,1,4,0)
Patches are unique by their designation which has the following
"KRN",19,11481,1,5,0)
format:
"KRN",19,11481,1,6,0)
 
"KRN",19,11481,1,7,0)
    Package Namespace*Version Number*System assigned patch Number
"KRN",19,11481,1,8,0)
 
"KRN",19,11481,1,9,0)
An asterisk is used as the delimiter between the field values.
"KRN",19,11481,1,10,0)
 
"KRN",19,11481,1,11,0)
When a new patch is added a 'PATCH SUBJECT' must be entered.
"KRN",19,11481,1,12,0)
This field has two cross-references that can be used for look-up.
"KRN",19,11481,1,13,0)
One is a regular cross-reference and the other is a key word in
"KRN",19,11481,1,14,0)
context cross-reference.
"KRN",19,11481,1,15,0)
 
"KRN",19,11481,1,16,0)
When the patch is added the system assigns it a patch status of
"KRN",19,11481,1,17,0)
'under development', and stores the user entering the patch
"KRN",19,11481,1,18,0)
and the date the patch is entered. Once you have entered
"KRN",19,11481,1,19,0)
the patch another developer must change the status to
"KRN",19,11481,1,20,0)
'completed/unverified'. Once the status is changed to
"KRN",19,11481,1,21,0)
'completed/unverified' a bulletin is sent to the verifiers
"KRN",19,11481,1,22,0)
of the package notifying them a patch is ready for verification.
"KRN",19,11481,1,23,0)
 
"KRN",19,11481,1,24,0)
When a routine name is entered, and if the routine is available,
"KRN",19,11481,1,25,0)
you are able to copy routine lines into the routine description.
"KRN",19,11481,1,26,0)
The system prompts you 'Do you want to copy routine lines into
"KRN",19,11481,1,27,0)
the routine description?'. You then select a range of lines to
"KRN",19,11481,1,28,0)
copy, and if a description already exists, you will be asked
"KRN",19,11481,1,29,0)
where in the description to insert the program lines; otherwise
"KRN",19,11481,1,30,0)
they are automatically inserted.
"KRN",19,11481,25)
1^A1AEPH1
"KRN",19,11481,99.1)
55493,42067
"KRN",19,11481,"U")
ADD A PATCH
"KRN",19,11482,-1)
0^23
"KRN",19,11482,0)
A1AE PHDEL^Delete an NotReleased Patch^^R^^^^^^^^
"KRN",19,11482,1,0)
^^13^13^3030911^
"KRN",19,11482,1,1,0)
This function permits authorized developers of a package to delete
"KRN",19,11482,1,2,0)
an incorrect patch which has a status of 'under development' or
"KRN",19,11482,1,3,0)
'completed/unverified'. Only these types of patches may be deleted
"KRN",19,11482,1,4,0)
since only the developer(s) and verifier(s) are aware of the patch.
"KRN",19,11482,1,5,0)
The system assigned patch number will then be re-assigned to the next
"KRN",19,11482,1,6,0)
patch.
"KRN",19,11482,1,7,0)
 
"KRN",19,11482,1,8,0)
When a patch has a status of 'verified' or 'entered in error'
"KRN",19,11482,1,9,0)
the patch can not be deleted, since users have been notified of the
"KRN",19,11482,1,10,0)
patch. If there is an error to a verified patch then the developer
"KRN",19,11482,1,11,0)
must change the status of the patch to 'entered in error' via
"KRN",19,11482,1,12,0)
the edit function. If the status is changed to 'entered in error'
"KRN",19,11482,1,13,0)
a message is sent to the users who printed the patch.
"KRN",19,11482,25)
2^A1AEPH1
"KRN",19,11482,99.1)
59214,39995
"KRN",19,11482,"U")
DELETE AN NOTRELEASED PATCH
"KRN",19,11483,-1)
0^24
"KRN",19,11483,0)
A1AE PHEDIT^Edit a Patch^^R^^^^^^^^
"KRN",19,11483,1,0)
^19.06^56^56^3041026^^^^
"KRN",19,11483,1,1,0)
This function permits authorized developers of a package to
"KRN",19,11483,1,2,0)
edit a patch.
"KRN",19,11483,1,3,0)
 
"KRN",19,11483,1,4,0)
Which fields may be edited are dependent on the value of the
"KRN",19,11483,1,5,0)
status field:
"KRN",19,11483,1,6,0)
 
"KRN",19,11483,1,7,0)
   Value of Status field    Fields which can be edited
"KRN",19,11483,1,8,0)
   ---------------------    --------------------------
"KRN",19,11483,1,9,0)
   'under development'       PATCH SUBJECT
"KRN",19,11483,1,10,0)
                             PRIORITY
"KRN",19,11483,1,11,0)
                             CATEGORY OF PATCH
"KRN",19,11483,1,12,0)
                             PATCH DESCRIPTION
"KRN",19,11483,1,13,0)
                             ROUTINE NAME
"KRN",19,11483,1,14,0)
                             DESCRIPTION OF ROUTINE CHANGES
"KRN",19,11483,1,15,0)
                             STATUS OF PATCH
"KRN",19,11483,1,16,0)
                             (Valid next status: 'completed/unverified'
"KRN",19,11483,1,17,0)
                               NOTE: When the completed/unverified
"KRN",19,11483,1,18,0)
                                     status is assigned a bulletin
"KRN",19,11483,1,19,0)
                                     is sent to the verifier(s) of
"KRN",19,11483,1,20,0)
                                     the package, notifying them
"KRN",19,11483,1,21,0)
                                     the patch is ready for
"KRN",19,11483,1,22,0)
                                     verification.)
"KRN",19,11483,1,23,0)
 
"KRN",19,11483,1,24,0)
   'completed/unverified'    PATCH SUBJECT
"KRN",19,11483,1,25,0)
                             PRIORITY
"KRN",19,11483,1,26,0)
                             CATEGORY OF PATCH
"KRN",19,11483,1,27,0)
                             PATCH DESCRIPTION
"KRN",19,11483,1,28,0)
                             ROUTINE NAME
"KRN",19,11483,1,29,0)
                             DESCRIPTION OF ROUTINE CHANGES
"KRN",19,11483,1,30,0)
                             STATUS OF PATCH
"KRN",19,11483,1,31,0)
                             (Valid next status: 'verified')
"KRN",19,11483,1,32,0)
                               NOTE: When the verified status
"KRN",19,11483,1,33,0)
                                     is assigned a bulletin is sent
"KRN",19,11483,1,34,0)
                                     to all of the select users of
"KRN",19,11483,1,35,0)
                                     the package, notifying them
"KRN",19,11483,1,36,0)
                                     there is a new patch.)
"KRN",19,11483,1,37,0)
 
"KRN",19,11483,1,38,0)
   'verified'                STATUS OF PATCH
"KRN",19,11483,1,39,0)
                             (Valid status change: 'entered in error')
"KRN",19,11483,1,40,0)
                               NOTE: When the entered in error
"KRN",19,11483,1,41,0)
                                     status is assigned a bulletin
"KRN",19,11483,1,42,0)
                                     is sent users who have printed
"KRN",19,11483,1,43,0)
                                     the patch, notifying them
"KRN",19,11483,1,44,0)
                                     the patch is incorrect.)
"KRN",19,11483,1,45,0)
 
"KRN",19,11483,1,46,0)
   'entered in error'        ENTERED IN ERROR DESCRIPTION; to enter
"KRN",19,11483,1,47,0)
                             why the patch is in error and where the
"KRN",19,11483,1,48,0)
                             correct patch can be found.
"KRN",19,11483,1,49,0)
 
"KRN",19,11483,1,50,0)
When looking up a patch, the values for the following fields can be
"KRN",19,11483,1,51,0)
entered as the look-up value:
"KRN",19,11483,1,52,0)
 
"KRN",19,11483,1,53,0)
   Patch Designation, Package, Patch Subject and Routine Name
"KRN",19,11483,1,54,0)
 
"KRN",19,11483,1,55,0)
There is also a key word in context cross-reference on the subject
"KRN",19,11483,1,56,0)
field that can be used.
"KRN",19,11483,25)
3^A1AEPH1
"KRN",19,11483,99)
57776,56668
"KRN",19,11483,"U")
EDIT A PATCH
"KRN",19,11484,-1)
0^53
"KRN",19,11484,0)
A1AE PRTUDVPH^Under Development Patches Report^^R^^^^^^^^
"KRN",19,11484,1,0)
^^12^12^2871112^^^^
"KRN",19,11484,1,1,0)
This print option generates a report of 'under development' patches
"KRN",19,11484,1,2,0)
for a selected package and version. The user must be an authorized
"KRN",19,11484,1,3,0)
developer of the package to use this option.
"KRN",19,11484,1,4,0)
 
"KRN",19,11484,1,5,0)
The user has the option of sorting the report by one of the following
"KRN",19,11484,1,6,0)
fields: Patch Designation, Category or Priority.
"KRN",19,11484,1,7,0)
 
"KRN",19,11484,1,8,0)
The report contains detailed information about each patch; including
"KRN",19,11484,1,9,0)
the Patch Subject, Description, Category, Priority and Status. The
"KRN",19,11484,1,10,0)
report also contains information about users who entered the patch.
"KRN",19,11484,1,11,0)
There is also a section for coding changes in the Routine Section of
"KRN",19,11484,1,12,0)
the patch.
"KRN",19,11484,25)
3^A1AEPH2
"KRN",19,11484,99.1)
60271,38557
"KRN",19,11484,"U")
UNDER DEVELOPMENT PATCHES REPO
"KRN",19,11485,-1)
0^50
"KRN",19,11485,0)
A1AE PRTPHS^All Released P's for a Package, Summary w/Routines^^R^^^^^^^^
"KRN",19,11485,1,0)
^^4^4^2981203^^^^
"KRN",19,11485,1,1,0)
This option permits the user to display a summary report of
"KRN",19,11485,1,2,0)
all patches for a selected package and version.
"KRN",19,11485,1,3,0)
 
"KRN",19,11485,1,4,0)
The report contains the Patch Designation, Subject, Status, and Routines.
"KRN",19,11485,25)
5^A1AEPH2
"KRN",19,11485,99)
55480,45206
"KRN",19,11485,99.1)
59214,39995
"KRN",19,11485,"U")
ALL RELEASED P'S FOR A PACKAGE
"KRN",19,11486,-1)
0^49
"KRN",19,11486,0)
A1AE PRTPHD^Display a Patch^^R^^^^^^^^
"KRN",19,11486,1,0)
^19.06^23^23^3040615^^^^
"KRN",19,11486,1,1,0)
This option permits the user to display a 'verified' or 'entered in 
"KRN",19,11486,1,2,0)
error' patch for any package in the patch file. A new patch which
"KRN",19,11486,1,3,0)
is displayed, but not printed, will still appear as new until it
"KRN",19,11486,1,4,0)
is printed.
"KRN",19,11486,1,5,0)
 
"KRN",19,11486,1,6,0)
When looking for a patch, the values for the following fields can be
"KRN",19,11486,1,7,0)
entered as the look-up value:
"KRN",19,11486,1,8,0)
 
"KRN",19,11486,1,9,0)
   Patch Designation, Package, Patch Subject and Routine
"KRN",19,11486,1,10,0)
 
"KRN",19,11486,1,11,0)
There is also key word in context cross-reference on the subject field
"KRN",19,11486,1,12,0)
that can be used.
"KRN",19,11486,1,13,0)
 
"KRN",19,11486,1,14,0)
If a patch has the status of 'verified' the display contains
"KRN",19,11486,1,15,0)
the Patch Subject, Description, Category, Priority and Status. The
"KRN",19,11486,1,16,0)
display also contains information about the users who entered the
"KRN",19,11486,1,17,0)
patch, completed the patch and verified the patch. There is also
"KRN",19,11486,1,18,0)
a section for coding changes in the Routine Section of the display.
"KRN",19,11486,1,19,0)
 
"KRN",19,11486,1,20,0)
NOTE:
"KRN",19,11486,1,21,0)
If a patch has the status of 'entered in error' only the Patch
"KRN",19,11486,1,22,0)
Designation, Status, Package, Priority, Subject and Entered in Error
"KRN",19,11486,1,23,0)
Description fields are displayed.
"KRN",19,11486,25)
6^A1AEPH2
"KRN",19,11486,99.1)
61807,40965
"KRN",19,11486,"U")
DISPLAY A PATCH
"KRN",19,11487,-1)
0^30
"KRN",19,11487,0)
A1AE PKGEDIT^Enter/Edit Authorized Users^^R^^^^^^^^
"KRN",19,11487,1,0)
^19.06^25^25^3030108^^^^
"KRN",19,11487,1,1,0)
This function permits authorized developers of a package to
"KRN",19,11487,1,2,0)
add development, support personnel, and verifiers.
"KRN",19,11487,1,3,0)
 
"KRN",19,11487,1,4,0)
When entering users the following three keys are automatically
"KRN",19,11487,1,5,0)
allocated to the user when they are entered as a developer, support
"KRN",19,11487,1,6,0)
person or verifier:
"KRN",19,11487,1,7,0)
    A1AE DEVELOPER, A1AE SUPPORT and A1AE PHVER
"KRN",19,11487,1,8,0)
 
"KRN",19,11487,1,9,0)
These keys may be manually allocated/deallocated using the 'Key
"KRN",19,11487,1,10,0)
Allocation for Patch Functions' option.
"KRN",19,11487,1,11,0)
 
"KRN",19,11487,1,12,0)
For authorized developers to receive the 'Developer's Menu'
"KRN",19,11487,1,13,0)
they must be given the A1AE DEVELOPER key, and for verifiers
"KRN",19,11487,1,14,0)
to receive the 'Verifier Menu' they must be given the
"KRN",19,11487,1,15,0)
A1AE PHVER key.
"KRN",19,11487,1,16,0)
 
"KRN",19,11487,1,17,0)
If the support person is also a verifier of the package, then a  
"KRN",19,11487,1,18,0)
'V' should be entered at the verifier prompt. 
"KRN",19,11487,1,19,0)
 
"KRN",19,11487,1,20,0)
The developer can also specify whether or not user selection
"KRN",19,11487,1,21,0)
of a package is permitted. If selection is permitted any user
"KRN",19,11487,1,22,0)
can select this package via the 'Select Packages for Notification'
"KRN",19,11487,1,23,0)
option. This selection causes 1) automatic notification of patches
"KRN",19,11487,1,24,0)
via mailman, and 2) printing of new patches for this package
"KRN",19,11487,1,25,0)
whenever the user enters the 'New Patch Report' option.
"KRN",19,11487,25)
1^A1AEAU
"KRN",19,11487,"U")
ENTER/EDIT AUTHORIZED USERS
"KRN",19,11488,-1)
0^48
"KRN",19,11488,0)
A1AE PRTPHA^All Released Patches for a Package, Detailed^^R^^^^^^^^
"KRN",19,11488,1,0)
^19.06^11^11^3010601^^^^
"KRN",19,11488,1,1,0)
This print option generates a report of all 'verified' patches for a
"KRN",19,11488,1,2,0)
selected package and version.
"KRN",19,11488,1,3,0)
 
"KRN",19,11488,1,4,0)
The user has the option of sorting the report by one of the following
"KRN",19,11488,1,5,0)
fields: Patch Designation, Status, Category or Priority.
"KRN",19,11488,1,6,0)
 
"KRN",19,11488,1,7,0)
The report contains detailed information about each patch including
"KRN",19,11488,1,8,0)
the Patch Subject, Description, Category, Priority and Status. The
"KRN",19,11488,1,9,0)
report also contains information about users who entered the patch,
"KRN",19,11488,1,10,0)
completed the patch and verified the patch. There is also a section
"KRN",19,11488,1,11,0)
for coding changes in the Routine Section of the report.
"KRN",19,11488,25)
7^A1AEPH2
"KRN",19,11488,"U")
ALL RELEASED PATCHES FOR A PAC
"KRN",19,11489,-1)
0^26
"KRN",19,11489,0)
A1AE PHVER^Release a Patch (and/or edit internal comments)^^R^^A1AE PHVER^^^^^^
"KRN",19,11489,1,0)
^19.06^8^8^3060404^^^^
"KRN",19,11489,1,1,0)
Using this option, authorized verifiers of a package can change
"KRN",19,11489,1,2,0)
the status of a 'completed/unverified' patch to the 'verified'
"KRN",19,11489,1,3,0)
status.
"KRN",19,11489,1,4,0)
 
"KRN",19,11489,1,5,0)
When the verifier changes the status of a patch to verified a
"KRN",19,11489,1,6,0)
bulletin is sent to user(s) who have requested notification of
"KRN",19,11489,1,7,0)
patches for the package. The patch is then available to
"KRN",19,11489,1,8,0)
all patch users.
"KRN",19,11489,25)
4^A1AEPH1
"KRN",19,11489,99.1)
59214,39995
"KRN",19,11489,"U")
RELEASE A PATCH (AND/OR EDIT I
"KRN",19,11490,-1)
0^65
"KRN",19,11490,0)
A1AE XUSEC^Key Allocation for Patch Functions^^R^^A1AE XUSEC^^^^^^
"KRN",19,11490,1,0)
^19.06^37^37^3020903^^^^
"KRN",19,11490,1,1,0)
  This function allows the package developers and the patch module
"KRN",19,11490,1,2,0)
coordinator to allocate patch module keys to other users. When
"KRN",19,11490,1,3,0)
a holder of a patch key is edited, the user is told what other
"KRN",19,11490,1,4,0)
packages the user may need the key for. The user is then asked
"KRN",19,11490,1,5,0)
if s/he wants to delete the holder.
"KRN",19,11490,1,6,0)
 
"KRN",19,11490,1,7,0)
  The keys available are the following:
"KRN",19,11490,1,8,0)
 
"KRN",19,11490,1,9,0)
      1) A1AE PHVER      - This key allows the user to have access to the
"KRN",19,11490,1,10,0)
                           'Verifier Menu' of the 'Patch User Menu'.
"KRN",19,11490,1,11,0)
   
"KRN",19,11490,1,12,0)
      2) A1AE DEVELOPER  - This key allows the user to have access to
"KRN",19,11490,1,13,0)
                           the 'Developer's Menu' of the patch user menu
"KRN",19,11490,1,14,0)
 
"KRN",19,11490,1,15,0)
      3) A1AE XUSEC      - This key allows the user, usually a developer,
"KRN",19,11490,1,16,0)
                           to have access to the 'Key Allocation of Patch
"KRN",19,11490,1,17,0)
                           Functions' option of the 'Package Management'
"KRN",19,11490,1,18,0)
                           menu. If a user has this key then through the
"KRN",19,11490,1,19,0)
                           key allocation option, s/he can give out only
"KRN",19,11490,1,20,0)
                           the following keys:
"KRN",19,11490,1,21,0)
                                       A1AE SUPPORT
"KRN",19,11490,1,22,0)
                                       A1AE DEVELOPER
"KRN",19,11490,1,23,0)
                                       A1AE PHVER
"KRN",19,11490,1,24,0)
 
"KRN",19,11490,1,25,0)
      4) A1AE SUPPORT    - This key use to allow the holder access to the
"KRN",19,11490,1,26,0)
                           'Support Menu' of the 'Patch User Menu'.
"KRN",19,11490,1,27,0)
                           This menu has been removed in Version 2.0
"KRN",19,11490,1,28,0)
                           of the Patch Module. This key is being left
"KRN",19,11490,1,29,0)
                           in the module for future enhancements.
"KRN",19,11490,1,30,0)
 
"KRN",19,11490,1,31,0)
      5) A1AE MGR        - This key allows the user to have access to the 
"KRN",19,11490,1,32,0)
                           'Patch Module Management' menu of the 'Patch
"KRN",19,11490,1,33,0)
                           User Menu'.
"KRN",19,11490,1,34,0)
   
"KRN",19,11490,1,35,0)
                           Also, the user will be able to allocate all
"KRN",19,11490,1,36,0)
                           A1AE keys through the 'Key Allocation for
"KRN",19,11490,1,37,0)
                           Patch Functions'.
"KRN",19,11490,25)
6^A1AEAU
"KRN",19,11490,"U")
KEY ALLOCATION FOR PATCH FUNCT
"KRN",19,11491,-1)
0^32
"KRN",19,11491,0)
A1AE PKGMGT^Package Management^^M^^^^^^^^
"KRN",19,11491,1,0)
^19.06^10^10^3021217^^^^
"KRN",19,11491,1,1,0)
This menu permits a developer of a package to maintain
"KRN",19,11491,1,2,0)
the authorized developers, support personnel and verifiers
"KRN",19,11491,1,3,0)
associated with the package.
"KRN",19,11491,1,4,0)
 
"KRN",19,11491,1,5,0)
This menu also permits holders of the A1AE XUSEC key to allocate
"KRN",19,11491,1,6,0)
other patch keys.
"KRN",19,11491,1,7,0)
 
"KRN",19,11491,1,8,0)
This menu also contains a print option to generate a report
"KRN",19,11491,1,9,0)
of the developers, support personnel, verifiers and any selected 
"KRN",19,11491,1,10,0)
users associated with the package.
"KRN",19,11491,10,0)
^19.01IP^3^3
"KRN",19,11491,10,1,0)
11487^
"KRN",19,11491,10,1,"^")
A1AE PKGEDIT
"KRN",19,11491,10,2,0)
11490^
"KRN",19,11491,10,2,"^")
A1AE XUSEC
"KRN",19,11491,10,3,0)
11494^
"KRN",19,11491,10,3,"^")
A1AE PKGLIST
"KRN",19,11491,99)
63187,50318
"KRN",19,11491,99.1)
61956,81227
"KRN",19,11491,"U")
PACKAGE MANAGEMENT
"KRN",19,11492,-1)
0^13
"KRN",19,11492,0)
A1AE MGR^Patch Module Management^^M^^A1AE MGR^^^^^^^y
"KRN",19,11492,1,0)
^19.06^4^4^3071010^^^^
"KRN",19,11492,1,1,0)
This menu permits the Holder of the A1AE MGR key to Add/Edit Packages, 
"KRN",19,11492,1,2,0)
developers, support and verify personnel in the DHCP PATCH/PROBLEM
"KRN",19,11492,1,3,0)
file (#11007). It also permits the user to allocate patch function
"KRN",19,11492,1,4,0)
keys.
"KRN",19,11492,10,0)
^19.01IP^5^5
"KRN",19,11492,10,1,0)
11490^
"KRN",19,11492,10,1,"^")
A1AE XUSEC
"KRN",19,11492,10,2,0)
11493^
"KRN",19,11492,10,2,"^")
A1AE MGRADD
"KRN",19,11492,10,3,0)
11468^U
"KRN",19,11492,10,3,"^")
A1AE USER
"KRN",19,11492,10,4,0)
11479^D
"KRN",19,11492,10,4,"^")
A1AE DEVELOPER
"KRN",19,11492,25)

"KRN",19,11492,99)
63273,57102
"KRN",19,11492,99.1)
63484,1201
"KRN",19,11492,"U")
PATCH MODULE MANAGEMENT
"KRN",19,11493,-1)
0^14
"KRN",19,11493,0)
A1AE MGRADD^Add Package to Patch Module^^R^^A1AE MGR^^^^^^
"KRN",19,11493,1,0)
^^8^8^2900428^^^^
"KRN",19,11493,1,1,0)
This function permits holders of the A1AE MGR key to add packages
"KRN",19,11493,1,2,0)
to the DHCP PATCH/PROBLEM PACKAGE file (#11007). When a package is
"KRN",19,11493,1,3,0)
added the USER SELECTION field is set to 'No' by the system. The
"KRN",19,11493,1,4,0)
developer of the package which is being added can then change
"KRN",19,11493,1,5,0)
this field to 'Yes' to permit users to select the package, or the
"KRN",19,11493,1,6,0)
user entering the package can enter 'Yes' to permit users to
"KRN",19,11493,1,7,0)
select this package for automatic notification and printing of
"KRN",19,11493,1,8,0)
patches.
"KRN",19,11493,25)
3^A1AEAU
"KRN",19,11493,99.1)
55442,81811
"KRN",19,11493,"U")
ADD PACKAGE TO PATCH MODULE
"KRN",19,11494,-1)
0^31
"KRN",19,11494,0)
A1AE PKGLIST^List of Package Users^^R^^^^^^^^
"KRN",19,11494,1,0)
^19.06^6^6^3021217^^^^
"KRN",19,11494,1,1,0)
This function generates a report of user information about a
"KRN",19,11494,1,2,0)
selected package. The user must be an authorized developer of the
"KRN",19,11494,1,3,0)
package to use this option.
"KRN",19,11494,1,4,0)
 
"KRN",19,11494,1,5,0)
The report contains the developers, support personnel and any selected
"KRN",19,11494,1,6,0)
users associated with the package.
"KRN",19,11494,25)
4^A1AEAU
"KRN",19,11494,"U")
LIST OF PACKAGE USERS
"KRN",19,11495,-1)
0^25
"KRN",19,11495,0)
A1AE PHEXTEND^Extended (DIQ) Display of a Patch^^R^^^^^^^^^^1
"KRN",19,11495,1,0)
^^8^8^2980923^
"KRN",19,11495,1,1,0)
This option allows the developer to view an extended display of a
"KRN",19,11495,1,2,0)
patch. Information regarding who has printed the patch is available
"KRN",19,11495,1,3,0)
through this option. You may display when a selected user printed
"KRN",19,11495,1,4,0)
or the entire patch and all users who printed it. Note this option
"KRN",19,11495,1,5,0)
prints the fields as they exist in Fileman NOT the way they are
"KRN",19,11495,1,6,0)
displayed in the patch report; the Display a Patch option now can be 
"KRN",19,11495,1,7,0)
used to display Under Development patches for which the user is a 
"KRN",19,11495,1,8,0)
package developer.
"KRN",19,11495,20)
W !!,"The Display a Patch option can now (DIP) print any patch this option can.",!
"KRN",19,11495,25)
8^A1AEPH2
"KRN",19,11495,99.1)
54368,48022
"KRN",19,11495,"U")
EXTENDED (DIQ) DISPLAY OF A PA
"KRN",19,11496,-1)
0^15
"KRN",19,11496,0)
A1AE PATCHDOC^Patch Options Documentation^^R^^^^^^^^
"KRN",19,11496,1,0)
^^2^2^2871112^^^
"KRN",19,11496,1,1,0)
This print option generates a report of all the options available
"KRN",19,11496,1,2,0)
for recording, printing and maintaining patch information.
"KRN",19,11496,25)
5^A1AEAU
"KRN",19,11496,"U")
PATCH OPTIONS DOCUMENTATION
"KRN",19,11497,-1)
0^54
"KRN",19,11497,0)
A1AE PRTUDVPH VER^Under Development Patches Report for Releasers^^R^^A1AE PHVER^^^^^^
"KRN",19,11497,1,0)
^^17^17^2920915^^^^
"KRN",19,11497,1,1,0)
This print option generates a report of 'under development' patches for a
"KRN",19,11497,1,2,0)
selected package and version. The user must be an authorized verifier of
"KRN",19,11497,1,3,0)
the package and must have the A1AE PHVER security key to have the option
"KRN",19,11497,1,4,0)
appear on the the support menu.
"KRN",19,11497,1,5,0)
 
"KRN",19,11497,1,6,0)
The user has the option of sorting the report by one of the following
"KRN",19,11497,1,7,0)
fields: Patch Designation, Category or Priority.
"KRN",19,11497,1,8,0)
 
"KRN",19,11497,1,9,0)
The report contains detailed information about each patch including the
"KRN",19,11497,1,10,0)
Patch Subject, Description, Category, Priority and Status. The report also
"KRN",19,11497,1,11,0)
contains information about users who have entered the patch and completed
"KRN",19,11497,1,12,0)
and/or verified the patch and routine information.
"KRN",19,11497,1,13,0)
 
"KRN",19,11497,1,14,0)
This option is the same as the A1AE PRTUDVPH option except that it requires
"KRN",19,11497,1,15,0)
the A1AE PHVER key. It should be used by the verifier to help the developer
"KRN",19,11497,1,16,0)
to avoid typos before the developer changes the status to
"KRN",19,11497,1,17,0)
'completed/unverified'.
"KRN",19,11497,25)
3^A1AEPH2
"KRN",19,11497,"U")
UNDER DEVELOPMENT PATCHES REPO
"KRN",19,11498,-1)
0^5
"KRN",19,11498,0)
A1AE COPY PATCH^Copy a patch into a new patch^^R^^^^^^^^
"KRN",19,11498,1,0)
^19.06^14^14^3030910^^^^
"KRN",19,11498,1,1,0)
This function permits authorized developers of a package to copy
"KRN",19,11498,1,2,0)
information from an existing patch into a new patch. The new patch
"KRN",19,11498,1,3,0)
which is added must be for the same package, but can be for a different
"KRN",19,11498,1,4,0)
version.
"KRN",19,11498,1,5,0)
 
"KRN",19,11498,1,6,0)
First you will be prompted for a patch to copy, then the version
"KRN",19,11498,1,7,0)
number of the new patch being created. The system assigns a patch
"KRN",19,11498,1,8,0)
designation to the new patch and you are asked if you want to add
"KRN",19,11498,1,9,0)
this patch. If you respond 'Yes' you will be prompted for the
"KRN",19,11498,1,10,0)
Subject of the new patch. The new patch is automatically assigned
"KRN",19,11498,1,11,0)
a status of Under Development and as always the user entering and 
"KRN",19,11498,1,12,0)
date entered is set by the system. The Priority, Category(s), Patch
"KRN",19,11498,1,13,0)
Description and all Routine information is copied over from the
"KRN",19,11498,1,14,0)
existing patch into the new patch.
"KRN",19,11498,25)
5^A1AEPH1
"KRN",19,11498,"U")
COPY A PATCH INTO A NEW PATCH
"KRN",19,11499,-1)
0^42
"KRN",19,11499,0)
A1AE PRTCOMPHDTE^Completed Patch Summary Report by Date^^P^^^^^^^^PATCH MODULE^y
"KRN",19,11499,1,0)
^^4^4^2860619^
"KRN",19,11499,1,1,0)
This print option generates a report of completed patches for a
"KRN",19,11499,1,2,0)
select package, or all selected packages for a specified date
"KRN",19,11499,1,3,0)
range. The report contains the Patch Designation, Subject, Date
"KRN",19,11499,1,4,0)
Completed, and Priority.
"KRN",19,11499,60)
A1AE(11005,
"KRN",19,11499,61)
1
"KRN",19,11499,62)
0
"KRN",19,11499,63)
[A1AE VERIFIED PATCH SUMMARY]
"KRN",19,11499,64)
[A1AE COM PATCH BY STRM BY DT]
"KRN",19,11499,68)
1
"KRN",19,11499,"U")
COMPLETED PATCH SUMMARY REPORT
"KRN",19,11500,-1)
0^9
"KRN",19,11500,0)
A1AE DISCOMPH^Display a Completed/NotReleased Patch^^R^^^^^^^^
"KRN",19,11500,1,0)
^^16^16^2981125^^^^
"KRN",19,11500,1,1,0)
This option permits display of a 'completed/unverified' patch.
"KRN",19,11500,1,2,0)
The user must be an authorized developer or verifier to use this
"KRN",19,11500,1,3,0)
option.
"KRN",19,11500,1,4,0)
 
"KRN",19,11500,1,5,0)
When looking for a patch, the values for the following fields can be
"KRN",19,11500,1,6,0)
entered as the look-up value:
"KRN",19,11500,1,7,0)
 
"KRN",19,11500,1,8,0)
   Patch Designation, Package, Patch Subject and Routine
"KRN",19,11500,1,9,0)
 
"KRN",19,11500,1,10,0)
There is also a key word in context cross-reference on the subject
"KRN",19,11500,1,11,0)
field that can be used.
"KRN",19,11500,1,12,0)
 
"KRN",19,11500,1,13,0)
The display contains the Patch Subject, Description, Category, Priority
"KRN",19,11500,1,14,0)
and Status. The display also contains information about the users
"KRN",19,11500,1,15,0)
who entered the patch and completed the patch. There is also a section
"KRN",19,11500,1,16,0)
for coding changes in the Routine Section of the display.
"KRN",19,11500,25)
4^A1AEPH2
"KRN",19,11500,"U")
DISPLAY A COMPLETED/NOTRELEASE
"KRN",19,11501,-1)
0^64
"KRN",19,11501,0)
A1AE VERIFIER^Releaser Menu^^M^^A1AE PHVER^^^^^^^y
"KRN",19,11501,1,0)
^19.06^3^3^3070327^^^^
"KRN",19,11501,1,1,0)
This menu provides the holder of the A1AE PHVER key with
"KRN",19,11501,1,2,0)
the options needed to verify, display and print Completed/
"KRN",19,11501,1,3,0)
unverified patches for packages which s/he is a verifier.
"KRN",19,11501,10,0)
^19.01IP^26^26
"KRN",19,11501,10,15,0)
11531
"KRN",19,11501,10,15,"^")
A1AE PKVER
"KRN",19,11501,10,16,0)
11522^CDE
"KRN",19,11501,10,16,"^")
A1AE COMPLIANCE EDIT
"KRN",19,11501,10,17,0)
11489
"KRN",19,11501,10,17,"^")
A1AE PHVER
"KRN",19,11501,10,18,0)
11524
"KRN",19,11501,10,18,"^")
A1AE ROUTINES THAT OVERLAP
"KRN",19,11501,10,19,0)
11500
"KRN",19,11501,10,19,"^")
A1AE DISCOMPH
"KRN",19,11501,10,20,0)
11473
"KRN",19,11501,10,20,"^")
A1AE PRTCOMPH
"KRN",19,11501,10,21,0)
11508
"KRN",19,11501,10,21,"^")
A1AE DEV FORWARD
"KRN",19,11501,10,22,0)
11510
"KRN",19,11501,10,22,"^")
A1AE PRTCOMPHVER
"KRN",19,11501,10,23,0)
11514^
"KRN",19,11501,10,23,"^")
A1AE COMPLIANCE DISPLAY
"KRN",19,11501,10,24,0)
11546
"KRN",19,11501,10,24,"^")
A1AE EXPORT PATCH TO HFS
"KRN",19,11501,10,25,0)
11513
"KRN",19,11501,10,25,"^")
A1AE COMPLIANCE COMMENT PRT
"KRN",19,11501,10,26,0)
11499
"KRN",19,11501,10,26,"^")
A1AE PRTCOMPHDTE
"KRN",19,11501,15)

"KRN",19,11501,20)

"KRN",19,11501,99)
63273,61526
"KRN",19,11501,99.1)
61412,81006
"KRN",19,11501,"U")
RELEASER MENU
"KRN",19,11502,-1)
0^44
"KRN",19,11502,0)
A1AE PRTCOMSUMDT^Released Patch Summary Report by Date^^R^^^XQUIT MESSAGE^^^^^
"KRN",19,11502,1,0)
^19.06^4^4^3020513^^^^
"KRN",19,11502,1,1,0)
This print option generates a report of 'verified' patches for a
"KRN",19,11502,1,2,0)
select package, or all selected packages for a specified date
"KRN",19,11502,1,3,0)
range. The report contains the Patch Designation, Subject, Date
"KRN",19,11502,1,4,0)
Completed, and Priority.
"KRN",19,11502,25)
9^A1AEPH2
"KRN",19,11502,"U")
RELEASED PATCH SUMMARY REPORT 
"KRN",19,11503,-1)
0^40
"KRN",19,11503,0)
A1AE PRTCOMDETDT^Released Patches by Date Detailed Report^^R^^^^^^^^
"KRN",19,11503,1,0)
^^8^8^2981203^^^^
"KRN",19,11503,1,1,0)
This print option generates a detailed report of 'verified' patches
"KRN",19,11503,1,2,0)
for a select package, or all selected packages for a specified date
"KRN",19,11503,1,3,0)
range. The report contains detailed information about each patch
"KRN",19,11503,1,4,0)
including the Patch Subject, Description, Category, Priority and
"KRN",19,11503,1,5,0)
Status. The report also contains information about the users who
"KRN",19,11503,1,6,0)
entered the patch, completed the patch and verified the patch. There
"KRN",19,11503,1,7,0)
is also a section for coding changes in the Routine Section of the
"KRN",19,11503,1,8,0)
report.
"KRN",19,11503,25)
10^A1AEPH2
"KRN",19,11503,"U")
RELEASED PATCHES BY DATE DETAI
"KRN",19,11504,-1)
0^37
"KRN",19,11504,0)
A1AE POST VERIFY^Actually Verify Patches Verified by Postmaster^^R^^^^^^^^
"KRN",19,11504,1,0)
^^7^7^2871112^^
"KRN",19,11504,1,1,0)
Using this option, authorized verifiers of a package can change
"KRN",19,11504,1,2,0)
the status of a patch 'verified' by the Postmaster to the status
"KRN",19,11504,1,3,0)
of 'verified' by the verifier. This function is needed for the
"KRN",19,11504,1,4,0)
changes implemented in Version 2.0 of the National Patch Module.
"KRN",19,11504,1,5,0)
It is a temporary option which will be removed once the conversion
"KRN",19,11504,1,6,0)
process is complete and all patches in the module have assigned
"KRN",19,11504,1,7,0)
to them a valid verifier.
"KRN",19,11504,25)
ENVER^A1AEUTL
"KRN",19,11504,"U")
ACTUALLY VERIFY PATCHES VERIFI
"KRN",19,11505,-1)
0^47
"KRN",19,11505,0)
A1AE PRTNEWPHNUM^Display Number of New Patches^^R^^^^^^^^
"KRN",19,11505,1,0)
^^8^8^2891006^^^^
"KRN",19,11505,1,1,0)
This option displays a summary of the number of new
"KRN",19,11505,1,2,0)
patches for your selected packages. This display includes
"KRN",19,11505,1,3,0)
the package name, number of new patches and date any
"KRN",19,11505,1,4,0)
patches were last printed for the package.
"KRN",19,11505,1,5,0)
 
"KRN",19,11505,1,6,0)
A patch is 'new' if it has not been printed by the user and
"KRN",19,11505,1,7,0)
it has a status of 'verified'. Once a 'new' patch has been
"KRN",19,11505,1,8,0)
printed it will no longer be counted on this summary display.
"KRN",19,11505,25)
DSPNEW^A1AEVP
"KRN",19,11505,"U")
DISPLAY NUMBER OF NEW PATCHES
"KRN",19,11506,-1)
0^6
"KRN",19,11506,0)
A1AE DEV CREATE^Create a packman message^^R^^^^^^^^
"KRN",19,11506,1,0)
^^2^2^2900429^
"KRN",19,11506,1,1,0)
This option allows a developer to create a input packman message
"KRN",19,11506,1,2,0)
from the local routine directory if the routines, version are present
"KRN",19,11506,20)

"KRN",19,11506,25)
6^A1AEPH1
"KRN",19,11506,"U")
CREATE A PACKMAN MESSAGE
"KRN",19,11507,-1)
0^10
"KRN",19,11507,0)
A1AE FORWARD^Forward a Released Patch message^^R^^^^^^^^
"KRN",19,11507,1,0)
^19.06^1^1^3100521^^^^
"KRN",19,11507,1,1,0)
This option allows a user to forward a verified patch message.
"KRN",19,11507,20)

"KRN",19,11507,25)
8^A1AEPH1
"KRN",19,11507,"U")
FORWARD A RELEASED PATCH MESSA
"KRN",19,11508,-1)
0^7
"KRN",19,11508,0)
A1AE DEV FORWARD^Forward a Completed/NotReleased Patch Message^^R^^^^^^^^
"KRN",19,11508,1,0)
^^2^2^2921215^^^^
"KRN",19,11508,1,1,0)
This allows a developer or verifier to forward a 'Complete/unverified'
"KRN",19,11508,1,2,0)
Patch Message.
"KRN",19,11508,20)

"KRN",19,11508,25)
7^A1AEPH1
"KRN",19,11508,99.1)
59793,42354
"KRN",19,11508,"U")
FORWARD A COMPLETED/NOTRELEASE
"KRN",19,11509,-1)
0^33
"KRN",19,11509,0)
A1AE PKGPRT^Set All patches for selected Packages as Printed^^R^^^^^^^^
"KRN",19,11509,1,0)
^^6^6^2900604^^
"KRN",19,11509,1,1,0)
This option allows a new user of the Patch Module to update the
"KRN",19,11509,1,2,0)
printed status of all patches for all selected packages.  This 
"KRN",19,11509,1,3,0)
option is used so that patches that were verified previous to 
"KRN",19,11509,1,4,0)
the selection of package by the user no longer appear on 'new'
"KRN",19,11509,1,5,0)
patch displays.  The patches may still be viewed and printed with
"KRN",19,11509,1,6,0)
other options.
"KRN",19,11509,25)
12^A1AEPH2
"KRN",19,11509,"U")
SET ALL PATCHES FOR SELECTED P
"KRN",19,11510,-1)
0^43
"KRN",19,11510,0)
A1AE PRTCOMPHVER^Completed Patch Summary for Assigned Packages^^R^^^^^^^^
"KRN",19,11510,1,0)
^^2^2^2900607^^
"KRN",19,11510,1,1,0)
This prints a summary report for all complete/unverified patches in
"KRN",19,11510,1,2,0)
all assigned Packages.
"KRN",19,11510,25)
13^A1AEPH2
"KRN",19,11510,"U")
COMPLETED PATCH SUMMARY FOR AS
"KRN",19,11511,-1)
0^60
"KRN",19,11511,0)
A1AE SERVER VERIFIED^Serve and preserve verified messages^^S^^^^^^^^^y
"KRN",19,11511,220)
^Q^^^Y^N^^^
"KRN",19,11511,"U")
SERVE AND PRESERVE VERIFIED ME
"KRN",19,11512,-1)
0^1
"KRN",19,11512,0)
A1AE AUTHORIZED DOMAINS^Authorized Domains^^E^^^^^^^^PATCH MODULE^n
"KRN",19,11512,1,0)
^^2^2^3060425^
"KRN",19,11512,1,1,0)
This option allow the editing of the Authorized Domains multipule in the 
"KRN",19,11512,1,2,0)
package file.
"KRN",19,11512,30)
DIC(9.4,
"KRN",19,11512,31)
AEMQ
"KRN",19,11512,50)
DIC(9.4,
"KRN",19,11512,51)
25
"KRN",19,11512,99.1)
60381,62941
"KRN",19,11512,"U")
AUTHORIZED DOMAINS
"KRN",19,11513,-1)
0^2
"KRN",19,11513,0)
A1AE COMPLIANCE COMMENT PRT^Compliance Date Print^^I^^A1AE COMPDATE^^^^^^PATCH MODULE
"KRN",19,11513,1,0)
^19.06^2^2^3070314^^^^
"KRN",19,11513,1,1,0)
The option is used to display the Compliance Date information including 
"KRN",19,11513,1,2,0)
any Compliance Date comments.
"KRN",19,11513,30)
A1AE(11005,
"KRN",19,11513,31)
AEMQ
"KRN",19,11513,63)
[A1AE PATCH COMPL/COMMENT RPT]
"KRN",19,11513,80)
A1AE(11005,
"KRN",19,11513,99.1)
60705,56451
"KRN",19,11513,"U")
COMPLIANCE DATE PRINT
"KRN",19,11514,-1)
0^3
"KRN",19,11514,0)
A1AE COMPLIANCE DISPLAY^Compliance Date Display^^P^^^^^^^^PATCH MODULE
"KRN",19,11514,1,0)
^19.06^3^3^3070327^^
"KRN",19,11514,1,1,0)
This report will display Compliance Date data sorted by date verified.  If
"KRN",19,11514,1,2,0)
the Compliance Date contains any text in the "Reason for Change: field 
"KRN",19,11514,1,3,0)
this data is also displayed.
"KRN",19,11514,60)
A1AE(11005,
"KRN",19,11514,62)
0
"KRN",19,11514,63)
[A1AE PATCH COMPL/COMMENT RPT]
"KRN",19,11514,64)
[A1AE PATCH COMPL/COMM SORT]
"KRN",19,11514,65)

"KRN",19,11514,66)

"KRN",19,11514,"U")
COMPLIANCE DATE DISPLAY
"KRN",19,11515,-1)
0^57
"KRN",19,11515,0)
A1AE ROUTINE INQUIRE^Routine Inquire^^I^^^^^^^^PATCH MODULE^y
"KRN",19,11515,1,0)
^^2^2^3060621^
"KRN",19,11515,1,1,0)
This option allows a inquire to the routine file to find out the current 
"KRN",19,11515,1,2,0)
and past checksums.
"KRN",19,11515,30)
DIC(9.8,
"KRN",19,11515,31)
AEMQ
"KRN",19,11515,63)
[A1AE RTN CHECKSUM]
"KRN",19,11515,70)
HOME
"KRN",19,11515,80)
DIC(9.8,
"KRN",19,11515,83)
Y
"KRN",19,11515,"U")
ROUTINE INQUIRE
"KRN",19,11516,-1)
0^62
"KRN",19,11516,0)
A1AE TEST SCANNER^Scan Patch for Discrepancies and Contents^^R^^A1AE SCAN MESSAGE^^^^^^PATCH MODULE
"KRN",19,11516,1,0)
^^2^2^2981021^
"KRN",19,11516,1,1,0)
Enables manual running of patch scanner (inventorier and checksum
"KRN",19,11516,1,2,0)
verifier), e.g. for testing prior to general release.
"KRN",19,11516,25)
A1AECOM
"KRN",19,11516,"U")
SCAN PATCH FOR DISCREPANCIES A
"KRN",19,11517,-1)
0^45
"KRN",19,11517,0)
A1AE PRTDETDT ORG^Detailed Report of Released Patches by Date^^R^^^^^^^^
"KRN",19,11517,1,0)
^^8^8^2981203^^^^
"KRN",19,11517,1,1,0)
This print option generates a detailed report of 'verified' patches
"KRN",19,11517,1,2,0)
for a select package, or all selected packages for a specified date
"KRN",19,11517,1,3,0)
range. The report contains detailed information about each patch
"KRN",19,11517,1,4,0)
including the Patch Subject, Description, Category, Priority and
"KRN",19,11517,1,5,0)
Status. The report also contains information about the users who
"KRN",19,11517,1,6,0)
entered the patch, completed the patch and verified the patch. There
"KRN",19,11517,1,7,0)
is also a section for coding changes in the Routine Section of the
"KRN",19,11517,1,8,0)
report.
"KRN",19,11517,25)
10^A1AEPH2
"KRN",19,11517,"U")
DETAILED REPORT OF RELEASED PA
"KRN",19,11518,-1)
0^38
"KRN",19,11518,0)
A1AE PRT SUM DT ORG^Released Patch Summary Report by Date^^R^^^^^^^^
"KRN",19,11518,1,0)
^^4^4^2981203^^^^
"KRN",19,11518,1,1,0)
This print option generates a report of 'verified' patches for a
"KRN",19,11518,1,2,0)
select package, or all selected packages for a specified date
"KRN",19,11518,1,3,0)
range. The report contains the Patch Designation, Subject, Date
"KRN",19,11518,1,4,0)
Completed, and Priority.
"KRN",19,11518,25)
9^A1AEPH2
"KRN",19,11518,"U")
RELEASED PATCH SUMMARY REPORT 
"KRN",19,11519,-1)
0^51
"KRN",19,11519,0)
A1AE PRTPHS ORG^Summary Report of All Patches for a Package^^R^^^^^^^^
"KRN",19,11519,1,0)
^19.06^4^4^3031020^^^^
"KRN",19,11519,1,1,0)
This option permits the user to display a summary report of
"KRN",19,11519,1,2,0)
all patches for a selected package and version.
"KRN",19,11519,1,3,0)
 
"KRN",19,11519,1,4,0)
The report contains the Patch Designation, Subject, Status, and Routines.
"KRN",19,11519,25)
5^A1AEPH2
"KRN",19,11519,99)
55480,45206
"KRN",19,11519,99.1)
55442,81811
"KRN",19,11519,"U")
SUMMARY REPORT OF ALL PATCHES 
"KRN",19,11520,-1)
0^11
"KRN",19,11520,0)
A1AE FULL SUMMARY BY DATE^Full Summary by Date for Every Package^^P^^^^^^^^
"KRN",19,11520,1,0)
^^3^3^3020513^
"KRN",19,11520,1,1,0)
This print option generates a report of 'verified' patches for all 
"KRN",19,11520,1,2,0)
packages, not just for users selected packages, for a specified date
"KRN",19,11520,1,3,0)
range. 
"KRN",19,11520,60)
A1AE(11005,
"KRN",19,11520,62)
0
"KRN",19,11520,63)
[A1AE FULL SUMMARY BY DATE]
"KRN",19,11520,64)
[A1AE FULL SUMARY SORT]
"KRN",19,11520,65)

"KRN",19,11520,66)

"KRN",19,11520,"U")
FULL SUMMARY BY DATE FOR EVERY
"KRN",19,11521,-1)
0^56
"KRN",19,11521,0)
A1AE RELEASE SUMMARY^Release Summary^^P^^^^^^^^PATCH MODULE
"KRN",19,11521,1,0)
^19.06^2^2^3031028^^^^
"KRN",19,11521,1,1,0)
For a selected date range, displays the patch, sequence, date of release,
"KRN",19,11521,1,2,0)
compliance date and status (mandatory, emergency).
"KRN",19,11521,60)
A1AE(11005.1,
"KRN",19,11521,62)
0
"KRN",19,11521,63)
[DBA PATCH RELEASE SUMMARY]
"KRN",19,11521,64)
[DBA PATCH RELEASE SUMMARY]
"KRN",19,11521,65)
?,
"KRN",19,11521,66)
?,
"KRN",19,11521,"U")
RELEASE SUMMARY
"KRN",19,11522,-1)
0^4
"KRN",19,11522,0)
A1AE COMPLIANCE EDIT^Compliance Date Edit^^E^^A1AE COMPDATE^^^^^^PATCH MODULE
"KRN",19,11522,1,0)
^19.06^2^2^3040928^^^^
"KRN",19,11522,1,1,0)
The option is used to edit the Compliance Date on already released 
"KRN",19,11522,1,2,0)
patches.
"KRN",19,11522,30)
A1AE(11005,
"KRN",19,11522,31)
AEMQ
"KRN",19,11522,50)
A1AE(11005,
"KRN",19,11522,51)
[A1AE COMP DATE]
"KRN",19,11522,99.1)
60235,29929
"KRN",19,11522,"U")
COMPLIANCE DATE EDIT
"KRN",19,11523,-1)
0^58
"KRN",19,11523,0)
A1AE ROUTINES IN A PATCH^Routines in a patch^^P^^^^^^^^
"KRN",19,11523,60)
A1AE(11005,
"KRN",19,11523,62)
0
"KRN",19,11523,63)
[ROUTINES IN A PATCH]
"KRN",19,11523,64)
[ROUTINES IN A PATCH]
"KRN",19,11523,65)

"KRN",19,11523,66)

"KRN",19,11523,99.1)
59947,60222
"KRN",19,11523,"U")
ROUTINES IN A PATCH
"KRN",19,11524,-1)
0^59
"KRN",19,11524,0)
A1AE ROUTINES THAT OVERLAP^Routines that overlap in patches^^R^^^^^^^^
"KRN",19,11524,1,0)
^^2^2^3050325^
"KRN",19,11524,1,1,0)
Given a selected patch that is entered or completed but not yet
"KRN",19,11524,1,2,0)
verified/released, routines that overlap with other patches are listed.
"KRN",19,11524,25)
A1AERCON
"KRN",19,11524,"U")
ROUTINES THAT OVERLAP IN PATCH
"KRN",19,11525,-1)
0^12
"KRN",19,11525,0)
A1AE HFS CHKSUM SVR^HFS CHECKSUM MSG SERVER^^S^^^^^^^^PATCH MODULE^y
"KRN",19,11525,1,0)
^19.06^2^2^3050801^^
"KRN",19,11525,1,1,0)
This option is the server to proccess HFS transport messages with the 
"KRN",19,11525,1,2,0)
Routine checksums.
"KRN",19,11525,25)
EN^A1AEHSVR
"KRN",19,11525,220)
^R^^N^Y^N^0^^7
"KRN",19,11525,"U")
HFS CHECKSUM MSG SERVER
"KRN",19,11526,-1)
0^52
"KRN",19,11526,0)
A1AE PRTUDP^Under Development Patch Listing^^R^^^^^^^^
"KRN",19,11526,1,0)
^^8^8^3060223^
"KRN",19,11526,1,1,0)
This option permits the user to display a 'UNDER DEVELOPMENT' patch for 
"KRN",19,11526,1,2,0)
any package in the patch file. 
"KRN",19,11526,1,3,0)
  
"KRN",19,11526,1,4,0)
If a patch has the status of 'under development' the display contains the
"KRN",19,11526,1,5,0)
Patch Subject, Description, Category, Priority and Status. The display
"KRN",19,11526,1,6,0)
also contains information about the users who entered the patch, completed
"KRN",19,11526,1,7,0)
the patch and verified the patch. There is also a section for coding
"KRN",19,11526,1,8,0)
changes in the Routine Section of the display.
"KRN",19,11526,25)
UD^A1AEPH2
"KRN",19,11526,"U")
UNDER DEVELOPMENT PATCH LISTIN
"KRN",19,11527,-1)
0^39
"KRN",19,11527,0)
A1AE PRTCNRP^Completed/Not Released Listing^^R^^^^^^^^
"KRN",19,11527,1,0)
^^8^8^3060223^
"KRN",19,11527,1,1,0)
This option permits the user to display a 'Completed/Not Released" patch 
"KRN",19,11527,1,2,0)
for any package in the patch file. 
"KRN",19,11527,1,3,0)
  
"KRN",19,11527,1,4,0)
If a patch has the status of 'Completed/Not Released' the display contains
"KRN",19,11527,1,5,0)
the Patch Subject, Description, Category, Priority and Status. The display
"KRN",19,11527,1,6,0)
also contains information about the users who entered the patch, completed
"KRN",19,11527,1,7,0)
the patch and verified the patch. There is also a section for coding
"KRN",19,11527,1,8,0)
changes in the Routine Section of the display.
"KRN",19,11527,25)
CNR^A1AEPH2
"KRN",19,11527,"U")
COMPLETED/NOT RELEASED LISTING
"KRN",19,11528,-1)
0^27
"KRN",19,11528,0)
A1AE PKADD^Add a Package Release^^R^^^^^^^^^y
"KRN",19,11528,25)
1^A1AEPK
"KRN",19,11528,"U")
ADD A PACKAGE RELEASE
"KRN",19,11529,-1)
0^28
"KRN",19,11529,0)
A1AE PKDEL^Delete a Package Release^^R^^^^^^^^^y
"KRN",19,11529,25)
2^A1AEPK
"KRN",19,11529,"U")
DELETE A PACKAGE RELEASE
"KRN",19,11530,-1)
0^29
"KRN",19,11530,0)
A1AE PKEDIT^Edit a Package Release^^R^^^^^^^^^y
"KRN",19,11530,25)
3^A1AEPK
"KRN",19,11530,"U")
EDIT A PACKAGE RELEASE
"KRN",19,11531,-1)
0^36
"KRN",19,11531,0)
A1AE PKVER^Package Release (and/or edit internal comments)^^R^^^^^^^^^y
"KRN",19,11531,25)
4^A1AEPK
"KRN",19,11531,"U")
PACKAGE RELEASE (AND/OR EDIT I
"KRN",19,11532,-1)
0^35
"KRN",19,11532,0)
A1AE PKMENU^Package Menu^^M^^^^^^^^^y
"KRN",19,11532,1,0)
^^2^2^3060418^
"KRN",19,11532,1,1,0)
This option holds the option for ADD, EDIT, DELETE and VERIFY a new 
"KRN",19,11532,1,2,0)
package.
"KRN",19,11532,10,0)
^19.01IP^4^4
"KRN",19,11532,10,1,0)
11528^^1
"KRN",19,11532,10,1,"^")
A1AE PKADD
"KRN",19,11532,10,2,0)
11530^^2
"KRN",19,11532,10,2,"^")
A1AE PKEDIT
"KRN",19,11532,10,3,0)
11529^^3
"KRN",19,11532,10,3,"^")
A1AE PKDEL
"KRN",19,11532,10,4,0)
11531^^4
"KRN",19,11532,10,4,"^")
A1AE PKVER
"KRN",19,11532,99)
63187,50318
"KRN",19,11532,"U")
PACKAGE MENU
"KRN",19,11545,-1)
0^66
"KRN",19,11545,0)
A1AE LOAD RELEASED PATCH^Load Released Patch into Patch Module^^S^^^^^^^^PATCH MODULE
"KRN",19,11545,1,0)
^19.06^3^3^3140305^^^^
"KRN",19,11545,1,1,0)
This is a server option (i.e. triggered by a mail message from Mailman) 
"KRN",19,11545,1,2,0)
to receive patches from VA Forum and automatically add them to this Forum 
"KRN",19,11545,1,3,0)
system into file 11005.
"KRN",19,11545,25)
EN^A1AEPSVR
"KRN",19,11545,220)
^R^^N^Y^N^0^^7
"KRN",19,11545,"U")
LOAD RELEASED PATCH INTO PATCH
"KRN",19,11546,-1)
0^67
"KRN",19,11546,0)
A1AE EXPORT PATCH TO HFS^Export Patch(es) to the Filesystem^^R^^^^^^^^PATCH MODULE^y
"KRN",19,11546,1,0)
^^4^4^3140307^
"KRN",19,11546,1,1,0)
Permits a user (given proper access to the patch(es)) to export patches 
"KRN",19,11546,1,2,0)
to the file system. If more than one patch is selected, a Multibuild is 
"KRN",19,11546,1,3,0)
created in the exact same style that the Transport a Distribution option 
"KRN",19,11546,1,4,0)
in KIDS performs that operation.
"KRN",19,11546,25)
A1AEM2K
"KRN",19,11546,"U")
EXPORT PATCH(ES) TO THE FILESY
"KRN",19,11547,-1)
0^68
"KRN",19,11547,0)
A1AE IMPORT MENU^Patch Import from Filesystem Menu^^M^^A1AE IMPORT^^^^^^^y
"KRN",19,11547,1,0)
^^2^2^3140324^
"KRN",19,11547,1,1,0)
This menu contains all options having to deal with importing patches 
"KRN",19,11547,1,2,0)
from the file system.
"KRN",19,11547,10,0)
^19.01IP^2^2
"KRN",19,11547,10,1,0)
11548^S^1
"KRN",19,11547,10,1,"^")
A1AE IMPORT SINGLE DIR
"KRN",19,11547,10,2,0)
11549^M^2
"KRN",19,11547,10,2,"^")
A1AE IMPORT RECURSIVE
"KRN",19,11547,99)
63270,46573
"KRN",19,11547,"U")
PATCH IMPORT FROM FILESYSTEM M
"KRN",19,11548,-1)
0^70
"KRN",19,11548,0)
A1AE IMPORT SINGLE DIR^Import Patches in a Single Directory^^R^^A1AE IMPORT^^^^^^^y
"KRN",19,11548,1,0)
^^1^1^3140324^
"KRN",19,11548,1,1,0)
Use this option to import patches (.TXT files) from a single directory.
"KRN",19,11548,25)
SD^A1AEK2M
"KRN",19,11548,"U")
IMPORT PATCHES IN A SINGLE DIR
"KRN",19,11549,-1)
0^69
"KRN",19,11549,0)
A1AE IMPORT RECURSIVE^Import Patches recursive from a Directory Tree^^R^^A1AE IMPORT^^^^^^^y
"KRN",19,11549,1,0)
^^2^2^3140324^
"KRN",19,11549,1,1,0)
This option allows you to load .TXT files for patches no matter where 
"KRN",19,11549,1,2,0)
they are located as long as you specify a parent directory to start from.
"KRN",19,11549,25)
RECURSE^A1AEK2M
"KRN",19,11549,"U")
IMPORT PATCHES RECURSIVE FROM 
"KRN",19,11551,-1)
0^71
"KRN",19,11551,0)
A1AE SHOW PATCH RELATIONSHIPS^Show a Patch's Relationships^^I^^^^^^^^^y
"KRN",19,11551,1,0)
^^2^2^3140327^
"KRN",19,11551,1,1,0)
This inquire type option shows the deriviation source of a patch and 
"KRN",19,11551,1,2,0)
shows patch dependencies.
"KRN",19,11551,30)
A1AE(11005,
"KRN",19,11551,31)
AEMQ
"KRN",19,11551,63)
[A1AE PATCH RELATIONSHIPS]
"KRN",19,11551,70)
HOME
"KRN",19,11551,80)
A1AE(11005,
"KRN",19,11551,83)
Y
"KRN",19,11551,"U")
SHOW A PATCH'S RELATIONSHIPS
"KRN",19,11552,-1)
0^73
"KRN",19,11552,0)
A1AE PRTPHS SEC^Summary Report of All Patches for a Package (Sec)^^R^^^^^^^^PATCH MODULE^y
"KRN",19,11552,1,0)
^^2^2^3140328^
"KRN",19,11552,1,1,0)
This is the same as the original summary report, but it allows you to 
"KRN",19,11552,1,2,0)
select secondary statuses.
"KRN",19,11552,25)
SEC^A1AEPH2
"KRN",19,11552,"U")
SUMMARY REPORT OF ALL PATCHES 
"KRN",19,11553,-1)
0^74
"KRN",19,11553,0)
A1AE SEC REPORTS^Secondard Statuses Reports^^M^^^^^^^^^y
"KRN",19,11553,10,0)
^19.01IP^3^3
"KRN",19,11553,10,1,0)
11552
"KRN",19,11553,10,1,"^")
A1AE PRTPHS SEC
"KRN",19,11553,10,2,0)
11554
"KRN",19,11553,10,2,"^")
A1AE PRT BY SEC ST BY DATE SUM
"KRN",19,11553,10,3,0)
11555
"KRN",19,11553,10,3,"^")
A1AE PRTPHA SEC
"KRN",19,11553,99)
63274,53495
"KRN",19,11553,"U")
SECONDARD STATUSES REPORTS
"KRN",19,11554,-1)
0^72
"KRN",19,11554,0)
A1AE PRT BY SEC ST BY DATE SUM^Patches in a single Secondary Status by Date^^R^^^^^^^^PATCH MODULE^y
"KRN",19,11554,1,0)
^^3^3^3140328^
"KRN",19,11554,1,1,0)
Print a summary of patches in a selected secondary status by the date of 
"KRN",19,11554,1,2,0)
that status. Please note that if there is no date associated with the 
"KRN",19,11554,1,3,0)
status, nothing will print.
"KRN",19,11554,25)
SECDT^A1AEPH2
"KRN",19,11554,"U")
PATCHES IN A SINGLE SECONDARY 
"KRN",19,11555,-1)
0^75
"KRN",19,11555,0)
A1AE PRTPHA SEC^All Patches for a Package in a Sec Status, Detail^^R^^^^^^^^^y
"KRN",19,11555,1,0)
^^3^3^3140328^
"KRN",19,11555,1,1,0)
This report will print the full patch descriptions for all patches in a 
"KRN",19,11555,1,2,0)
selected package/version combo. You must be a user of this package to be 
"KRN",19,11555,1,3,0)
able to select the package for the report.
"KRN",19,11555,25)
SECDET^A1AEPH2
"KRN",19,11555,"U")
ALL PATCHES FOR A PACKAGE IN A
"KRN",19,11557,-1)
1^20
"KRN",19,11557,0)
A1AE PBPRT
"KRN",19.1,560,-1)
0^4
"KRN",19.1,560,0)
A1AE PHVER
"KRN",19.1,560,1,0)
^19.11^3^3^3070731^^^^
"KRN",19.1,560,1,1,0)
The package support person who is allowed to verify patches, needs
"KRN",19.1,560,1,2,0)
this this key in order to have the option show up on the support
"KRN",19.1,560,1,3,0)
menu.
"KRN",19.1,560,1,4,0)
 
"KRN",19.1,560,1,5,0)
This keys also allows the 'Under Development Patch Report for Verifiers'
"KRN",19.1,560,1,6,0)
option to appear as part of the 'Support Menu'.
"KRN",19.1,560,2,0)
^19.12PA^^
"KRN",19.1,561,-1)
0^2
"KRN",19.1,561,0)
A1AE DEVELOPER
"KRN",19.1,561,1,0)
1
"KRN",19.1,561,1,1,0)
This key gives the user access to the developer's menu.
"KRN",19.1,561,2,0)
^19.12PA^^
"KRN",19.1,562,-1)
0^7
"KRN",19.1,562,0)
A1AE SUPPORT
"KRN",19.1,562,1,0)
^19.11^1^1^3070731^^^^
"KRN",19.1,562,1,1,0)
This key gives the user access the the support personnel menu.
"KRN",19.1,562,2,0)
^19.12PA^^
"KRN",19.1,563,-1)
0^8
"KRN",19.1,563,0)
A1AE XUSEC
"KRN",19.1,563,2,0)
^19.12PA^^
"KRN",19.1,564,-1)
0^3
"KRN",19.1,564,0)
A1AE MGR
"KRN",19.1,564,1,0)
^19.11^1^1^3081014^^^^
"KRN",19.1,564,1,1,0)
This key gives the user access to the 'Patch Module Management' option.
"KRN",19.1,564,3,0)
^19.13P
"KRN",19.1,565,-1)
0^5
"KRN",19.1,565,0)
A1AE PKGEDIT
"KRN",19.1,566,-1)
0^6
"KRN",19.1,566,0)
A1AE SCAN MESSAGE^Enables option to A1AECOM
"KRN",19.1,566,1,0)
^^2^2^2981021^
"KRN",19.1,566,1,1,0)
This key is for those testing the A1AE*2.2*7 patch's inventorier and
"KRN",19.1,566,1,2,0)
checksum verifier.
"KRN",19.1,567,-1)
0^1
"KRN",19.1,567,0)
A1AE COMPDATE
"KRN",19.1,567,1,0)
^19.11^3^3^3090429^^^^
"KRN",19.1,567,1,1,0)
The NVS Managers will hold this key to change a patch compliance date. 
"KRN",19.1,567,1,2,0)
They will need this this key in order to have the option show up on the
"KRN",19.1,567,1,3,0)
Releaser menu.
"KRN",19.1,568,-1)
0^9
"KRN",19.1,568,0)
A1AE IMPORT^Patch import capability key
"KRN",19.1,568,1,0)
^^5^5^3140306^
"KRN",19.1,568,1,1,0)
The patch module checks this key to see if a user is allowed to load
"KRN",19.1,568,1,2,0)
an entire patch directly into the patch module automatically.
"KRN",19.1,568,1,3,0)
 
"KRN",19.1,568,1,4,0)
Patches can be loaded from the file system or sent as a mail message
"KRN",19.1,568,1,5,0)
from the VA Forum.
"MBREQ")
0
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",221,-1)
1^1
"PKG",221,0)
PATCH MODULE^A1AE^Record Patches for packages in Patch (/Problem) Package file
"PKG",221,1,0)
^9.41A^6^6^3100111^^^^
"PKG",221,1,1,0)
This package keeps track of patches for any package which is in the Patch/
"PKG",221,1,2,0)
Problem Package file(#11007). Authorized package developers enter the
"PKG",221,1,3,0)
patches, and patch users may select which packages they want to view
"PKG",221,1,4,0)
patches for. When patches reach various development statuses bulletins
"PKG",221,1,5,0)
are sent notifying selected users. The patches are stored in the Patch
"PKG",221,1,6,0)
file(#11005).
"PKG",221,5)
OAKLAND
"PKG",221,7)
^^I
"PKG",221,22,0)
^9.49I^1^1
"PKG",221,22,1,0)
2.4^3141024
"PKG",221,22,1,1,0)
^^2^2^3141024
"PKG",221,22,1,1,1,0)
The PATCH Module from FORUM.VA.GOV modified to handle OSEHRA Community 
"PKG",221,22,1,1,2,0)
requirements.
"PKG",221,"DEV")
FORT/OAKLAND OIFO
"PKG",221,"VERSION")
2.4
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
52
"RTN","A1AE2POS")
0^^B73064560
"RTN","A1AE2POS",1,0)
A1AE2POS ;VEN/LGC - POST INSTALLS FOR A1AE PKG ; 10/23/14 3:10am
"RTN","A1AE2POS",2,0)
 ;;2.4;PATCH MODULE;;AUG 26, 2014;Build 14
"RTN","A1AE2POS",3,0)
 ;
"RTN","A1AE2POS",4,0)
 ; CHANGE: (VEN/LGC) 8/27/2014
"RTN","A1AE2POS",5,0)
 ;        Brought Post Install A1AEPST for DHCP PATCH STREAM
"RTN","A1AE2POS",6,0)
 ;        [#11007.1] to build the PAT multiple in the 
"RTN","A1AE2POS",7,0)
 ;        BUILD [#9.6] and INSTALL [#9.7] over from 
"RTN","A1AE2POS",8,0)
 ;        A1AEUTL with decision to keep post installs
"RTN","A1AE2POS",9,0)
 ;        in the A1AE2POS routine
"RTN","A1AE2POS",10,0)
 ;
"RTN","A1AE2POS",11,0)
 ; CHANGE: (VEN/LGC) 10/14/2014
"RTN","A1AE2POS",12,0)
 ;        Additional code to check for existence
"RTN","A1AE2POS",13,0)
 ;        of DHCP PATCH STREAM [#11007.1] file
"RTN","A1AE2POS",14,0)
 ;        and expected entries.
"RTN","A1AE2POS",15,0)
 ;
"RTN","A1AE2POS",16,0)
 ; CHANGE: (VEN/LGC) 10/15/2014  A1AEP0
"RTN","A1AE2POS",17,0)
 ;        Additional code to kill all entries in
"RTN","A1AE2POS",18,0)
 ;        file 11007.1 and re-build with correct
"RTN","A1AE2POS",19,0)
 ;        FOIA VISTA and OSEHRA VISTA entries
"RTN","A1AE2POS",20,0)
 ;
"RTN","A1AE2POS",21,0)
 ; POST INSTALL entry A1AEP0
"RTN","A1AE2POS",22,0)
 ;                Delete any entries in DHCP PATCH STREAM
"RTN","A1AE2POS",23,0)
 ;                [#11007.1] file and rebuild with correctlyFOIA VISTA
"RTN","A1AE2POS",24,0)
 ;                entered FOIA VISTA and OSEHRA VISTA.
"RTN","A1AE2POS",25,0)
 ;
"RTN","A1AE2POS",26,0)
 ;
"RTN","A1AE2POS",27,0)
 ; POST INSTALL entry A1AEP1
"RTN","A1AE2POS",28,0)
 ;                Following DHCP PATCH STREAM [#11007.1] KIDS
"RTN","A1AE2POS",29,0)
 ;                install, Set all PRIMARY? to NO, then
"RTN","A1AE2POS",30,0)
 ;                correct one to yes if FORUM site.  Set
"RTN","A1AE2POS",31,0)
 ;                all SUBSCRIPTION to No, then set FOIA VISTA
"RTN","A1AE2POS",32,0)
 ;                to YES.  Then ask installer whether they
"RTN","A1AE2POS",33,0)
 ;                wish to change their site's SUBSCRIPTION.
"RTN","A1AE2POS",34,0)
 ;
"RTN","A1AE2POS",35,0)
 ; POST INSTALL entry A1AEP2
"RTN","A1AE2POS",36,0)
 ;                Following update/install of [#11005]
"RTN","A1AE2POS",37,0)
 ;                DHCP PATCHES file this updates the
"RTN","A1AE2POS",38,0)
 ;                PAT multiples in BUILD [#9.6] and
"RTN","A1AE2POS",39,0)
 ;                INSTALL [#9.7] files
"RTN","A1AE2POS",40,0)
 ;
"RTN","A1AE2POS",41,0)
 ;
"RTN","A1AE2POS",42,0)
 ;
"RTN","A1AE2POS",43,0)
 ; POST INSTALL - Following DHCP PATCH STREAM [#11007.1] KIDS
"RTN","A1AE2POS",44,0)
 ;                install, Set all PRIMARY? to NO, then
"RTN","A1AE2POS",45,0)
 ;                correct one to yes if FORUM site.  Set
"RTN","A1AE2POS",46,0)
 ;                all SUBSCRIPTION to No, then set FOIA VISTA
"RTN","A1AE2POS",47,0)
 ;                to YES.  Then ask installer whether they
"RTN","A1AE2POS",48,0)
 ;                wish to change their site's SUBSCRIPTION.
"RTN","A1AE2POS",49,0)
 ;
"RTN","A1AE2POS",50,0)
A1AEP1 ;
"RTN","A1AE2POS",51,0)
 I '$D(^A1AE(11007.1)) D  Q
"RTN","A1AE2POS",52,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",53,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] not installed")
"RTN","A1AE2POS",54,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",55,0)
 ;
"RTN","A1AE2POS",56,0)
 ; Kill any existing entries and rebuild
"RTN","A1AE2POS",57,0)
 ;
"RTN","A1AE2POS",58,0)
 I '$$CLRFILE D  Q
"RTN","A1AE2POS",59,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",60,0)
 . D MES^XPDUTL("Unable to clear DHCP PATCH STREAM [#11007.1]")
"RTN","A1AE2POS",61,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",62,0)
 ;
"RTN","A1AE2POS",63,0)
 I '$$LOADFILE D  Q
"RTN","A1AE2POS",64,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",65,0)
 . D MES^XPDUTL("Unable to build DHCP PATCH STREAM [#11007.1]")
"RTN","A1AE2POS",66,0)
 . D MES^XPDUTL(" with FOIA VISTA and OSEHRA VISTA entries.")
"RTN","A1AE2POS",67,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",68,0)
 ;
"RTN","A1AE2POS",69,0)
A1AEP1R ;
"RTN","A1AE2POS",70,0)
 I $$GET1^DIQ(11007.1,1,.01)'="FOIA VISTA" D  Q
"RTN","A1AE2POS",71,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",72,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] is incomplete")
"RTN","A1AE2POS",73,0)
 . D MES^XPDUTL(" Missing FOIA VISTA entry.")
"RTN","A1AE2POS",74,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",75,0)
 ;
"RTN","A1AE2POS",76,0)
 I $$GET1^DIQ(11007.1,10001,.01)'="OSEHRA VISTA" D  Q
"RTN","A1AE2POS",77,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",78,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] is incomplete")
"RTN","A1AE2POS",79,0)
 . D MES^XPDUTL(" Missing OSEHRA VISTA entry.")
"RTN","A1AE2POS",80,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",81,0)
 ;
"RTN","A1AE2POS",82,0)
 I $$GET1^DIQ(11007.1,1,.001)'=1 D  Q
"RTN","A1AE2POS",83,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",84,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] is CORRUPTED")
"RTN","A1AE2POS",85,0)
 . D MES^XPDUTL(" FOIA VISTA entry .001 not 1.")
"RTN","A1AE2POS",86,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",87,0)
 ;
"RTN","A1AE2POS",88,0)
 I $$GET1^DIQ(11007.1,10001,.001)'=10001 D  Q
"RTN","A1AE2POS",89,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",90,0)
 . D MES^XPDUTL("DHCP PATCH STREAM [#11007.1] is CORRUPTED")
"RTN","A1AE2POS",91,0)
 . D MES^XPDUTL(" OSEHRA VISTA entry .001 not 10001")
"RTN","A1AE2POS",92,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",93,0)
 ;
"RTN","A1AE2POS",94,0)
 If $G(^DD(9.6,19,0))'["PATCH^9.619PA^^PAT;0" D  Q
"RTN","A1AE2POS",95,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",96,0)
 . D MES^XPDUTL("PATCH multiple [#19] not found in BUILD file")
"RTN","A1AE2POS",97,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",98,0)
 ;
"RTN","A1AE2POS",99,0)
 I $G(^DD(9.7,19,0))'["PATCH^9.719PA^^PAT;0" D  Q
"RTN","A1AE2POS",100,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",101,0)
 . D MES^XPDUTL("PATCH multiple [#19] not found in INSTALL file")
"RTN","A1AE2POS",102,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",103,0)
 ;
"RTN","A1AE2POS",104,0)
 I '$D(^DD(11005,0)) D  Q
"RTN","A1AE2POS",105,0)
 . D BMES^XPDUTL(2)
"RTN","A1AE2POS",106,0)
 . D MES^XPDUTL("Do not find DD for DHCP PATCHES [#11005] file")
"RTN","A1AE2POS",107,0)
 . D MES^XPDUTL(" Post Install cannot continue.")
"RTN","A1AE2POS",108,0)
 ;
"RTN","A1AE2POS",109,0)
 ; Set all PRIMARY? [#.02] in 11007.1 to 0 [NO]
"RTN","A1AE2POS",110,0)
 D A1AEP1A
"RTN","A1AE2POS",111,0)
 ;
"RTN","A1AE2POS",112,0)
 ; Set PRIMARY? to YES if the FORUM DOMAIN [#.07] entry
"RTN","A1AE2POS",113,0)
 ;    for this DHCP PATCH STREAM entry matches the 
"RTN","A1AE2POS",114,0)
 ;    NAME of the first entry in the MAILMAN PARAMTERS
"RTN","A1AE2POS",115,0)
 ;    [#4.3] file.
"RTN","A1AE2POS",116,0)
 D A1AEP1B
"RTN","A1AE2POS",117,0)
 ;
"RTN","A1AE2POS",118,0)
 ; Set SUBSCRIPTION [#.06] in 11007.1 to 0 for
"RTN","A1AE2POS",119,0)
 ;    every site. Then set FOIA VISTA SUBSCRIPTION to 1
"RTN","A1AE2POS",120,0)
 D A1AEP1C
"RTN","A1AE2POS",121,0)
 ;
"RTN","A1AE2POS",122,0)
 ; Finally display SUBSCRIPTION to installer and ask if they
"RTN","A1AE2POS",123,0)
 ;    wish to switch to another PATCH SEQUENCE.
"RTN","A1AE2POS",124,0)
 D A1AEP1D
"RTN","A1AE2POS",125,0)
A1AEP1E Q
"RTN","A1AE2POS",126,0)
 ;
"RTN","A1AE2POS",127,0)
 ; Set all PRIMARY? [#.02] in 11007.1 to 0 [NO]
"RTN","A1AE2POS",128,0)
 ; WAS A1AEP0
"RTN","A1AE2POS",129,0)
A1AEP1A N DIK,DA
"RTN","A1AE2POS",130,0)
 S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AE2POS",131,0)
 D ENALL2^DIK
"RTN","A1AE2POS",132,0)
 N A1AEI
"RTN","A1AE2POS",133,0)
 F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AE2POS",134,0)
 . S $P(^A1AE(11007.1,A1AEI,0),U,2)=0
"RTN","A1AE2POS",135,0)
 D ENALL^DIK
"RTN","A1AE2POS",136,0)
 Q
"RTN","A1AE2POS",137,0)
 ;
"RTN","A1AE2POS",138,0)
 ;
"RTN","A1AE2POS",139,0)
 ; Now Set PRIMARY? to YES if the FORUM DOMAIN [#.07] entry
"RTN","A1AE2POS",140,0)
 ;    for this DHCP PATCH STREAM entry matches the 
"RTN","A1AE2POS",141,0)
 ;    NAME of the first entry in the MAILMAN PARAMTERS
"RTN","A1AE2POS",142,0)
 ;    [#4.3] file.
"RTN","A1AE2POS",143,0)
 ; WAS A1AESP
"RTN","A1AE2POS",144,0)
A1AEP1B F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AE2POS",145,0)
 .  I $O(^A1AE(11007.1,"AFORUM",""))=$$GET1^DIQ(4.3,"1,",.01) D
"RTN","A1AE2POS",146,0)
 .. N A1AEFDA,DIERR
"RTN","A1AE2POS",147,0)
 .. S A1AEFDA(3,11007.1,A1AEI_",",.02)=1
"RTN","A1AE2POS",148,0)
 .. D UPDATE^DIE("","A1AEFDA(3)")
"RTN","A1AE2POS",149,0)
 Q
"RTN","A1AE2POS",150,0)
 ;
"RTN","A1AE2POS",151,0)
 ;
"RTN","A1AE2POS",152,0)
 ; Set SUBSCRIPTION [#.06] in 11007.1 to 0 for
"RTN","A1AE2POS",153,0)
 ;    every site. Then set FOIA VISTA SUBSCRIPTION to 1
"RTN","A1AE2POS",154,0)
 ; WAS A1AES0    
"RTN","A1AE2POS",155,0)
A1AEP1C N DIK,DA
"RTN","A1AE2POS",156,0)
 S DIK(1)=".06",DIK="^A1AE(11007.1,"
"RTN","A1AE2POS",157,0)
 D ENALL2^DIK
"RTN","A1AE2POS",158,0)
 N A1AEI
"RTN","A1AE2POS",159,0)
 F A1AEI=0:0 S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AE2POS",160,0)
 . S $P(^A1AE(11007.1,A1AEI,0),U,6)=0
"RTN","A1AE2POS",161,0)
 S A1AEI=$O(^A1AE(11007.1,"B","FOIA VISTA",0))
"RTN","A1AE2POS",162,0)
 S:A1AEI $P(^A1AE(11007.1,A1AEI,0),U,6)=1
"RTN","A1AE2POS",163,0)
 D ENALL^DIK
"RTN","A1AE2POS",164,0)
 Q
"RTN","A1AE2POS",165,0)
 ;
"RTN","A1AE2POS",166,0)
 ; Now display SUBSCRIPTION to installer and ask if they
"RTN","A1AE2POS",167,0)
 ;    wish to switch to another PATCH SEQUENCE.
"RTN","A1AE2POS",168,0)
A1AEP1D ; WAS A1AEASK
"RTN","A1AE2POS",169,0)
 D BMES^XPDUTL(2)
"RTN","A1AE2POS",170,0)
 D MES^XPDUTL("Your Patch Stream SUBSCRIPTION is currently")
"RTN","A1AE2POS",171,0)
 D MES^XPDUTL(" set to FOIA VISTA.")
"RTN","A1AE2POS",172,0)
 D BMES^XPDUTL(1)
"RTN","A1AE2POS",173,0)
 D MES^XPDUTL("There is an option A1AE CHANGE SITE SUBSCRIPTION")
"RTN","A1AE2POS",174,0)
 D MES^XPDUTL(" which will let you move your Site to")
"RTN","A1AE2POS",175,0)
 D MES^XPDUTL(" another SUBSCRIPTION in the future")
"RTN","A1AE2POS",176,0)
 D MES^XPDUTL("HOWEVER you may change your SUBSCRIPTION now.")
"RTN","A1AE2POS",177,0)
 D BMES^XPDUTL(1)
"RTN","A1AE2POS",178,0)
 D MES^XPDUTL("Would you like to change your SUBSCRIPTION now?")
"RTN","A1AE2POS",179,0)
 N DIR,Y
"RTN","A1AE2POS",180,0)
 S DIR("A")="    ? ",DIR(0)="Y",DIR("B")="NO"
"RTN","A1AE2POS",181,0)
 D ^DIR
"RTN","A1AE2POS",182,0)
 I 'Y D  G A1AEEXPS
"RTN","A1AE2POS",183,0)
 .  D MES^XPDUTL("OK.  Will not change SUBSCRIPTION now") Q
"RTN","A1AE2POS",184,0)
 ;
"RTN","A1AE2POS",185,0)
 D MES^XPDUTL("YES.  Change SUBSCRIPTION now.")
"RTN","A1AE2POS",186,0)
 ;
"RTN","A1AE2POS",187,0)
 ; Give list of choices (1 and 10001 are only choices now)
"RTN","A1AE2POS",188,0)
 ; Drop them into EDIT of that entry.  Force SUBSCRIPTION
"RTN","A1AE2POS",189,0)
 ;  to 1?  This fills in SUBSCRIPTION DATE and OFFICAL
"RTN","A1AE2POS",190,0)
 ;  then hand them off to fill in comments
"RTN","A1AE2POS",191,0)
 K DIR S DIR(0)="P^11007.1" D ^DIR
"RTN","A1AE2POS",192,0)
 I 'Y D  G A1AEEXPS
"RTN","A1AE2POS",193,0)
 . D BMES^XPDUTL(1)
"RTN","A1AE2POS",194,0)
 . D MES^XPDUTL("No SUBSCRIPTION selected")
"RTN","A1AE2POS",195,0)
 . D MES^XPDUTL("  The SUBSCRIPTION may be changed at any time using")
"RTN","A1AE2POS",196,0)
 . D MES^XPDUTL("  the Option A1AE CHANGE SITE SUBSCRIPTION.")
"RTN","A1AE2POS",197,0)
 ;
"RTN","A1AE2POS",198,0)
 ; OK Y=DA for entry allow them to edit.  How to use DIE
"RTN","A1AE2POS",199,0)
 ;   call and A1AE CHANGE SITE SUBSCRIPTION?
"RTN","A1AE2POS",200,0)
 N DIE,DR
"RTN","A1AE2POS",201,0)
 S DA=+Y
"RTN","A1AE2POS",202,0)
 S DIE="^A1AE(11007.1,",DR="[A1AE CHANGE SITE SUBSCRIPTION]"
"RTN","A1AE2POS",203,0)
 D ^DIE
"RTN","A1AE2POS",204,0)
 ;
"RTN","A1AE2POS",205,0)
A1AEEXPS Q
"RTN","A1AE2POS",206,0)
 ;
"RTN","A1AE2POS",207,0)
 ;
"RTN","A1AE2POS",208,0)
 ;
"RTN","A1AE2POS",209,0)
 ; POST INSTALL - Following update/install of [#11005]
"RTN","A1AE2POS",210,0)
 ;                DHCP PATCHES file this updates the
"RTN","A1AE2POS",211,0)
 ;                PAT multiples in BUILD [#9.6] and
"RTN","A1AE2POS",212,0)
 ;                INSTALL [#9.7] files
"RTN","A1AE2POS",213,0)
 ; LOGIC
"RTN","A1AE2POS",214,0)
 ; Run down the BUILD [#9.6] file 
"RTN","A1AE2POS",215,0)
 ;   Save the PATCH DESIGNATION in the PMARR array
"RTN","A1AE2POS",216,0)
 ;     If there is an entry in the DHCP PATCHES [#11005]
"RTN","A1AE2POS",217,0)
 ;     file, add this pointer to the PAT multiple
"RTN","A1AE2POS",218,0)
 ;     in the BUILD entry and the corresponding INSTALL entry
"RTN","A1AE2POS",219,0)
 ;   Check for MULTIPLE BUILD entries in the BUILD 
"RTN","A1AE2POS",220,0)
 ;   Check recursively for MULTIPLE BUILDs in these
"RTN","A1AE2POS",221,0)
 ;   Update the BUILD PAT multiple with any DHCP PATCHES
"RTN","A1AE2POS",222,0)
 ;     entries found matching
"RTN","A1AE2POS",223,0)
 ;  
"RTN","A1AE2POS",224,0)
A1AEP2 N BN,KIEN,MIEN,PM S KIEN=0
"RTN","A1AE2POS",225,0)
 K BMARR
"RTN","A1AE2POS",226,0)
 F  S KIEN=$O(^XPD(9.6,KIEN)) Q:'KIEN  D
"RTN","A1AE2POS",227,0)
 .  S BN=$P($G(^XPD(9.6,KIEN,0)),"^")
"RTN","A1AE2POS",228,0)
 .  K BMARR D A1AEP2A(BN,.BMARR,KIEN)
"RTN","A1AE2POS",229,0)
 Q
"RTN","A1AE2POS",230,0)
 ; BMARR array contains BUILD NAME (NAME [#.01])
"RTN","A1AE2POS",231,0)
 ;  of this entry in 9.6 AND of any MULTIPLE BUILD
"RTN","A1AE2POS",232,0)
 ;  descendants
"RTN","A1AE2POS",233,0)
 ; As each descendant is identified, check to see if
"RTN","A1AE2POS",234,0)
 ;  there is a matching name in DHCP PATCHES 
"RTN","A1AE2POS",235,0)
 ;  If so, add to PAT multiple for parent (KIEN)
"RTN","A1AE2POS",236,0)
A1AEP2A(BUILD,BMARR,KIEN) ;
"RTN","A1AE2POS",237,0)
 N BIEN S BIEN=$O(^XPD(9.6,"B",BUILD,0)) ; do we have an IEN?
"RTN","A1AE2POS",238,0)
 Q:'BIEN  ; skip if no record
"RTN","A1AE2POS",239,0)
 S BMARR(BUILD)="" ; add to requiremenents
"RTN","A1AE2POS",240,0)
 D A1AEP2B(BUILD,KIEN) ; add to PAT multipe of primary entry
"RTN","A1AE2POS",241,0)
 N BLDNM S BLDNM=""
"RTN","A1AE2POS",242,0)
 F  S BLDNM=$O(^XPD(9.6,BIEN,10,"B",BLDNM)) Q:BLDNM=""  D
"RTN","A1AE2POS",243,0)
 . Q:$D(BMARR(BLDNM))  ; no need to continue if already have
"RTN","A1AE2POS",244,0)
 . D A1AEP2A(BLDNM,.BMARR,KIEN) ; add all its required patches
"RTN","A1AE2POS",245,0)
 Q
"RTN","A1AE2POS",246,0)
 ;
"RTN","A1AE2POS",247,0)
 ; Load PAT multiples
"RTN","A1AE2POS",248,0)
 ; Looks in DHCP PATCHES [#11005] for Patch Designation
"RTN","A1AE2POS",249,0)
 ;   matching the BUILD name (PD)
"RTN","A1AE2POS",250,0)
 ;   If found, the patch is entered in the primary BUILD
"RTN","A1AE2POS",251,0)
 ;     PAT multiple, and in PAT of all matching INSTALLS
"RTN","A1AE2POS",252,0)
 ; Enter
"RTN","A1AE2POS",253,0)
 ;   PD    =  Patch Designation to lookup in 11005
"RTN","A1AE2POS",254,0)
 ;              (same name as build now under review)
"RTN","A1AE2POS",255,0)
 ;   KIEN  =  IEN of primary Build in which PAT is being built
"RTN","A1AE2POS",256,0)
 ; Variables
"RTN","A1AE2POS",257,0)
 ;   A1AEPI  =  IEN of Patch matching name of PD
"RTN","A1AE2POS",258,0)
 ;   IIEN    =  IEN of INSTALLS(s) matching KIEN entry
"RTN","A1AE2POS",259,0)
A1AEP2B(PD,KIEN) ;
"RTN","A1AE2POS",260,0)
 S A1AEPI=$O(^A1AE(11005,"B",PD,0))
"RTN","A1AE2POS",261,0)
 ; If no match, try dropping the ".0"
"RTN","A1AE2POS",262,0)
 I 'A1AEPI,$P(PD,"*",2)?.NP1"0" D
"RTN","A1AE2POS",263,0)
 .  N PD0 S PD0=$P(PD,"*")_"*"_$P($P(PD,"*",2),".")_"*"_$P(PD,"*",3)
"RTN","A1AE2POS",264,0)
 .  S A1AEPI=$O(^A1AE(11005,"B",PD0,0))
"RTN","A1AE2POS",265,0)
 Q:'A1AEPI
"RTN","A1AE2POS",266,0)
 ; Update BUILD and entry PAT multiple
"RTN","A1AE2POS",267,0)
 D A1AEP2C(KIEN,A1AEPI,9.619)
"RTN","A1AE2POS",268,0)
 ; Update this and all similar named INSTALL entries PAT multiple
"RTN","A1AE2POS",269,0)
 N IIEN S IIEN=$O(^XPD(9.7,"B",$P(^XPD(9.6,KIEN,0),"^"),0))
"RTN","A1AE2POS",270,0)
 I IIEN D
"RTN","A1AE2POS",271,0)
 . N PMI S PMI=$P(^XPD(9.7,IIEN,0),"^")
"RTN","A1AE2POS",272,0)
 . N INODE S INODE=$NA(^XPD(9.7,"B",PMI))
"RTN","A1AE2POS",273,0)
 . F  S INODE=$Q(@INODE) Q:$QS(INODE,3)'[PMI  D
"RTN","A1AE2POS",274,0)
 .. S IIEN=$QS(INODE,4) D A1AEP2C(IIEN,A1AEPI,9.719)
"RTN","A1AE2POS",275,0)
 Q
"RTN","A1AE2POS",276,0)
 ; Update PAT multiple in BUILD/INSTALL entry
"RTN","A1AE2POS",277,0)
A1AEP2C(A1AEKI,A1AEPI,KFILE) ;
"RTN","A1AE2POS",278,0)
 N FDA,DIERR
"RTN","A1AE2POS",279,0)
 S FDA(3,KFILE,"?+1,"_A1AEKI_",",.01)=A1AEPI
"RTN","A1AE2POS",280,0)
 N NODE S NODE=$NA(FDA),NODE=$Q(@NODE) ;W !,NODE,"=",@NODE
"RTN","A1AE2POS",281,0)
 D UPDATE^DIE("","FDA(3)","")
"RTN","A1AE2POS",282,0)
 Q
"RTN","A1AE2POS",283,0)
 ;
"RTN","A1AE2POS",284,0)
SETPLUS  ; sets up pre-lookup transforms for existing files that need it
"RTN","A1AE2POS",285,0)
 S ^DD(9.49,.01,7.5)="D PLU949^A1AEDD1"
"RTN","A1AE2POS",286,0)
 S ^DD(9.6,.01,7.5)="D PLU96^A1AEDD1"
"RTN","A1AE2POS",287,0)
 S ^DD(9.7,.01,7.5)="D PLU97^A1AEDD1"
"RTN","A1AE2POS",288,0)
 Q
"RTN","A1AE2POS",289,0)
 ;
"RTN","A1AE2POS",290,0)
 ;
"RTN","A1AE2POS",291,0)
CLRFILE() N STRM,DA,DIERR,DIK S STRM=""
"RTN","A1AE2POS",292,0)
 F  S STRM=$O(^A1AE(11007.1,"B",STRM)) Q:STRM=""  D  Q:$D(DIERR)
"RTN","A1AE2POS",293,0)
 . S DA=$O(^A1AE(11007.1,"B",STRM,0)) Q:'DA
"RTN","A1AE2POS",294,0)
 . S DIK="^A1AE(11007.1," D ^DIK
"RTN","A1AE2POS",295,0)
 Q '$D(DIERR)
"RTN","A1AE2POS",296,0)
 ;
"RTN","A1AE2POS",297,0)
 ;
"RTN","A1AE2POS",298,0)
LOADFILE() N DIERR,FDA,FDAIEN
"RTN","A1AE2POS",299,0)
 S FDA(3,11007.1,"?+1,",.001)=1
"RTN","A1AE2POS",300,0)
 S FDA(3,11007.1,"?+1,",.01)="FOIA VISTA"
"RTN","A1AE2POS",301,0)
 S FDA(3,11007.1,"?+1,",.05)="FV"
"RTN","A1AE2POS",302,0)
 S FDA(3,11007.1,"?+1,",.07)="FORUM.VA.GOV"
"RTN","A1AE2POS",303,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AE2POS",304,0)
 K FDAIEN
"RTN","A1AE2POS",305,0)
 Q:$D(DIERR) 0
"RTN","A1AE2POS",306,0)
 K FDA,DIERR
"RTN","A1AE2POS",307,0)
 S FDA(3,11007.1,"?+1,",.001)=10001
"RTN","A1AE2POS",308,0)
 S FDA(3,11007.1,"?+1,",.01)="OSEHRA VISTA"
"RTN","A1AE2POS",309,0)
 S FDA(3,11007.1,"?+1,",.05)="OV"
"RTN","A1AE2POS",310,0)
 S FDA(3,11007.1,"?+1,",.07)="FORUM.OSEHRA.ORG"
"RTN","A1AE2POS",311,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AE2POS",312,0)
 Q:$D(DIERR) 0
"RTN","A1AE2POS",313,0)
 Q 1
"RTN","A1AE2POS",314,0)
 ;
"RTN","A1AE2POS",315,0)
EOR ; end of routine A1AE2POS
"RTN","A1AEAU")
0^2^B22106203
"RTN","A1AEAU",1,0)
A1AEAU ; RMO,MJK/ALBANY ; DHCP Problem/Patch File Edits ;24 NOV 87 11:00 am
"RTN","A1AEAU",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEAU",3,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;12/02/92
"RTN","A1AEAU",4,0)
 G:$D(^DOPT("A1AEAU",6)) A S ^DOPT("A1AEAU",0)="Authorized Users Menu Option^1N^" F I=1:1 S X=$T(@I) Q:X=""  S ^DOPT("A1AEAU",I,0)=$P(X,";;",2,99)
"RTN","A1AEAU",5,0)
 S DIK="^DOPT(""A1AEAU""," D IXALL^DIK
"RTN","A1AEAU",6,0)
A W !! S DIC="^DOPT(""A1AEAU"",",DIC(0)="AEQM" D ^DIC Q:Y<0  D @+Y G A
"RTN","A1AEAU",7,0)
 ;
"RTN","A1AEAU",8,0)
1 ;;Entry/Edit Authorized Users
"RTN","A1AEAU",9,0)
 S DIC("S")="I $D(^A1AE(11007,+Y,""PH"",DUZ,0))" D PKG^A1AEUTL Q:'$D(A1AEPK)  W !!,"Adding Authorized Users to: ",A1AEPKNM,! S DA=A1AEPKIF,DIE="^A1AE(11007,",DR="[A1AE ADD/EDIT USERS]",DIE("NO^")="" D ^DIE K DIE("NO^"),DE,DQ,DIE D KEY^A1AEKEY
"RTN","A1AEAU",10,0)
 Q
"RTN","A1AEAU",11,0)
 ;
"RTN","A1AEAU",12,0)
2 ;;Select Packages for Notification
"RTN","A1AEAU",13,0)
 G LIST
"RTN","A1AEAU",14,0)
ADDUSR K A1AEDEL S DIC="^A1AE(11007,",DIC(0)="EMQ" R !!,"Select PACKAGE: ",X:DTIME G Q:'$T!(X="^")!(X="") S:$E(X,1)="-" X=$E(X,2,99),A1AEDEL=""  G:"ALLall"[$E(X,1,3)&($L(X)=3) SETUSR
"RTN","A1AEAU",15,0)
 S DIC("S")="I $P(^(0),U,2)=""Y""" D ^DIC K DIC("S") I Y>0 S A1AEPKIF=+Y,A1AEPKNM=$P(^DIC(9.4,+Y,0),"^",1) G SELUSR
"RTN","A1AEAU",16,0)
 W:X'["?" *7 W !!,"Enter 'ALL' or a specific package you want to be included in."
"RTN","A1AEAU",17,0)
LIST I '$D(^A1AE(11007,"AU",DUZ)) W !!?3,"You currently have no packages selected for immediate notification." G ADDUSR
"RTN","A1AEAU",18,0)
 W !!?3,"You currently have the following packages selected:"
"RTN","A1AEAU",19,0)
 F A1AEPKIF=0:0 S A1AEPKIF=$O(^A1AE(11007,"AU",DUZ,A1AEPKIF)) Q:'A1AEPKIF  I $D(^A1AE(11007,A1AEPKIF,0)),$P(^(0),"^",2)="Y",$D(^DIC(9.4,A1AEPKIF,0)) W !?7,$P(^(0),"^",2),?12,"-",?14,$P(^(0),"^",1)
"RTN","A1AEAU",20,0)
 K A1AEPKIF G ADDUSR
"RTN","A1AEAU",21,0)
 ;
"RTN","A1AEAU",22,0)
SETUSR W !
"RTN","A1AEAU",23,0)
 I "ALLall"[$E(X_0,1,3),$L(X)=3
"RTN","A1AEAU",24,0)
 IF  S DIR(0)="YO",DIR("B")="NO"
"RTN","A1AEAU",25,0)
 IF  S DIR("A")="  Are you sure you want to "_$S($D(A1AEDEL):"DE-SELECT",1:"select")_" 'ALL' packages for notification " IF 1
"RTN","A1AEAU",26,0)
 IF  S DIR("?")=" Enter 'Y' to continue" D ^DIR I $D(DUOUT)!($D(DTOUT))!('Y) K DIR G ADDUSR
"RTN","A1AEAU",27,0)
 K DIR
"RTN","A1AEAU",28,0)
 F A1AEPKIF=0:0 S A1AEPKIF=+$O(^A1AE(11007,A1AEPKIF)) Q:'A1AEPKIF  I $P(^(A1AEPKIF,0),"^",2)="Y" S A1AEPKNM=$P(^DIC(9.4,A1AEPKIF,0),"^",1) DO
"RTN","A1AEAU",29,0)
 .IF '$D(A1AEDEL) DO
"RTN","A1AEAU",30,0)
 . .I $D(^A1AE(11007,A1AEPKIF,1,DUZ,0)) W !?3,"...already on ",A1AEPKNM," list" Q
"RTN","A1AEAU",31,0)
 . .D SETNOD
"RTN","A1AEAU",32,0)
 .E  DO
"RTN","A1AEAU",33,0)
 . .I '$D(^A1AE(11007,A1AEPKIF,1,DUZ,0)) Q
"RTN","A1AEAU",34,0)
 . .S DIK="^A1AE(11007,"_A1AEPKIF_",1,",DA(1)=A1AEPKIF,DA=DUZ
"RTN","A1AEAU",35,0)
 . .D ^DIK W !?3,"...deleted from ",A1AEPKNM
"RTN","A1AEAU",36,0)
 . .K DIK,DA
"RTN","A1AEAU",37,0)
 ;
"RTN","A1AEAU",38,0)
 G ADDUSR
"RTN","A1AEAU",39,0)
 ;
"RTN","A1AEAU",40,0)
Q K A1AEPKNM,A1AEPKIF,A1AEPK,DIE,DIC,DIR,DA,DR,D0,DI,D0,D1,DE,DQ Q
"RTN","A1AEAU",41,0)
 ;
"RTN","A1AEAU",42,0)
SELUSR I '$D(^A1AE(11007,A1AEPKIF,1,DUZ,0)),'$D(A1AEDEL) D SETNOD G ADDUSR
"RTN","A1AEAU",43,0)
 ;naked reference to tag SELUSR
"RTN","A1AEAU",44,0)
 I '$D(^(0)),$D(A1AEDEL) W !?3,*7,"...currently not in the ",A1AEPKNM," list" G ADDUSR
"RTN","A1AEAU",45,0)
 I $D(^(0)),$D(A1AEDEL) G DELUSR
"RTN","A1AEAU",46,0)
 W !!,"You already receive automatic notification and printing of ",A1AEPKNM," patches.",!,"Do you want this to stop? No// "
"RTN","A1AEAU",47,0)
 R X:DTIME G Q:'$T!(X="^"),ADDUSR:"Nn"[$E(X,1),DELUSR:"Yy"[$E(X,1) W:X'["?" *7 W !!,"Enter Y to delete, or N to exit." G SELUSR
"RTN","A1AEAU",48,0)
 ;
"RTN","A1AEAU",49,0)
SETNOD S DA=A1AEPKIF,DIE="^A1AE(11007,",DR="50///`"_DUZ,DR(2,11007.05)="2///T" K DE,DQ D ^DIE I '$D(Y) W !?3,"...added to ",A1AEPKNM
"RTN","A1AEAU",50,0)
 Q
"RTN","A1AEAU",51,0)
 ;
"RTN","A1AEAU",52,0)
DELUSR S DIK="^A1AE(11007,"_A1AEPKIF_",1,",DA(1)=A1AEPKIF,DA=DUZ D ^DIK W !?3,"...deleted from ",A1AEPKNM G ADDUSR
"RTN","A1AEAU",53,0)
 ;
"RTN","A1AEAU",54,0)
3 ;;Add Package to Patch Module
"RTN","A1AEAU",55,0)
 Q:'$D(^XUSEC("A1AE MGR",DUZ))  S A1AE(0)="AEMLQ" D PKG^A1AEUTL Q:'$D(A1AEPK)  S DA=A1AEPKIF,DR="[A1AE ADD/EDIT USERS]",DIE="^A1AE(11007," D ^DIE K DQ,DE,A1AEPKIF,A1AEPKNM,A1AEPK Q
"RTN","A1AEAU",56,0)
 ;
"RTN","A1AEAU",57,0)
4 ;;List of Package Users
"RTN","A1AEAU",58,0)
 S DIC("S")="I $D(^A1AE(11007,+Y,""PH"",DUZ,0))" D PKG^A1AEUTL Q:'$D(A1AEPK)
"RTN","A1AEAU",59,0)
 S DIC="^A1AE(11007,",FLDS="[A1AE PACKAGE USERS]",BY=".01",(FR,TO)=A1AEPKNM,L=0 D EN1^DIP K FLDS,TO,FR,BY,A1AEPKIF,A1AEPK,A1AEPKNM Q
"RTN","A1AEAU",60,0)
 ;
"RTN","A1AEAU",61,0)
5 ;;Patch Options Documentation
"RTN","A1AEAU",62,0)
 S DIC="^DIC(19,",FLDS="[A1AE PATCH OPTS DOC]",BY="@.01",FR="A1AE",TO="A1AEZ",DIS(0)="I $P(^DIC(19,D0,0),U,1)'[""PB"",$P(^(0),U,1)'[""A1AE MGR"",$P(^(0),U,1)'[""A1AE XUSEC""",L=0 W ! D EN1^DIP K FLDS,BY,FR,TO,DIS(0) Q
"RTN","A1AEAU",63,0)
 ;
"RTN","A1AEAU",64,0)
6 ;;Key Allocation for Patch Functions
"RTN","A1AEAU",65,0)
 D ASKKEY^A1AEKEY
"RTN","A1AECL1")
0^3^B14940706
"RTN","A1AECL1",1,0)
A1AECL1 ;ISF/RWF - Released Patch ROUTINE file updater ;2014-03-07  7:37 PM
"RTN","A1AECL1",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AECL1",3,0)
 Q
"RTN","A1AECL1",4,0)
 ;
"RTN","A1AECL1",5,0)
 ;This entry point is called when a patch is released to update the ROUTINE file
"RTN","A1AECL1",6,0)
 ;with the checksums from the patch.
"RTN","A1AECL1",7,0)
PATCH(PIEN) ;Update routine file for one patch.
"RTN","A1AECL1",8,0)
 I $P(^A1AE(11005,PIEN,0),U,21) QUIT  ; If we are importing, don't update the routines sub-file
"RTN","A1AECL1",9,0)
 N RTNL,PATCH
"RTN","A1AECL1",10,0)
 S RTNL=$NA(^TMP("A1AECL1",$J)) K @RTNL
"RTN","A1AECL1",11,0)
 S PATCH=$P(^A1AE(11005,PIEN,0),U)
"RTN","A1AECL1",12,0)
 D RSUM($NA(^A1AE(11005.1,PIEN,2)),.RTNL)
"RTN","A1AECL1",13,0)
 I '$L($O(@RTNL@(" "))) D HFS(RTNL)
"RTN","A1AECL1",14,0)
 D SAVE(PIEN,PATCH,RTNL)
"RTN","A1AECL1",15,0)
 Q
"RTN","A1AECL1",16,0)
 ;
"RTN","A1AECL1",17,0)
SAVE(PIEN,PATCH,ROOT) ;
"RTN","A1AECL1",18,0)
 N RN
"RTN","A1AECL1",19,0)
 S RN=""
"RTN","A1AECL1",20,0)
 F  S RN=$O(@ROOT@(RN)) Q:RN=""  D RTNLOG(PIEN,RN,PATCH,@ROOT@(RN))
"RTN","A1AECL1",21,0)
 Q
"RTN","A1AECL1",22,0)
 ;
"RTN","A1AECL1",23,0)
 ;RSUM=add/delete^nop^checksum^patchlist
"RTN","A1AECL1",24,0)
RTNLOG(PIEN,RN,PCH,RSUM) ;Enter/Update routine in the Routine File
"RTN","A1AECL1",25,0)
 ; VEN/SMH - Changing this to file into 11007.1 in Routine mulitple
"RTN","A1AECL1",26,0)
 ; so that we can have the routines by stream
"RTN","A1AECL1",27,0)
 N STREAM S STREAM=$$GET1^DIQ(11005,PIEN,.2,"I") ; PATCH STREAM (Internal)
"RTN","A1AECL1",28,0)
 N IENS11007P1 S IENS11007P1="?+10,"_STREAM_","
"RTN","A1AECL1",29,0)
 N Y,FDA,IEN
"RTN","A1AECL1",30,0)
 S FDA(11007.11,IENS11007P1,.01)=RN ; Routine Name
"RTN","A1AECL1",31,0)
 S Y=$O(^DIC(9.8,"B",RN,0))
"RTN","A1AECL1",32,0)
 I Y'>0 S IEN="?+1,",FDA(9.8,IEN,1)="R",FDA(9.8,IEN,.01)=RN
"RTN","A1AECL1",33,0)
 I Y>0 S IEN=(+Y)_","
"RTN","A1AECL1",34,0)
 S FDA(9.8,IEN,6)=2 ; Always track and report national patches
"RTN","A1AECL1",35,0)
 I +RSUM D
"RTN","A1AECL1",36,0)
 . S FDA(9.8,IEN,6.2)=PCH ;Delete routine
"RTN","A1AECL1",37,0)
 . S FDA(11007.11,IENS11007P1,1.1)=PIEN ; Deleted by Patch
"RTN","A1AECL1",38,0)
 I 'RSUM D
"RTN","A1AECL1",39,0)
 . S FDA(9.8,IEN,7.1)=DT
"RTN","A1AECL1",40,0)
 . S FDA(9.8,IEN,7.2)=$P(RSUM,U,3) ;Checksum
"RTN","A1AECL1",41,0)
 . S FDA(9.8,IEN,7.3)=$P(RSUM,U,4) ;Patch List
"RTN","A1AECL1",42,0)
 . S IEN="?+2,"_IEN,FDA(9.818,IEN,.01)=PCH,FDA(9.818,IEN,2)=$P(RSUM,U,3),FDA(9.818,IEN,3)=$P(RSUM,U,4)
"RTN","A1AECL1",43,0)
 . ;
"RTN","A1AECL1",44,0)
 . S FDA(11007.11,IENS11007P1,.02)=$P(RSUM,U,3) ; Checksum
"RTN","A1AECL1",45,0)
 . S FDA(11007.11,IENS11007P1,.03)=$$NOW^XLFDT() ; Now's time
"RTN","A1AECL1",46,0)
 . S FDA(11007.11,IENS11007P1,.04)=$P(RSUM,U,4) ; Patch List
"RTN","A1AECL1",47,0)
 D UPDATE^DIE("","FDA","IEN")
"RTN","A1AECL1",48,0)
 Q
"RTN","A1AECL1",49,0)
 ;
"RTN","A1AECL1",50,0)
HFS(RET) ;Check if HFS Data
"RTN","A1AECL1",51,0)
 I '$D(^A1AE(11005.5,PIEN,0)) Q
"RTN","A1AECL1",52,0)
 N I,X
"RTN","A1AECL1",53,0)
 S I=0
"RTN","A1AECL1",54,0)
 F  S I=$O(^A1AE(11005.5,PIEN,1,I)) Q:'I  S X=^(I,0) D
"RTN","A1AECL1",55,0)
 . S @RET@($P(X,U,1))=$P(X,U,2,5)
"RTN","A1AECL1",56,0)
 . Q
"RTN","A1AECL1",57,0)
 Q
"RTN","A1AECL1",58,0)
 ;
"RTN","A1AECL1",59,0)
RSUM(ROOT,RET) ;
"RTN","A1AECL1",60,0)
 ;ROOT is the root where the message is.
"RTN","A1AECL1",61,0)
 ;RET will return an array of routine names and checksums
"RTN","A1AECL1",62,0)
 N IX
"RTN","A1AECL1",63,0)
 I $$PATFL() Q
"RTN","A1AECL1",64,0)
 D BLDTMP
"RTN","A1AECL1",65,0)
 I $L($O(^TMP($J,"RTN","")))>0 D SUM
"RTN","A1AECL1",66,0)
 K ^TMP($J,"RTN") ; VEN/SMH - Don't kill the whole thing
"RTN","A1AECL1",67,0)
 Q
"RTN","A1AECL1",68,0)
 ;
"RTN","A1AECL1",69,0)
PATFL() ;See if data is in the Patch file
"RTN","A1AECL1",70,0)
 N A1,PL,RN,RSUM
"RTN","A1AECL1",71,0)
 S A1=0
"RTN","A1AECL1",72,0)
 F  S A1=$O(^A1AE(11005,PIEN,"P",A1)) Q:A1'>0  S A2=$G(^(A1,0)) D
"RTN","A1AECL1",73,0)
 . Q:'$L($P(A2,U,2))
"RTN","A1AECL1",74,0)
 . S RN=$P(A2,U),RSUM=$P(A2,U,2),PL=$P(A2,U,3)
"RTN","A1AECL1",75,0)
 . S @RET@(RN)="0^0^"_RSUM_U_PL
"RTN","A1AECL1",76,0)
 . Q
"RTN","A1AECL1",77,0)
 Q $L($O(@RET@("")))
"RTN","A1AECL1",78,0)
 ;
"RTN","A1AECL1",79,0)
SUM ;Build the RSUM's, Zero node is add/delete^nop^checksum
"RTN","A1AECL1",80,0)
 ;Add to zero node the patch list as the 4th $P
"RTN","A1AECL1",81,0)
 N RN,PL S RN=""
"RTN","A1AECL1",82,0)
 F  S RN=$O(^TMP($J,"RTN",RN)) Q:RN=""  D
"RTN","A1AECL1",83,0)
 . S PL=$G(^TMP($J,"RTN",RN,2,0))
"RTN","A1AECL1",84,0)
 . S @RET@(RN)=$G(^TMP($J,"RTN",RN))_U_$P(PL,";",5)
"RTN","A1AECL1",85,0)
 . Q
"RTN","A1AECL1",86,0)
 Q
"RTN","A1AECL1",87,0)
 ;
"RTN","A1AECL1",88,0)
BLDTMP ;Build the TMP global to work from.
"RTN","A1AECL1",89,0)
 N IX K ^TMP($J,"RTN") ; VEN/SMH - Don't kill ^($J) here!
"RTN","A1AECL1",90,0)
 S IX=0
"RTN","A1AECL1",91,0)
 ;Skip until we find $KID, then skip 2 more
"RTN","A1AECL1",92,0)
 F  S IX=$O(@ROOT@(IX)) Q:IX'>0  S X=^(IX,0) Q:$E(X,1,4)="$KID"
"RTN","A1AECL1",93,0)
 S IX=$O(@ROOT@(IX)) S IX=$O(@ROOT@(IX))
"RTN","A1AECL1",94,0)
 ;Now the real part
"RTN","A1AECL1",95,0)
 F  S IX=$O(@ROOT@(IX)) Q:IX'>0  D
"RTN","A1AECL1",96,0)
 . S X=^(IX,0),IX=$O(@ROOT@(IX)) Q:$E(X,2,4)'="RTN"
"RTN","A1AECL1",97,0)
 . S Y=$G(^(IX,0))
"RTN","A1AECL1",98,0)
 . S @("^TMP($J,"_X)=Y
"RTN","A1AECL1",99,0)
 . Q
"RTN","A1AECL1",100,0)
 Q
"RTN","A1AECL1",101,0)
 ;
"RTN","A1AECL1",102,0)
 ;Fix database from bad code
"RTN","A1AECL1",103,0)
FIX ;
"RTN","A1AECL1",104,0)
 N DA,X,Y,D1
"RTN","A1AECL1",105,0)
 S DA=0
"RTN","A1AECL1",106,0)
 F  S DA=$O(^DIC(9.8,DA)) Q:'DA  D
"RTN","A1AECL1",107,0)
 . S X=$G(^DIC(9.8,DA,4)) I $L(X) D
"RTN","A1AECL1",108,0)
 . . I X'["~" Q
"RTN","A1AECL1",109,0)
 . . S Y=$P(X,"~",1)_"^"_$P($P(X,"~",2),";",5)
"RTN","A1AECL1",110,0)
 . . W !,DA,?10,Y
"RTN","A1AECL1",111,0)
 . . ;S ^DIC(9.8,DA,4)=Y
"RTN","A1AECL1",112,0)
 . . Q
"RTN","A1AECL1",113,0)
 . S D1=0 F  S D1=$O(^DIC(9.8,DA,8,D1)) Q:'Y  D
"RTN","A1AECL1",114,0)
 . . S X=^DIC(9.8,DA,8,D1,0) Q:X'["~"
"RTN","A1AECL1",115,0)
 . . S Y=$P(X,"~",1)
"RTN","A1AECL1",116,0)
 . . W !,DA,?10,Y
"RTN","A1AECL1",117,0)
 . . S ^DIC(9.8,DA,8,D1,0)=Y
"RTN","A1AECL1",118,0)
 . . Q
"RTN","A1AECL1",119,0)
 Q
"RTN","A1AECL1",120,0)
 ;
"RTN","A1AECL1",121,0)
TEST(D0) ;Update ROUTINE file from the Routine list.
"RTN","A1AECL1",122,0)
 N A1,A2,PH,PHL,RN,RSUM
"RTN","A1AECL1",123,0)
 S A1=0,PH=$P(^A1AE(11005,D0,0),U)
"RTN","A1AECL1",124,0)
 F  S A1=$O(^A1AE(11005,D0,"P",A1)) Q:A1'>0  S A2=$G(^(A1,0)) D
"RTN","A1AECL1",125,0)
 . S RN=$P(A2,U),RSUM=$P(A2,U,2),PHL=$P(A2,U,3) Q:'$L(RSUM)
"RTN","A1AECL1",126,0)
 . D RTNLOG(RN,PH,"0^0^"_RSUM_U_PHL)
"RTN","A1AECL1",127,0)
 . Q
"RTN","A1AECL1",128,0)
 Q
"RTN","A1AECOPD")
0^4^B22696041
"RTN","A1AECOPD",1,0)
A1AECOPD ;ISC-Albany/pke-copy message into patch description ;2014-03-28  5:31 PM
"RTN","A1AECOPD",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AECOPD",3,0)
 ;
"RTN","A1AECOPD",4,0)
EN N X,Y
"RTN","A1AECOPD",5,0)
 I $P(^A1AE(11007,$O(^DIC(9.4,"C",$P(A1AEPD,"*"),0)),0),U,5)'="y" Q
"RTN","A1AECOPD",6,0)
ASK S A1AERD("A")="Do you want to copy lines from a message into the Patch Description? "
"RTN","A1AECOPD",7,0)
 S A1AERD(1)="Yes^select a message, subject contains "_$P(A1AEPD,"*",1,2)
"RTN","A1AECOPD",8,0)
 S A1AERD(2)="No^not copy any messages ",A1AERD("B")=2
"RTN","A1AECOPD",9,0)
 S A1AERD(0)="S"
"RTN","A1AECOPD",10,0)
 D SET^A1AERD K A1AERD D ASKS:"Y"[$E(X,1)
"RTN","A1AECOPD",11,0)
 ;
"RTN","A1AECOPD",12,0)
Q W ! K QUE,A1AEROU,^UTILITY($J,"A1AECP"),A1AELINE,A1AEFRLN,A1AETOLN,A1AEOFF,A1AEBLK,A1AEPGLN,A1AELNCT,A1AELNB,A1AELNIN,A1AEBOT,A1AENMSP,A1AEWFLG
"RTN","A1AECOPD",13,0)
 K AFIND
"RTN","A1AECOPD",14,0)
 Q
"RTN","A1AECOPD",15,0)
ASKS ;AXMZ
"RTN","A1AECOPD",16,0)
 I $D(AXMZ) S QMSUB=$P(^XMB(3.9,AXMZ,0),U) D FND Q
"RTN","A1AECOPD",17,0)
 ;this is for axmz
"RTN","A1AECOPD",18,0)
 S SHOW=10 D QUE^A1AEM,LOC^A1AEM I '$D(QUE) Q
"RTN","A1AECOPD",19,0)
 I $D(X)<10 W !!?3,"No message in queue has subject containing ",$P(A1AEPD,"*",1,2) Q
"RTN","A1AECOPD",20,0)
 S A1AERD(0)="S",A1AERD("A")="Select Message to copy : "
"RTN","A1AECOPD",21,0)
 D SET^A1AERD
"RTN","A1AECOPD",22,0)
 I X["^" Q
"RTN","A1AECOPD",23,0)
 S AXMZ=X(X),QMSUB=$P(^XMB(3.9,AXMZ,0),U)
"RTN","A1AECOPD",24,0)
 Q:'$D(AXMZ)
"RTN","A1AECOPD",25,0)
FND K A1AERD D ASKLIN
"RTN","A1AECOPD",26,0)
 Q
"RTN","A1AECOPD",27,0)
 ;
"RTN","A1AECOPD",28,0)
ASKLIN S IOP="HOME" D ^%ZIS K IOP S A1AERD("A")="from" W ! D LINE Q:X="^"!(X="")  S A1AEFRLN=A1AELINE,A1AERD("A")="through",A1AERD("B")=A1AELINE+1 D LINE Q:X="^"  S A1AETOLN=A1AELINE K A1AERD
"RTN","A1AECOPD",29,0)
 ;
"RTN","A1AECOPD",30,0)
 D SETUTI,ASKCOP:$D(^UTILITY($J,"A1AECP")) W:'$D(^UTILITY($J,"A1AECP")) !?3,"...No lines to copy"
"RTN","A1AECOPD",31,0)
 Q
"RTN","A1AECOPD",32,0)
 ;
"RTN","A1AECOPD",33,0)
LINE W !?2,"Copy ",A1AERD("A")," line: " W:$D(A1AERD("B")) A1AERD("B")_"// " R X:DTIME S:'$T X="^" Q:X="^"!(X="")  I X["?" W !?3,"Enter line to copy ",A1AERD("A")_$S(A1AERD("A")'["th":"",1:" or 'ALL'") G LINE
"RTN","A1AECOPD",34,0)
 I 'X,"ALLall"'[$E(X_0,1,3)!(A1AERD("A")["fr") W !?3,*7,"Enter numeric line number" G LINE
"RTN","A1AECOPD",35,0)
LINESIL S (AFIND,FIND)=0 F AZ=.9999999:0 S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  S AFIND=AZ I $D(^(AZ,0)),AZ=X!($E(^(0),1,8)="$END TXT") S FIND=AZ,A1AELINE=AZ-1 S:$E(^(0),1,8)="$END TXT" A1AELINE=AZ-2 S AFIND=0 Q
"RTN","A1AECOPD",36,0)
 I "ALLall"[$E(X_0,1,3),'FIND,AFIND S A1AELINE=AFIND-1
"RTN","A1AECOPD",37,0)
 E  I 'FIND,X,AFIND,AFIND<X S A1AELINE=AFIND-1
"RTN","A1AECOPD",38,0)
 E  I 'FIND W !?3,*7,"Line ",X," not found in " K FIND G LINE
"RTN","A1AECOPD",39,0)
 ;
"RTN","A1AECOPD",40,0)
 I $D(A1AEFRLN),A1AELINE<A1AEFRLN W !?3,*7,"Line copying through precedes line copying from" G LINE
"RTN","A1AECOPD",41,0)
 Q
"RTN","A1AECOPD",42,0)
 ;
"RTN","A1AECOPD",43,0)
SETUTI K ^UTILITY($J,"A1AECP") S A1AELNCT=0
"RTN","A1AECOPD",44,0)
 F AZ=$S(A1AEFRLN<1:.99,1:A1AEFRLN):0:A1AETOLN S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)) S A1AELNCT=A1AELNCT+1,^UTILITY($J,"A1AECP",A1AELNCT)=^(0)
"RTN","A1AECOPD",45,0)
 Q
"RTN","A1AECOPD",46,0)
 ;cc
"RTN","A1AECOPD",47,0)
ASKCOP W ! F A1AELNB=1:1:A1AELNCT I $D(^UTILITY($J,"A1AECP",A1AELNB)) W !,A1AELNB,"> ",^(A1AELNB)
"RTN","A1AECOPD",48,0)
 S A1AERD("A")="Do you want to copy "_$S(A1AELNCT=1:"this line",1:"these "_A1AELNCT_" lines")_"? "
"RTN","A1AECOPD",49,0)
 S A1AERD(0)="S",A1AERD(1)="Yes^copy these lines into the patch description",A1AERD(2)="No^not copy these lines",A1AERD("B")=2 D SET^A1AERD K A1AERD Q:X="^"  ;;;!("N"[$E(X,1))
"RTN","A1AECOPD",50,0)
 I "nN"[$E(X,1) G ASKLIN
"RTN","A1AECOPD",51,0)
 S A1AEBOT=$S($D(^A1AE(11005,DA,"D",0)):$P(^(0),"^",3),1:0),A1AELNIN=0 D INSERT:A1AEBOT,COPY:'A1AEBOT
"RTN","A1AECOPD",52,0)
 Q
"RTN","A1AECOPD",53,0)
 ;
"RTN","A1AECOPD",54,0)
INSERT R !!,"Insert code after what description line: ",X:DTIME Q:'$T!(X="^")  I X<0!(X>A1AEBOT)!(X'?1N.N)!(X["?") G HELP
"RTN","A1AECOPD",55,0)
 S A1AELNIN=X I A1AELNIN<A1AEBOT S A1AEFRLN=A1AEBOT+A1AELNCT,A1AETOLN=A1AELNIN+1+A1AELNCT F I=A1AEFRLN:-1:A1AETOLN S ^A1AE(11005,DA,"D",I,0)=^A1AE(11005,DA,"D",(I-A1AELNCT),0)
"RTN","A1AECOPD",56,0)
A D COPY
"RTN","A1AECOPD",57,0)
 Q
"RTN","A1AECOPD",58,0)
 ;
"RTN","A1AECOPD",59,0)
HELP I X["??" W @IOF F I=0:0 S I=+$O(^A1AE(11005,DA,"D",I)) Q:'I  W !,I,"> ",^(I,0) I ($Y+6)>IOSL D CRCHK Q:X1="^"  W @IOF
"RTN","A1AECOPD",60,0)
 I X'["??" W:X'["?" *7 W !!?3,"Enter a line number between 0 and ",A1AEBOT,", or",!?3,"'??' to list current description."
"RTN","A1AECOPD",61,0)
 G INSERT
"RTN","A1AECOPD",62,0)
 ;
"RTN","A1AECOPD",63,0)
COPY S A1AELNB=0,A1AEFRLN=A1AELNIN+1,A1AETOLN=A1AELNIN+A1AELNCT F I=A1AEFRLN:1:A1AETOLN S A1AELNB=A1AELNB+1,^A1AE(11005,DA,"D",I,0)=^UTILITY($J,"A1AECP",A1AELNB) I ^(0)["|" S A1AEWFLG=""
"RTN","A1AECOPD",64,0)
 S:'$D(^A1AE(11005,DA,"D",0)) ^(0)="" S $P(^A1AE(11005,DA,"D",0),"^",3)=A1AEBOT+A1AELNCT
"RTN","A1AECOPD",65,0)
 Q
"RTN","A1AECOPD",66,0)
 ;
"RTN","A1AECOPD",67,0)
CRCHK I $E(IOST,1)="C" W !!,*7,"Press RETURN to continue or '^' to stop " R X1:DTIME
"RTN","A1AECOPD",68,0)
 Q
"RTN","A1AECOPR")
0^5^B25294236
"RTN","A1AECOPR",1,0)
A1AECOPR ;ISC-Albany/pke-copy routines into routine text ;5/1/90
"RTN","A1AECOPR",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AECOPR",3,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;12/02/92
"RTN","A1AECOPR",4,0)
 S A1AEROU=X
"RTN","A1AECOPR",5,0)
EN S SAVEX=X
"RTN","A1AECOPR",6,0)
 ;
"RTN","A1AECOPR",7,0)
ASK S A1AERD("A")="Copy routine lines from a packman message into the description? "
"RTN","A1AECOPR",8,0)
 S A1AERD(1)="Yes^select a message, subject contains "_$P(A1AEPD,"*",1,2)
"RTN","A1AECOPR",9,0)
 S A1AERD(2)="No^not copy any messages ",A1AERD("B")=2
"RTN","A1AECOPR",10,0)
 S A1AERD(0)="S"
"RTN","A1AECOPR",11,0)
 D SET^A1AERD K A1AERD D ASKS:"Y"[$E(X,1)
"RTN","A1AECOPR",12,0)
 ;
"RTN","A1AECOPR",13,0)
 D Q^A1AECOPD Q
"RTN","A1AECOPR",14,0)
ASKS ;
"RTN","A1AECOPR",15,0)
 I $D(AXMZ) S QMSUB=$P(^XMB(3.9,AXMZ,0),U) D FND Q
"RTN","A1AECOPR",16,0)
 ;
"RTN","A1AECOPR",17,0)
 S SHOW=10 D QUE^A1AEM,LOC^A1AEM I '$D(QUE) Q
"RTN","A1AECOPR",18,0)
 I $D(X)<10 W !!?3,"No message in queue has subject containing ",$P(A1AEPD,"*",1,2) Q
"RTN","A1AECOPR",19,0)
 S A1AERD(0)="S",A1AERD("A")="Select Message to copy : "
"RTN","A1AECOPR",20,0)
 D SET^A1AERD
"RTN","A1AECOPR",21,0)
 I X["^" Q
"RTN","A1AECOPR",22,0)
 S AXMZ=X(X),QMSUB=$P(^XMB(3.9,AXMZ,0),U)
"RTN","A1AECOPR",23,0)
 Q:'$D(AXMZ)
"RTN","A1AECOPR",24,0)
FND D FCOPY^A1AEM I '$D(RNAM) W !!?3,"Routine '",A1AEROU,"' not found in message '",QMSUB,"'" Q
"RTN","A1AECOPR",25,0)
 K A1AERD D ASKLIN
"RTN","A1AECOPR",26,0)
 Q
"RTN","A1AECOPR",27,0)
 ;
"RTN","A1AECOPR",28,0)
ASKLIN S IOP="HOME" D ^%ZIS K IOP S A1AERD("A")="from" W ! D LINE Q:X="^"!(X="")  S A1AEFRLN=A1AELINE,A1AERD("A")="through",A1AERD("B")=$S(A1AEOFF:X_"+"_A1AEOFF,1:X) D LINE Q:X="^"  S A1AETOLN=$S(X="":A1AEFRLN,1:A1AELINE) K A1AERD
"RTN","A1AECOPR",29,0)
 ;
"RTN","A1AECOPR",30,0)
 D SETUTI,ASKCOP:$D(^UTILITY($J,"A1AECP")) W:'$D(^UTILITY($J,"A1AECP")) !?3,"...No lines to copy"
"RTN","A1AECOPR",31,0)
 Q
"RTN","A1AECOPR",32,0)
 ;
"RTN","A1AECOPR",33,0)
LINE W !?2,"Copy ",A1AERD("A")," line: " W:$D(A1AERD("B")) A1AERD("B")_"// " R X:DTIME S:'$T X="^" Q:X="^"!(X="")  I X["?" W !?3,"Enter line to copy ",A1AERD("A") G LINE
"RTN","A1AECOPR",34,0)
 S A1AEOFF=+$P(X,"+",2) I X["+",'A1AEOFF W !?3,*7,"Line offset should be a numeric value" G LINE
"RTN","A1AECOPR",35,0)
B S X=$P(X,"+",1) I '(X?1U.UN!(X?1"%".UN)!(X?1N.N))!($L(X)>8) W !?3,*7,"Line label should be 1-8 characters" G LINE
"RTN","A1AECOPR",36,0)
 S FIND=0 F AZ=$P(RNAM,U,2):0:$P(RNAM,U,3) S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)),$L($P(^(0)," ")),$P(^(0)," ")=X S FIND=AZ,A1AELINE=AZ+A1AEOFF-1 Q
"RTN","A1AECOPR",37,0)
 I 'FIND W !?3,*7,"Line label ",X," not found in ",A1AEROU K FIND G LINE
"RTN","A1AECOPR",38,0)
 ;
"RTN","A1AECOPR",39,0)
 S FIND1=1 I A1AEOFF F AZ=FIND:0:A1AELINE+A1AEOFF S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)),'$L($P(^(0)," ",2)) S FIND1=0 Q
"RTN","A1AECOPR",40,0)
 I 'FIND1,A1AEOFF W !?3,*7,"Line ",X,"+",A1AEOFF," not found in ",A1AEROU K FIND1 G LINE
"RTN","A1AECOPR",41,0)
 ;
"RTN","A1AECOPR",42,0)
 I $D(A1AEFRLN),A1AELINE<A1AEFRLN W !?3,*7,"Line copying through precedes line copying from" G LINE
"RTN","A1AECOPR",43,0)
 Q
"RTN","A1AECOPR",44,0)
 ;
"RTN","A1AECOPR",45,0)
SETUTI K ^UTILITY($J,"A1AECP") S A1AELNCT=0 F AZ=A1AEFRLN:0:A1AETOLN S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)) S A1AELNCT=A1AELNCT+1,^UTILITY($J,"A1AECP",A1AELNCT)=$S("$TXT$ROU$END"'[$E(^(0),1,4):^(0),1:"xxxx"_$E(^(0),5,245))
"RTN","A1AECOPR",46,0)
 Q
"RTN","A1AECOPR",47,0)
 ;
"RTN","A1AECOPR",48,0)
ASKCOP W ! F A1AELNB=1:1:A1AELNCT I $D(^UTILITY($J,"A1AECP",A1AELNB)) W !,A1AELNB,"> ",^(A1AELNB)
"RTN","A1AECOPR",49,0)
 S A1AERD("A")="Do you want to copy "_$S(A1AELNCT=1:"this line",1:"these "_A1AELNCT_" lines")_"? "
"RTN","A1AECOPR",50,0)
 S A1AERD(0)="S",A1AERD(1)="Yes^copy these lines into the routine description",A1AERD(2)="No^not copy these lines",A1AERD("B")=2 D SET^A1AERD K A1AERD Q:X="^"  ;;;!("N"[$E(X,1))
"RTN","A1AECOPR",51,0)
 I "nN"[$E(X,1) G ASKLIN
"RTN","A1AECOPR",52,0)
 S A1AEBOT=$S($D(^A1AE(11005,DA(1),"P",DA,"D",0)):$P(^(0),"^",3),1:0),A1AELNIN=0 D INSERT:A1AEBOT,COPY:'A1AEBOT
"RTN","A1AECOPR",53,0)
 Q
"RTN","A1AECOPR",54,0)
 ;
"RTN","A1AECOPR",55,0)
INSERT R !!,"Insert code after what description line: ",X:DTIME Q:'$T!(X="^")  I X<0!(X>A1AEBOT)!(X'?1N.N)!(X["?") G HELP
"RTN","A1AECOPR",56,0)
 S A1AELNIN=X I A1AELNIN<A1AEBOT S A1AEFRLN=A1AEBOT+A1AELNCT,A1AETOLN=A1AELNIN+1+A1AELNCT F I=A1AEFRLN:-1:A1AETOLN S ^A1AE(11005,DA(1),"P",DA,"D",I,0)=^A1AE(11005,DA(1),"P",DA,"D",(I-A1AELNCT),0)
"RTN","A1AECOPR",57,0)
A D COPY
"RTN","A1AECOPR",58,0)
 Q
"RTN","A1AECOPR",59,0)
 ;
"RTN","A1AECOPR",60,0)
HELP I X["??" W @IOF F I=0:0 S I=+$O(^A1AE(11005,DA(1),"P",DA,"D",I)) Q:'I  W !,I,"> ",^(I,0) I ($Y+6)>IOSL D CRCHK Q:X1="^"  W @IOF
"RTN","A1AECOPR",61,0)
 I X'["??" W:X'["?" *7 W !!?3,"Enter a line number between 0 and ",A1AEBOT,", or",!?3,"'??' to list current description."
"RTN","A1AECOPR",62,0)
 G INSERT
"RTN","A1AECOPR",63,0)
 ;
"RTN","A1AECOPR",64,0)
COPY S A1AELNB=0,A1AEFRLN=A1AELNIN+1,A1AETOLN=A1AELNIN+A1AELNCT F I=A1AEFRLN:1:A1AETOLN S A1AELNB=A1AELNB+1,^A1AE(11005,DA(1),"P",DA,"D",I,0)=^UTILITY($J,"A1AECP",A1AELNB) I ^(0)["|" S A1AEWFLG=""
"RTN","A1AECOPR",65,0)
 S:'$D(^A1AE(11005,DA(1),"P",DA,"D",0)) ^(0)="" S $P(^A1AE(11005,DA(1),"P",DA,"D",0),"^",3)=A1AEBOT+A1AELNCT
"RTN","A1AECOPR",66,0)
 Q
"RTN","A1AECOPR",67,0)
 ;
"RTN","A1AECOPR",68,0)
CRCHK I $E(IOST,1)="C" W !!,*7,"Press RETURN to continue or '^' to stop " R X1:DTIME
"RTN","A1AECOPR",69,0)
 Q
"RTN","A1AECOPY")
0^6^B25072086
"RTN","A1AECOPY",1,0)
A1AECOPY ;RMO/ALBANY ; Copy Routine Code into Routine Description;24 NOV 87 11:00 am
"RTN","A1AECOPY",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AECOPY",3,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;12/02/92
"RTN","A1AECOPY",4,0)
 S A1AEROU=X I $D(^("OS",^DD("OS"),18)) X ^(18)
"RTN","A1AECOPY",5,0)
 I '$T W !!?3,"The routine ",X," does not reside in the routine directory." G Q
"RTN","A1AECOPY",6,0)
ASK S A1AERD("A")="Copy routine lines from the routine directory into the description? ",A1AERD(0)="S",A1AERD(1)="Yes^select lines to copy from the routine "_A1AEROU,A1AERD(2)="No^not copy any lines",A1AERD("B")=2
"RTN","A1AECOPY",7,0)
 D SET^A1AERD K A1AERD D ASKLIN:"Y"[$E(X,1)
"RTN","A1AECOPY",8,0)
 ;
"RTN","A1AECOPY",9,0)
Q W ! S X=A1AEROU K A1AEROU,^UTILITY($J,"A1AECP"),A1AELINE,A1AEFRLN,A1AETOLN,A1AEOFF,A1AEBLK,A1AEPGLN,A1AELNCT,A1AELNB,A1AELNIN,A1AEBOT,A1AENMSP,A1AEWFLG
"RTN","A1AECOPY",10,0)
 Q
"RTN","A1AECOPY",11,0)
 ;
"RTN","A1AECOPY",12,0)
ASKLIN S IOP="HOME" D ^%ZIS K IOP S A1AERD("A")="from" W ! D LINE Q:X="^"!(X="")  S A1AEFRLN=A1AELINE,A1AERD("A")="through",A1AERD("B")=$S(A1AEOFF:X_"+"_A1AEOFF,1:X) D LINE Q:X="^"  S A1AETOLN=$S(X="":A1AEFRLN,1:A1AELINE) K A1AERD
"RTN","A1AECOPY",13,0)
 D SETUTI,ASKCOP:$D(^UTILITY($J,"A1AECP")) W:'$D(^UTILITY($J,"A1AECP")) !?3,"...No lines to copy"
"RTN","A1AECOPY",14,0)
 I $D(A1AEWFLG) W !!,*7,"NOTE: The text which you have just copied contains the word-processing",!?6,"window symbol '|'. To display the symbol as a character in the",!?6,"description, edit the line which contains '|' and put in '||'.",! H 2
"RTN","A1AECOPY",15,0)
 Q
"RTN","A1AECOPY",16,0)
 ;
"RTN","A1AECOPY",17,0)
LINE W !?2,"Copy ",A1AERD("A")," line: " W:$D(A1AERD("B")) A1AERD("B")_"// " R X:DTIME S:'$T X="^" Q:X="^"!(X="")  I X["?" W !?3,"Enter line to copy ",A1AERD("A") G LINE
"RTN","A1AECOPY",18,0)
 S A1AEOFF=+$P(X,"+",2) I X["+",'A1AEOFF W !?3,*7,"Line offset should be a numeric value" G LINE
"RTN","A1AECOPY",19,0)
 S X=$P(X,"+",1) I '(X?1U.UN!(X?1"%".UN)!(X?1N.N))!($L(X)>8) W !?3,*7,"Line label should be 1-8 characters" G LINE
"RTN","A1AECOPY",20,0)
 X "ZL @A1AEROU S A1AEPGLN=$T(@X)" I A1AEPGLN="" W !?3,*7,"Line label ",X," not found in ",A1AEROU G LINE
"RTN","A1AECOPY",21,0)
 S A1AEBLK=" " X "ZL @A1AEROU F A1AELNB=1:1 Q:$P($T(+A1AELNB),A1AEBLK,1)=X" S A1AELINE=A1AELNB+A1AEOFF
"RTN","A1AECOPY",22,0)
 I A1AEOFF X "ZL @A1AEROU S A1AEPGLN=$T(+A1AELINE)" I A1AEPGLN="" W !?3,*7,"Line ",X,"+",A1AEOFF," not found in ",A1AEROU G LINE
"RTN","A1AECOPY",23,0)
 I $D(A1AEFRLN),A1AELINE<A1AEFRLN W !?3,*7,"Line copying through precedes line copying from" G LINE
"RTN","A1AECOPY",24,0)
 Q
"RTN","A1AECOPY",25,0)
 ;
"RTN","A1AECOPY",26,0)
SETUTI K ^UTILITY($J,"A1AECP") X "ZL @A1AEROU S A1AELNCT=0 F A1AELNB=A1AEFRLN:1:A1AETOLN S A1AEPGLN=$T(+A1AELNB) S A1AELNCT=A1AELNCT+1,^UTILITY($J,""A1AECP"",A1AELNCT)=$S(""$TXT$ROU$END""'[$E(A1AEPGLN,1,4):A1AEPGLN,1:""xx""_$E(A1AEPGLN,5,245))"
"RTN","A1AECOPY",27,0)
 Q
"RTN","A1AECOPY",28,0)
 ;
"RTN","A1AECOPY",29,0)
ASKCOP W ! F A1AELNB=1:1:A1AELNCT I $D(^UTILITY($J,"A1AECP",A1AELNB)) W !,A1AELNB,"> ",^(A1AELNB)
"RTN","A1AECOPY",30,0)
 S A1AERD("A")="Do you want to copy "_$S(A1AELNCT=1:"this line",1:"these "_A1AELNCT_" lines")_"? "
"RTN","A1AECOPY",31,0)
 S A1AERD(0)="S",A1AERD(1)="Yes^copy these lines into the routine description",A1AERD(2)="No^not copy these lines",A1AERD("B")=2 D SET^A1AERD K A1AERD Q:X="^"  ;;;!("N"[$E(X,1))
"RTN","A1AECOPY",32,0)
 I "nN"[$E(X,1) G ASKLIN
"RTN","A1AECOPY",33,0)
 S A1AEBOT=$S($D(^A1AE(11005,DA(1),"P",DA,"D",0)):$P(^(0),"^",3),1:0),A1AELNIN=0 D INSERT:A1AEBOT,COPY:'A1AEBOT
"RTN","A1AECOPY",34,0)
 Q
"RTN","A1AECOPY",35,0)
 ;
"RTN","A1AECOPY",36,0)
INSERT R !!,"Insert code after what description line: ",X:DTIME Q:'$T!(X="^")  I X<0!(X>A1AEBOT)!(X'?1N.N)!(X["?") G HELP
"RTN","A1AECOPY",37,0)
 S A1AELNIN=X I A1AELNIN<A1AEBOT S A1AEFRLN=A1AEBOT+A1AELNCT,A1AETOLN=A1AELNIN+1+A1AELNCT F I=A1AEFRLN:-1:A1AETOLN S ^A1AE(11005,DA(1),"P",DA,"D",I,0)=^A1AE(11005,DA(1),"P",DA,"D",(I-A1AELNCT),0)
"RTN","A1AECOPY",38,0)
 D COPY
"RTN","A1AECOPY",39,0)
 Q
"RTN","A1AECOPY",40,0)
 ;
"RTN","A1AECOPY",41,0)
HELP I X["??" W @IOF F I=0:0 S I=+$O(^A1AE(11005,DA(1),"P",DA,"D",I)) Q:'I  W !,I,"> ",^(I,0) I ($Y+6)>IOSL D CRCHK Q:X1="^"  W @IOF
"RTN","A1AECOPY",42,0)
 I X'["??" W:X'["?" *7 W !!?3,"Enter a line number between 0 and ",A1AEBOT,", or",!?3,"'??' to list current description."
"RTN","A1AECOPY",43,0)
 G INSERT
"RTN","A1AECOPY",44,0)
 ;
"RTN","A1AECOPY",45,0)
COPY S A1AELNB=0,A1AEFRLN=A1AELNIN+1,A1AETOLN=A1AELNIN+A1AELNCT F I=A1AEFRLN:1:A1AETOLN S A1AELNB=A1AELNB+1,^A1AE(11005,DA(1),"P",DA,"D",I,0)=^UTILITY($J,"A1AECP",A1AELNB) I ^(0)["|" S A1AEWFLG=""
"RTN","A1AECOPY",46,0)
 S:'$D(^A1AE(11005,DA(1),"P",DA,"D",0)) ^(0)="" S $P(^A1AE(11005,DA(1),"P",DA,"D",0),"^",3)=A1AEBOT+A1AELNCT
"RTN","A1AECOPY",47,0)
 Q
"RTN","A1AECOPY",48,0)
 ;
"RTN","A1AECOPY",49,0)
CRCHK I $E(IOST,1)="C" W !!,*7,"Press RETURN to continue or '^' to stop " R X1:DTIME
"RTN","A1AECOPY",50,0)
 Q
"RTN","A1AEDD1")
0^63^B3134313
"RTN","A1AEDD1",1,0)
A1AEDD1 ;VEN/JLI - Data Dictionary related code ;2014-10-20  11:07 PM
"RTN","A1AEDD1",2,0)
 ;;2.4;PATCH MODULE;;;Build 14
"RTN","A1AEDD1",3,0)
 D EN^%ut("A1AEUDD")
"RTN","A1AEDD1",4,0)
 Q
"RTN","A1AEDD1",5,0)
 ;
"RTN","A1AEDD1",6,0)
PLU949 ; pre-lookup transform for version field of file 9.4 add .0 to integer if exists
"RTN","A1AEDD1",7,0)
 ; ZEXCEPT: X already defined before lookup attempt starts
"RTN","A1AEDD1",8,0)
 I X?1.N1"."1.N.1A.2N Q
"RTN","A1AEDD1",9,0)
 I X?1.N.1A.2N D  Q  ; contains a numeric, but no decimal
"RTN","A1AEDD1",10,0)
 . N FOUND,DONE,VALUE,I
"RTN","A1AEDD1",11,0)
 . S FOUND=0,DONE=0
"RTN","A1AEDD1",12,0)
 . F I=1:1:$L(X) S VALUE="0123456789"[$E(X,I) S:VALUE FOUND=1 I FOUND,'VALUE S X=$E(X,1,I-1)_".0"_$E(X,I,$L(X)),DONE=1 Q
"RTN","A1AEDD1",13,0)
 . I FOUND,'DONE S X=X_".0" ; digit was the last character
"RTN","A1AEDD1",14,0)
 . Q
"RTN","A1AEDD1",15,0)
 I X?1.N1".".1A.2N S X=$P(X,".")_".0"_$P(X,".",2) ; no value following decimal
"RTN","A1AEDD1",16,0)
 Q
"RTN","A1AEDD1",17,0)
 ;
"RTN","A1AEDD1",18,0)
PLU96 ; Pre-Lookup Transform for Build file (#9.6)
"RTN","A1AEDD1",19,0)
PLU97 ; Pre-Lookup Transform for Install file (#9.7)
"RTN","A1AEDD1",20,0)
 ; ZEXCEPT: X defined before call is made
"RTN","A1AEDD1",21,0)
 I X?1A1.ANE1AP1.N1"."1.N Q  ; ONE CORRECT FORMAT WITH 1 OR more decimal places
"RTN","A1AEDD1",22,0)
 I X?1A1.APN1"*"1.N1"."1.N1"*"1.N Q  ; ANOTHER CORRECT FORMAT
"RTN","A1AEDD1",23,0)
 ; need to fix based on format
"RTN","A1AEDD1",24,0)
 I X?1A1.APN1"*"1.N1"."1"*"1.N.1A.2N S X=$P(X,"*")_"*"_$P(X,"*",2)_"0"_"*"_$P(X,"*",3) Q
"RTN","A1AEDD1",25,0)
 I X?1A1.APN1"*"1.N1"*"1.N.1A.2N S X=$P(X,"*")_"*"_$P(X,"*",2)_".0"_"*"_$P(X,"*",3) Q
"RTN","A1AEDD1",26,0)
 I X?1A1.ANE1AP1.N1"." S X=X_"0" Q
"RTN","A1AEDD1",27,0)
 I X?1A1.ANE1AP1.N S X=X_".0" Q
"RTN","A1AEDD1",28,0)
 ; any other input may be a partial - since it doesn't have a number in it.
"RTN","A1AEDD1",29,0)
 Q
"RTN","A1AEDD1",30,0)
 ;
"RTN","A1AEDD1",31,0)
PLU11005 ; pre-lookup transform for DHCP PATCHES file (#11005)
"RTN","A1AEDD1",32,0)
 ; ZEXCEPT: X defined before entry is made
"RTN","A1AEDD1",33,0)
 N VAL
"RTN","A1AEDD1",34,0)
 S VAL=$L(X)
"RTN","A1AEDD1",35,0)
 I X[".0",$E(X,VAL-1,VAL)=".0" S X=$P(X,".0")
"RTN","A1AEDD1",36,0)
 I X?1A1.APN1"*"1.N1"."1"0"1"*"1.N.1A.2N S X=$P(X,".0")_$P(X,".0",2)
"RTN","A1AEDD1",37,0)
 Q
"RTN","A1AEDD1",38,0)
 ;
"RTN","A1AEHSVR")
0^7^B8406742
"RTN","A1AEHSVR",1,0)
A1AEHSVR ;ISF/RWF - HFS Checksum Msg server ;10/17/07  15:19
"RTN","A1AEHSVR",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEHSVR",3,0)
EN ;Save the HFS Checksum message for when the patch is released.
"RTN","A1AEHSVR",4,0)
 N IEN,TYPE,DATE,PATCH,PACKAGE,FDA,FIE,Y,X,CNT,EXIT
"RTN","A1AEHSVR",5,0)
 K ^TMP("A1AE",$J)
"RTN","A1AEHSVR",6,0)
 S XMER=0,(PACKAGE,PATCH)="",CNT=0,FDA=$NA(^TMP("A1AE",$J))
"RTN","A1AEHSVR",7,0)
 F  X XMREC Q:XMER  D  Q:'IEN
"RTN","A1AEHSVR",8,0)
 . S TYPE=+$P(XMRG,"~~",2),DATA=$E(XMRG,5,255)
"RTN","A1AEHSVR",9,0)
 . I $T(@TYPE) D @TYPE
"RTN","A1AEHSVR",10,0)
 . Q
"RTN","A1AEHSVR",11,0)
 I PATCH="" D ERR("BAD MESSAGE")
"RTN","A1AEHSVR",12,0)
 D FWD ;Send copy to mail group
"RTN","A1AEHSVR",13,0)
 K ^TMP("A1AE",$J)
"RTN","A1AEHSVR",14,0)
 Q
"RTN","A1AEHSVR",15,0)
 ;
"RTN","A1AEHSVR",16,0)
1 ;Patch name
"RTN","A1AEHSVR",17,0)
 N C,I,%
"RTN","A1AEHSVR",18,0)
 S PATCH=DATA I PATCH="" Q
"RTN","A1AEHSVR",19,0)
 I PATCH[" " S %=$L(PATCH," "),PATCH=$P(PATCH," ",1,%-1)_"*"_$P(PATCH," ",%)_"*0"
"RTN","A1AEHSVR",20,0)
 I $L(PATCH,"*")=3 S $P(PATCH,"*",2)=+$P(PATCH,"*",2)
"RTN","A1AEHSVR",21,0)
 ;
"RTN","A1AEHSVR",22,0)
 S IEN=$$FIND1^DIC(11005,,"M",PATCH,)
"RTN","A1AEHSVR",23,0)
 I 'IEN D:0 ERR("Could not find patch: "_PATCH) Q
"RTN","A1AEHSVR",24,0)
 S C=^A1AE(11005,IEN,0) I $P(C,U,8)'="u" S IEN=0 Q  ;Only save if underdev
"RTN","A1AEHSVR",25,0)
 I '$D(^A1AE(11005.5,IEN,0)) D  I IEN<1 D ERR("COULD NOT ADD: "_PATCH) Q
"RTN","A1AEHSVR",26,0)
 . S DIC(0)="ML",DIC="^A1AE(11005.5,",X=PATCH D ^DIC
"RTN","A1AEHSVR",27,0)
 . S IEN=+Y
"RTN","A1AEHSVR",28,0)
 S PACKAGE=$P(^A1AE(11005,IEN,0),U,2)
"RTN","A1AEHSVR",29,0)
 S @FDA@(11005.5,IEN_",",2)=XMZ,@FDA@(11005.5,IEN_",",3)=$$NOW^XLFDT
"RTN","A1AEHSVR",30,0)
 Q
"RTN","A1AEHSVR",31,0)
 ;
"RTN","A1AEHSVR",32,0)
2 ;Linked Patchs
"RTN","A1AEHSVR",33,0)
 S CNT=CNT+1,FIE="?+"_CNT_","_IEN_",",@FDA@(11005.521,FIE,.01)=DATA
"RTN","A1AEHSVR",34,0)
 Q
"RTN","A1AEHSVR",35,0)
 ;
"RTN","A1AEHSVR",36,0)
3 ;Add Routines. RTN^install/delete^ien_in_build^Checksum~patch list
"RTN","A1AEHSVR",37,0)
 N RN,CS,ID,PL
"RTN","A1AEHSVR",38,0)
 S DATA=$TR(DATA,"~","^") ;Fix bad version
"RTN","A1AEHSVR",39,0)
 S RN=$P(DATA,"^",1),ID=$P(DATA,"^",2),CS=$P(DATA,"^",4),PL=$P(DATA,"^",5)
"RTN","A1AEHSVR",40,0)
 S CNT=CNT+1,FIE="?+"_CNT_","_IEN_","
"RTN","A1AEHSVR",41,0)
 S @FDA@(11005.511,FIE,.01)=RN,@FDA@(11005.511,FIE,2)=ID,@FDA@(11005.511,FIE,3)=CS,@FDA@(11005.511,FIE,5)=PL
"RTN","A1AEHSVR",42,0)
 K FIE
"RTN","A1AEHSVR",43,0)
 Q
"RTN","A1AEHSVR",44,0)
 ;
"RTN","A1AEHSVR",45,0)
8 ;From Domain
"RTN","A1AEHSVR",46,0)
 N X,Y,IX,FD,CD
"RTN","A1AEHSVR",47,0)
 S @FDA@(11005.5,IEN_",",5)=DATA
"RTN","A1AEHSVR",48,0)
 S FD=$RE(DATA)
"RTN","A1AEHSVR",49,0)
 ;See if from a authorized sender
"RTN","A1AEHSVR",50,0)
 I 'PACKAGE K FDA Q
"RTN","A1AEHSVR",51,0)
 S IX=0,CD="",X=0
"RTN","A1AEHSVR",52,0)
 F  S IX=$O(^DIC(9.4,PACKAGE,25,IX)) Q:'IX  S Y=^(IX,0) D  Q:X
"RTN","A1AEHSVR",53,0)
 . S Y=$P(^DIC(4.2,+Y,0),U)
"RTN","A1AEHSVR",54,0)
 . S CD=$RE(Y),X=($E(FD,1,$L(CD))=CD)
"RTN","A1AEHSVR",55,0)
 . Q
"RTN","A1AEHSVR",56,0)
 I 'X K FDA ;Don't accept if not from authorized domain
"RTN","A1AEHSVR",57,0)
 Q
"RTN","A1AEHSVR",58,0)
 ;Save data
"RTN","A1AEHSVR",59,0)
9 ;
"RTN","A1AEHSVR",60,0)
 Q:'$D(FDA)  Q:'IEN
"RTN","A1AEHSVR",61,0)
 D  ;Remove any previous routine info
"RTN","A1AEHSVR",62,0)
 . K ^A1AE(11005.5,IEN,1)
"RTN","A1AEHSVR",63,0)
 . Q
"RTN","A1AEHSVR",64,0)
 D  ;Clear Patch link
"RTN","A1AEHSVR",65,0)
 . N DA,DIK
"RTN","A1AEHSVR",66,0)
 . S DA(1)=IEN,DA=0,DIK="^A1AE(11005.5,"_IEN_",2,"
"RTN","A1AEHSVR",67,0)
 . F  S DA=$O(^A1AE(11005.5,IEN,2,DA)) Q:'DA  D ^DIK
"RTN","A1AEHSVR",68,0)
 . Q
"RTN","A1AEHSVR",69,0)
 K FIE D UPDATE^DIE("",FDA,"FIE")
"RTN","A1AEHSVR",70,0)
 Q
"RTN","A1AEHSVR",71,0)
 ;
"RTN","A1AEHSVR",72,0)
ERR(MSG) ;Report error
"RTN","A1AEHSVR",73,0)
 ;For now just send an alert
"RTN","A1AEHSVR",74,0)
 N XQA,XQAMSG,XQAOPT,XQAROU
"RTN","A1AEHSVR",75,0)
 S XQAMSG="HFS SERVER: "_MSG,XQA("G.A1AE PATCH ERRORS")=""
"RTN","A1AEHSVR",76,0)
 D SETUP^XQALERT
"RTN","A1AEHSVR",77,0)
 Q
"RTN","A1AEHSVR",78,0)
 ;
"RTN","A1AEHSVR",79,0)
FWD ;Forward message
"RTN","A1AEHSVR",80,0)
 Q:'$D(XMZ)
"RTN","A1AEHSVR",81,0)
 N XMDUZ
"RTN","A1AEHSVR",82,0)
 S XMY("G.A1AE HFS MESSAGES")=""
"RTN","A1AEHSVR",83,0)
 D ENT1^XMD
"RTN","A1AEHSVR",84,0)
 Q
"RTN","A1AEHSVR",85,0)
 ;
"RTN","A1AEHSVR",86,0)
TEST ;
"RTN","A1AEHSVR",87,0)
 N XMRG,XMER,XMREC,XMZ
"RTN","A1AEHSVR",88,0)
 W !,"Message number: " R XMZ:300 Q:'XMZ
"RTN","A1AEHSVR",89,0)
 S XMREC="D REC^XMS3"
"RTN","A1AEHSVR",90,0)
 D EN
"RTN","A1AEHSVR",91,0)
 Q
"RTN","A1AEK2M")
0^48^B151576275
"RTN","A1AEK2M",1,0)
A1AEK2M ; VEN/SMH - Load an HFS KIDS file into the Patch Module;2014-04-16  1:23 PM
"RTN","A1AEK2M",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEK2M",3,0)
 ;
"RTN","A1AEK2M",4,0)
 ; Based on code written by Dr. Cameron Schlehuber.
"RTN","A1AEK2M",5,0)
 ;
"RTN","A1AEK2M",6,0)
 ; Notes on the KIDS format and conversion procedure.
"RTN","A1AEK2M",7,0)
 ; NB: Notes moved to A1AEK2M0 to make space in this routine.
"RTN","A1AEK2M",8,0)
 ;
"RTN","A1AEK2M",9,0)
 ; TODO: File package entry into our system if it can't be found
"RTN","A1AEK2M",10,0)
 ;       - Hint: Finds KIDS EP that does the PKG subs
"RTN","A1AEK2M",11,0)
 ; TODO: I created fields latterly that hold the file names and file
"RTN","A1AEK2M",12,0)
 ;       paths to use. They are only used in the KIDs Version Control
"RTN","A1AEK2M",13,0)
 ;       breakout. They can be used to track all the mail information
"RTN","A1AEK2M",14,0)
 ;       rather than keep them in variables.
"RTN","A1AEK2M",15,0)
 ; TODO: The recursion code is very very first draft... needs to be
"RTN","A1AEK2M",16,0)
 ;       refined.
"RTN","A1AEK2M",17,0)
 ;
"RTN","A1AEK2M",18,0)
SD ; Restore patches from a single directory.
"RTN","A1AEK2M",19,0)
 ; Get path to HFS patches
"RTN","A1AEK2M",20,0)
 ; Order through all messages
"RTN","A1AEK2M",21,0)
 ; N DUZ S DUZ=.5,DUZ(0)="" ; Save DUZ from previous caller.
"RTN","A1AEK2M",22,0)
 N DIR,X,Y,DIROUT,DIRUT,DTOUT,DUOUT,DIROUT ; fur DIR
"RTN","A1AEK2M",23,0)
 S DIR(0)="F^2:255",DIR("A")="Full path of patches to load, up to but not including patch names"
"RTN","A1AEK2M",24,0)
 S DIR("B")=$G(^DISV(DUZ,"A1AEK2M-SB"))
"RTN","A1AEK2M",25,0)
 D ^DIR
"RTN","A1AEK2M",26,0)
 QUIT:Y="^"
"RTN","A1AEK2M",27,0)
 N ROOT S ROOT("SB")=Y  ; where we load files from... Single Build Root
"RTN","A1AEK2M",28,0)
 S ^DISV(DUZ,"A1AEK2M-SB")=Y
"RTN","A1AEK2M",29,0)
 ;
"RTN","A1AEK2M",30,0)
 S DIR(0)="F^2:255",DIR("A")="Full path of Multibuilds directory, in case I can't find a patch"
"RTN","A1AEK2M",31,0)
 S DIR("B")=$G(^DISV(DUZ,"A1AEK2M-MB"))
"RTN","A1AEK2M",32,0)
 D ^DIR
"RTN","A1AEK2M",33,0)
 QUIT:Y="^"
"RTN","A1AEK2M",34,0)
 S ROOT("MB")=Y ; Multi Build Root
"RTN","A1AEK2M",35,0)
 S ^DISV(DUZ,"A1AEK2M-MB")=Y
"RTN","A1AEK2M",36,0)
 D SILENT(.ROOT)
"RTN","A1AEK2M",37,0)
 QUIT
"RTN","A1AEK2M",38,0)
 ;
"RTN","A1AEK2M",39,0)
RECURSE ; Restore patches from a directory tree
"RTN","A1AEK2M",40,0)
 ; TODO: Document and clean.
"RTN","A1AEK2M",41,0)
 N DIR,X,Y,DIROUT,DIRUT,DTOUT,DUOUT,DIROUT ; fur DIR
"RTN","A1AEK2M",42,0)
 S DIR(0)="F^2:255",DIR("A")="Full path of patches to load, up to but not including patch names"
"RTN","A1AEK2M",43,0)
 S DIR("B")=$G(^DISV(DUZ,"A1AEK2M-RP")) ; Recurse Path
"RTN","A1AEK2M",44,0)
 D ^DIR
"RTN","A1AEK2M",45,0)
 QUIT:Y="^"
"RTN","A1AEK2M",46,0)
 N ROOT
"RTN","A1AEK2M",47,0)
 S ROOT=Y
"RTN","A1AEK2M",48,0)
 S ^DISV(DUZ,"A1AEK2M-RP")=ROOT
"RTN","A1AEK2M",49,0)
 N LVL S LVL=0
"RTN","A1AEK2M",50,0)
 N PATCHROOTS
"RTN","A1AEK2M",51,0)
 S PATCHROOTS=ROOT
"RTN","A1AEK2M",52,0)
 N MBROOT
"RTN","A1AEK2M",53,0)
 S PATCHROOTS("MB")=$$RECURSE2(PATCHROOTS)
"RTN","A1AEK2M",54,0)
 D RECURSE1(ROOT,.PATCHROOTS)
"RTN","A1AEK2M",55,0)
 QUIT
"RTN","A1AEK2M",56,0)
 ;
"RTN","A1AEK2M",57,0)
RECURSE1(ROOT,PATCHROOTS) ; Recurser
"RTN","A1AEK2M",58,0)
 ; TODO: Document and clean.
"RTN","A1AEK2M",59,0)
 ; ZEXCEPT: LVL - Newed above
"RTN","A1AEK2M",60,0)
 ; ZEXCEPT: L - no such variable. XINDEX is tripping up.
"RTN","A1AEK2M",61,0)
 N % ; Throw away variable
"RTN","A1AEK2M",62,0)
 S LVL=$G(LVL,0)
"RTN","A1AEK2M",63,0)
 N ARRAY S ARRAY("*")=""
"RTN","A1AEK2M",64,0)
 N FILES,TXTFILES
"RTN","A1AEK2M",65,0)
 I $$DEFDIR^%ZISH(ROOT)="/"!('$$LIST^%ZISH(ROOT,"ARRAY","FILES")) QUIT  ; DEFDIR bug!
"RTN","A1AEK2M",66,0)
 S ARRAY("*.txt")="",ARRAY("*.TXT")="",%=$$LIST^%ZISH(ROOT,"ARRAY","TXTFILES")
"RTN","A1AEK2M",67,0)
 I $D(TXTFILES) S PATCHROOTS("SB")=ROOT D SILENT(.PATCHROOTS)
"RTN","A1AEK2M",68,0)
 N F S F="" F  S F=$O(FILES(F)) Q:F=""  D
"RTN","A1AEK2M",69,0)
 . I $E(F)="." QUIT  ; Hidden file
"RTN","A1AEK2M",70,0)
 . W:$D(KBANDEBUG) ?LVL*5,F,!
"RTN","A1AEK2M",71,0)
 . S LVL=LVL+1
"RTN","A1AEK2M",72,0)
 . D RECURSE1(ROOT_F_"/")
"RTN","A1AEK2M",73,0)
 . S LVL=LVL-1
"RTN","A1AEK2M",74,0)
 QUIT
"RTN","A1AEK2M",75,0)
 ;
"RTN","A1AEK2M",76,0)
RECURSE2(ROOT) ; $$;Recurser to Find the Multibuild
"RTN","A1AEK2M",77,0)
 ; TODO: Document and clean.
"RTN","A1AEK2M",78,0)
 ; ZEXCEPT: MBROOT ; Newed at the caller
"RTN","A1AEK2M",79,0)
 ; ZEXCEPT: LVL - Newed above
"RTN","A1AEK2M",80,0)
 ; ZEXCEPT: L - no such variable. XINDEX is tripping up.
"RTN","A1AEK2M",81,0)
 I $$UP^XLFSTR(ROOT)["MULTIBUILD" S MBROOT=ROOT
"RTN","A1AEK2M",82,0)
 S LVL=$G(LVL,0)
"RTN","A1AEK2M",83,0)
 N ARRAY S ARRAY("*")=""
"RTN","A1AEK2M",84,0)
 N FILES
"RTN","A1AEK2M",85,0)
 I $$DEFDIR^%ZISH(ROOT)="/"!('$$LIST^%ZISH(ROOT,"ARRAY","FILES")) QUIT ""  ; DEFDIR bug!
"RTN","A1AEK2M",86,0)
 N F S F="" F  S F=$O(FILES(F)) Q:F=""  D  Q:$D(MBROOT)
"RTN","A1AEK2M",87,0)
 . I $E(F)="." QUIT  ; Hidden file
"RTN","A1AEK2M",88,0)
 . I $$DEFDIR^%ZISH(ROOT_F_"/")="/"!('$$LIST^%ZISH(ROOT_F_"/","ARRAY","FILES")) QUIT  ; DEFDIR bug!
"RTN","A1AEK2M",89,0)
 . W:$D(KBANDEBUG) ?LVL*5,F,!
"RTN","A1AEK2M",90,0)
 . S LVL=LVL+1
"RTN","A1AEK2M",91,0)
 . N % S %=$$RECURSE2(ROOT_F_"/")
"RTN","A1AEK2M",92,0)
 . S LVL=LVL-1
"RTN","A1AEK2M",93,0)
 QUIT $G(MBROOT)
"RTN","A1AEK2M",94,0)
 ;
"RTN","A1AEK2M",95,0)
SILENT(ROOT) ; Don't talk.
"RTN","A1AEK2M",96,0)
 ; All output is sent via EN^DDIOL. Set DIQUIET to redirect to a global.
"RTN","A1AEK2M",97,0)
 N FILES ; retrun array
"RTN","A1AEK2M",98,0)
 ;
"RTN","A1AEK2M",99,0)
 ; Load text files first
"RTN","A1AEK2M",100,0)
 N ARRAY
"RTN","A1AEK2M",101,0)
 S ARRAY("*.TXT")=""
"RTN","A1AEK2M",102,0)
 S ARRAY("*.txt")=""
"RTN","A1AEK2M",103,0)
 N Y S Y=$$LIST^%ZISH(ROOT("SB"),"ARRAY","FILES") I 'Y D EN^DDIOL("Error getting directory list") QUIT
"RTN","A1AEK2M",104,0)
 ;
"RTN","A1AEK2M",105,0)
 ; Loop through each text patches.
"RTN","A1AEK2M",106,0)
 N ERROR
"RTN","A1AEK2M",107,0)
 N PATCH S PATCH=""
"RTN","A1AEK2M",108,0)
 N RESULT ; Result of Load
"RTN","A1AEK2M",109,0)
 F  S PATCH=$O(FILES(PATCH)) Q:PATCH=""  D LOAD(.ROOT,PATCH,.ERROR,.RESULT) Q:$D(ERROR)
"RTN","A1AEK2M",110,0)
 ;
"RTN","A1AEK2M",111,0)
 ; Print out the patches we couldn't find.
"RTN","A1AEK2M",112,0)
 N I S I=""
"RTN","A1AEK2M",113,0)
 F  S I=$O(RESULT(I)) Q:I=""  I $D(RESULT(I,"CANTLOAD")) D 
"RTN","A1AEK2M",114,0)
 . D EN^DDIOL("Patch "_I_" from "_RESULT(I,"TXT")_" doesn't have a KIDS file")
"RTN","A1AEK2M",115,0)
 . D EN^DDIOL("Please load these KIDS files manually into the patch module.")
"RTN","A1AEK2M",116,0)
 ;
"RTN","A1AEK2M",117,0)
 ; Send bulletin regarding loaded patches
"RTN","A1AEK2M",118,0)
 D MAIL(.RESULT)
"RTN","A1AEK2M",119,0)
 ;
"RTN","A1AEK2M",120,0)
 QUIT
"RTN","A1AEK2M",121,0)
 ;
"RTN","A1AEK2M",122,0)
MAIL(RESULT) ; Private Proc to Package; Mail the result of the load to 
"RTN","A1AEK2M",123,0)
 ;  -> interested parties using the bulletin A1AE LOAD RELEASED PATCH
"RTN","A1AEK2M",124,0)
 N WP,CNT S CNT=1
"RTN","A1AEK2M",125,0)
 N I S I="" F  S I=$O(RESULT(I)) Q:I=""  D
"RTN","A1AEK2M",126,0)
 . S WP(CNT)="Patch designated as "_I_" has been loaded into the Patch Module.",CNT=CNT+1
"RTN","A1AEK2M",127,0)
 . S WP(CNT)="Text file: "_RESULT(I,"TXT"),CNT=CNT+1
"RTN","A1AEK2M",128,0)
 . I '$D(RESULT(I,"CANTLOAD")) S WP(CNT)="KID file: "_RESULT(I,"KID"),CNT=CNT+1
"RTN","A1AEK2M",129,0)
 . E  S WP(CNT)="KID file couldn't be loaded. Use the Edit Patch option to load the KIDS file in.",CNT=CNT+1
"RTN","A1AEK2M",130,0)
 . S WP(CNT)="Patch Module Entries: ",CNT=CNT+1
"RTN","A1AEK2M",131,0)
 . N J F J=0:0 S J=$O(RESULT(I,"MSG",J)) Q:'J  S WP(CNT)="Entry: "_J_" with designation "_$P(^A1AE(11005,J,0),U),CNT=CNT+1
"RTN","A1AEK2M",132,0)
 . S WP(CNT)=" ",CNT=CNT+1
"RTN","A1AEK2M",133,0)
 K I,CNT
"RTN","A1AEK2M",134,0)
 N PARM S PARM(1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","A1AEK2M",135,0)
 D SENDBULL^XMXAPI(DUZ,"A1AE LOAD RELEASED PATCH",.PARM,$NA(WP))
"RTN","A1AEK2M",136,0)
 QUIT
"RTN","A1AEK2M",137,0)
 ;
"RTN","A1AEK2M",138,0)
LOAD(ROOT,PATCH,ERROR,RESULT) ; Load TXT message, find KIDS, then load KIDS and mail.
"RTN","A1AEK2M",139,0)
 ; ROOT = File system directory (Ref)
"RTN","A1AEK2M",140,0)
 ; PATCH = File system .TXT patch name (including the .TXT) (Value)
"RTN","A1AEK2M",141,0)
 ; ERROR = Ref variable to indicate error.
"RTN","A1AEK2M",142,0)
 ; RESULT = Ref variable containing the results, including whether we could load the KIDS patch
"RTN","A1AEK2M",143,0)
 ;
"RTN","A1AEK2M",144,0)
 ; NB: I start from 2 just in case there is something I need to put in 1 (like $TXT)
"RTN","A1AEK2M",145,0)
 K ^TMP($J,"TXT")
"RTN","A1AEK2M",146,0)
 D EN^DDIOL("Loading description "_PATCH)
"RTN","A1AEK2M",147,0)
 N Y S Y=$$FTG^%ZISH(ROOT("SB"),PATCH,$NA(^TMP($J,"TXT",2,0)),3) I 'Y W !,"Error copying TXT to global" S ERROR=1 Q
"RTN","A1AEK2M",148,0)
 D CLEANHF^A1AEK2M0($NA(^TMP($J,"TXT"))) ; add $TXT/$END TXT if necessary
"RTN","A1AEK2M",149,0)
 ;
"RTN","A1AEK2M",150,0)
 ; Analyze message and extract data from it.
"RTN","A1AEK2M",151,0)
 N RTN ; RPC style return
"RTN","A1AEK2M",152,0)
 ;
"RTN","A1AEK2M",153,0)
 ;
"RTN","A1AEK2M",154,0)
 ; N OET S OET=$ET
"RTN","A1AEK2M",155,0)
 N $ET,$ES S $ET="D ANATRAP^A1AEK2M2(PATCH)" ; try/catch
"RTN","A1AEK2M",156,0)
 D ANALYZE^A1AEK2M2(.RTN,$NA(^TMP($J,"TXT")))
"RTN","A1AEK2M",157,0)
 ; S $ET=OET
"RTN","A1AEK2M",158,0)
 ; K OET
"RTN","A1AEK2M",159,0)
 ;
"RTN","A1AEK2M",160,0)
 K ^TMP($J,"MSG") ; Message array eventually to be mailed.
"RTN","A1AEK2M",161,0)
 ;
"RTN","A1AEK2M",162,0)
 ; Move the description into the msg array, making sure we have room for the $TXT.
"RTN","A1AEK2M",163,0)
 N I F I=0:0 S I=$O(RTN("DESC",I)) Q:'I  S ^TMP($J,"MSG",I+1,0)=RTN("DESC",I)
"RTN","A1AEK2M",164,0)
 S ^TMP($J,"MSG",1,0)=RTN("$TXT") ; $TXT
"RTN","A1AEK2M",165,0)
 N LS S LS=$O(^TMP($J,"MSG"," "),-1)
"RTN","A1AEK2M",166,0)
 S ^TMP($J,"MSG",LS+1,0)="$END TXT" ; $END TXT
"RTN","A1AEK2M",167,0)
 K I,LS
"RTN","A1AEK2M",168,0)
 ;
"RTN","A1AEK2M",169,0)
 N LASTSUB S LASTSUB=$O(^TMP($J,"TXT"," "),-1)
"RTN","A1AEK2M",170,0)
 ;
"RTN","A1AEK2M",171,0)
 ; Info only patch?
"RTN","A1AEK2M",172,0)
 N INFOONLY S INFOONLY=$$INFOONLY(.RTN) ; Info Only patch?
"RTN","A1AEK2M",173,0)
 I INFOONLY D EN^DDIOL(PATCH_" is an Info Only patch.")
"RTN","A1AEK2M",174,0)
 ;
"RTN","A1AEK2M",175,0)
 ; Load KIDS message starting into the last subscript + 1 from the text node
"RTN","A1AEK2M",176,0)
 ; Only if not informational!!! -- THIS CHANGED NOW B/C VA HAS SOME PATCHES THAT ARE INFORMATIONAL AND HAVE KIDS BUILDS
"RTN","A1AEK2M",177,0)
 K ^TMP($J,"KID")
"RTN","A1AEK2M",178,0)
 N KIDFIL S KIDFIL=$$KIDFIL^A1AEK2M0(.ROOT,PATCH,.RTN,$NA(^TMP($J,"KID"))) ; Load the KIDS file
"RTN","A1AEK2M",179,0)
 ;
"RTN","A1AEK2M",180,0)
 ; Fill in results array
"RTN","A1AEK2M",181,0)
 S RESULT(RTN("DESIGNATION"),"TXT")=PATCH
"RTN","A1AEK2M",182,0)
 S RESULT(RTN("DESIGNATION"),"KID")=KIDFIL
"RTN","A1AEK2M",183,0)
 I INFOONLY S RESULT(RTN("DESIGNATION"),"KID")="Info Only Patch"
"RTN","A1AEK2M",184,0)
 N CANTLOAD S CANTLOAD=0
"RTN","A1AEK2M",185,0)
 ; if we can't find it, and it isn't info, put it in this array.
"RTN","A1AEK2M",186,0)
 I KIDFIL="",'INFOONLY S RESULT(RTN("DESIGNATION"),"CANTLOAD")=PATCH,CANTLOAD=1
"RTN","A1AEK2M",187,0)
 ;
"RTN","A1AEK2M",188,0)
 ; If we loaded the KIDS build, move it over.
"RTN","A1AEK2M",189,0)
 I $D(^TMP($J,"KID")) D
"RTN","A1AEK2M",190,0)
 . N I F I=1:1 Q:'$D(^TMP($J,"KID",I))  S ^TMP($J,"MSG",LASTSUB+I,0)=^TMP($J,"KID",I)
"RTN","A1AEK2M",191,0)
 ; 
"RTN","A1AEK2M",192,0)
 ; debug
"RTN","A1AEK2M",193,0)
 ; S $ET="B"
"RTN","A1AEK2M",194,0)
 ; debug
"RTN","A1AEK2M",195,0)
 ;
"RTN","A1AEK2M",196,0)
 ; Add dependencies in description (temporary or permanent... I don't know now).
"RTN","A1AEK2M",197,0)
 D PREREQAD(.RTN)
"RTN","A1AEK2M",198,0)
 ;
"RTN","A1AEK2M",199,0)
 ; Load whole thing and split
"RTN","A1AEK2M",200,0)
 D ADD0(.RTN,$NA(^TMP($J,"MSG")),CANTLOAD,INFOONLY,.RESULT,$$DEFDIR^%ZISH("./")_ROOT("SB"),PATCH,KIDFIL)
"RTN","A1AEK2M",201,0)
 ;
"RTN","A1AEK2M",202,0)
 ;
"RTN","A1AEK2M",203,0)
 ; Deliver the message
"RTN","A1AEK2M",204,0)
 ; DON'T DO THIS ANYMORE -- WILL DELETE
"RTN","A1AEK2M",205,0)
 ; N XMERR,XMZ
"RTN","A1AEK2M",206,0)
 ; D SENDMSG^XMXAPI(.5,XMSUBJ,$NA(^TMP($J,"MSG")),"XXX@Q-PATCH.OSEHRA.ORG",,.XMZ) ; after
"RTN","A1AEK2M",207,0)
 ; I $D(XMERR) W !,"MailMan error, see ^TMP(""XMERR"",$J)" S ERROR=1 Q
"RTN","A1AEK2M",208,0)
 ; Set MESSAGE TYPE to KIDS build
"RTN","A1AEK2M",209,0)
 ; S $P(^XMB(3.9,XMZ,0),"^",7)="K"
"RTN","A1AEK2M",210,0)
 ;
"RTN","A1AEK2M",211,0)
 ; Kill temp globals
"RTN","A1AEK2M",212,0)
 K ^TMP($J,"KID"),^("TXT"),^("MSG")
"RTN","A1AEK2M",213,0)
 ;
"RTN","A1AEK2M",214,0)
 QUIT
"RTN","A1AEK2M",215,0)
 ;
"RTN","A1AEK2M",216,0)
ADD0(RTN,MSGGLO,CANTLOAD,INFOONLY,RESULT,ROOTPATH,TXTFIL,KIDFIL) ; Wrapper around all addition functions
"RTN","A1AEK2M",217,0)
 ;
"RTN","A1AEK2M",218,0)
        ; In case we are invoked from A1AEPSVR, default these so we won't crash
"RTN","A1AEK2M",219,0)
        S ROOTPATH=$G(ROOTPATH)
"RTN","A1AEK2M",220,0)
        S TXTFIL=$G(TXTFIL)
"RTN","A1AEK2M",221,0)
        S KIDFIL=$G(KIDFIL)
"RTN","A1AEK2M",222,0)
        ;
"RTN","A1AEK2M",223,0)
 ; ** WARNING ** NEXT 2 LINES ARE IMPORTANT AND CONFUSING - I WOULD LOVE TO CHANGE IT.
"RTN","A1AEK2M",224,0)
 N OLDDESIGNATION S OLDDESIGNATION=RTN("DESIGNATION")
"RTN","A1AEK2M",225,0)
 ; Change designation into Patch Module format from KIDS format
"RTN","A1AEK2M",226,0)
 S RTN("DESIGNATION")=$$K2PMD(RTN("DESIGNATION"))
"RTN","A1AEK2M",227,0)
 ; ZEXCEPT: A1AEPKIF is created by PKGADD in the ST.
"RTN","A1AEK2M",228,0)
 D PKGADD(RTN("DESIGNATION"))            ; Add to Patch Module Package file
"RTN","A1AEK2M",229,0)
 D PKGSETUP(A1AEPKIF,.RTN)               ; And set it up.
"RTN","A1AEK2M",230,0)
 D VERSETUP(A1AEPKIF,RTN("DESIGNATION")) ; Add its version; ZEXCEPT: A1AEVR - Version leaks
"RTN","A1AEK2M",231,0)
 N DA S DA=$$ADDPATCH^A1AEK2M0(A1AEPKIF,A1AEVR,.RTN,MSGGLO,CANTLOAD,INFOONLY,ROOTPATH,TXTFIL,KIDFIL)  ; ZEXCEPT: A1AENB,A1AEPD
"RTN","A1AEK2M",232,0)
 D ASSERT(DA)                            ; Assert that we obtained an IEN
"RTN","A1AEK2M",233,0)
 D ASSERT($P(RTN("DESIGNATION"),"*",3)=A1AENB) ; Assert that the Number is the same as the patch number
"RTN","A1AEK2M",234,0)
 D ASSERT(RTN("DESIGNATION")=A1AEPD) ; Assert that the designation is the same as the Patch Designation
"RTN","A1AEK2M",235,0)
 ; 
"RTN","A1AEK2M",236,0)
 S RESULT(OLDDESIGNATION,"MSG",DA)="" ; have to use old design b/c we just changed it.
"RTN","A1AEK2M",237,0)
 ; Now, add the Primary forked version of the patch
"RTN","A1AEK2M",238,0)
 N DA D
"RTN","A1AEK2M",239,0)
 . N DERIVEDPATCH M DERIVEDPATCH=RTN
"RTN","A1AEK2M",240,0)
 . N PRIM S PRIM=$$PRIMSTRM^A1AEUTL()
"RTN","A1AEK2M",241,0)
 . S DERIVEDPATCH("ORIG-DESIGNATION")=DERIVEDPATCH("DESIGNATION")
"RTN","A1AEK2M",242,0)
 . S $P(DERIVEDPATCH("DESIGNATION"),"*",3)=$P(DERIVEDPATCH("DESIGNATION"),"*",3)+PRIM-1
"RTN","A1AEK2M",243,0)
 . S DA=$$ADDPATCH^A1AEK2M0(A1AEPKIF,A1AEVR,.DERIVEDPATCH,MSGGLO,CANTLOAD,INFOONLY,ROOTPATH,TXTFIL,KIDFIL)  ; ZEXCEPT: A1AENB,A1AEPD
"RTN","A1AEK2M",244,0)
 . D ASSERT(DA)                            ; Assert that we obtained an IEN
"RTN","A1AEK2M",245,0)
 . D ASSERT($$GET1^DIQ(11005,DA,5.2)=DERIVEDPATCH("ORIG-DESIGNATION")) ; Original designation should be retained in derived field
"RTN","A1AEK2M",246,0)
 . D EN^DDIOL("Forked "_DERIVEDPATCH("ORIG-DESIGNATION")_" into "_DERIVEDPATCH("DESIGNATION"))
"RTN","A1AEK2M",247,0)
 . S RESULT(OLDDESIGNATION,"MSG",DA)="" ; ditto... see above.
"RTN","A1AEK2M",248,0)
 QUIT
"RTN","A1AEK2M",249,0)
 ;
"RTN","A1AEK2M",250,0)
K2PMD(PATCH) ; Private to package; $$; Kids to Patch Module designation. Code by Wally from A1AEHSVR.
"RTN","A1AEK2M",251,0)
 N %
"RTN","A1AEK2M",252,0)
 I PATCH[" " S %=$L(PATCH," "),PATCH=$P(PATCH," ",1,%-1)_"*"_$P(PATCH," ",%)_"*0"
"RTN","A1AEK2M",253,0)
 I $L(PATCH,"*")=3 S $P(PATCH,"*",2)=+$P(PATCH,"*",2)
"RTN","A1AEK2M",254,0)
 Q PATCH
"RTN","A1AEK2M",255,0)
 ;
"RTN","A1AEK2M",256,0)
PKGADD(DESIGNATION) ; Proc; Private to this routine; Add package to Patch Module
"RTN","A1AEK2M",257,0)
 ; Input: Designation: Patch designation AAA*1*22; By value
"RTN","A1AEK2M",258,0)
 ; ZEXCEPT: A1AEPK,A1AEPKIF,A1AEPKNM - Created by PKG^A1AEUTL
"RTN","A1AEK2M",259,0)
 ;
"RTN","A1AEK2M",260,0)
 ; When doing lookups for laygo, only look in the Package file's C index for designation.
"RTN","A1AEK2M",261,0)
 N DIC S DIC("PTRIX",11007,.01,9.4)="C"
"RTN","A1AEK2M",262,0)
 N A1AE S A1AE(0)="XLM" ; eXact match, Laygo, Multiple Indexes
"RTN","A1AEK2M",263,0)
 N X S X=$P(DESIGNATION,"*") ; Input to ^DIC
"RTN","A1AEK2M",264,0)
 D PKG^A1AEUTL
"RTN","A1AEK2M",265,0)
 ; ZEXCEPT: Y leaks from PKG^A1AEUTL
"RTN","A1AEK2M",266,0)
 I $P($G(Y),U,3) D EN^DDIOL("Added Package "_DESIGNATION_" to "_$P(^A1AE(11007,0),U))
"RTN","A1AEK2M",267,0)
 ;
"RTN","A1AEK2M",268,0)
 ; Check that the output variables from PKG^A1AEUTL are defined.
"RTN","A1AEK2M",269,0)
 D ASSERT(A1AEPKIF) ; Must be positive
"RTN","A1AEK2M",270,0)
 D ASSERT(A1AEPK=$P(DESIGNATION,"*")) ; PK must be the AAA
"RTN","A1AEK2M",271,0)
 D ASSERT($L(A1AEPKNM)) ; Must be defined.
"RTN","A1AEK2M",272,0)
 QUIT
"RTN","A1AEK2M",273,0)
 ;
"RTN","A1AEK2M",274,0)
PKGSETUP(A1AEPKIF,TXTINFO) ; Private; Setup package in Patch module
"RTN","A1AEK2M",275,0)
 ; ZEXCEPT: A1AEPKIF - Created by PKGADD
"RTN","A1AEK2M",276,0)
 N IENS S IENS=A1AEPKIF_","
"RTN","A1AEK2M",277,0)
 N A1AEFDA,DIERR
"RTN","A1AEK2M",278,0)
 S A1AEFDA(11007,IENS,2)="NO" ; USER SELECTION PERMITTED//^S X="NO"
"RTN","A1AEK2M",279,0)
 S A1AEFDA(11007,IENS,4)="NO" ; FOR TEST SITE ONLY?//^S X="NO"
"RTN","A1AEK2M",280,0)
 S A1AEFDA(11007,IENS,5)="YES" ; ASK PATCH DESCRIPTION COPY
"RTN","A1AEK2M",281,0)
 D FILE^DIE("EKT",$NA(A1AEFDA)) ; External, lock, transact
"RTN","A1AEK2M",282,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M",283,0)
 ;
"RTN","A1AEK2M",284,0)
 N A1AEFDA
"RTN","A1AEK2M",285,0)
 S A1AEFDA(11007.02,"?+1,"_IENS,.01)="`"_$$MKUSR(TXTINFO("VER"),"A1AE PHVER")  ; SUPPORT PERSONNEL
"RTN","A1AEK2M",286,0)
 S A1AEFDA(11007.02,"?+1,"_IENS,2)="V"  ; VERIFY PERSONNEL
"RTN","A1AEK2M",287,0)
 S A1AEFDA(11007.03,"?+2,"_IENS,.01)="`"_$$MKUSR(TXTINFO("DEV"),"A1AE DEVELOPER") ; DEVELOPMENT PERSONNEL
"RTN","A1AEK2M",288,0)
 S A1AEFDA(11007.03,"?+3,"_IENS,.01)="`"_$$MKUSR(TXTINFO("COM"),"A1AE DEVELOPER") ; DITTO
"RTN","A1AEK2M",289,0)
 D UPDATE^DIE("E",$NA(A1AEFDA))
"RTN","A1AEK2M",290,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M",291,0)
 D ASSERT($D(^A1AE(11007,A1AEPKIF,"PB")))  ; Verifier Nodes
"RTN","A1AEK2M",292,0)
 D ASSERT($D(^A1AE(11007,A1AEPKIF,"PH")))  ; Developer Nodes
"RTN","A1AEK2M",293,0)
 QUIT
"RTN","A1AEK2M",294,0)
 ;
"RTN","A1AEK2M",295,0)
MKUSR(NAME,KEY) ; Private; Make Users for the Package
"RTN","A1AEK2M",296,0)
 Q:$O(^VA(200,"B",NAME,0)) $O(^(0)) ; Quit if the entry exists with entry
"RTN","A1AEK2M",297,0)
 ;
"RTN","A1AEK2M",298,0)
 ; Get initials
"RTN","A1AEK2M",299,0)
 D STDNAME^XLFNAME(.NAME,"CP")
"RTN","A1AEK2M",300,0)
 N INI S INI=$E(NAME("GIVEN"))_$E(NAME("MIDDLE"))_$E(NAME("FAMILY"))
"RTN","A1AEK2M",301,0)
 ;
"RTN","A1AEK2M",302,0)
 ; File user with key
"RTN","A1AEK2M",303,0)
 N A1AEFDA,A1AEIEN,A1AEERR,DIERR
"RTN","A1AEK2M",304,0)
 S A1AEFDA(200,"?+1,",.01)=NAME ; Name
"RTN","A1AEK2M",305,0)
 S A1AEFDA(200,"?+1,",1)=INI ; Initials
"RTN","A1AEK2M",306,0)
 S A1AEFDA(200,"?+1,",28)="NONE" ; Mail Code
"RTN","A1AEK2M",307,0)
 S:$L($G(KEY)) A1AEFDA(200.051,"?+3,?+1,",.01)="`"_$O(^DIC(19.1,"B",KEY,""))
"RTN","A1AEK2M",308,0)
 ;
"RTN","A1AEK2M",309,0)
 N DIC S DIC(0)="" ; An XREF in File 200 requires this.
"RTN","A1AEK2M",310,0)
 D UPDATE^DIE("E",$NA(A1AEFDA),$NA(A1AEIEN),$NA(A1AEERR)) ; Typical UPDATE
"RTN","A1AEK2M",311,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M",312,0)
 ;
"RTN","A1AEK2M",313,0)
 Q A1AEIEN(1) ;Provider IEN
"RTN","A1AEK2M",314,0)
 ;
"RTN","A1AEK2M",315,0)
VERSETUP(A1AEPKIF,DESIGNATION) ; Private; Setup version in 11007
"RTN","A1AEK2M",316,0)
 ; Input: - A1AEPKIF - Package IEN in 11007, value
"RTN","A1AEK2M",317,0)
 ;        - DESIGNATION - Package designation (XXX*1*3)
"RTN","A1AEK2M",318,0)
 ; Output: (In symbol table:) A1AEVR
"RTN","A1AEK2M",319,0)
 ; ZEXCEPT: A1AEVR - Created here by VER^A1AEUTL
"RTN","A1AEK2M",320,0)
 N X,A1AE S A1AE(0)="L" ; X is version number; input to ^DIC
"RTN","A1AEK2M",321,0)
 S X=$P(DESIGNATION,"*",2)
"RTN","A1AEK2M",322,0)
 D VER^A1AEUTL ; Internal API
"RTN","A1AEK2M",323,0)
 D ASSERT(A1AEVR=$P(DESIGNATION,"*",2))
"RTN","A1AEK2M",324,0)
 QUIT
"RTN","A1AEK2M",325,0)
 ;
"RTN","A1AEK2M",326,0)
INFOONLY(TXTINFO) ; Private to Package; Is this patch Info Only?
"RTN","A1AEK2M",327,0)
 N INFOONLY S INFOONLY=0
"RTN","A1AEK2M",328,0)
 N I F I=0:0 S I=$O(TXTINFO("CAT",I)) Q:'I  I TXTINFO("CAT",I)="Informational" S INFOONLY=1
"RTN","A1AEK2M",329,0)
 N I F I=0:0 S I=$O(TXTINFO("CAT",I)) Q:'I  I TXTINFO("CAT",I)="Routine" S INFOONLY=0   ; B/c somebody might screw up by adding addtional stuff.
"RTN","A1AEK2M",330,0)
 Q INFOONLY
"RTN","A1AEK2M",331,0)
 ;
"RTN","A1AEK2M",332,0)
PREREQAD(TXTINFO) ; Private to Package; Add pre-requisites to txt message
"RTN","A1AEK2M",333,0)
 I $O(TXTINFO("PREREQ","")) D                              ; If we have prerequisites
"RTN","A1AEK2M",334,0)
 . N LS S LS=$O(TXTINFO("DESC"," "),-1)                    ; Get last sub
"RTN","A1AEK2M",335,0)
 . N NS S NS=LS+1                                      ; New Sub
"RTN","A1AEK2M",336,0)
 . S TXTINFO("DESC",NS)=" ",NS=NS+1                        ; Empty line
"RTN","A1AEK2M",337,0)
 . S TXTINFO("DESC",NS)="Associated patches:",NS=NS+1      ; Put the data into (this line and next)
"RTN","A1AEK2M",338,0)
 . N I F I=1:1 Q:'$D(TXTINFO("PREREQ",I))  S TXTINFO("DESC",NS)=" - "_TXTINFO("PREREQ",I),NS=NS+1
"RTN","A1AEK2M",339,0)
 QUIT
"RTN","A1AEK2M",340,0)
 ;
"RTN","A1AEK2M",341,0)
 ;
"RTN","A1AEK2M",342,0)
ASSERT(X,Y) ; Assertion engine
"RTN","A1AEK2M",343,0)
 ; ZEXCEPT: XTMUNIT - Newed on a lower level of the stack if using M-Unit
"RTN","A1AEK2M",344,0)
 ; I X="" BREAK
"RTN","A1AEK2M",345,0)
 I $D(XTMUNIT) D CHKTF^XTMUNIT(X,$G(Y)) QUIT  ; if we are inside M-Unit, assert using that engine.
"RTN","A1AEK2M",346,0)
 I 'X D EN^DDIOL($G(Y)) S $EC=",U-ASSERTION-ERROR,"  ; otherwise, throw error if assertion fails.
"RTN","A1AEK2M",347,0)
 QUIT
"RTN","A1AEK2M0")
0^49^B191388494
"RTN","A1AEK2M0",1,0)
A1AEK2M0 ; VEN/SMH - A1AEK2M Continuation;2014-03-24  9:08 PM; 3/24/14 11:35am
"RTN","A1AEK2M0",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEK2M0",3,0)
 ;
"RTN","A1AEK2M0",4,0)
KIDFIL(ROOT,PATCH,TXTINFO,KIDGLO) ; $$; Private; Find the KIDS file that corresponds to a patch designation
"RTN","A1AEK2M0",5,0)
 ; ROOT: Ref, File system roots (MP = Multibuild folder)
"RTN","A1AEK2M0",6,0)
 ; PATCH: Val, Text file name
"RTN","A1AEK2M0",7,0)
 ; TXTINFO: Ref, the analyzed Text array
"RTN","A1AEK2M0",8,0)
 ; KIDGLO: Name, the Global into which to load the KIDS contents in PM format.
"RTN","A1AEK2M0",9,0)
 ;
"RTN","A1AEK2M0",10,0)
 ; This code is pretty iterative. It keeps trying different things until it finds the patch.
"RTN","A1AEK2M0",11,0)
 ;
"RTN","A1AEK2M0",12,0)
 N NOEXT S NOEXT=$P(PATCH,".",1,$L(PATCH,".")-1) ; no extension name
"RTN","A1AEK2M0",13,0)
 N KIDFIL0 ; Trial iteration variable
"RTN","A1AEK2M0",14,0)
 N DONE ; Loop exit
"RTN","A1AEK2M0",15,0)
 ;
"RTN","A1AEK2M0",16,0)
 ; Try by file name!
"RTN","A1AEK2M0",17,0)
 N % F %="KID","kid","KIDS","kids","KIDs","kidS" D  Q:$G(DONE)
"RTN","A1AEK2M0",18,0)
 . S KIDFIL0=NOEXT_"."_%
"RTN","A1AEK2M0",19,0)
 . N POP
"RTN","A1AEK2M0",20,0)
 . D OPEN^%ZISH("KID0",ROOT("SB"),KIDFIL0,"R")
"RTN","A1AEK2M0",21,0)
 . I POP S KIDFIL0="" QUIT
"RTN","A1AEK2M0",22,0)
 . D CLOSE^%ZISH("KID0")
"RTN","A1AEK2M0",23,0)
 . ;
"RTN","A1AEK2M0",24,0)
 . ; Okay. At this point we confirmed that the file exists. Is it right though?
"RTN","A1AEK2M0",25,0)
 . K ^TMP($J,"TKID"),^("ANKID") ; Temp KID; Analysis KID
"RTN","A1AEK2M0",26,0)
 . N % S %=$$FTG^%ZISH(ROOT("SB"),KIDFIL0,$NA(^TMP($J,"TKID",1,0)),3)   ; To Global
"RTN","A1AEK2M0",27,0)
 . I '% S $EC=",U-FILE-DISAPPEARED,"
"RTN","A1AEK2M0",28,0)
 . D ANALYZE^A1AEK2M1($NA(^TMP($J,"ANKID")),$NA(^TMP($J,"TKID"))) ; Analyze the file
"RTN","A1AEK2M0",29,0)
 . ;
"RTN","A1AEK2M0",30,0)
 . ; Now, make sure that the TXT file's designation is the same as the KIDS' patch no.
"RTN","A1AEK2M0",31,0)
 . ; Loop through every patch in the file and make sure at least one matches.
"RTN","A1AEK2M0",32,0)
 . N P S P=""
"RTN","A1AEK2M0",33,0)
 . F  S P=$O(^TMP($J,"ANKID",P)) Q:P=""  I $$K2PMD^A1AEK2M(P)=TXTINFO("DESIGNATION") S DONE=1 QUIT
"RTN","A1AEK2M0",34,0)
 . I $G(DONE) DO  QUIT
"RTN","A1AEK2M0",35,0)
 . . M @KIDGLO=^TMP($J,"ANKID",P)
"RTN","A1AEK2M0",36,0)
 . . D EN^DDIOL("Found patch "_TXTINFO("DESIGNATION")_" in "_KIDFIL0)
"RTN","A1AEK2M0",37,0)
 ;
"RTN","A1AEK2M0",38,0)
 ; If we don't have it, get all KIDS files and grab any one that has the
"RTN","A1AEK2M0",39,0)
 ; patch number in its name.
"RTN","A1AEK2M0",40,0)
 I $G(KIDFIL0)="" D  ; Still we don't have it.
"RTN","A1AEK2M0",41,0)
 . N A S A("*.kid")="",A("*.KID")=""  ; Search for these files
"RTN","A1AEK2M0",42,0)
 . S A("*.kid?")="",A("*.KID?")=""    ; and these too; but not the .json ones.
"RTN","A1AEK2M0",43,0)
 . N FILES  ; rtn array by name
"RTN","A1AEK2M0",44,0)
 . N % S %=$$LIST^%ZISH(ROOT("SB"),$NA(A),$NA(FILES)) ; ls
"RTN","A1AEK2M0",45,0)
 . ; I '% S $EC=",U-DIRECTORY-DISAPPEARED," ; should never happen; WRONG: It's a possibility.
"RTN","A1AEK2M0",46,0)
 . I '% QUIT  ; Try the multibuild directory next
"RTN","A1AEK2M0",47,0)
 . K %,A ; bye
"RTN","A1AEK2M0",48,0)
 . ;
"RTN","A1AEK2M0",49,0)
 . N F S F="" ; file looper
"RTN","A1AEK2M0",50,0)
 . N DONE ; control flag
"RTN","A1AEK2M0",51,0)
 . ; here's the core search for the file name containing a patch number
"RTN","A1AEK2M0",52,0)
 . ; Make sure that the patch doesn't contain spaces (package release)
"RTN","A1AEK2M0",53,0)
 . F  S F=$O(FILES(F)) Q:F=""  I TXTINFO("DESIGNATION")'[" ",F[$P(TXTINFO("DESIGNATION"),"*",3) D  Q:$G(DONE)
"RTN","A1AEK2M0",54,0)
 . . K ^TMP($J,"TKID"),^("ANKID") ; Temp KID; Analysis KID
"RTN","A1AEK2M0",55,0)
 . . N % S %=$$FTG^%ZISH(ROOT("SB"),F,$NA(^TMP($J,"TKID",1,0)),3)   ; To Global
"RTN","A1AEK2M0",56,0)
 . . I '% S $EC=",U-FILE-DISAPPEARED,"
"RTN","A1AEK2M0",57,0)
 . . D ANALYZE^A1AEK2M1($NA(^TMP($J,"ANKID")),$NA(^TMP($J,"TKID"))) ; Analyze the file
"RTN","A1AEK2M0",58,0)
 . . ;
"RTN","A1AEK2M0",59,0)
 . . ; Now, make sure that the TXT file's designation is the same as the KIDS' patch no.
"RTN","A1AEK2M0",60,0)
 . . ; Loop through every patch in the file and make sure at least one matches.
"RTN","A1AEK2M0",61,0)
 . . N P S P=""
"RTN","A1AEK2M0",62,0)
 . . F  S P=$O(^TMP($J,"ANKID",P)) Q:P=""  I $$K2PMD^A1AEK2M(P)=TXTINFO("DESIGNATION") S DONE=1 QUIT
"RTN","A1AEK2M0",63,0)
 . . I $G(DONE) DO  QUIT
"RTN","A1AEK2M0",64,0)
 . . . M @KIDGLO=^TMP($J,"ANKID",P)
"RTN","A1AEK2M0",65,0)
 . . . D EN^DDIOL("Found patch "_TXTINFO("DESIGNATION")_" in "_F)
"RTN","A1AEK2M0",66,0)
 . . . S KIDFIL0=F
"RTN","A1AEK2M0",67,0)
 . ;
"RTN","A1AEK2M0",68,0)
 . ; Patch zero special case (package release)
"RTN","A1AEK2M0",69,0)
 . ; If true, analyze each file for the patch zero notation
"RTN","A1AEK2M0",70,0)
 . I KIDFIL0="",(TXTINFO("DESIGNATION")'["*"!($P(TXTINFO("DESIGNATION"),"*",3)=0)) D
"RTN","A1AEK2M0",71,0)
 . . N F S F=""
"RTN","A1AEK2M0",72,0)
 . . F  S F=$O(FILES(F)) Q:F=""  D
"RTN","A1AEK2M0",73,0)
 . . . K ^TMP($J,"TKID"),^("ANKID") ; Temp KID; Analysis KID
"RTN","A1AEK2M0",74,0)
 . . . N % S %=$$FTG^%ZISH(ROOT("SB"),F,$NA(^TMP($J,"TKID",1,0)),3)   ; To Global
"RTN","A1AEK2M0",75,0)
 . . . I '% S $EC=",U-FILE-DISAPPEARED,"
"RTN","A1AEK2M0",76,0)
 . . . D ANALYZE^A1AEK2M1($NA(^TMP($J,"ANKID")),$NA(^TMP($J,"TKID"))) ; Analyze the file
"RTN","A1AEK2M0",77,0)
 . . . N P S P=""
"RTN","A1AEK2M0",78,0)
 . . . F  S P=$O(^TMP($J,"ANKID",P)) Q:P=""  I $$K2PMD^A1AEK2M(P)=$$K2PMD^A1AEK2M(TXTINFO("DESIGNATION")) S DONE=1 QUIT
"RTN","A1AEK2M0",79,0)
 . . . I $G(DONE) DO  QUIT
"RTN","A1AEK2M0",80,0)
 . . . . M @KIDGLO=^TMP($J,"ANKID",P)
"RTN","A1AEK2M0",81,0)
 . . . . D EN^DDIOL("Found patch "_TXTINFO("DESIGNATION")_" in "_F)
"RTN","A1AEK2M0",82,0)
 . . . . S KIDFIL0=F
"RTN","A1AEK2M0",83,0)
 ;
"RTN","A1AEK2M0",84,0)
 ; Now we have the hard case. We still don't have the file. 
"RTN","A1AEK2M0",85,0)
 ; Let's look in the Multibuilds directory
"RTN","A1AEK2M0",86,0)
 I $G(KIDFIL0)="" D
"RTN","A1AEK2M0",87,0)
 . ; Set-up XTMP
"RTN","A1AEK2M0",88,0)
 . ; NB: NO LOCKS B/C IT'S OKAY FOR MULTIPLE USERS TO FILE THIS SIMULTANEOUSLY
"RTN","A1AEK2M0",89,0)
 . ; NB (CONT): THERE ARE NO COUNTERS WHICH NEED TO BE SYNCHRONIZED.
"RTN","A1AEK2M0",90,0)
 . N XTMPS S XTMPS=$T(+0)
"RTN","A1AEK2M0",91,0)
 . N START S START=$$NOW^XLFDT()
"RTN","A1AEK2M0",92,0)
 . N PURGDT S PURGDT=$$FMADD^XLFDT(START,30)
"RTN","A1AEK2M0",93,0)
 . S ^XTMP(XTMPS,0)=PURGDT_U_START_U_"Analyzed Multibuilds Holding Area"
"RTN","A1AEK2M0",94,0)
 . ;
"RTN","A1AEK2M0",95,0)
 . ; Load the Multibuild file names
"RTN","A1AEK2M0",96,0)
 . N A S A("*.kid")="",A("*.KID")=""  ; Search for these files
"RTN","A1AEK2M0",97,0)
 . S A("*.kid?")="",A("*.KID?")=""    ; and these too; but not the .json ones.
"RTN","A1AEK2M0",98,0)
 . N FILES  ; rtn array by name
"RTN","A1AEK2M0",99,0)
 . N % S %=$$LIST^%ZISH(ROOT("MB"),$NA(A),$NA(FILES)) ; ls
"RTN","A1AEK2M0",100,0)
 . I '% S $EC=",U-DIRECTORY-DISAPPEARED," ; should never happen
"RTN","A1AEK2M0",101,0)
 . K %,A ; bye
"RTN","A1AEK2M0",102,0)
 . ;
"RTN","A1AEK2M0",103,0)
 . N F S F="" ; file looper
"RTN","A1AEK2M0",104,0)
 . N DONE ; control flag
"RTN","A1AEK2M0",105,0)
 . ; Analyze each Multibuild
"RTN","A1AEK2M0",106,0)
 . F  S F=$O(FILES(F)) Q:F=""  D  Q:$G(DONE)
"RTN","A1AEK2M0",107,0)
 . . D EN^DDIOL("Analyzing Multibuild file "_F) ; print out
"RTN","A1AEK2M0",108,0)
 . . I '$D(^XTMP(XTMPS,F)) D  ; If it isn't loaded already...
"RTN","A1AEK2M0",109,0)
 . . . K ^TMP($J,"TKID"),^("ANKID") ; Temp KID; Analysis KID
"RTN","A1AEK2M0",110,0)
 . . . N % S %=$$FTG^%ZISH(ROOT("MB"),F,$NA(^TMP($J,"TKID",1,0)),3)   ; To Global
"RTN","A1AEK2M0",111,0)
 . . . I '% S $EC=",U-FILE-DISAPPEARED,"
"RTN","A1AEK2M0",112,0)
 . . . D ANALYZE^A1AEK2M1($NA(^TMP($J,"ANKID")),$NA(^TMP($J,"TKID"))) ; Analyze the file
"RTN","A1AEK2M0",113,0)
 . . . M ^XTMP(XTMPS,F)=^TMP($J,"ANKID") ; Put into XTMP
"RTN","A1AEK2M0",114,0)
 . . ; Now, make sure that the TXT file's designation is the same as the KIDS' patch no.
"RTN","A1AEK2M0",115,0)
 . . ; Loop through every patch in the file and make sure at least one matches.
"RTN","A1AEK2M0",116,0)
 . . N P S P=""
"RTN","A1AEK2M0",117,0)
 . . F  S P=$O(^XTMP(XTMPS,F,P)) Q:P=""  I $$K2PMD^A1AEK2M(P)=TXTINFO("DESIGNATION") S DONE=1 QUIT
"RTN","A1AEK2M0",118,0)
 . . I $G(DONE) D  QUIT
"RTN","A1AEK2M0",119,0)
 . . . M @KIDGLO=^XTMP(XTMPS,F,P)
"RTN","A1AEK2M0",120,0)
 . . . D EN^DDIOL("Found patch "_TXTINFO("DESIGNATION")_" in "_F)
"RTN","A1AEK2M0",121,0)
 . . . S KIDFIL0=F
"RTN","A1AEK2M0",122,0)
 ;
"RTN","A1AEK2M0",123,0)
 ; If we still can't find it. Oh well! Can't do nuthin.
"RTN","A1AEK2M0",124,0)
 K ^TMP($J,"TKID"),^("ANKID")
"RTN","A1AEK2M0",125,0)
 QUIT $G(KIDFIL0)
"RTN","A1AEK2M0",126,0)
 ;
"RTN","A1AEK2M0",127,0)
GETSTRM(DESIGNATION) ; Private to package; $$; Get the Stream for a designation using a patch number
"RTN","A1AEK2M0",128,0)
 ; Input: DESIGNATION XXX*1.0*5
"RTN","A1AEK2M0",129,0)
 ; Output: Stream IEN in 11007.1
"RTN","A1AEK2M0",130,0)
 N PN
"RTN","A1AEK2M0",131,0)
 I $L(DESIGNATION,"*")>1 S PN=$P(DESIGNATION,"*",3)
"RTN","A1AEK2M0",132,0)
 E  S PN=0
"RTN","A1AEK2M0",133,0)
 I PN=0 QUIT 1  ; VA Patch Stream
"RTN","A1AEK2M0",134,0)
 N STRM
"RTN","A1AEK2M0",135,0)
 N I F I=0:0 S I=$O(^A1AE(11007.1,I)) Q:'I  D  Q:$G(STRM)
"RTN","A1AEK2M0",136,0)
 . N MIN S MIN=I-1 ; For Patch zero (e.g. package release XOBV*1.6*0)
"RTN","A1AEK2M0",137,0)
 . N MAX S MAX=I+998 ; up to 999
"RTN","A1AEK2M0",138,0)
 . I PN'<MIN&(PN'>MAX) S STRM=I  ; Really this is IF MIN<=PN<=MAX...
"RTN","A1AEK2M0",139,0)
 Q STRM
"RTN","A1AEK2M0",140,0)
 ;
"RTN","A1AEK2M0",141,0)
CLEANHF(MSGGLO) ; Private... Clean header and footer in message global
"RTN","A1AEK2M0",142,0)
 ; WARNING - Naked all over inside the do block.
"RTN","A1AEK2M0",143,0)
 N S S S=$O(@MSGGLO@("")) ; first numeric sub.
"RTN","A1AEK2M0",144,0)
 I @MSGGLO@(S,0)'["$TXT Created by " D
"RTN","A1AEK2M0",145,0)
 . ; First line is invalid. Try various patterns.
"RTN","A1AEK2M0",146,0)
 . N I F I=1:1 N PATT S PATT=$T(CLNPATT+I),PATT=$P(PATT,";;",2) Q:($$TRIM^XLFSTR(PATT)=">>END<<")  D
"RTN","A1AEK2M0",147,0)
 . . I $$TRIM^XLFSTR(^(0))=$$TRIM^XLFSTR(PATT) S ^(0)="$TXT Created by UNKNOWN,UNKNOWN at DOWNLOADS.VA.GOV  (KIDS)"
"RTN","A1AEK2M0",148,0)
 . ; If still not there, put in first node before the message.
"RTN","A1AEK2M0",149,0)
 . I ^(0)'["$TXT Created by " S @MSGGLO@(S-1,0)="$TXT Created by UNKNOWN,UNKNOWN at DOWNLOADS.VA.GOV  (KIDS)"
"RTN","A1AEK2M0",150,0)
 ;
"RTN","A1AEK2M0",151,0)
 N LASTSUB S LASTSUB=$O(@MSGGLO@(" "),-1)
"RTN","A1AEK2M0",152,0)
 I @MSGGLO@(LASTSUB,0)'["$END TXT" S @MSGGLO@(LASTSUB+1,0)="$END TXT"
"RTN","A1AEK2M0",153,0)
 QUIT
"RTN","A1AEK2M0",154,0)
 ;
"RTN","A1AEK2M0",155,0)
CLNPATT ;; Headers to substitute if present using a contains operator. 1st one is just a blank -- INTENTIONAL
"RTN","A1AEK2M0",156,0)
 ;;
"RTN","A1AEK2M0",157,0)
 ;;*********************
"RTN","A1AEK2M0",158,0)
 ;;Original message:
"RTN","A1AEK2M0",159,0)
 ;;This informational patch
"RTN","A1AEK2M0",160,0)
 ;;>>END<<
"RTN","A1AEK2M0",161,0)
 ;
"RTN","A1AEK2M0",162,0)
ADDPATCH(A1AEPKIF,A1AEVR,TXTINFO,PATCHMSG,KIDMISSING,INFOONLY,ROOTPATH,TXTFIL,KIDFIL) ; Private $$ ; Add patch to 11005
"RTN","A1AEK2M0",163,0)
 ; Input: TODO.
"RTN","A1AEK2M0",164,0)
 ; Non-importing version is at NUM^A1AEUTL
"RTN","A1AEK2M0",165,0)
 N DESIGNATION S DESIGNATION=TXTINFO("DESIGNATION")
"RTN","A1AEK2M0",166,0)
 ;
"RTN","A1AEK2M0",167,0)
 ; Don't add a patch if it already exists in the system
"RTN","A1AEK2M0",168,0)
 ; This first code is for derived patches
"RTN","A1AEK2M0",169,0)
 I $D(TXTINFO("ORIG-DESIGNATION")),$D(^A1AE(11005,"ADERIVED",TXTINFO("ORIG-DESIGNATION"))) DO  QUIT $O(^(TXTINFO("ORIG-DESIGNATION"),""))
"RTN","A1AEK2M0",170,0)
 . D EN^DDIOL($$RED^A1AEK2M1("Patch already exists. Not adding again."))
"RTN","A1AEK2M0",171,0)
 . S A1AENB=$P(DESIGNATION,"*",3) ; leak this
"RTN","A1AEK2M0",172,0)
 . S A1AEPD=DESIGNATION ; and also this
"RTN","A1AEK2M0",173,0)
 ;
"RTN","A1AEK2M0",174,0)
 ; This code is for original patches (not derived)
"RTN","A1AEK2M0",175,0)
 I '$D(TXTINFO("ORIG-DESIGNATION")),$D(^A1AE(11005,"B",DESIGNATION)) DO  QUIT $O(^(DESIGNATION,""))
"RTN","A1AEK2M0",176,0)
 . D EN^DDIOL($$RED^A1AEK2M1("Patch already exists. Not adding again."))
"RTN","A1AEK2M0",177,0)
 . S A1AENB=$P(DESIGNATION,"*",3) ; leak this
"RTN","A1AEK2M0",178,0)
 . S A1AEPD=DESIGNATION ; and also this
"RTN","A1AEK2M0",179,0)
 ;
"RTN","A1AEK2M0",180,0)
 ; This block adds the entry to 11005 using the SETNUM API.
"RTN","A1AEK2M0",181,0)
 N X S X=DESIGNATION
"RTN","A1AEK2M0",182,0)
 S A1AENB=$P(DESIGNATION,"*",3) ; ZEXCEPT: A1AENB leak this
"RTN","A1AEK2M0",183,0)
 N A1AETY S A1AETY="PH"
"RTN","A1AEK2M0",184,0)
 N A1AEFL S A1AEFL=11005
"RTN","A1AEK2M0",185,0)
 N DIC,Y S DIC(0)="LX" ; Laygo, Exact match
"RTN","A1AEK2M0",186,0)
 ; ZEXCEPT: DA,A1AEPD Leaked by A1AEUTL
"RTN","A1AEK2M0",187,0)
 I $D(TXTINFO("ORIG-DESIGNATION")) D  ; Derived patch!!
"RTN","A1AEK2M0",188,0)
 . D SETNUM^A1AEUTL   ; This adds the patch based on the latest patch number
"RTN","A1AEK2M0",189,0)
 . N FDA S FDA(11005,DA_",",5.2)=TXTINFO("ORIG-DESIGNATION")                ; Derived from patch field
"RTN","A1AEK2M0",190,0)
 . N DIERR D FILE^DIE("EK",$NA(FDA)) I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"   ; File--external b/c this is a pointer, lock
"RTN","A1AEK2M0",191,0)
 E  D SETNUM1^A1AEUTL ; This forces the current patch number in. 
"RTN","A1AEK2M0",192,0)
 ;
"RTN","A1AEK2M0",193,0)
 ; Lock the record
"RTN","A1AEK2M0",194,0)
 LOCK +^A1AE(11005,DA):0 E  S $EC=",U-FAILED-TO-LOCK," ; should never happen
"RTN","A1AEK2M0",195,0)
 ;
"RTN","A1AEK2M0",196,0)
 ; Put stream, and that we are currently loading, and some extra fields
"RTN","A1AEK2M0",197,0)
 N STREAM S STREAM=$$GETSTRM^A1AEK2M0(DESIGNATION) ; PATCH STREAM
"RTN","A1AEK2M0",198,0)
 N FDA
"RTN","A1AEK2M0",199,0)
 S FDA(11005,DA_",",.2)=STREAM      ; Current Stream
"RTN","A1AEK2M0",200,0)
 S FDA(11005,DA_",",.21)=1          ; Currently Importing
"RTN","A1AEK2M0",201,0)
 S FDA(11005,DA_",",6.1)=ROOTPATH   ; Import Path
"RTN","A1AEK2M0",202,0)
 S FDA(11005,DA_",",5.3)=TXTFIL     ; Text File Name
"RTN","A1AEK2M0",203,0)
 S FDA(11005,DA_",",5.4)=KIDFIL     ; KID File Name
"RTN","A1AEK2M0",204,0)
 S FDA(11005,DA_",",5.6)=KIDMISSING ; Are we missing the KID file?
"RTN","A1AEK2M0",205,0)
 N DIERR
"RTN","A1AEK2M0",206,0)
 D FILE^DIE("",$NA(FDA),$NA(ERR))
"RTN","A1AEK2M0",207,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",208,0)
 ;
"RTN","A1AEK2M0",209,0)
 ; Change status to Under Development and add developer in
"RTN","A1AEK2M0",210,0)
 ; TODO: If we have time, do this the proper way with Fileman APIs.
"RTN","A1AEK2M0",211,0)
 S $P(^A1AE(11005,DA,0),U,8)="u"
"RTN","A1AEK2M0",212,0)
 ;
"RTN","A1AEK2M0",213,0)
 ; Get developer
"RTN","A1AEK2M0",214,0)
 N DEV
"RTN","A1AEK2M0",215,0)
 N NAME S NAME=TXTINFO("DEV")
"RTN","A1AEK2M0",216,0)
 D STDNAME^XLFNAME(.NAME) ; Remove funny stuff (like dots at the end)
"RTN","A1AEK2M0",217,0)
 S DEV=$$FIND1^DIC(200,"","QX",NAME,"B") ; Get developer
"RTN","A1AEK2M0",218,0)
 ;
"RTN","A1AEK2M0",219,0)
 D ASSERT(DEV,"Developer "_TXTINFO("DEV")_" couldn't be resolved")
"RTN","A1AEK2M0",220,0)
 ;
"RTN","A1AEK2M0",221,0)
 S $P(^A1AE(11005,DA,0),U,9)=DEV
"RTN","A1AEK2M0",222,0)
 ; File Date
"RTN","A1AEK2M0",223,0)
 N X,Y S X=TXTINFO("DEV","DATE") D ^%DT
"RTN","A1AEK2M0",224,0)
 S $P(^A1AE(11005,DA,0),U,12)=Y
"RTN","A1AEK2M0",225,0)
 ; Hand cross-reference
"RTN","A1AEK2M0",226,0)
 S ^A1AE(11005,"AS",A1AEPKIF,A1AEVR,"u",A1AENB,DA)=""
"RTN","A1AEK2M0",227,0)
 ;
"RTN","A1AEK2M0",228,0)
 ; Add subject and priority and a default and sequenece number
"RTN","A1AEK2M0",229,0)
 N FDA,IENS
"RTN","A1AEK2M0",230,0)
 N DIERR
"RTN","A1AEK2M0",231,0)
 S IENS=DA_","
"RTN","A1AEK2M0",232,0)
 S FDA(11005,IENS,"PATCH SUBJECT")=TXTINFO("SUBJECT")
"RTN","A1AEK2M0",233,0)
 S FDA(11005,IENS,"PRIORITY")=TXTINFO("PRIORITY")
"RTN","A1AEK2M0",234,0)
 S FDA(11005,IENS,"DISPLAY ROUTINE PATCH LIST")="Yes"
"RTN","A1AEK2M0",235,0)
 D FILE^DIE("E",$NA(FDA)) I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",236,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",237,0)
 ;
"RTN","A1AEK2M0",238,0)
 ; Get Categories from DD (abstractable function; maybe do that)
"RTN","A1AEK2M0",239,0)
 N CATDD D FIELD^DID(11005.05,.01,,"POINTER",$NA(CATDD))  ; Categories DD
"RTN","A1AEK2M0",240,0)
 N CATS ; Categories
"RTN","A1AEK2M0",241,0)
 ; d:DATA DICTIONARY;i:INPUT TEMPLATE;
"RTN","A1AEK2M0",242,0)
 N I F I=1:1:$L(CATDD("POINTER"),";") D        ; for each
"RTN","A1AEK2M0",243,0)
 . N CATIE S CATIE=$P(CATDD("POINTER"),";",I)  ; each
"RTN","A1AEK2M0",244,0)
 . Q:CATIE=""                                  ; last piece is empty. Make sure we aren't tripped up.
"RTN","A1AEK2M0",245,0)
 . N EXT,INT                                   ; External Internal forms
"RTN","A1AEK2M0",246,0)
 . S INT=$P(CATIE,":"),EXT=$P(CATIE,":",2)     ; get these
"RTN","A1AEK2M0",247,0)
 . S CATS(EXT)=INT                             ; set into array for use below
"RTN","A1AEK2M0",248,0)
 K CATDD
"RTN","A1AEK2M0",249,0)
 ;
"RTN","A1AEK2M0",250,0)
 N FDA
"RTN","A1AEK2M0",251,0)
 N I F I=1:1 Q:'$D(TXTINFO("CAT",I))  D        ; for each
"RTN","A1AEK2M0",252,0)
 . N CAT S CAT=TXTINFO("CAT",I)                ; each
"RTN","A1AEK2M0",253,0)
 . S CAT=$$UP^XLFSTR(CAT)                      ; uppercase. PM Title cases them.
"RTN","A1AEK2M0",254,0)
 . I CAT["ENHANCE" S CAT=$P(CAT," ")           ; Remove parens from 'Enhancement (Mandatory)'
"RTN","A1AEK2M0",255,0)
 . N INTCAT S INTCAT=CATS(CAT)                 ; Internal Category
"RTN","A1AEK2M0",256,0)
 . S FDA(11005.05,"+"_I_","_IENS,.01)=INTCAT   ; Addition FDA
"RTN","A1AEK2M0",257,0)
 N DIERR                                       ; Fileman error flag
"RTN","A1AEK2M0",258,0)
 D UPDATE^DIE("",$NA(FDA),$NA(ERR))            ; Add data
"RTN","A1AEK2M0",259,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"         ; Chk for error
"RTN","A1AEK2M0",260,0)
 D ASSERT($O(^A1AE(11005,+IENS,"C",0)))        ; Assert that there is at least one.
"RTN","A1AEK2M0",261,0)
 K FDA
"RTN","A1AEK2M0",262,0)
 K CATS                                        ; don't need this anymore
"RTN","A1AEK2M0",263,0)
 ;
"RTN","A1AEK2M0",264,0)
 ; Add Description to the patch
"RTN","A1AEK2M0",265,0)
 ; Reference code is COPY^A1AECOPD, but this time we use Fileman
"RTN","A1AEK2M0",266,0)
 ;
"RTN","A1AEK2M0",267,0)
 ; Now put in the whole WP field in the file.
"RTN","A1AEK2M0",268,0)
 N DIERR
"RTN","A1AEK2M0",269,0)
 D WP^DIE(11005,IENS,5.5,"",$NA(TXTINFO("DESC")),$NA(ERR))
"RTN","A1AEK2M0",270,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"         ; Chk for error
"RTN","A1AEK2M0",271,0)
 D ASSERT($O(^A1AE(11005,DA,"D",0))>0) ; Assert that it was copied into PATCH DESCRIPTION
"RTN","A1AEK2M0",272,0)
 ;
"RTN","A1AEK2M0",273,0)
 ; Now, load the full KIDS build
"RTN","A1AEK2M0",274,0)
 ; Reference code: ^A1AEM1
"RTN","A1AEK2M0",275,0)
 ;
"RTN","A1AEK2M0",276,0)
 ; 1st Create stub entry in 11005.1, whether or not we have KIDS file to populate
"RTN","A1AEK2M0",277,0)
 NEW DIC,X,DINUM,DD,DO,DE,DQ,DR
"RTN","A1AEK2M0",278,0)
 S DIC(0)="L"
"RTN","A1AEK2M0",279,0)
 S (X,DINUM)=DA,DIC="^A1AE(11005.1,",DIC("DR")="20///"_"No routines included" K DD,DO D FILE^DICN K DE,DQ,DR,DIC("DR")
"RTN","A1AEK2M0",280,0)
 ;
"RTN","A1AEK2M0",281,0)
 ; Now load either the KIDS file or the HFS data from the remote system that was sent to us
"RTN","A1AEK2M0",282,0)
 I 'INFOONLY D LDKID(PATCHMSG,DA,KIDMISSING) ; Private to package; Load KIDS into 11005.1/11005.5
"RTN","A1AEK2M0",283,0)
 ;
"RTN","A1AEK2M0",284,0)
 ; Assertions
"RTN","A1AEK2M0",285,0)
 N HASRTN S HASRTN=0 ; Has Routines?
"RTN","A1AEK2M0",286,0)
 N I F I=1:1 Q:'$D(TXTINFO("CAT",I))  I TXTINFO("CAT",I)="Routine" S HASRTN=1  ; oh yes it does
"RTN","A1AEK2M0",287,0)
 I HASRTN,'KIDMISSING D ASSERT($O(^A1AE(11005,DA,"P",0)),"Patch says routine must be present") ; Routine information in Patch
"RTN","A1AEK2M0",288,0)
 I 'KIDMISSING D ASSERT($O(^A1AE(11005.1,DA,2,0)),"11005.1 entry must exist for each loaded patch")
"RTN","A1AEK2M0",289,0)
 ;
"RTN","A1AEK2M0",290,0)
 ; Now, complete and verify the patch, but don't run the input transforms b/c they send mail messages
"RTN","A1AEK2M0",291,0)
 ; NB: B/c of the Daisy chain triggers, the current DUZ and date will be used for users. 
"RTN","A1AEK2M0",292,0)
 ; NB (cont): I will fix this in a sec.
"RTN","A1AEK2M0",293,0)
 N N F N="COM","VER" D
"RTN","A1AEK2M0",294,0)
 . N DUZ
"RTN","A1AEK2M0",295,0)
 . N NAME S NAME=TXTINFO(N)
"RTN","A1AEK2M0",296,0)
 . D STDNAME^XLFNAME(.NAME) ; Remove funny stuff (like dots at the end)
"RTN","A1AEK2M0",297,0)
 . S DUZ=$$FIND1^DIC(200,"","QX",NAME,"B") ; Get developer
"RTN","A1AEK2M0",298,0)
 . D ASSERT(DUZ,"User "_NAME_" couldn't be resolved")
"RTN","A1AEK2M0",299,0)
 . N FDA,DIERR
"RTN","A1AEK2M0",300,0)
 . I N="COM" S FDA(11005,IENS,8)="c" D FILE^DIE("",$NA(FDA)) I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",301,0)
 . I N="VER" S FDA(11005,IENS,8)="v" D FILE^DIE("",$NA(FDA)) I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",302,0)
 . N X,Y S X=TXTINFO(N,"DATE") D ^%DT
"RTN","A1AEK2M0",303,0)
 . N FDA,DIERR
"RTN","A1AEK2M0",304,0)
 . S FDA(11005,IENS,$S(N="COM":10,1:11))=Y ; 10=DATE PATCH COMPLETED; 11=DATE PATCH VERIFIED
"RTN","A1AEK2M0",305,0)
 . D FILE^DIE("",$NA(FDA)) I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",306,0)
 ;
"RTN","A1AEK2M0",307,0)
 ; Now, put the patches into a review status and remove the currently importing flag.
"RTN","A1AEK2M0",308,0)
 N FDA,DIERR
"RTN","A1AEK2M0",309,0)
 S FDA(11005,IENS,8)="i2" ; STATUS
"RTN","A1AEK2M0",310,0)
 S FDA(11005,IENS,.21)="@" ; CURRENTLY IMPORTING delete
"RTN","A1AEK2M0",311,0)
 D FILE^DIE("",$NA(FDA))
"RTN","A1AEK2M0",312,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",313,0)
 ;
"RTN","A1AEK2M0",314,0)
 ; Now keep associated patches for later filing in a holding area
"RTN","A1AEK2M0",315,0)
 ; No locks necessary since no increments used.
"RTN","A1AEK2M0",316,0)
 N XTMPS S XTMPS=$T(+0)_"-ASSOCIATED-PATCHES"        ; Namespaced Sub in ^XTMP
"RTN","A1AEK2M0",317,0)
 N START S START=$$NOW^XLFDT()                       ; Now
"RTN","A1AEK2M0",318,0)
 N PURGDT S PURGDT=$$FMADD^XLFDT(START,365.24*2+1\1) ; Hold for two years
"RTN","A1AEK2M0",319,0)
 S ^XTMP(XTMPS,0)=PURGDT_U_START_U_"Associated Patches Holding Area"
"RTN","A1AEK2M0",320,0)
 N I F I=1:1 Q:'$D(TXTINFO("PREREQ",I))  S ^XTMP(XTMPS,DESIGNATION,TXTINFO("PREREQ",I))=""
"RTN","A1AEK2M0",321,0)
 ;
"RTN","A1AEK2M0",322,0)
 ;
"RTN","A1AEK2M0",323,0)
 ; Sequence number (only for VA patches and real patches not package releases)
"RTN","A1AEK2M0",324,0)
 N FDA,DIERR
"RTN","A1AEK2M0",325,0)
 I STREAM=1,$P(DESIGNATION,"*",3)'=0 S FDA(11005,IENS,"SEQUENTIAL RELEASE NUMBER")=TXTINFO("SEQ") ; Only file for VA patches
"RTN","A1AEK2M0",326,0)
 D:$D(FDA) FILE^DIE("E",$NA(FDA)) I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEK2M0",327,0)
 ;
"RTN","A1AEK2M0",328,0)
 LOCK -^A1AE(11005,DA)
"RTN","A1AEK2M0",329,0)
 QUIT DA
"RTN","A1AEK2M0",330,0)
 ;
"RTN","A1AEK2M0",331,0)
LDKID(PATCHMSG,DA,KIDMISSING) ; Private to package; Load KIDS into 11005.1/11005.5
"RTN","A1AEK2M0",332,0)
 I KIDMISSING D HFS2^A1AEM1(DA) QUIT  ; No KIDS file found ; NB: Deletes 2 node (field 20) on 11005.1
"RTN","A1AEK2M0",333,0)
 ; We have a KIDS file
"RTN","A1AEK2M0",334,0)
 S $P(^A1AE(11005.1,DA,0),"^",11)="K" ; FND+19  ; Type of message is KIDS not DIFROM
"RTN","A1AEK2M0",335,0)
 K ^A1AE(11005.1,DA,2)                ; TRASH+7 ; remove old KIDS build
"RTN","A1AEK2M0",336,0)
 MERGE ^A1AE(11005.1,DA,2)=@PATCHMSG  ; FND+23  ; Load the new one in.
"RTN","A1AEK2M0",337,0)
 N DEVDATE S DEVDATE=$P(^A1AE(11005,DA,0),U,12) ; DATE PATCH FIRST ENTERED (#12)
"RTN","A1AEK2M0",338,0)
 S $P(^A1AE(11005.1,DA,2,0),"^",5)=DEVDATE  ; FND+29  ; ditto
"RTN","A1AEK2M0",339,0)
 S $P(^A1AE(11005.1,DA,2,0),"^",2)="" ; FND+30  ; Message IEN; We didn't load this from Mailman
"RTN","A1AEK2M0",340,0)
 S $P(^A1AE(11005.1,DA,2,0),"^",3)="" ; FND+31  ; Message date; ditto
"RTN","A1AEK2M0",341,0)
 D RTNBLD^A1AEM1(DA)                  ; FND+32  ; Load the routine information into 11005 from KIDS message
"RTN","A1AEK2M0",342,0)
 ; if we load KIDS get rid of HFS "shadow" copy of the KIDS
"RTN","A1AEK2M0",343,0)
 I $D(^A1AE(11005.5,DA,0)) N DIK S DIK="^A1AE(11005.5," D ^DIK ; FND+34
"RTN","A1AEK2M0",344,0)
 QUIT
"RTN","A1AEK2M0",345,0)
 ;
"RTN","A1AEK2M0",346,0)
ASSERT(X,Y) ; Assertion engine
"RTN","A1AEK2M0",347,0)
 ; ZEXCEPT: XTMUNIT - Newed on a lower level of the stack if using M-Unit
"RTN","A1AEK2M0",348,0)
 ; I X="" BREAK
"RTN","A1AEK2M0",349,0)
 I $D(XTMUNIT) D CHKTF^XTMUNIT(X,$G(Y)) QUIT  ; if we are inside M-Unit, assert using that engine.
"RTN","A1AEK2M0",350,0)
 I 'X D EN^DDIOL($G(Y)) S $EC=",U-ASSERTION-ERROR,"  ; otherwise, throw error if assertion fails.
"RTN","A1AEK2M0",351,0)
 QUIT
"RTN","A1AEK2M1")
0^50^B24426174
"RTN","A1AEK2M1",1,0)
A1AEK2M1 ; VEN/SMH - Analyze KIDS file and extract information;2014-03-18  11:57 AM
"RTN","A1AEK2M1",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEK2M1",3,0)
 ; Inspired by the VISTA XML Parser, a State Machine
"RTN","A1AEK2M1",4,0)
 ;
"RTN","A1AEK2M1",5,0)
 ; Conversion procedure from a VA PM HFS-extracted KIDS (complete):
"RTN","A1AEK2M1",6,0)
 ;^TMP(28177,1,0)="Released TIU*1*241 SEQ #237" <-- $TXT prepended
"RTN","A1AEK2M1",7,0)
 ;^TMP(28177,2,0)="Extracted from mail message" <-- this becomes the txt
"RTN","A1AEK2M1",8,0)
 ;^TMP(28177,3,0)="**KIDS**:TIU*1.0*241^"       <-- $END TXT replaced
"RTN","A1AEK2M1",9,0)
 ;^TMP(28177,4,0)="" --> becomes $KID append whatever is in 6
"RTN","A1AEK2M1",10,0)
 ;^TMP(28177,5,0)="**INSTALL NAME**"
"RTN","A1AEK2M1",11,0)
 ;^TMP(28177,6,0)="TIU*1.0*241"
"RTN","A1AEK2M1",12,0)
 ;---
"RTN","A1AEK2M1",13,0)
 ;^TMP(28177,1189,0)="**END**" --> becomes $END KID whatever is in 6
"RTN","A1AEK2M1",14,0)
 ;^TMP(28177,1190,0)="**END**" --> DELETED
"RTN","A1AEK2M1",15,0)
 ;
"RTN","A1AEK2M1",16,0)
 ; A few random notes on various KIDS issues
"RTN","A1AEK2M1",17,0)
 ; If the original is a mail message, it will looks like this
"RTN","A1AEK2M1",18,0)
 ; 
"RTN","A1AEK2M1",19,0)
 ; >> Released GMRA*4*44 SEQ #41
"RTN","A1AEK2M1",20,0)
 ; >> Extracted from mail message
"RTN","A1AEK2M1",21,0)
 ; >> **KIDS**:GMRA*4.0*44^
"RTN","A1AEK2M1",22,0)
 ; >> 
"RTN","A1AEK2M1",23,0)
 ; >> **INSTALL NAME** etc..
"RTN","A1AEK2M1",24,0)
 ; >> kids contents
"RTN","A1AEK2M1",25,0)
 ; >> **END**
"RTN","A1AEK2M1",26,0)
 ; >> **END**
"RTN","A1AEK2M1",27,0)
 ;
"RTN","A1AEK2M1",28,0)
 ; If the original isn't a PM HFS-extracted KIDS build, but a Straight from 
"RTN","A1AEK2M1",29,0)
 ; KIDS KIDS-build, then the KIDS first line looks like this:
"RTN","A1AEK2M1",30,0)
 ;
"RTN","A1AEK2M1",31,0)
 ; >> KIDS Distribution saved on Apr 30, 2013@05:31:47
"RTN","A1AEK2M1",32,0)
 ; >> OR*371
"RTN","A1AEK2M1",33,0)
 ; >> **KIDS**:OR*3.0*371^
"RTN","A1AEK2M1",34,0)
 ; >> <blank line>
"RTN","A1AEK2M1",35,0)
 ; >> **INSTALL NAME**
"RTN","A1AEK2M1",36,0)
 ;
"RTN","A1AEK2M1",37,0)
 ; Multibuilds look like this:
"RTN","A1AEK2M1",38,0)
 ; 
"RTN","A1AEK2M1",39,0)
 ; >> KIDS Distribution saved on Sep 23, 2011@17:42:57
"RTN","A1AEK2M1",40,0)
 ; >> IB/PRCA Remedy Ticket Fixes
"RTN","A1AEK2M1",41,0)
 ; >> **KIDS**:IB*2.0*459^PRCA*4.5*280^
"RTN","A1AEK2M1",42,0)
 ; >> <blank line>
"RTN","A1AEK2M1",43,0)
 ; >> **INSTALL NAME**
"RTN","A1AEK2M1",44,0)
 ; >> text of first KIDS build
"RTN","A1AEK2M1",45,0)
 ; >> **INSTALL NAME**
"RTN","A1AEK2M1",46,0)
 ; >> text of second KIDS build
"RTN","A1AEK2M1",47,0)
 ; >> **END**
"RTN","A1AEK2M1",48,0)
 ; >> **END**
"RTN","A1AEK2M1",49,0)
 ;
"RTN","A1AEK2M1",50,0)
 ; A KIDS sent from another system via KIDS/MM has the following contents.
"RTN","A1AEK2M1",51,0)
 ;$TXT Created by TESTMASTER,USER at VEN.SMH101.COM  (KIDS) on Thursday, 01/07/14 at 15:55
"RTN","A1AEK2M1",52,0)
 ; <contents>
"RTN","A1AEK2M1",53,0)
 ;$END TXT
"RTN","A1AEK2M1",54,0)
 ;$KID ZZZ*1.0*1
"RTN","A1AEK2M1",55,0)
 ;**INSTALL NAME**
"RTN","A1AEK2M1",56,0)
 ; <contents>
"RTN","A1AEK2M1",57,0)
 ;$END KID ZZZ*1.0*1
"RTN","A1AEK2M1",58,0)
 ;
"RTN","A1AEK2M1",59,0)
ANALYZE(RTN,MSGGREF,OPT) ; Public Proc ; Analyze a KIDS file in global MSGGREF. Return in RTN.
"RTN","A1AEK2M1",60,0)
 ; RTN - Global name - use with subscript indirection.
"RTN","A1AEK2M1",61,0)
 ; MSGREG - Global passed by name containing message. Use Sub Ind to get data.
"RTN","A1AEK2M1",62,0)
 ; OPT - Value - Options. Only supported one is "D" - debug. Prints out lines as they are read.
"RTN","A1AEK2M1",63,0)
 ;
"RTN","A1AEK2M1",64,0)
 N CREF ; Current global reference
"RTN","A1AEK2M1",65,0)
 N START,STATE,LINE,BUILD
"RTN","A1AEK2M1",66,0)
 S STATE="BEGIN"
"RTN","A1AEK2M1",67,0)
 N EOD S EOD=0 ; End of Document
"RTN","A1AEK2M1",68,0)
 S CREF=MSGGREF ; Current reference for $Q
"RTN","A1AEK2M1",69,0)
 N QL S QL=$QL(MSGGREF) ; QL of original global for quit next line.
"RTN","A1AEK2M1",70,0)
 F  QUIT:EOD  D SEEK() QUIT:EOD  D @STATE  ; CENTRAL READING LOOP
"RTN","A1AEK2M1",71,0)
 QUIT
"RTN","A1AEK2M1",72,0)
 ;
"RTN","A1AEK2M1",73,0)
 ; === REST OF EP'S ARE PRIVATE ===
"RTN","A1AEK2M1",74,0)
 ;
"RTN","A1AEK2M1",75,0)
SEEK(NOTRIM) ; Get next line
"RTN","A1AEK2M1",76,0)
 ; ZEXCEPT: CREF,EOD,LINE,QL - Newd above
"RTN","A1AEK2M1",77,0)
 ; ZEXCEPT: MSGGREF,OPT - Params
"RTN","A1AEK2M1",78,0)
 S CREF=$QUERY(@CREF)
"RTN","A1AEK2M1",79,0)
 I CREF="" S EOD=1 QUIT
"RTN","A1AEK2M1",80,0)
 I $NA(@CREF,QL)'=$NA(@MSGGREF,QL) S EOD=1 QUIT  ; $Q went beyond deep end.
"RTN","A1AEK2M1",81,0)
 S LINE=@CREF
"RTN","A1AEK2M1",82,0)
 I '$G(NOTRIM) S LINE=$$TRIM^XLFSTR(LINE,"R") ; Remove the spaces from the right
"RTN","A1AEK2M1",83,0)
 I $G(OPT)["D" WRITE LINE,! ; Debug mode
"RTN","A1AEK2M1",84,0)
 QUIT
"RTN","A1AEK2M1",85,0)
 ;
"RTN","A1AEK2M1",86,0)
BEGIN ; Begin State
"RTN","A1AEK2M1",87,0)
 ; ZEXCEPT: LINE,STATE
"RTN","A1AEK2M1",88,0)
 D SEEK() ; Second line; first line already read. Discard both.
"RTN","A1AEK2M1",89,0)
 S STATE="KIDSSS"
"RTN","A1AEK2M1",90,0)
 QUIT
"RTN","A1AEK2M1",91,0)
 ;
"RTN","A1AEK2M1",92,0)
KIDSSS ; Process **KIDS**
"RTN","A1AEK2M1",93,0)
 ; ZEXCEPT: LINE,STATE,RTN
"RTN","A1AEK2M1",94,0)
 D ASSERT($E(LINE,1,8)="**KIDS**")
"RTN","A1AEK2M1",95,0)
 N BUILDS S BUILDS=$P(LINE,"**KIDS**:",2)    ; Get the builds (even just one)
"RTN","A1AEK2M1",96,0)
 N I,BUILD F I=1:1:$L(BUILDS,U) S BUILD=$P(BUILDS,U,I) Q:BUILD=""  S @RTN@(BUILD,0)=BUILD  ; Put them into an array
"RTN","A1AEK2M1",97,0)
 D SEEK()                             ; Get rid of the blank line next.
"RTN","A1AEK2M1",98,0)
 S STATE="INSTLNM"                    ; Move to process **INSTALL NAME**
"RTN","A1AEK2M1",99,0)
 QUIT
"RTN","A1AEK2M1",100,0)
 ;
"RTN","A1AEK2M1",101,0)
INSTLNM ; Process **INSTALL NAME**
"RTN","A1AEK2M1",102,0)
 ; ZEXCEPT: LINE,STATE,RTN,BUILD
"RTN","A1AEK2M1",103,0)
 D ASSERT($E(LINE,1,$L("**INSTALL NAME**"))="**INSTALL NAME**")
"RTN","A1AEK2M1",104,0)
 N OLDLINE S OLDLINE=LINE             ; Just preserve this for convenience
"RTN","A1AEK2M1",105,0)
 D SEEK()                             ; Get the install Name
"RTN","A1AEK2M1",106,0)
 S BUILD=LINE                         ; Build name. Build var is shared below.
"RTN","A1AEK2M1",107,0)
 D ASSERT($D(@RTN@(BUILD)))           ; Must exist from KIDSSS
"RTN","A1AEK2M1",108,0)
 S @RTN@(BUILD,1)="$KID "_BUILD       ; Build name
"RTN","A1AEK2M1",109,0)
 S @RTN@(BUILD,2)=OLDLINE             ; **INSTALL NAME**
"RTN","A1AEK2M1",110,0)
 S @RTN@(BUILD,3)=LINE                ; Actual build name
"RTN","A1AEK2M1",111,0)
 S STATE="ZERO"                       ; Build file zero node
"RTN","A1AEK2M1",112,0)
 QUIT
"RTN","A1AEK2M1",113,0)
 ;
"RTN","A1AEK2M1",114,0)
ZERO ; Process the ZERO node of the Build
"RTN","A1AEK2M1",115,0)
 ; ZEXCEPT: LINE,STATE,RTN,BUILD
"RTN","A1AEK2M1",116,0)
 D ASSERT(LINE?1"""BLD"","1.N1",0)")         ; Must look like "BLD",8190,0)
"RTN","A1AEK2M1",117,0)
 N NS S NS=$O(@RTN@(BUILD," "),-1)+1         ; Next sub
"RTN","A1AEK2M1",118,0)
 S @RTN@(BUILD,NS)=LINE                      ; Load this
"RTN","A1AEK2M1",119,0)
 D SEEK()                                    ; Get next line
"RTN","A1AEK2M1",120,0)
 S @RTN@(BUILD,NS+1)=LINE                    ; Load this... BUT...
"RTN","A1AEK2M1",121,0)
 S @RTN@(BUILD,0)=LINE                       ; Put it also on our zero node
"RTN","A1AEK2M1",122,0)
 S STATE="CONTENT"                           ; Load the rest of it.
"RTN","A1AEK2M1",123,0)
 QUIT
"RTN","A1AEK2M1",124,0)
 ;
"RTN","A1AEK2M1",125,0)
CONTENT ; Process Content of KIDS build
"RTN","A1AEK2M1",126,0)
 ; ZEXCEPT: BUILD,EOD,INSTLNM,LINE,RTN
"RTN","A1AEK2M1",127,0)
 ; TODO: Load whether this is Multi-build or not from zero node.
"RTN","A1AEK2M1",128,0)
 N NS S NS=$O(@RTN@(BUILD," "),-1)+1         ; Next sub
"RTN","A1AEK2M1",129,0)
 ;
"RTN","A1AEK2M1",130,0)
 ; If we had reverse $QUERY on GT.M, I won't need to use Goto. I can go back a line.
"RTN","A1AEK2M1",131,0)
 I LINE="**INSTALL NAME**" DO  GOTO INSTLNM  ; Goto b/c we don't want to go back to SEEK in the main loop.
"RTN","A1AEK2M1",132,0)
 . S @RTN@(BUILD,NS)="$END KID "_BUILD       ; End this build
"RTN","A1AEK2M1",133,0)
 ;
"RTN","A1AEK2M1",134,0)
 I LINE="**END**" DO  S EOD=1 QUIT           ; End this build and stop reading the KIDS file
"RTN","A1AEK2M1",135,0)
 . S @RTN@(BUILD,NS)="$END KID "_BUILD       ; End this build
"RTN","A1AEK2M1",136,0)
 ;
"RTN","A1AEK2M1",137,0)
 S @RTN@(BUILD,NS)=LINE                      ; Just read the line
"RTN","A1AEK2M1",138,0)
 QUIT
"RTN","A1AEK2M1",139,0)
 ;
"RTN","A1AEK2M1",140,0)
NOP ; No-Op State - Just use for debugging
"RTN","A1AEK2M1",141,0)
 ; ZEXCEPT: LINE
"RTN","A1AEK2M1",142,0)
 W LINE,!
"RTN","A1AEK2M1",143,0)
 QUIT
"RTN","A1AEK2M1",144,0)
 ;
"RTN","A1AEK2M1",145,0)
ASSERT(X,Y) ; Assertion engine
"RTN","A1AEK2M1",146,0)
 I 'X D EN^DDIOL($G(Y)) S $EC=",U-ASSERTION-ERROR,"
"RTN","A1AEK2M1",147,0)
 QUIT
"RTN","A1AEK2M1",148,0)
 ;
"RTN","A1AEK2M1",149,0)
RED(X) ; Convenience method for Sam to see things on the screen.
"RTN","A1AEK2M1",150,0)
 Q $C(27)_"[41;1m"_X_$C(27)_"[0m"
"RTN","A1AEK2M1",151,0)
 ;
"RTN","A1AEK2M1",152,0)
 ;
"RTN","A1AEK2M1",153,0)
 ;
"RTN","A1AEK2M2")
0^51^B30902735
"RTN","A1AEK2M2",1,0)
A1AEK2M2 ; VEN/SMH - Analyze text message and extract information;2014-03-05  8:17 PM
"RTN","A1AEK2M2",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEK2M2",3,0)
 ; Inspired by the VISTA XML Parser, a State Machine
"RTN","A1AEK2M2",4,0)
 ;
"RTN","A1AEK2M2",5,0)
ANALYZE(RTN,MSGGREF,OPT) ; Public Proc ; Analyze a message in global MSGGREF. Return in RTN.
"RTN","A1AEK2M2",6,0)
 ; RTN - Ref - Return variable.
"RTN","A1AEK2M2",7,0)
 ;    ("DESIGNATION") - Patch ID (x*2.0*1)
"RTN","A1AEK2M2",8,0)
 ;    ("$TXT") - $TXT line from original patch
"RTN","A1AEK2M2",9,0)
 ;    TODO: Fill in the rest later.
"RTN","A1AEK2M2",10,0)
 ; MSGREG - Global passed by name containing message. Use Sub Ind to get data.
"RTN","A1AEK2M2",11,0)
 ; OPT - Value - Options. Only supported one is "D" - debug. Prints out lines as they are read.
"RTN","A1AEK2M2",12,0)
 ;
"RTN","A1AEK2M2",13,0)
 N CREF ; Current global reference
"RTN","A1AEK2M2",14,0)
 N START,STATE,LINE
"RTN","A1AEK2M2",15,0)
 S STATE="BEGIN"
"RTN","A1AEK2M2",16,0)
 N EOD S EOD=0 ; End of Document
"RTN","A1AEK2M2",17,0)
 S CREF=MSGGREF ; Current reference for $Q
"RTN","A1AEK2M2",18,0)
 N QL S QL=$QL(MSGGREF) ; QL of original global for quit next line.
"RTN","A1AEK2M2",19,0)
 F  QUIT:EOD  D SEEK() QUIT:EOD  D @STATE  ; CENTRAL READING LOOP
"RTN","A1AEK2M2",20,0)
 QUIT
"RTN","A1AEK2M2",21,0)
 ;
"RTN","A1AEK2M2",22,0)
 ; === REST OF EP'S ARE PRIVATE ===
"RTN","A1AEK2M2",23,0)
 ;
"RTN","A1AEK2M2",24,0)
SEEK(NOTRIM) ; Get next line
"RTN","A1AEK2M2",25,0)
 ; ZEXCEPT: CREF,EOD,LINE,QL - Newd above
"RTN","A1AEK2M2",26,0)
 ; ZEXCEPT: MSGGREF,OPT - Params
"RTN","A1AEK2M2",27,0)
 S CREF=$QUERY(@CREF)
"RTN","A1AEK2M2",28,0)
 I CREF="" S EOD=1 QUIT
"RTN","A1AEK2M2",29,0)
 I $NA(@CREF,QL)'=$NA(@MSGGREF,QL) S EOD=1 QUIT
"RTN","A1AEK2M2",30,0)
 S LINE=@CREF
"RTN","A1AEK2M2",31,0)
 I '$G(NOTRIM) S LINE=$$TRIM^XLFSTR(LINE,"R") ; Remove the spaces from the right
"RTN","A1AEK2M2",32,0)
 I $G(OPT)["D" WRITE LINE,! ; Debug mode
"RTN","A1AEK2M2",33,0)
 QUIT
"RTN","A1AEK2M2",34,0)
 ;
"RTN","A1AEK2M2",35,0)
BEGIN ; Beginning of document
"RTN","A1AEK2M2",36,0)
 ; ZEXCEPT: START,EOD - Global vars
"RTN","A1AEK2M2",37,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",38,0)
 I $E(LINE,1,4)="$TXT" D  QUIT
"RTN","A1AEK2M2",39,0)
 . S START=1,STATE="HEADER"
"RTN","A1AEK2M2",40,0)
 . S RTN("$TXT")=$$TRIM^XLFSTR(LINE)
"RTN","A1AEK2M2",41,0)
 I 'START S $EC=",U-NOT-IN-TXT,"
"RTN","A1AEK2M2",42,0)
 QUIT
"RTN","A1AEK2M2",43,0)
 ;
"RTN","A1AEK2M2",44,0)
HEADER ; Process Header
"RTN","A1AEK2M2",45,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",46,0)
 I LINE'["========================" S $EC=",U-NOT-MESSAGE,"
"RTN","A1AEK2M2",47,0)
 D ASSERT(LINE["====")
"RTN","A1AEK2M2",48,0)
 ;
"RTN","A1AEK2M2",49,0)
 ; 1st line
"RTN","A1AEK2M2",50,0)
 D SEEK(),ASSERT($E(LINE,1,$L("Run Date:"))="Run Date:")
"RTN","A1AEK2M2",51,0)
 S RTN("DESIGNATION")=$P(LINE,"Designation: ",2)
"RTN","A1AEK2M2",52,0)
 S RTN("DESIGNATION")=$$TRIM^XLFSTR(RTN("DESIGNATION"))
"RTN","A1AEK2M2",53,0)
 ;
"RTN","A1AEK2M2",54,0)
 ; 2nd line
"RTN","A1AEK2M2",55,0)
 D SEEK(),ASSERT($E(LINE,1,$L("Package :"))="Package :")
"RTN","A1AEK2M2",56,0)
 S RTN("PRIORITY")=$P(LINE,"Priority: ",2)
"RTN","A1AEK2M2",57,0)
 S RTN("PRIORITY")=$$TRIM^XLFSTR(RTN("PRIORITY"))
"RTN","A1AEK2M2",58,0)
 ;
"RTN","A1AEK2M2",59,0)
 ; 3rd line
"RTN","A1AEK2M2",60,0)
 D SEEK(),ASSERT($E(LINE,1,$L("Version :"))="Version :")
"RTN","A1AEK2M2",61,0)
 S RTN("SEQ")=$P(LINE,"SEQ #",2)
"RTN","A1AEK2M2",62,0)
 S RTN("SEQ")=+RTN("SEQ") ; remove trailing spaces etc
"RTN","A1AEK2M2",63,0)
 ;
"RTN","A1AEK2M2",64,0)
 ; 4rd line (optional) compliance date; Discard. Read until ====
"RTN","A1AEK2M2",65,0)
 F  D SEEK() QUIT:(LINE["======")
"RTN","A1AEK2M2",66,0)
 ;
"RTN","A1AEK2M2",67,0)
 S STATE="PREREQ"
"RTN","A1AEK2M2",68,0)
 ;
"RTN","A1AEK2M2",69,0)
 QUIT
"RTN","A1AEK2M2",70,0)
 ;
"RTN","A1AEK2M2",71,0)
PREREQ ; Pre-requisite patches
"RTN","A1AEK2M2",72,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",73,0)
 ; Associated patches: (v)PSJ*5*111   <<= must be installed BEFORE `PSJ*5*216'
"RTN","A1AEK2M2",74,0)
 ;                     (v)PSJ*5*179   <<= must be installed BEFORE `PSJ*5*216'
"RTN","A1AEK2M2",75,0)
 ; -- OR --
"RTN","A1AEK2M2",76,0)
 ; Associated patches: (v)TIU*1*227       install with patch       `TIU*1*274'
"RTN","A1AEK2M2",77,0)
 ;                     (c)TIU*1*261       install with patch       `TIU*1*274'
"RTN","A1AEK2M2",78,0)
 ;
"RTN","A1AEK2M2",79,0)
 I LINE="" D SEEK()  ; Get next line if it's empty
"RTN","A1AEK2M2",80,0)
 I LINE'["Associated patches:" S STATE="SUBJECT" QUIT
"RTN","A1AEK2M2",81,0)
 ;
"RTN","A1AEK2M2",82,0)
 ; Very trickisy line!!! Do, and loop and do
"RTN","A1AEK2M2",83,0)
 D  F  D SEEK() Q:LINE=""  D
"RTN","A1AEK2M2",84,0)
 . N I S I=$O(RTN("PREREQ",""),-1)+1
"RTN","A1AEK2M2",85,0)
 . N D F D="(v)","(c)","(u)" Q:LINE[D  ; Delimiter. Verified, completed, under development. Cycle logic.
"RTN","A1AEK2M2",86,0)
 . S RTN("PREREQ",I)=$P(LINE,D,2) ; get patch number
"RTN","A1AEK2M2",87,0)
 . I RTN("PREREQ",I)["<<=" S RTN("PREREQ",I)=$P(RTN("PREREQ",I),"<<=") ; remove the <<=
"RTN","A1AEK2M2",88,0)
 . I RTN("PREREQ",I)["install with patch" S RTN("PREREQ",I)=$P(RTN("PREREQ",I),"install")
"RTN","A1AEK2M2",89,0)
 . S RTN("PREREQ",I)=$$TRIM^XLFSTR(RTN("PREREQ",I)) ; remove spaces
"RTN","A1AEK2M2",90,0)
 ;
"RTN","A1AEK2M2",91,0)
 S STATE="SUBJECT"
"RTN","A1AEK2M2",92,0)
 ;
"RTN","A1AEK2M2",93,0)
 QUIT
"RTN","A1AEK2M2",94,0)
 ;
"RTN","A1AEK2M2",95,0)
SUBJECT ; Subject
"RTN","A1AEK2M2",96,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",97,0)
 D ASSERT($E(LINE,1,$L("Subject: "))="Subject: ")
"RTN","A1AEK2M2",98,0)
 S RTN("SUBJECT")=$P(LINE,"Subject: ",2)
"RTN","A1AEK2M2",99,0)
 S RTN("SUBJECT")=$$TRIM^XLFSTR(RTN("SUBJECT"))
"RTN","A1AEK2M2",100,0)
 ;
"RTN","A1AEK2M2",101,0)
 D SEEK() ; Read empty line and discard
"RTN","A1AEK2M2",102,0)
 D ASSERT(LINE="")
"RTN","A1AEK2M2",103,0)
 S STATE="CAT"
"RTN","A1AEK2M2",104,0)
 ;
"RTN","A1AEK2M2",105,0)
 QUIT
"RTN","A1AEK2M2",106,0)
 ;
"RTN","A1AEK2M2",107,0)
CAT ; Category
"RTN","A1AEK2M2",108,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",109,0)
 D ASSERT($E(LINE,1,$L("Category:"))="Category:")
"RTN","A1AEK2M2",110,0)
 F  D SEEK() Q:LINE=""  D
"RTN","A1AEK2M2",111,0)
 . N I S I=$O(RTN("CAT",""),-1)+1
"RTN","A1AEK2M2",112,0)
 . S RTN("CAT",I)=$P(LINE,"- ",2)
"RTN","A1AEK2M2",113,0)
 S STATE="DESC"
"RTN","A1AEK2M2",114,0)
 QUIT
"RTN","A1AEK2M2",115,0)
 ;
"RTN","A1AEK2M2",116,0)
DESC ; Description
"RTN","A1AEK2M2",117,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",118,0)
 D ASSERT($E(LINE,1,$L("Description:"))="Description:")
"RTN","A1AEK2M2",119,0)
 D SEEK()
"RTN","A1AEK2M2",120,0)
 D ASSERT(LINE["====")
"RTN","A1AEK2M2",121,0)
 F  D SEEK(0) Q:$L(LINE)  ; Eat up empty lines
"RTN","A1AEK2M2",122,0)
 D  F  D SEEK(1) Q:($E(LINE)'=" ")  D
"RTN","A1AEK2M2",123,0)
 . N I S I=$O(RTN("DESC",""),-1)+1
"RTN","A1AEK2M2",124,0)
 . S RTN("DESC",I)=$P(LINE," ",2,999) ; Read the rest of the line removing the space.
"RTN","A1AEK2M2",125,0)
 S STATE="USERS"
"RTN","A1AEK2M2",126,0)
 QUIT
"RTN","A1AEK2M2",127,0)
 ;
"RTN","A1AEK2M2",128,0)
USERS ; Users
"RTN","A1AEK2M2",129,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",130,0)
 ; Entered By  : ROWLANDS,ELMER                Date Entered  : JUN 23, 2010
"RTN","A1AEK2M2",131,0)
 ; Completed By: SHERMAN,BILL                  Date Completed: AUG 23, 2013
"RTN","A1AEK2M2",132,0)
 ; Released By : PIERSON,YVONNE E              Date Released : SEP 04, 2013
"RTN","A1AEK2M2",133,0)
 F  D SEEK() Q:LINE["===================================="  ; Loop to this line
"RTN","A1AEK2M2",134,0)
 D SEEK(),ASSERT(LINE["User Information")
"RTN","A1AEK2M2",135,0)
 ;
"RTN","A1AEK2M2",136,0)
 N STR S STR="Entered By  : "
"RTN","A1AEK2M2",137,0)
 D SEEK(),ASSERT($E(LINE,1,$L(STR))=STR)
"RTN","A1AEK2M2",138,0)
 S RTN("DEV")=$P(LINE,STR,2,99)
"RTN","A1AEK2M2",139,0)
 S RTN("DEV")=$P(RTN("DEV"),"Date ")
"RTN","A1AEK2M2",140,0)
 S RTN("DEV")=$$TRIM^XLFSTR(RTN("DEV"))
"RTN","A1AEK2M2",141,0)
 S RTN("DEV","DATE")=$P(LINE,"Date Entered  : ",2)
"RTN","A1AEK2M2",142,0)
 ;
"RTN","A1AEK2M2",143,0)
 N STR S STR="Completed By: "
"RTN","A1AEK2M2",144,0)
 D SEEK(),ASSERT($E(LINE,1,$L(STR))=STR)
"RTN","A1AEK2M2",145,0)
 S RTN("COM")=$P(LINE,STR,2,99)
"RTN","A1AEK2M2",146,0)
 S RTN("COM")=$P(RTN("COM"),"Date ")
"RTN","A1AEK2M2",147,0)
 S RTN("COM")=$$TRIM^XLFSTR(RTN("COM"))
"RTN","A1AEK2M2",148,0)
 S RTN("COM","DATE")=$P(LINE,"Date Completed: ",2)
"RTN","A1AEK2M2",149,0)
 ;
"RTN","A1AEK2M2",150,0)
 N STR S STR="Released By : "
"RTN","A1AEK2M2",151,0)
 D SEEK(),ASSERT($E(LINE,1,$L(STR))=STR)
"RTN","A1AEK2M2",152,0)
 S RTN("VER")=$P(LINE,STR,2,99)
"RTN","A1AEK2M2",153,0)
 S RTN("VER")=$P(RTN("VER"),"Date ")
"RTN","A1AEK2M2",154,0)
 S RTN("VER")=$$TRIM^XLFSTR(RTN("VER"))
"RTN","A1AEK2M2",155,0)
 S RTN("VER","DATE")=$P(LINE,"Date Released : ",2)
"RTN","A1AEK2M2",156,0)
 F  D SEEK() Q:LINE["===================================="  ; Loop to this line
"RTN","A1AEK2M2",157,0)
 ;
"RTN","A1AEK2M2",158,0)
 S STATE="FOOTER"
"RTN","A1AEK2M2",159,0)
 QUIT
"RTN","A1AEK2M2",160,0)
FOOTER ; Footer
"RTN","A1AEK2M2",161,0)
 ; ZEXCEPT: LINE,EOD,START
"RTN","A1AEK2M2",162,0)
 ; 
"RTN","A1AEK2M2",163,0)
 ; 
"RTN","A1AEK2M2",164,0)
 ; Packman Mail Message:
"RTN","A1AEK2M2",165,0)
 ; =====================
"RTN","A1AEK2M2",166,0)
 ; 
"RTN","A1AEK2M2",167,0)
 ; $END TXT
"RTN","A1AEK2M2",168,0)
 ;
"RTN","A1AEK2M2",169,0)
 F  D SEEK() Q:LINE="$END TXT"
"RTN","A1AEK2M2",170,0)
 S EOD=1,START=0
"RTN","A1AEK2M2",171,0)
 QUIT
"RTN","A1AEK2M2",172,0)
 ;
"RTN","A1AEK2M2",173,0)
NOP ; No-Op. Use this in debugging.
"RTN","A1AEK2M2",174,0)
 ; ZEXCEPT:LINE,STATE,RTN - Newed or Paramters elsewhere.
"RTN","A1AEK2M2",175,0)
 W LINE,!
"RTN","A1AEK2M2",176,0)
 QUIT
"RTN","A1AEK2M2",177,0)
ASSERT(X,Y) ; Assertion engine
"RTN","A1AEK2M2",178,0)
 I 'X D EN^DDIOL($G(Y)) S $EC=",U-ASSERTION-ERROR,"
"RTN","A1AEK2M2",179,0)
 QUIT
"RTN","A1AEK2M2",180,0)
 ;
"RTN","A1AEK2M2",181,0)
ANATRAP(PATCH) ; Analysis Trap -- use this to capture errors from ANALYZE^A1AEK2M2.
"RTN","A1AEK2M2",182,0)
 ; YOU MUST NEW $ET AND $ES AND SET $ET="DO ANATRAP^A1AEK2M2(PATCH)"
"RTN","A1AEK2M2",183,0)
 ; I $EC[",U-NOT-MESSAGE," DO EN^DDIOL(PATCH_" IS NOT A PATCH MESSAGE") S $ET="G UNWIND^ZU",$EC=",UQUIT," QUIT
"RTN","A1AEK2M2",184,0)
 I $EC[",U-NOT-MESSAGE," DO EN^DDIOL(PATCH_" IS NOT A PATCH MESSAGE") G UNWIND
"RTN","A1AEK2M2",185,0)
 QUIT
"RTN","A1AEK2M2",186,0)
 ;
"RTN","A1AEK2M2",187,0)
UNWIND ; Trap unwinder
"RTN","A1AEK2M2",188,0)
 S $ET="Q:($ES&$Q) -9  Q:$ES  S $EC="""""
"RTN","A1AEK2M2",189,0)
 S $EC=",UQUIT,"
"RTN","A1AEK2M2",190,0)
 QUIT  ; This is not hit
"RTN","A1AEK2M3")
0^61^B12404493
"RTN","A1AEK2M3",1,0)
A1AEK2M3 ; VEN/SMH - Interactive KIDS loading utilities;2014-03-28  4:08 PM
"RTN","A1AEK2M3",2,0)
 ;;2.4;PATCH MODULE;;;Build 14
"RTN","A1AEK2M3",3,0)
 ; Called from A1AEM1. No other permitted callers.
"RTN","A1AEK2M3",4,0)
 ;
"RTN","A1AEK2M3",5,0)
SELFILQ(DA) ; Protected; Interactive entry point; Load a Patch from the File System
"RTN","A1AEK2M3",6,0)
 ; DA = DHCP PATCH IEN
"RTN","A1AEK2M3",7,0)
 ; Select a Patch from the File system for a KIDS build
"RTN","A1AEK2M3",8,0)
 N PATCH S PATCH=$$GET1^DIQ(11005,DA,.01)
"RTN","A1AEK2M3",9,0)
 N LISTINGOK
"RTN","A1AEK2M3",10,0)
 N KIDFIL S KIDFIL=""
"RTN","A1AEK2M3",11,0)
 N Y
"RTN","A1AEK2M3",12,0)
 N DONE
"RTN","A1AEK2M3",13,0)
 F  D  Q:$G(DONE)!(Y=U)
"RTN","A1AEK2M3",14,0)
 . N DIR,X,DIROUT,DIRUT,DTOUT,DUOUT,DIROUT ; fur DIR
"RTN","A1AEK2M3",15,0)
 . S DIR(0)="F^1:255"
"RTN","A1AEK2M3",16,0)
 . S DIR("A")="Import KIDS build from this directory"
"RTN","A1AEK2M3",17,0)
 . D ^DIR
"RTN","A1AEK2M3",18,0)
 . I $D(DTOUT)!$D(DUOUT)!(U[Y)!(Y[U) S Y=U QUIT
"RTN","A1AEK2M3",19,0)
 . N ARRAY S ARRAY("*.KI*")="",ARRAY("*.ki*")="",ARRAY("*.k")=""
"RTN","A1AEK2M3",20,0)
 . N FILE
"RTN","A1AEK2M3",21,0)
 . S LISTINGOK=$$LIST^%ZISH(Y,$NA(ARRAY),$NA(FILE))
"RTN","A1AEK2M3",22,0)
 . I 'LISTINGOK DO  QUIT
"RTN","A1AEK2M3",23,0)
 . . W "Couldn't find any KID files here. Try again or '^'."
"RTN","A1AEK2M3",24,0)
 . S KIDFIL=$$SELFIL(.FILE,,"Select a KIDS build to match to "_PATCH)
"RTN","A1AEK2M3",25,0)
 . ;
"RTN","A1AEK2M3",26,0)
 . I U[KIDFIL S Y=U QUIT
"RTN","A1AEK2M3",27,0)
 . ;
"RTN","A1AEK2M3",28,0)
 . K ^TMP($J,"TKID"),^("ANKID") ; Temp KID; Analysis KID
"RTN","A1AEK2M3",29,0)
 . N % S %=$$FTG^%ZISH(Y,KIDFIL,$NA(^TMP($J,"TKID",1,0)),3)   ; To Global
"RTN","A1AEK2M3",30,0)
 . I '% S $EC=",U-FILE-DISAPPEARED,"
"RTN","A1AEK2M3",31,0)
 . D ANALYZE^A1AEK2M1($NA(^TMP($J,"ANKID")),$NA(^TMP($J,"TKID"))) ; Analyze the file
"RTN","A1AEK2M3",32,0)
 . ;
"RTN","A1AEK2M3",33,0)
 . ; Loop through every patch in the file and make sure at least one matches.
"RTN","A1AEK2M3",34,0)
 . N P S P=""
"RTN","A1AEK2M3",35,0)
 .  F  S P=$O(^TMP($J,"ANKID",P)) Q:P=""  I $$K2PMD^A1AEK2M(P)=PATCH QUIT
"RTN","A1AEK2M3",36,0)
 . I P="" W !,"None of the patches in this KID file match "_PATCH,! QUIT
"RTN","A1AEK2M3",37,0)
 . ;
"RTN","A1AEK2M3",38,0)
 . ; Okay. Wow. We can finally load this baby into 11005.1. But we have to append it to the $TXT first.
"RTN","A1AEK2M3",39,0)
 . K ^TMP($J,"MSG")
"RTN","A1AEK2M3",40,0)
 . N % S %=$$GET1^DIQ(11005,DA,5.5,"Z",$NA(^TMP($J,"MSG")))  ; Load WP with zero nodes after each sub
"RTN","A1AEK2M3",41,0)
 . ;
"RTN","A1AEK2M3",42,0)
 . ; Move over one for the $TXT line added by CLEANHF
"RTN","A1AEK2M3",43,0)
 . K ^TMP($J,"MSG2")
"RTN","A1AEK2M3",44,0)
 . N I F I=0:0 S I=$O(^TMP($J,"MSG",I)) Q:'I  S ^TMP($J,"MSG2",I+1,0)=^(I,0)
"RTN","A1AEK2M3",45,0)
 . K ^TMP($J,"MSG") ; Make sure it dead so I won't use it by mistake
"RTN","A1AEK2M3",46,0)
 . ;
"RTN","A1AEK2M3",47,0)
 . D CLEANHF^A1AEK2M0($NA(^TMP($J,"MSG2")))
"RTN","A1AEK2M3",48,0)
 . N LS S LS=$O(^TMP($J,"MSG2"," "),-1)
"RTN","A1AEK2M3",49,0)
 . N NS S NS=LS+1
"RTN","A1AEK2M3",50,0)
 . ;
"RTN","A1AEK2M3",51,0)
 . N L,LN F L=0:0 S L=$O(^TMP($J,"ANKID",P,L)) Q:'L  S LN=^(L),^TMP($J,"MSG2",NS,0)=LN,NS=NS+1
"RTN","A1AEK2M3",52,0)
 . D LDKID^A1AEK2M0($NA(^TMP($J,"MSG2")),DA,0)
"RTN","A1AEK2M3",53,0)
 . S DONE=1
"RTN","A1AEK2M3",54,0)
 . S A1AEKIDS=1 ; ZEXCEPT: A1AEKIDS - Leak out as this operates the input template
"RTN","A1AEK2M3",55,0)
 K ^TMP($J,"TKID"),^("ANKID"),^("MSG"),^("MSG2")
"RTN","A1AEK2M3",56,0)
 QUIT
"RTN","A1AEK2M3",57,0)
 ;
"RTN","A1AEK2M3",58,0)
SELFIL(FILES,EXTFILTER,DIRA) ; Public; INTERACTIVE ; Select a file from a list
"RTN","A1AEK2M3",59,0)
 ; FILES = Ref List of files from LIST^%ZISH
"RTN","A1AEK2M3",60,0)
 ; EXTFILTER = Val .TXT or so
"RTN","A1AEK2M3",61,0)
 ; DIRA = Val What to ask the user for
"RTN","A1AEK2M3",62,0)
 ; Uses fileman calls to ease the pain of selecting stuff.
"RTN","A1AEK2M3",63,0)
 ;
"RTN","A1AEK2M3",64,0)
 N I S I=""
"RTN","A1AEK2M3",65,0)
 ; Filter away using the extension
"RTN","A1AEK2M3",66,0)
 I $L($G(EXTFILTER)) F  S I=$O(FILES(I)) Q:I=""  D
"RTN","A1AEK2M3",67,0)
 . I $E($RE(I),1,$L(EXTFILTER))'=$RE(EXTFILTER) K FILES(I)
"RTN","A1AEK2M3",68,0)
 ;
"RTN","A1AEK2M3",69,0)
 ; If no files left, quit with an empty string
"RTN","A1AEK2M3",70,0)
 Q:'$L($O(FILES(""))) ""
"RTN","A1AEK2M3",71,0)
 ;
"RTN","A1AEK2M3",72,0)
 ; Create a global for DIR/DIC
"RTN","A1AEK2M3",73,0)
 K ^TMP($J,"FILES")
"RTN","A1AEK2M3",74,0)
 S ^TMP($J,"FILES",0)="File List"
"RTN","A1AEK2M3",75,0)
 N CNT S CNT=1
"RTN","A1AEK2M3",76,0)
 F  S I=$O(FILES(I)) Q:I=""  S ^TMP($J,"FILES",CNT,0)=I,CNT=CNT+1
"RTN","A1AEK2M3",77,0)
 ;
"RTN","A1AEK2M3",78,0)
 ; Index
"RTN","A1AEK2M3",79,0)
 N DIK,DA S DIK="^TMP($J,""FILES""," D IXALL^DIK
"RTN","A1AEK2M3",80,0)
 ; Select
"RTN","A1AEK2M3",81,0)
 N DIR,X,Y,DIROUT,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","A1AEK2M3",82,0)
 S DIR(0)="P^TMP($J,""FILES"",",DIR("A")=$G(DIRA,"Select a file from the list") D ^DIR
"RTN","A1AEK2M3",83,0)
 I $D(DTOUT)!$D(DUOUT)!(U[Y)!(Y[U) S Y=U QUIT ""
"RTN","A1AEK2M3",84,0)
 ; Bye
"RTN","A1AEK2M3",85,0)
 K ^TMP($J,"FILES")
"RTN","A1AEK2M3",86,0)
 ;
"RTN","A1AEK2M3",87,0)
 I $L(Y,U)=2 Q $P(Y,U,2)
"RTN","A1AEK2M3",88,0)
 E  QUIT ""
"RTN","A1AEK2M3",89,0)
 ;
"RTN","A1AEK2MT")
0^52^B47121510
"RTN","A1AEK2MT",1,0)
A1AEK2MT ; VEN/SMH - KIDS HFS files to Patch Module testing code;2014-03-28  6:41 PM ; 3/31/14 5:44pm
"RTN","A1AEK2MT",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEK2MT",3,0)
 ;
"RTN","A1AEK2MT",4,0)
TEST D EN^XTMUNIT($T(+0),1,1) QUIT  ; 1/1 means be verbose and break upon errors.
"RTN","A1AEK2MT",5,0)
STARTUP ; M-Unit Start-up
"RTN","A1AEK2MT",6,0)
 ; ZEXCEPT: OLDPWD,A1AEK2MTIEN
"RTN","A1AEK2MT",7,0)
 I $D(DUZ)[0 D ^XUP ; X-New. Protect our variables from XUP's global kill.
"RTN","A1AEK2MT",8,0)
 ; Make the user a surrogate to postmaster
"RTN","A1AEK2MT",9,0)
 N FDA
"RTN","A1AEK2MT",10,0)
 S FDA(3.703,"?+1,.5,",.01)="`"_DUZ
"RTN","A1AEK2MT",11,0)
 S FDA(3.703,"?+1,.5,",1)="y" ; Read Priv
"RTN","A1AEK2MT",12,0)
 S FDA(3.703,"?+1,.5,",2)="y" ; Send Priv
"RTN","A1AEK2MT",13,0)
 D UPDATE^DIE("E",$NA(FDA),$NA(A1AEK2MTIEN))
"RTN","A1AEK2MT",14,0)
 ; Delete all the old data, ONLY IF WE ARE ON TEST
"RTN","A1AEK2MT",15,0)
 I '$$PROD^XUPROD() D
"RTN","A1AEK2MT",16,0)
 . D EN^DDIOL("Deleting all imported users.")
"RTN","A1AEK2MT",17,0)
 . N USR S USR=48
"RTN","A1AEK2MT",18,0)
 . N DA,DIK S DIK="^VA(200,"
"RTN","A1AEK2MT",19,0)
 . F  S USR=$O(^VA(200,USR)) Q:'USR  D
"RTN","A1AEK2MT",20,0)
 . . I $L($P(^VA(200,USR,0),U,3)) QUIT  ; Has access code... don't delete.
"RTN","A1AEK2MT",21,0)
 . . S DA=USR D ^DIK
"RTN","A1AEK2MT",22,0)
 . ;
"RTN","A1AEK2MT",23,0)
 . ; Now loop through the package file, and delete the A1AE Packages from our file
"RTN","A1AEK2MT",24,0)
 . D EN^DDIOL("Deleting imported package set-ups and imported patches")
"RTN","A1AEK2MT",25,0)
 . N PKG S PKG=0 F  S PKG=$O(^DIC(9.4,PKG)) Q:'PKG  D
"RTN","A1AEK2MT",26,0)
 . . N DA,DIK S DIK="^A1AE(11005,"
"RTN","A1AEK2MT",27,0)
 . . S DA="" F  S DA=$O(^A1AE(11005,"D",PKG,DA)) Q:'DA  F DIK="^A1AE(11005,","^A1AE(11005.1,","^A1AE(11005.5," D ^DIK
"RTN","A1AEK2MT",28,0)
 . . N DA,DIK S DIK="^A1AE(11007,"
"RTN","A1AEK2MT",29,0)
 . . I $D(^A1AE(11007,"B",PKG)) S DA=PKG D ^DIK
"RTN","A1AEK2MT",30,0)
 . S $P(^A1AE(11005,0),U,3,4)=0_U_0 ; Zero out the header node so we start counting at zero
"RTN","A1AEK2MT",31,0)
 ;
"RTN","A1AEK2MT",32,0)
 I +$SY'=47 QUIT  ; Test Works only on GT.M/Unix
"RTN","A1AEK2MT",33,0)
 S OLDPWD=$$PWD^A1AEOS()
"RTN","A1AEK2MT",34,0)
 D EN^DDIOL("Cloning the OSEHRA repository. This will take some time.")
"RTN","A1AEK2MT",35,0)
        N % S %=$$MKDIR^A1AEOS("osehra-repo")
"RTN","A1AEK2MT",36,0)
        I % S $EC=",U-MKDIR-FAILED,"
"RTN","A1AEK2MT",37,0)
        N D S D=$$D^A1AEOS()
"RTN","A1AEK2MT",38,0)
        N % S %=$$CD^A1AEOS(OLDPWD_D_"osehra-repo")
"RTN","A1AEK2MT",39,0)
        I %'["osehra" S $EC=",U-CD-FAILED,"
"RTN","A1AEK2MT",40,0)
        N % S %=$$RDPIPE^A1AEOS(,"git clone --depth=0 https://github.com/OSEHRA/VistA")
"RTN","A1AEK2MT",41,0)
 QUIT
"RTN","A1AEK2MT",42,0)
 ;
"RTN","A1AEK2MT",43,0)
SHUTDOWN ; M-Unit Shutdown
"RTN","A1AEK2MT",44,0)
 ; Delete surrogate for postmaster
"RTN","A1AEK2MT",45,0)
 ; ZEXCEPT: OLDPWD,A1AEK2MTIEN ; Created in STARTUP
"RTN","A1AEK2MT",46,0)
 N C S C=","
"RTN","A1AEK2MT",47,0)
 N FDA S FDA(3.703,A1AEK2MTIEN(1)_C_.5_C,.01)="@" D FILE^DIE("E",$NA(FDA))
"RTN","A1AEK2MT",48,0)
 ;
"RTN","A1AEK2MT",49,0)
 N P S P="cmdpipe"
"RTN","A1AEK2MT",50,0)
        N % S %=$$CD^A1AEOS(OLDPWD)
"RTN","A1AEK2MT",51,0)
 K OLDPWD,A1AEK2MTIEN
"RTN","A1AEK2MT",52,0)
 ; Don't delete. Takes forever to clone again.
"RTN","A1AEK2MT",53,0)
 ; O P:(shell="/bin/sh":command="rm -rf osehra-repo")::"pipe"
"RTN","A1AEK2MT",54,0)
 ; U P C P
"RTN","A1AEK2MT",55,0)
 QUIT
"RTN","A1AEK2MT",56,0)
 ;
"RTN","A1AEK2MT",57,0)
CLEANQP ; @TEST Clean Q-Patch Queue (Temporary until we make the code file into 11005/11005.1 directly)
"RTN","A1AEK2MT",58,0)
 N XMDUZ,XMK,XMZ
"RTN","A1AEK2MT",59,0)
 S XMDUZ=.5
"RTN","A1AEK2MT",60,0)
 N % S %=$O(^XMB(3.7,.5,2,"B","Q-PATCH"))
"RTN","A1AEK2MT",61,0)
 S XMK=$O(^XMB(3.7,.5,2,"B",%,0))
"RTN","A1AEK2MT",62,0)
 S XMZ=0 F  S XMZ=$O(^XMB(3.7,.5,2,XMK,1,XMZ)) Q:'XMZ  D KL^XMA1B
"RTN","A1AEK2MT",63,0)
 D ASSERT($O(^XMB(3.7,.5,2,XMK,1,0))="")
"RTN","A1AEK2MT",64,0)
 ;
"RTN","A1AEK2MT",65,0)
 ; Remove unreferenced messages from Mailman
"RTN","A1AEK2MT",66,0)
 N XMPARM
"RTN","A1AEK2MT",67,0)
 S (XMPARM("TYPE"),XMPARM("START"))=0
"RTN","A1AEK2MT",68,0)
 S (XMPARM("END"),XMPARM("PDATE"))=$$FMADD^XLFDT($$DT^XLFDT(),1)
"RTN","A1AEK2MT",69,0)
 D PURGEIT^XMA3(.XMPARM)
"RTN","A1AEK2MT",70,0)
 QUIT
"RTN","A1AEK2MT",71,0)
 ;
"RTN","A1AEK2MT",72,0)
GETSTRM ; @TEST Test GETSTRM^A1AEK2M
"RTN","A1AEK2MT",73,0)
 D CHKEQ^XTMUNIT($$GETSTRM^A1AEK2M0("AAA*2.0*55"),1)
"RTN","A1AEK2MT",74,0)
 D CHKEQ^XTMUNIT($$GETSTRM^A1AEK2M0("AAA*2.0*0"),1)
"RTN","A1AEK2MT",75,0)
 D CHKEQ^XTMUNIT($$GETSTRM^A1AEK2M0("AAA*2.0*10035"),10001)
"RTN","A1AEK2MT",76,0)
 QUIT
"RTN","A1AEK2MT",77,0)
 ;
"RTN","A1AEK2MT",78,0)
SELFILT ; ##TEST Test file selector - Can't use M-Unit... this is interactive.
"RTN","A1AEK2MT",79,0)
 N ROOT S ROOT="/home/forum/testkids/"
"RTN","A1AEK2MT",80,0)
 N ARRAY S ARRAY("*")=""
"RTN","A1AEK2MT",81,0)
 N FILE
"RTN","A1AEK2MT",82,0)
 N % S %=$$LIST^%ZISH(ROOT,"ARRAY","FILE")
"RTN","A1AEK2MT",83,0)
 I '% S $EC=",U-WRONG-DIRECTORY,"
"RTN","A1AEK2MT",84,0)
 N % S %=$$SELFIL^A1AEK2M3(.FILE)
"RTN","A1AEK2MT",85,0)
 W !,%
"RTN","A1AEK2MT",86,0)
 N % S %=$$SELFIL^A1AEK2M3(.FILE,".TXT")
"RTN","A1AEK2MT",87,0)
 W !,%
"RTN","A1AEK2MT",88,0)
 QUIT
"RTN","A1AEK2MT",89,0)
 ;
"RTN","A1AEK2MT",90,0)
ANALYZE1 ; @TEST Test Analyze on just the TIU patches
"RTN","A1AEK2MT",91,0)
 N ROOT S ROOT="/home/forum/testkids/"
"RTN","A1AEK2MT",92,0)
 N A S A("*.TXT")=""
"RTN","A1AEK2MT",93,0)
 N FILE
"RTN","A1AEK2MT",94,0)
 N % S %=$$LIST^%ZISH(ROOT,$NA(A),$NA(FILE))
"RTN","A1AEK2MT",95,0)
 N J S J=""
"RTN","A1AEK2MT",96,0)
 F  S J=$O(FILE(J)) Q:J=""  D
"RTN","A1AEK2MT",97,0)
 . K ^TMP($J,"TXT")
"RTN","A1AEK2MT",98,0)
 . N Y S Y=$$FTG^%ZISH(ROOT,J,$NA(^TMP($J,"TXT",2,0)),3) I 'Y S $ECODE=",U-CANNOT-READ-FILE,"
"RTN","A1AEK2MT",99,0)
 . D CLEANHF^A1AEK2M0($NA(^TMP($J,"TXT")))
"RTN","A1AEK2MT",100,0)
 . N RTN
"RTN","A1AEK2MT",101,0)
 . D ANALYZE^A1AEK2M2(.RTN,$NA(^TMP($J,"TXT")),"")
"RTN","A1AEK2MT",102,0)
 . D ASSERT($L(RTN("SEQ")))
"RTN","A1AEK2MT",103,0)
 . D ASSERT($L(RTN("SUBJECT")))
"RTN","A1AEK2MT",104,0)
 QUIT
"RTN","A1AEK2MT",105,0)
 ;
"RTN","A1AEK2MT",106,0)
ANALYZE2 ; @TEST Analyze on ALL patches on OSEHRA FOIA repo
"RTN","A1AEK2MT",107,0)
        N FILES N % S %=$$RDPIPE^A1AEOS(.FILES,"find . -name '*.TXT'")
"RTN","A1AEK2MT",108,0)
        N I F I=0:0 S I=$O(FILES(I)) Q:'I  D 
"RTN","A1AEK2MT",109,0)
 . K ^TMP($J,"TXT")
"RTN","A1AEK2MT",110,0)
 . N Y S Y=$$FTG^%ZISH($$PWD^A1AEOS(),FILES(I),$NA(^TMP($J,"TXT",2,0)),3) I 'Y S $ECODE=",U-CANNOT-READ-FILE,"
"RTN","A1AEK2MT",111,0)
 . D CLEANHF^A1AEK2M0($NA(^TMP($J,"TXT"))) ; Clean header and footer.
"RTN","A1AEK2MT",112,0)
 . N RTN
"RTN","A1AEK2MT",113,0)
 . N $ET,$ES ; We do a try catch with ANALYZE^A1AEK2M2
"RTN","A1AEK2MT",114,0)
 . S $ET="D ANATRAP^A1AEK2M2(FILES(I))"
"RTN","A1AEK2MT",115,0)
 . D ANALYZE^A1AEK2M2(.RTN,$NA(^TMP($J,"TXT")),"")
"RTN","A1AEK2MT",116,0)
 . D ASSERT($L(RTN("SEQ")))
"RTN","A1AEK2MT",117,0)
 . D ASSERT($L(RTN("SUBJECT")))
"RTN","A1AEK2MT",118,0)
 QUIT  ; /END ANALYZE2
"RTN","A1AEK2MT",119,0)
 ;
"RTN","A1AEK2MT",120,0)
SB ; @TEST Analyze Single build KIDS file
"RTN","A1AEK2MT",121,0)
 N F S F="/home/osehra/VistA/Packages/Text Integration Utility/Patches/TIU_1.0_239/TIU-1_SEQ-239_PAT-239.KID"
"RTN","A1AEK2MT",122,0)
 N PATH S PATH=$P(F,"/",1,$L(F,"/")-1)
"RTN","A1AEK2MT",123,0)
 N FILE S FILE=$P(F,"/",$L(F,"/"))
"RTN","A1AEK2MT",124,0)
 ;
"RTN","A1AEK2MT",125,0)
 K ^TMP($J,"KID"),^("ANKID")
"RTN","A1AEK2MT",126,0)
 ;
"RTN","A1AEK2MT",127,0)
 N % S %=$$FTG^%ZISH(PATH,FILE,$NA(^TMP($J,"KID",1,0)),3)
"RTN","A1AEK2MT",128,0)
 I '% D FAIL^XTMUNIT("Can't open file") QUIT
"RTN","A1AEK2MT",129,0)
 ;
"RTN","A1AEK2MT",130,0)
 D ANALYZE^A1AEK2M1($NA(^TMP($J,"ANKID")),$NA(^TMP($J,"KID")))
"RTN","A1AEK2MT",131,0)
 D CHKTF^XTMUNIT($D(^TMP($J,"ANKID","TIU*1.0*239")),"KIDS file not loaded")
"RTN","A1AEK2MT",132,0)
 QUIT
"RTN","A1AEK2MT",133,0)
 ;
"RTN","A1AEK2MT",134,0)
MB ; @TEST Analyze Multibuild KIDS file
"RTN","A1AEK2MT",135,0)
 N F S F="/home/osehra/VistA/Packages/MultiBuilds/TERATOGENIC_MEDICATIONS_ORDER_CHECKS.KID"
"RTN","A1AEK2MT",136,0)
 N PATH S PATH=$P(F,"/",1,$L(F,"/")-1)
"RTN","A1AEK2MT",137,0)
 N FILE S FILE=$P(F,"/",$L(F,"/"))
"RTN","A1AEK2MT",138,0)
 ;
"RTN","A1AEK2MT",139,0)
 K ^TMP($J,"KID"),^("ANKID")
"RTN","A1AEK2MT",140,0)
 ;
"RTN","A1AEK2MT",141,0)
 N % S %=$$FTG^%ZISH(PATH,FILE,$NA(^TMP($J,"KID",1,0)),3)
"RTN","A1AEK2MT",142,0)
 I '% D FAIL^XTMUNIT("Can't open file") QUIT
"RTN","A1AEK2MT",143,0)
 ;
"RTN","A1AEK2MT",144,0)
 D ANALYZE^A1AEK2M1($NA(^TMP($J,"ANKID")),$NA(^TMP($J,"KID")))
"RTN","A1AEK2MT",145,0)
 D CHKTF^XTMUNIT($D(^TMP($J,"ANKID","OR*3.0*357")))
"RTN","A1AEK2MT",146,0)
 D CHKTF^XTMUNIT($D(^TMP($J,"ANKID","PXRM*2.0*22")))
"RTN","A1AEK2MT",147,0)
 D CHKTF^XTMUNIT($D(^TMP($J,"ANKID","TERATOGENIC MEDICATIONS ORDER CHECKS 1.0")))
"RTN","A1AEK2MT",148,0)
 QUIT
"RTN","A1AEK2MT",149,0)
 ;
"RTN","A1AEK2MT",150,0)
LOADALL ; @TEST Load all patches on the OSEHRA repo into the patch module
"RTN","A1AEK2MT",151,0)
 N ROOT
"RTN","A1AEK2MT",152,0)
 N P S P="cmdpipe"
"RTN","A1AEK2MT",153,0)
 N A S A("VistA/Packages/*")=""
"RTN","A1AEK2MT",154,0)
 N PACKAGES
"RTN","A1AEK2MT",155,0)
 N % S %=$$LIST^%ZISH($$PWD^A1AEOS(),$NA(A),$NA(PACKAGES))
"RTN","A1AEK2MT",156,0)
 I '% S $EC=",U-LISTER-FAILED,"
"RTN","A1AEK2MT",157,0)
 ;
"RTN","A1AEK2MT",158,0)
 ; Get MB directory
"RTN","A1AEK2MT",159,0)
 N PACKAGE S PACKAGE=""
"RTN","A1AEK2MT",160,0)
 F  S PACKAGE=$O(PACKAGES(PACKAGE)) Q:PACKAGE=""  D
"RTN","A1AEK2MT",161,0)
 . I $E(PACKAGE)="." QUIT  ; .gitignore
"RTN","A1AEK2MT",162,0)
 . I PACKAGE="MultiBuilds" S ROOT("MB")=$P($O(A("")),"*")_PACKAGE QUIT
"RTN","A1AEK2MT",163,0)
 . I PACKAGE="Uncategorized" QUIT
"RTN","A1AEK2MT",164,0)
 ;
"RTN","A1AEK2MT",165,0)
 ; Load each patch
"RTN","A1AEK2MT",166,0)
 F  S PACKAGE=$O(PACKAGES(PACKAGE)) Q:PACKAGE=""  D
"RTN","A1AEK2MT",167,0)
 . I $E(PACKAGE)="." QUIT  ; .gitignore
"RTN","A1AEK2MT",168,0)
 . I PACKAGE="MultiBuilds" QUIT
"RTN","A1AEK2MT",169,0)
 . I PACKAGE="Uncategorized" QUIT
"RTN","A1AEK2MT",170,0)
 . N A S A("VistA/Packages/"_PACKAGE_"/Patches/*")=""
"RTN","A1AEK2MT",171,0)
 . N PATCHES
"RTN","A1AEK2MT",172,0)
 . N % S %=$$LIST^%ZISH($$PWD^A1AEOS(),$NA(A),$NA(PATCHES))
"RTN","A1AEK2MT",173,0)
 . I '% S $EC=",U-LISTER-FAILED,"
"RTN","A1AEK2MT",174,0)
 . N PATCH S PATCH=""
"RTN","A1AEK2MT",175,0)
 . F  S PATCH=$O(PATCHES(PATCH)) Q:PATCH=""  D
"RTN","A1AEK2MT",176,0)
 . . I PATCH="README.rst" QUIT
"RTN","A1AEK2MT",177,0)
 . . S ROOT("SB")="VistA/Packages/"_PACKAGE_"/Patches/"_PATCH_"/"
"RTN","A1AEK2MT",178,0)
 . . D SILENT^A1AEK2M(.ROOT)
"RTN","A1AEK2MT",179,0)
 QUIT
"RTN","A1AEK2MT",180,0)
 ;
"RTN","A1AEK2MT",181,0)
LOADDUP ; @TEST - Try to duplicate the loaded patches
"RTN","A1AEK2MT",182,0)
 N ROOT
"RTN","A1AEK2MT",183,0)
 S ROOT("SB")="/home/forum/testkids/"
"RTN","A1AEK2MT",184,0)
 S ROOT("MB")="/home/sam/VistA/Packages/MultiBuilds/"
"RTN","A1AEK2MT",185,0)
 D SILENT^A1AEK2M(.ROOT)
"RTN","A1AEK2MT",186,0)
 N %1,%2
"RTN","A1AEK2MT",187,0)
 S %1=$O(^A1AE(11005,"ADERIVED","TIU*1*272",""))
"RTN","A1AEK2MT",188,0)
 D ASSERT(%1,"Entry must exist")
"RTN","A1AEK2MT",189,0)
 S %2=$O(^A1AE(11005,"ADERIVED","TIU*1*272",%1))
"RTN","A1AEK2MT",190,0)
 D ASSERT(%2="","There should not be a duplicated entry")
"RTN","A1AEK2MT",191,0)
 QUIT
"RTN","A1AEK2MT",192,0)
 ;
"RTN","A1AEK2MT",193,0)
 ; Convenience methods for M-Unit.
"RTN","A1AEK2MT",194,0)
ASSERT(A,B) D CHKTF^XTMUNIT(A,$G(B)) QUIT
"RTN","A1AEK2MT",195,0)
CHKEQ(A,B,C) D CHKEQ^XTMUNIT(A,B,$G(C)) QUIT
"RTN","A1AEK2V0")
0^58^B64294184
"RTN","A1AEK2V0",1,0)
A1AEK2V0 ; VEN/SMH - Continuation of A1AEK2VC;2014-03-24  3:56 PM
"RTN","A1AEK2V0",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEK2V0",3,0)
 ;
"RTN","A1AEK2V0",4,0)
RTN(FAIL,RTNGLO,ROOT) ; Routine Exporter
"RTN","A1AEK2V0",5,0)
 ; .FAIL - Output. Did we fail? Mostly b/c of filesystem issues.
"RTN","A1AEK2V0",6,0)
 ; RTNGLO - The KIDS global ending at "RTN". Use $NA to pass this.
"RTN","A1AEK2V0",7,0)
 ; ROOT - File system root where we are gonna make the Routines directory
"RTN","A1AEK2V0",8,0)
 ;
"RTN","A1AEK2V0",9,0)
 N RTNDIR S RTNDIR=ROOT_"Routines/"
"RTN","A1AEK2V0",10,0)
 N % S %=$$MKDIR^A1AEOS(RTNDIR)
"RTN","A1AEK2V0",11,0)
 I % S FAIL=1 QUIT
"RTN","A1AEK2V0",12,0)
 ;
"RTN","A1AEK2V0",13,0)
 D EN^DDIOL("Exporting these routines to Routines/")
"RTN","A1AEK2V0",14,0)
 ;
"RTN","A1AEK2V0",15,0)
 N POP
"RTN","A1AEK2V0",16,0)
 N RTN S RTN=""
"RTN","A1AEK2V0",17,0)
 N RTNDDIOL S RTNDDIOL="" ; Output message
"RTN","A1AEK2V0",18,0)
 F  S RTN=$O(@RTNGLO@(RTN)) Q:RTN=""  D  Q:POP
"RTN","A1AEK2V0",19,0)
 . D OPEN^%ZISH("RTNHDR",RTNDIR,RTN_".header","W")
"RTN","A1AEK2V0",20,0)
 . I POP S FAIL=1 QUIT
"RTN","A1AEK2V0",21,0)
 . U IO
"RTN","A1AEK2V0",22,0)
 . W @RTNGLO@(RTN) ; Header node.
"RTN","A1AEK2V0",23,0)
 . D CLOSE^%ZISH("RTNHDR")
"RTN","A1AEK2V0",24,0)
 . ;
"RTN","A1AEK2V0",25,0)
 . ; Now write the routine code
"RTN","A1AEK2V0",26,0)
 . D OPEN^%ZISH("RTNCODE",RTNDIR,RTN_".m","W")
"RTN","A1AEK2V0",27,0)
 . I POP S FAIL=1 QUIT
"RTN","A1AEK2V0",28,0)
 . U IO
"RTN","A1AEK2V0",29,0)
 . N LN F LN=0:0 S LN=$O(@RTNGLO@(RTN,LN)) Q:'LN  W ^(LN,0),!
"RTN","A1AEK2V0",30,0)
 . D CLOSE^%ZISH("RTNCODE")
"RTN","A1AEK2V0",31,0)
 . ; done!
"RTN","A1AEK2V0",32,0)
 . S RTNDDIOL=RTNDDIOL_" "_RTN ; Add to output message
"RTN","A1AEK2V0",33,0)
 S $E(RTNDDIOL)="" ; Remove leading space
"RTN","A1AEK2V0",34,0)
 ;
"RTN","A1AEK2V0",35,0)
 D EN^DDIOL(RTNDDIOL)
"RTN","A1AEK2V0",36,0)
 K @RTNGLO
"RTN","A1AEK2V0",37,0)
 QUIT
"RTN","A1AEK2V0",38,0)
 ;
"RTN","A1AEK2V0",39,0)
FIA(FAIL,KIDGLO,ROOT) ; Print FIA, UP, ^DD, ^DIC, SEC, IX, KEY, KEYPTR for each file
"RTN","A1AEK2V0",40,0)
 ; .FAIL - Output. Did we fail? Mostly b/c of filesystem issues.
"RTN","A1AEK2V0",41,0)
 ; KIDGLO - The KIDS global (not a sub). Use $NA to pass this.
"RTN","A1AEK2V0",42,0)
 ; ROOT - File system root where we are gonna export.
"RTN","A1AEK2V0",43,0)
 Q:'$D(@KIDGLO@("FIA"))  ; No files to export
"RTN","A1AEK2V0",44,0)
 ;
"RTN","A1AEK2V0",45,0)
 N POP
"RTN","A1AEK2V0",46,0)
 ;
"RTN","A1AEK2V0",47,0)
 N PATH S PATH=ROOT_"Files/"
"RTN","A1AEK2V0",48,0)
 S POP=$$MKDIR^A1AEOS(PATH)
"RTN","A1AEK2V0",49,0)
 I POP D EN^DDIOL($$RED("Couldn't create directory")) S FAIL=1 QUIT
"RTN","A1AEK2V0",50,0)
 ;
"RTN","A1AEK2V0",51,0)
 D EN^DDIOL("Exporting files DD and Data to Files/")
"RTN","A1AEK2V0",52,0)
 ;
"RTN","A1AEK2V0",53,0)
 N FILE F FILE=0:0 S FILE=$O(@KIDGLO@("FIA",FILE)) Q:'FILE  D  Q:$G(POP)   ; For each top file in "FIA"
"RTN","A1AEK2V0",54,0)
 . N FNUM S FNUM=FILE                                                      ; File Number
"RTN","A1AEK2V0",55,0)
 . N FNAM S FNAM=@KIDGLO@("FIA",FILE)                                      ; File Name (Value of the first FIA node)
"RTN","A1AEK2V0",56,0)
 . S FNAM=$TR(FNAM,"\/!@#$%^&*()","------------")                          ; Replace punc with dashes
"RTN","A1AEK2V0",57,0)
 . N HFSNAME S HFSNAME=FNUM_"+"_FNAM_".DD.zwr"                             ; File Name
"RTN","A1AEK2V0",58,0)
 . D OPEN^%ZISH("DD",PATH,HFSNAME,"W")                                     ; Open
"RTN","A1AEK2V0",59,0)
 . I POP S FAIL=1 QUIT                                                     ; Open failed
"RTN","A1AEK2V0",60,0)
 . U IO                                                                    ; Use device
"RTN","A1AEK2V0",61,0)
 . D ZWRITE($NA(@KIDGLO@("FIA",FILE)))                                     ; DIFROM FIA Array (data on what to send)
"RTN","A1AEK2V0",62,0)
 . I $D(@KIDGLO@("^DIC",FILE)) D ZWRITE($NA(^(FILE))) K @KIDGLO@("^DIC",FILE)              ; FOF Nodes.
"RTN","A1AEK2V0",63,0)
 . D ZWRITE($NA(@KIDGLO@("^DD",FILE))) K @KIDGLO@("^DD",FILE)                              ; Data Dictionary
"RTN","A1AEK2V0",64,0)
 . I $D(@KIDGLO@("SEC","^DIC",FILE)) D ZWRITE($NA(^(FILE))) K @KIDGLO@("SEC","^DIC",FILE)  ; ^DIC Security Nodes
"RTN","A1AEK2V0",65,0)
 . I $D(@KIDGLO@("SEC","^DD",FILE)) D ZWRITE($NA(^(FILE))) K @KIDGLO@("SEC","^DD",FILE)    ; ^DD Security Nodes
"RTN","A1AEK2V0",66,0)
 . I $D(@KIDGLO@("UP",FILE)) D ZWRITE($NA(^(FILE))) K @KIDGLO@("UP",FILE)              ; Subfile upward nodes to find parent files
"RTN","A1AEK2V0",67,0)
 . I $D(@KIDGLO@("IX",FILE)) D ZWRITE($NA(^(FILE))) K @KIDGLO@("IX",FILE)              ; New Style Indexes
"RTN","A1AEK2V0",68,0)
 . I $D(@KIDGLO@("KEY",FILE)) D                                            ; Keys?
"RTN","A1AEK2V0",69,0)
 . . D ZWRITE($NA(@KIDGLO@("KEY",FILE))) K @KIDGLO@("KEY",FILE)            ; Keys...
"RTN","A1AEK2V0",70,0)
 . . D ZWRITE($NA(@KIDGLO@("KEYPTR",FILE))) K @KIDGLO@("KEYPTR",FILE)      ; and pointer resolution to NS indexes
"RTN","A1AEK2V0",71,0)
 . N SUBFILE F SUBFILE=0:0 S SUBFILE=$O(@KIDGLO@("FIA",FILE,SUBFILE)) Q:'SUBFILE  D
"RTN","A1AEK2V0",72,0)
 . . I $D(@KIDGLO@("PGL",SUBFILE)) D ZWRITE($NA(@KIDGLO@("PGL",SUBFILE))) K @KIDGLO@("PGL",SUBFILE) ; Source system pointer resolution (not used at dest.)
"RTN","A1AEK2V0",73,0)
 . D CLOSE^%ZISH("DD")                                                     ; Close. Resets IO.
"RTN","A1AEK2V0",74,0)
 . D EN^DDIOL("Exported "_HFSNAME)
"RTN","A1AEK2V0",75,0)
 ;
"RTN","A1AEK2V0",76,0)
 ;
"RTN","A1AEK2V0",77,0)
 D DATA(.FAIL,KIDGLO,PATH)                                                 ; Now Data...
"RTN","A1AEK2V0",78,0)
 K @KIDGLO@("FIA")                                                         ; Kill this off now.
"RTN","A1AEK2V0",79,0)
 QUIT
"RTN","A1AEK2V0",80,0)
 ;
"RTN","A1AEK2V0",81,0)
DATA(FAIL,KIDGLO,ROOT) ; Print DATA, FRV1, FRVL, FRV1K subscripts
"RTN","A1AEK2V0",82,0)
 ; .FAIL - Output. Did we fail? Mostly b/c of filesystem issues.
"RTN","A1AEK2V0",83,0)
 ; KIDGLO - The KIDS global (not a sub). Use $NA to pass this.
"RTN","A1AEK2V0",84,0)
 ; ROOT - File system root where we are gonna export.
"RTN","A1AEK2V0",85,0)
 Q:'$D(@KIDGLO@("DATA"))
"RTN","A1AEK2V0",86,0)
 ;
"RTN","A1AEK2V0",87,0)
 N POP
"RTN","A1AEK2V0",88,0)
 N FILE F FILE=0:0 S FILE=$O(@KIDGLO@("FIA",FILE)) Q:'FILE  D  Q:$G(POP)   ; For each top file in "FIA"
"RTN","A1AEK2V0",89,0)
 . Q:'$D(@KIDGLO@("DATA",FILE))                                            ; No Data. Skip.
"RTN","A1AEK2V0",90,0)
 . N FNUM S FNUM=FILE                                                      ; File Number
"RTN","A1AEK2V0",91,0)
 . N FNAM S FNAM=@KIDGLO@("FIA",FILE)                                      ; File Name (Value of the first FIA node)
"RTN","A1AEK2V0",92,0)
 . S FNAM=$TR(FNAM,"\/!@#$%^&*()","------------")                          ; Replace punc with dashes
"RTN","A1AEK2V0",93,0)
 . N HFSNAME S HFSNAME=FNUM_"+"_FNAM_".Data.zwr"                           ; File Name
"RTN","A1AEK2V0",94,0)
 . D OPEN^%ZISH("DATA",ROOT,HFSNAME,"W")                                   ; Open
"RTN","A1AEK2V0",95,0)
 . I POP S FAIL=1 QUIT                                                     ; Open failed
"RTN","A1AEK2V0",96,0)
 . U IO                                                                    ; Use device
"RTN","A1AEK2V0",97,0)
 . D ZWRITE($NA(@KIDGLO@("DATA",FILE))) K @KIDGLO@("DATA",FILE)            ; Export Data
"RTN","A1AEK2V0",98,0)
 . I $D(@KIDGLO@("FRV1",FILE)) D                                           ; Pointer Resolution?
"RTN","A1AEK2V0",99,0)
 . . D ZWRITE($NA(@KIDGLO@("FRV1",FILE))) K @KIDGLO@("FRV1",FILE)          ; Operator node. See DIFROMSR.
"RTN","A1AEK2V0",100,0)
 . . D ZWRITE($NA(@KIDGLO@("FRVL",FILE))) K @KIDGLO@("FRVL",FILE)          ; Don't know what that is. See DIFROMSR.
"RTN","A1AEK2V0",101,0)
 . . D ZWRITE($NA(@KIDGLO@("FRV1K",FILE))) K @KIDGLO@("FRV1K",FILE)        ; ditto
"RTN","A1AEK2V0",102,0)
 . D CLOSE^%ZISH("DATA")                                                   ; Close. Resets IO.
"RTN","A1AEK2V0",103,0)
 . D EN^DDIOL("Exported "_HFSNAME)
"RTN","A1AEK2V0",104,0)
 K @KIDGLO@("DATA")
"RTN","A1AEK2V0",105,0)
 QUIT
"RTN","A1AEK2V0",106,0)
ZWRITE(NAME,QS,QSREP) ; Replacement for ZWRITE ; Public Proc
"RTN","A1AEK2V0",107,0)
ZWRITE0 ; Goto Entry point for A1AEK2VC (only permitted user)
"RTN","A1AEK2V0",108,0)
 ; Pass NAME by name as a closed reference. lvn and gvn are both supported.
"RTN","A1AEK2V0",109,0)
 ; QS = Query Subscript to replace. Optional.
"RTN","A1AEK2V0",110,0)
 ; QSREP = Query Subscrpt replacement. Optional, but must be passed if QS is.
"RTN","A1AEK2V0",111,0)
 ; : syntax is not supported (yet)
"RTN","A1AEK2V0",112,0)
 S QS=$G(QS),QSREP=$G(QSREP)
"RTN","A1AEK2V0",113,0)
 I QS,'$L(QSREP) S $EC=",U-INVALID-PARAMETERS,"
"RTN","A1AEK2V0",114,0)
 N INCEXPN S INCEXPN=""
"RTN","A1AEK2V0",115,0)
 I $L(QSREP) S INCEXPN="S $G("_QSREP_")="_QSREP_"+1"
"RTN","A1AEK2V0",116,0)
 N L S L=$L(NAME) ; Name length
"RTN","A1AEK2V0",117,0)
 I $E(NAME,L-2,L)=",*)" S NAME=$E(NAME,1,L-3)_")" ; If last sub is *, remove it and close the ref
"RTN","A1AEK2V0",118,0)
 N ORIGNAME S ORIGNAME=NAME          ; 
"RTN","A1AEK2V0",119,0)
 N ORIGQL S ORIGQL=$QL(NAME)         ; Number of subscripts in the original name
"RTN","A1AEK2V0",120,0)
 I $D(@NAME)#2 W $S(QS:$$SUBNAME(NAME,QS,QSREP),1:NAME),"=",$$FORMAT(@NAME),!        ; Write base if it exists
"RTN","A1AEK2V0",121,0)
 ; $QUERY through the name. 
"RTN","A1AEK2V0",122,0)
 ; Stop when we are out.
"RTN","A1AEK2V0",123,0)
 ; Stop when the last subscript of the original name isn't the same as 
"RTN","A1AEK2V0",124,0)
 ; the last subscript of the Name. 
"RTN","A1AEK2V0",125,0)
 F  S NAME=$Q(@NAME) Q:NAME=""  Q:$NA(@ORIGNAME,ORIGQL)'=$NA(@NAME,ORIGQL)  D
"RTN","A1AEK2V0",126,0)
 . W $S(QS:$$SUBNAME(NAME,QS,QSREP),1:NAME),"=",$$FORMAT(@NAME),!
"RTN","A1AEK2V0",127,0)
 QUIT
"RTN","A1AEK2V0",128,0)
 ;
"RTN","A1AEK2V0",129,0)
SUBNAME(N,QS,QSREP) ; Substitue subscript QS's value with QSREP in name reference N
"RTN","A1AEK2V0",130,0)
 N VARCR S VARCR=$NA(@N,QS-1) ; Closed reference of name up to the sub we want to change
"RTN","A1AEK2V0",131,0)
 N VAROR S VAROR=$S($E(VARCR,$L(VARCR))=")":$E(VARCR,1,$L(VARCR)-1)_",",1:VARCR_"(") ; Open ref
"RTN","A1AEK2V0",132,0)
 N B4 S B4=$NA(@N,QS),B4=$E(B4,1,$L(B4)-1) ; Before sub piece, only used in next line
"RTN","A1AEK2V0",133,0)
 N AF S AF=$P(N,B4,2,99) ; After sub piece
"RTN","A1AEK2V0",134,0)
 QUIT VAROR_QSREP_AF
"RTN","A1AEK2V0",135,0)
 ;
"RTN","A1AEK2V0",136,0)
FORMAT(V) ; Add quotes, replace control characters if necessary; Public $$
"RTN","A1AEK2V0",137,0)
 ;If numeric, nothing to do.
"RTN","A1AEK2V0",138,0)
 ;If no encoding required, then return as quoted string.
"RTN","A1AEK2V0",139,0)
 ;Otherwise, return as an expression with $C()'s and strings.
"RTN","A1AEK2V0",140,0)
 I +V=V Q V ; If numeric, just return the value.
"RTN","A1AEK2V0",141,0)
 N QT S QT="""" ; Quote
"RTN","A1AEK2V0",142,0)
 I $F(V,QT) D     ;chk if V contains any Quotes
"RTN","A1AEK2V0",143,0)
 . N P S P=0          ;position pointer into V
"RTN","A1AEK2V0",144,0)
 . F  S P=$F(V,QT,P) Q:'P  D  ;find next "
"RTN","A1AEK2V0",145,0)
 . . S $E(V,P-1)=QT_QT        ;double each "
"RTN","A1AEK2V0",146,0)
 . . S P=P+1                  ;skip over new "
"RTN","A1AEK2V0",147,0)
 I $$CCC(V) D  Q V  ; If control character is present do this and quit
"RTN","A1AEK2V0",148,0)
 . S V=$$RCC(QT_V_QT)  ; Replace control characters in "V"
"RTN","A1AEK2V0",149,0)
 . S:$E(V,1,3)="""""_" $E(V,1,3)="" ; Replace doubled up quotes at start
"RTN","A1AEK2V0",150,0)
 . N L S L=$L(V) S:$E(V,L-2,L)="_""""" $E(V,L-2,L)="" ; Replace doubled up quotes at end
"RTN","A1AEK2V0",151,0)
 Q QT_V_QT ; If no control charactrrs, quit with "V"
"RTN","A1AEK2V0",152,0)
 ;
"RTN","A1AEK2V0",153,0)
CCC(S) ;test if S Contains a Control Character or $C(255); Public $$
"RTN","A1AEK2V0",154,0)
 Q:S?.E1C.E 1
"RTN","A1AEK2V0",155,0)
 Q:$F(S,$C(255)) 1
"RTN","A1AEK2V0",156,0)
 Q 0
"RTN","A1AEK2V0",157,0)
 ;
"RTN","A1AEK2V0",158,0)
RCC(NA) ;Replace control chars in NA with $C( ). Returns encoded string; Public $$
"RTN","A1AEK2V0",159,0)
 Q:'$$CCC(NA) NA                         ;No embedded ctrl chars
"RTN","A1AEK2V0",160,0)
 N OUT S OUT=""                          ;holds output name
"RTN","A1AEK2V0",161,0)
 N CC S CC=0                             ;count ctrl chars in $C(
"RTN","A1AEK2V0",162,0)
 N C255 S C255=$C(255)                   ;$C(255) which Mumps may not classify as a Control
"RTN","A1AEK2V0",163,0)
 N C                                     ;temp hold each char
"RTN","A1AEK2V0",164,0)
 N I F I=1:1:$L(NA) S C=$E(NA,I) D           ;for each char C in NA
"RTN","A1AEK2V0",165,0)
 . I C'?1C,C'=C255 D  S OUT=OUT_C Q      ;not a ctrl char
"RTN","A1AEK2V0",166,0)
 . . I CC S OUT=OUT_")_""",CC=0          ;close up $C(... if one is open
"RTN","A1AEK2V0",167,0)
 . I CC D
"RTN","A1AEK2V0",168,0)
 . . I CC=256 S OUT=OUT_")_$C("_$A(C),CC=0  ;max args in one $C(
"RTN","A1AEK2V0",169,0)
 . . E  S OUT=OUT_","_$A(C)              ;add next ctrl char to $C(
"RTN","A1AEK2V0",170,0)
 . E  S OUT=OUT_"""_$C("_$A(C)
"RTN","A1AEK2V0",171,0)
 . S CC=CC+1
"RTN","A1AEK2V0",172,0)
 . Q
"RTN","A1AEK2V0",173,0)
 Q OUT
"RTN","A1AEK2V0",174,0)
 ;
"RTN","A1AEK2V0",175,0)
TEST D EN^XTMUNIT($T(+0),1,1) QUIT
"RTN","A1AEK2V0",176,0)
T1 ; @TEST subscript substitutions
"RTN","A1AEK2V0",177,0)
 D CHKEQ^XTMUNIT($$SUBNAME($NA(^DIPT(2332,0)),1,"IEN"),"^DIPT(IEN,0)")
"RTN","A1AEK2V0",178,0)
 D CHKEQ^XTMUNIT($$SUBNAME($NA(^DIPT("A",123,0)),2,"IEN"),"^DIPT(""A"",IEN,0)")
"RTN","A1AEK2V0",179,0)
 QUIT
"RTN","A1AEK2V0",180,0)
 ; 
"RTN","A1AEK2V0",181,0)
RED(X) ; Convenience method for Sam to see things on the screen.
"RTN","A1AEK2V0",182,0)
 Q $C(27)_"[41;1m"_X_$C(27)_"[0m"
"RTN","A1AEK2V0",183,0)
 ;
"RTN","A1AEK2VC")
0^59^B128816935
"RTN","A1AEK2VC",1,0)
A1AEK2VC ; VEN/SMH - KIDS to Version Control;2014-03-24  3:57 PM; 3/24/14 11:36am
"RTN","A1AEK2VC",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEK2VC",3,0)
 ;
"RTN","A1AEK2VC",4,0)
IX(X,DA) ; Private Entry Point for file 11005 index
"RTN","A1AEK2VC",5,0)
 ; Set off from Field Status (#8)
"RTN","A1AEK2VC",6,0)
 ; i2 -> In review
"RTN","A1AEK2VC",7,0)
 N CURIMP S CURIMP=$P(^A1AE(11005,DA,0),U,21) ; Currently importing
"RTN","A1AEK2VC",8,0)
 I CURIMP,X'="i2" QUIT                        ; If we are currently importing, don't run until we are in-review.
"RTN","A1AEK2VC",9,0)
 D EN(DA)                                     ; Otherwise, always run
"RTN","A1AEK2VC",10,0)
 QUIT
"RTN","A1AEK2VC",11,0)
 ;
"RTN","A1AEK2VC",12,0)
EN(P11005IEN) ; Public Entry Point. Rest are private.
"RTN","A1AEK2VC",13,0)
 ; Break out a KIDS build in 11005.1 into Version Controlled Components
"RTN","A1AEK2VC",14,0)
 ; Input: 11005/11005.1 IEN
"RTN","A1AEK2VC",15,0)
 I '$O(^A1AE(11005.1,P11005IEN,2,0)) QUIT  ; No KIDS build.
"RTN","A1AEK2VC",16,0)
 ;
"RTN","A1AEK2VC",17,0)
 ; DEBUG
"RTN","A1AEK2VC",18,0)
 N DIQUIET  ; Trick Fileman into talking again... When we are trigerred by the DBS, we are silent by default
"RTN","A1AEK2VC",19,0)
 ; DEBUG
"RTN","A1AEK2VC",20,0)
 ;
"RTN","A1AEK2VC",21,0)
 ; Stanza: Find $KID; quit if we can't find it. Otherwise, rem where it is.
"RTN","A1AEK2VC",22,0)
 N I,T F I=0:0 S I=$O(^A1AE(11005.1,P11005IEN,2,I)) Q:'I  S T=^(I,0) Q:($E(T,1,4)="$KID")
"RTN","A1AEK2VC",23,0)
 I T'["$KID" QUIT
"RTN","A1AEK2VC",24,0)
 N SVLN S SVLN=I ; Saved line
"RTN","A1AEK2VC",25,0)
 K T
"RTN","A1AEK2VC",26,0)
 ;
"RTN","A1AEK2VC",27,0)
 ;
"RTN","A1AEK2VC",28,0)
 ; Get rid of the next two lines (**INSTALL NAME** and its value)
"RTN","A1AEK2VC",29,0)
 S SVLN=$O(^A1AE(11005.1,P11005IEN,2,SVLN))
"RTN","A1AEK2VC",30,0)
 S SVLN=$O(^A1AE(11005.1,P11005IEN,2,SVLN))
"RTN","A1AEK2VC",31,0)
 ;
"RTN","A1AEK2VC",32,0)
 ;
"RTN","A1AEK2VC",33,0)
 ; Stanza to Load the KIDS into a temp global.
"RTN","A1AEK2VC",34,0)
 ; Why? B/c KIDS export may scramble some nodes. (Like BLD).
"RTN","A1AEK2VC",35,0)
 ; We need to group them back together.
"RTN","A1AEK2VC",36,0)
 N PD S PD=$$GET1^DIQ(11005,P11005IEN,.01) ; Patch description
"RTN","A1AEK2VC",37,0)
 N ROOT S ROOT=$$GET1^DIQ(11005,P11005IEN,6.1) ; Patch path root
"RTN","A1AEK2VC",38,0)
 I ROOT="" QUIT                              ; No root path
"RTN","A1AEK2VC",39,0)
 K ^XTMP("K2VC")
"RTN","A1AEK2VC",40,0)
 S ^XTMP("K2VC",0)=$$FMADD^XLFDT(DT,1)_DT_U_"KIDS to Version Control"
"RTN","A1AEK2VC",41,0)
 N L1,L2
"RTN","A1AEK2VC",42,0)
 N DONE S DONE=0
"RTN","A1AEK2VC",43,0)
 F  D  Q:DONE
"RTN","A1AEK2VC",44,0)
 . S L1=$O(^A1AE(11005.1,P11005IEN,2,SVLN))  ; first line
"RTN","A1AEK2VC",45,0)
 . N L1TXT S L1TXT=^(L1,0)                   ; its text
"RTN","A1AEK2VC",46,0)
 . I $E(L1TXT,1,8)="$END KID" S DONE=1 QUIT  ; quit if we are at the end
"RTN","A1AEK2VC",47,0)
 . S L2=$O(^A1AE(11005.1,P11005IEN,2,L1))    ; second line
"RTN","A1AEK2VC",48,0)
 . N L2TXT S L2TXT=^(L2,0)                   ; its text
"RTN","A1AEK2VC",49,0)
 . S @("^XTMP(""K2VC"","""_PD_""","_L1TXT)=L2TXT      ; Set our data into our global
"RTN","A1AEK2VC",50,0)
 . S SVLN=L2                                 ; move data pointer to last accessed one
"RTN","A1AEK2VC",51,0)
 ;
"RTN","A1AEK2VC",52,0)
 ; 
"RTN","A1AEK2VC",53,0)
 ; Make directory for exporting KIDS compoents
"RTN","A1AEK2VC",54,0)
 S ROOT=ROOT_"KIDComponents/"
"RTN","A1AEK2VC",55,0)
 N % S %=$$MKDIR^A1AEOS(ROOT)
"RTN","A1AEK2VC",56,0)
 I % D EN^DDIOL($$RED("Couldn't create KIDCommponents directory")) QUIT
"RTN","A1AEK2VC",57,0)
 ; 
"RTN","A1AEK2VC",58,0)
 ; Say that we are exporting
"RTN","A1AEK2VC",59,0)
 N MSG S MSG(1)="Exporting Patch "_PD
"RTN","A1AEK2VC",60,0)
 S MSG(1,"F")="!!!!!"
"RTN","A1AEK2VC",61,0)
 S MSG(2)="Exporting at "_ROOT
"RTN","A1AEK2VC",62,0)
 S MSG(2,"F")="!"
"RTN","A1AEK2VC",63,0)
 D EN^DDIOL(.MSG)
"RTN","A1AEK2VC",64,0)
 ;
"RTN","A1AEK2VC",65,0)
 ; Stanza to process each component of loaded global
"RTN","A1AEK2VC",66,0)
 N A1AEFAIL S A1AEFAIL=0
"RTN","A1AEK2VC",67,0)
 N SN S SN=$NA(^XTMP("K2VC",PD)) ; Short name... I am tired of typing.
"RTN","A1AEK2VC",68,0)
 D EXPORT(.A1AEFAIL,SN,ROOT)
"RTN","A1AEK2VC",69,0)
 ; I $D(^XTMP("K2VC",PD,"DATA")) BREAK
"RTN","A1AEK2VC",70,0)
 I A1AEFAIL D EN^DDIOL($$RED("A failure has occured"))
"RTN","A1AEK2VC",71,0)
 QUIT
"RTN","A1AEK2VC",72,0)
 ;
"RTN","A1AEK2VC",73,0)
EXPORT(A1AEFAIL,SN,ROOT) ; Export KIDS patch to the File system
"RTN","A1AEK2VC",74,0)
 ; .A1AEFAIL = Catch failures
"RTN","A1AEK2VC",75,0)
 ; SN = Short name for Global
"RTN","A1AEK2VC",76,0)
 ; ROOT = File system Root
"RTN","A1AEK2VC",77,0)
 ;
"RTN","A1AEK2VC",78,0)
 ; BLD - Build
"RTN","A1AEK2VC",79,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("BLD")),ROOT,"Build.zwr",4,"IEN") ; Process BUILD Section
"RTN","A1AEK2VC",80,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export BLD")) QUIT
"RTN","A1AEK2VC",81,0)
 K @SN@("BLD")
"RTN","A1AEK2VC",82,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",83,0)
 ;
"RTN","A1AEK2VC",84,0)
 ; FIA, ^DD, ^DIC, SEC, DATA, FR* nodes
"RTN","A1AEK2VC",85,0)
 D FIA^A1AEK2V0(.A1AEFAIL,SN,ROOT)                  ; All file components (DD + data)... Killing done internally.
"RTN","A1AEK2VC",86,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export FIA, ^DD, ^DIC, SEC, DATA, FR*")) QUIT
"RTN","A1AEK2VC",87,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",88,0)
 ;
"RTN","A1AEK2VC",89,0)
 ; PKG - Package
"RTN","A1AEK2VC",90,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("PKG")),ROOT,"Package.zwr",4,"IEN")
"RTN","A1AEK2VC",91,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export PKG")) QUIT
"RTN","A1AEK2VC",92,0)
 K @SN@("PKG")
"RTN","A1AEK2VC",93,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",94,0)
 ;
"RTN","A1AEK2VC",95,0)
 ; VER - Kernel and Fileman Versions
"RTN","A1AEK2VC",96,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("VER")),ROOT,"KernelFMVersion.zwr")
"RTN","A1AEK2VC",97,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export VER")) QUIT
"RTN","A1AEK2VC",98,0)
 K @SN@("VER")
"RTN","A1AEK2VC",99,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",100,0)
 ;
"RTN","A1AEK2VC",101,0)
 ; PRE - Env Check
"RTN","A1AEK2VC",102,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("PRE")),ROOT,"EnvironmentCheck.zwr")
"RTN","A1AEK2VC",103,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export PRE")) QUIT
"RTN","A1AEK2VC",104,0)
 K @SN@("PRE")
"RTN","A1AEK2VC",105,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",106,0)
 ;
"RTN","A1AEK2VC",107,0)
 ; INI - Pre-Init
"RTN","A1AEK2VC",108,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("INI")),ROOT,"PreInit.zwr")
"RTN","A1AEK2VC",109,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export INI")) QUIT
"RTN","A1AEK2VC",110,0)
 K @SN@("INI")
"RTN","A1AEK2VC",111,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",112,0)
 ;
"RTN","A1AEK2VC",113,0)
 ; INIT - Post-Install
"RTN","A1AEK2VC",114,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("INIT")),ROOT,"PostInstall.zwr")
"RTN","A1AEK2VC",115,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export INIT")) QUIT
"RTN","A1AEK2VC",116,0)
 K @SN@("INIT")
"RTN","A1AEK2VC",117,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",118,0)
 ;
"RTN","A1AEK2VC",119,0)
 ; MBREQ - Required Build
"RTN","A1AEK2VC",120,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("MBREQ")),ROOT,"RequiredBuild.zwr")
"RTN","A1AEK2VC",121,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export MBREQ")) QUIT
"RTN","A1AEK2VC",122,0)
 K @SN@("MBREQ")
"RTN","A1AEK2VC",123,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",124,0)
 ;
"RTN","A1AEK2VC",125,0)
 ; QUES - Install Questions
"RTN","A1AEK2VC",126,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("QUES")),ROOT,"InstallQuestions.zwr")
"RTN","A1AEK2VC",127,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export QUES")) QUIT
"RTN","A1AEK2VC",128,0)
 K @SN@("QUES")
"RTN","A1AEK2VC",129,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",130,0)
 ;
"RTN","A1AEK2VC",131,0)
 ; RTN - Routines
"RTN","A1AEK2VC",132,0)
 D RTN^A1AEK2V0(.A1AEFAIL,$NA(@SN@("RTN")),ROOT)
"RTN","A1AEK2VC",133,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export RTN")) QUIT
"RTN","A1AEK2VC",134,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",135,0)
 ; Kill is done in RTN
"RTN","A1AEK2VC",136,0)
 ;
"RTN","A1AEK2VC",137,0)
 ; KRN and ORD - Kernel Components
"RTN","A1AEK2VC",138,0)
 D KRN(.A1AEFAIL,SN,ROOT)
"RTN","A1AEK2VC",139,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export KRN")) QUIT
"RTN","A1AEK2VC",140,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",141,0)
 ; Kill is done in KRN
"RTN","A1AEK2VC",142,0)
 ;
"RTN","A1AEK2VC",143,0)
 ; TEMP - Transport Global
"RTN","A1AEK2VC",144,0)
 D GENOUT(.A1AEFAIL,$NA(@SN@("TEMP")),ROOT,"TransportGlobal.zwr")
"RTN","A1AEK2VC",145,0)
 I A1AEFAIL D EN^DDIOL($$RED("Couldn't export TEMP")) QUIT
"RTN","A1AEK2VC",146,0)
 K @SN@("TEMP")
"RTN","A1AEK2VC",147,0)
 D ASSERT('A1AEFAIL)
"RTN","A1AEK2VC",148,0)
 ;
"RTN","A1AEK2VC",149,0)
 ; Make sure that the XTMP global is now empty. If there is anything there, we have a problem.
"RTN","A1AEK2VC",150,0)
 D ASSERT('$D(@SN))
"RTN","A1AEK2VC",151,0)
 ;
"RTN","A1AEK2VC",152,0)
 QUIT
"RTN","A1AEK2VC",153,0)
 ;
"RTN","A1AEK2VC",154,0)
 ;
"RTN","A1AEK2VC",155,0)
GENOUT(FAIL,EXGLO,ROOT,FN,QLSUB,SUBNAME) ; Generic Exporter
"RTN","A1AEK2VC",156,0)
 ; .FAIL - Output to tell us if we failed
"RTN","A1AEK2VC",157,0)
 ; EXGLO - Global NAME (use $NA) to export
"RTN","A1AEK2VC",158,0)
 ; ROOT - File system root where to write the file
"RTN","A1AEK2VC",159,0)
 ; FN - File name
"RTN","A1AEK2VC",160,0)
 ; QLSUB - Substitute this nth subscript WITH...
"RTN","A1AEK2VC",161,0)
 ; SUBNAME - ...subname
"RTN","A1AEK2VC",162,0)
 ;
"RTN","A1AEK2VC",163,0)
 I '$D(@EXGLO) QUIT  ; No data to export
"RTN","A1AEK2VC",164,0)
 ;
"RTN","A1AEK2VC",165,0)
 N POP
"RTN","A1AEK2VC",166,0)
 D OPEN^%ZISH("EXPORT",ROOT,FN,"W")
"RTN","A1AEK2VC",167,0)
 I POP S FAIL=1 QUIT
"RTN","A1AEK2VC",168,0)
 U IO
"RTN","A1AEK2VC",169,0)
 D ZWRITE(EXGLO,$G(QLSUB),$G(SUBNAME))
"RTN","A1AEK2VC",170,0)
 D CLOSE^%ZISH("EXPORT")
"RTN","A1AEK2VC",171,0)
 D EN^DDIOL("Wrote "_FN)
"RTN","A1AEK2VC",172,0)
 QUIT
"RTN","A1AEK2VC",173,0)
 ;
"RTN","A1AEK2VC",174,0)
 ;
"RTN","A1AEK2VC",175,0)
 ;
"RTN","A1AEK2VC",176,0)
 ;
"RTN","A1AEK2VC",177,0)
KRN(FAIL,KIDGLO,ROOT) ; Print OPT and KRN sections
"RTN","A1AEK2VC",178,0)
 ; .FAIL - Output. Did we fail? Mostly b/c of filesystem issues.
"RTN","A1AEK2VC",179,0)
 ; KIDGLO - The KIDS global (not a sub). Use $NA to pass this.
"RTN","A1AEK2VC",180,0)
 ; ROOT - File system root where we are gonna export.
"RTN","A1AEK2VC",181,0)
 N POP
"RTN","A1AEK2VC",182,0)
 N ORD S ORD="" F  S ORD=$O(@KIDGLO@("ORD",ORD)) Q:ORD=""  D  Q:$G(POP)    ; For each item in ORD
"RTN","A1AEK2VC",183,0)
 . N FNUM S FNUM=$O(@KIDGLO@("ORD",ORD,0))                                 ; File Number
"RTN","A1AEK2VC",184,0)
 . N FNAM S FNAM=^(FNUM,0) ; **NAKED to above line**                       ; File Name
"RTN","A1AEK2VC",185,0)
 . N PATH S PATH=ROOT_FNAM_"/"                                             ; Path to export to
"RTN","A1AEK2VC",186,0)
 . S POP=$$MKDIR^A1AEOS(PATH)                                                     ; Mk dir for the specific component
"RTN","A1AEK2VC",187,0)
 . I POP D EN^DDIOL($$RED("Couldn't create directory")) S FAIL=1 QUIT             ;
"RTN","A1AEK2VC",188,0)
 . D OPEN^%ZISH("ORD",PATH,"ORD.zwr","W")                                  ; Order Nodes
"RTN","A1AEK2VC",189,0)
 . I POP S FAIL=1 QUIT                                                     ; Open failed
"RTN","A1AEK2VC",190,0)
 . U IO                                                                    ;
"RTN","A1AEK2VC",191,0)
 . D ZWRITE($NA(@KIDGLO@("ORD",ORD,FNUM)))                                 ; Zwrite the ORD node
"RTN","A1AEK2VC",192,0)
 . D CLOSE^%ZISH("ORD")                                                    ; Done with ORD
"RTN","A1AEK2VC",193,0)
 . D EN^DDIOL("Wrote ORD.zwr for "_FNAM)                                   ; Say so                            
"RTN","A1AEK2VC",194,0)
 . K @KIDGLO@("ORD",ORD,FNUM)                                              ; KILL this entry
"RTN","A1AEK2VC",195,0)
 . ;
"RTN","A1AEK2VC",196,0)
 . N IENQL S IENQL=$QL($NA(@KIDGLO@("KRN",FNUM,0)))                        ; Where is the IEN sub?
"RTN","A1AEK2VC",197,0)
 . N CNT S CNT=0                                                           ; Sub counter for export
"RTN","A1AEK2VC",198,0)
 . N IEN F IEN=0:0 S IEN=$O(@KIDGLO@("KRN",FNUM,IEN)) Q:'IEN  D  Q:$G(POP)  ; For each Kernel component IEN
"RTN","A1AEK2VC",199,0)
 . . N ENTRYNAME S ENTRYNAME=$P(@KIDGLO@("KRN",FNUM,IEN,0),U)              ; .01 for the component
"RTN","A1AEK2VC",200,0)
 . . S ENTRYNAME=$TR(ENTRYNAME,"\/!@#$%^&*()","------------")              ; Replace punc with dashes
"RTN","A1AEK2VC",201,0)
 . . D OPEN^%ZISH("ENT",PATH,ENTRYNAME_".zwr","W")                         ; Open file
"RTN","A1AEK2VC",202,0)
 . . I POP S FAIL=1 QUIT
"RTN","A1AEK2VC",203,0)
 . . U IO
"RTN","A1AEK2VC",204,0)
 . . D ZWRITE($NA(@KIDGLO@("KRN",FNUM,IEN)),IENQL,"IEN+"_CNT) ; Zwrite, replacing the IEN with IEN+CNT
"RTN","A1AEK2VC",205,0)
 . . I FNUM=.403 D FORM(KIDGLO,IEN,IENQL)                     ; Special processing for Forms
"RTN","A1AEK2VC",206,0)
 . . I FNUM=8989.51 D PARM(KIDGLO,IEN,IENQL)                  ; Special processing for Parameters
"RTN","A1AEK2VC",207,0)
 . . I FNUM=8989.52 D PARM2(KIDGLO,IEN,IENQL)                 ; Special processing for Parameter templates
"RTN","A1AEK2VC",208,0)
 . . S CNT=CNT+1                                              ; ++
"RTN","A1AEK2VC",209,0)
 . . D CLOSE^%ZISH("ENT")                                     ; Done with this entry
"RTN","A1AEK2VC",210,0)
 . . D EN^DDIOL("Exported "_ENTRYNAME_".zwr"_" in "_FNAM)     ; Export
"RTN","A1AEK2VC",211,0)
 . . K @KIDGLO@("KRN",FNUM,IEN)                               ; KILL this entry
"RTN","A1AEK2VC",212,0)
 QUIT
"RTN","A1AEK2VC",213,0)
 ;
"RTN","A1AEK2VC",214,0)
FORM(KIDGLO,IEN,IENQL) ; Export Blocks
"RTN","A1AEK2VC",215,0)
 N CNT S CNT=0
"RTN","A1AEK2VC",216,0)
 N I F I=0:0 S I=$O(@KIDGLO@("KRN",.403,IEN,40,I)) Q:'I  D                 ; Loop thourgh pages
"RTN","A1AEK2VC",217,0)
 . N J F J=0:0 S J=$O(@KIDGLO@("KRN",.403,IEN,40,I,40,J)) Q:'J  D          ; Loop through blocks
"RTN","A1AEK2VC",218,0)
 . . N Z S Z=^(J,0)                                                        ; zero node of block
"RTN","A1AEK2VC",219,0)
 . . N BLNM1 S BLNM1=$P(Z,U)                                               ; its name
"RTN","A1AEK2VC",220,0)
 . . N BLOCKIEN S BLOCKIEN=$$FNDBLK(KIDGLO,BLNM1)                          ; Block IEN
"RTN","A1AEK2VC",221,0)
 . . I BLOCKIEN D                                                           ; if found, print it out and then
"RTN","A1AEK2VC",222,0)
 . . . D ZWRITE($NA(@KIDGLO@("KRN",.404,BLOCKIEN)),IENQL,"IEN+"_CNT)
"RTN","A1AEK2VC",223,0)
 . . . S CNT=CNT+1
"RTN","A1AEK2VC",224,0)
 . . . K @KIDGLO@("KRN",.404,BLOCKIEN)                                     ; delete block
"RTN","A1AEK2VC",225,0)
 . ;
"RTN","A1AEK2VC",226,0)
 . ;
"RTN","A1AEK2VC",227,0)
 . ; Export Header block if there is one...
"RTN","A1AEK2VC",228,0)
 . N P0 S P0=@KIDGLO@("KRN",.403,IEN,40,I,0)                               ; Page zero node
"RTN","A1AEK2VC",229,0)
 . N HB S HB=$P(P0,U,2)                                                    ; Header block
"RTN","A1AEK2VC",230,0)
 . I $L(HB) D                                                              ; If we have it
"RTN","A1AEK2VC",231,0)
 . . N BLOCKIEN S BLOCKIEN=$$FNDBLK(KIDGLO,HB)                             ; Find its IEN in the Transport Global
"RTN","A1AEK2VC",232,0)
 . . I BLOCKIEN D                                                          ; Print it out if we found it.
"RTN","A1AEK2VC",233,0)
 . . . D ZWRITE($NA(@KIDGLO@("KRN",.404,BLOCKIEN)),IENQL,"IEN+"_CNT)       ;
"RTN","A1AEK2VC",234,0)
 . . . S CNT=CNT+1
"RTN","A1AEK2VC",235,0)
 . . . K @KIDGLO@("KRN",.404,BLOCKIEN)                                     ; delete block
"RTN","A1AEK2VC",236,0)
 QUIT
"RTN","A1AEK2VC",237,0)
 ;
"RTN","A1AEK2VC",238,0)
FNDBLK(KIDGLO,BLNM) ; $$; Find a block in the transport global; Return block IEN
"RTN","A1AEK2VC",239,0)
 N SBN S SBN=""                                                   ; Searched block name
"RTN","A1AEK2VC",240,0)
 N K F K=0:0 S K=$O(@KIDGLO@("KRN",.404,K)) Q:'K  D  Q:(SBN=BLNM)  ; Now loop through transported blocks
"RTN","A1AEK2VC",241,0)
 . N Z S Z=^(K,0),SBN=$P(Z,U)                                     ; ...
"RTN","A1AEK2VC",242,0)
 . Q:(SBN=BLNM)                                                   ; until we find the block with our name
"RTN","A1AEK2VC",243,0)
 QUIT K
"RTN","A1AEK2VC",244,0)
 ;
"RTN","A1AEK2VC",245,0)
PARM(KIDGLO,IEN,IENQL) ; Export Parameter Definitions and Package level parameters exported by KIDS
"RTN","A1AEK2VC",246,0)
 N PARMNM S PARMNM=$P(@KIDGLO@("KRN",8989.51,IEN,0),U)      ; Get the param name
"RTN","A1AEK2VC",247,0)
 N PKGPARM D FNDPRM(.PKGPARM,KIDGLO,PARMNM)                 ; Find matching 8989.5 parameters
"RTN","A1AEK2VC",248,0)
 N CNT S CNT=0
"RTN","A1AEK2VC",249,0)
 N J F J=0:0 S J=$O(PKGPARM(J)) Q:'J  D                     ; for each one found
"RTN","A1AEK2VC",250,0)
 . D ZWRITE($NA(@KIDGLO@("KRN",8989.5,J)),IENQL,"IEN+"_CNT) ; print it out
"RTN","A1AEK2VC",251,0)
 . S CNT=CNT+1
"RTN","A1AEK2VC",252,0)
 . K @KIDGLO@("KRN",8989.5,J)                               ; and then remove it.
"RTN","A1AEK2VC",253,0)
 QUIT
"RTN","A1AEK2VC",254,0)
 ;
"RTN","A1AEK2VC",255,0)
FNDPRM(RTN,KIDGLO,PARMNM) ; Find exported parameters in 8989.5 in the transport global matching PARMNM
"RTN","A1AEK2VC",256,0)
 ; Turns out there is more than 1... so we have to catch them all...
"RTN","A1AEK2VC",257,0)
 N I F I=0:0 S I=$O(@KIDGLO@("KRN",8989.5,I)) Q:'I  D
"RTN","A1AEK2VC",258,0)
 . N Z S Z=^(I,0) ; **NAKED TO ABOVE**
"RTN","A1AEK2VC",259,0)
 . N THISNAME S THISNAME=$P(Z,U,2)
"RTN","A1AEK2VC",260,0)
 . I THISNAME=PARMNM S RTN(I)=""
"RTN","A1AEK2VC",261,0)
 QUIT
"RTN","A1AEK2VC",262,0)
 ;
"RTN","A1AEK2VC",263,0)
PARM2(KIDGLO,IEN,IENQL) ; Export Parameters in 8989.51 if sent as part of Parameter templates.
"RTN","A1AEK2VC",264,0)
 N CNT S CNT=0
"RTN","A1AEK2VC",265,0)
 N I F I=0:0 S I=$O(@KIDGLO@("KRN",8989.52,IEN,10,I)) Q:'I  D  ; for each parameter in the set
"RTN","A1AEK2VC",266,0)
 . N PARMNM S PARMNM=$P(^(I,0),U,2)                            ; Get Parameter name
"RTN","A1AEK2VC",267,0)
 . N P8989P51 S P8989P51=$$FNDPRM2(KIDGLO,PARMNM)              ; See if it is in 8989.51
"RTN","A1AEK2VC",268,0)
 . I P8989P51 D                                                ; if so, print and delete from our global
"RTN","A1AEK2VC",269,0)
 . . D ZWRITE($NA(@KIDGLO@("KRN",8989.51,P8989P51)),IENQL,"IEN+"_CNT)
"RTN","A1AEK2VC",270,0)
 . . K @KIDGLO@("KRN",8989.51,P8989P51)
"RTN","A1AEK2VC",271,0)
 . . S CNT=CNT+1
"RTN","A1AEK2VC",272,0)
 QUIT
"RTN","A1AEK2VC",273,0)
 ;
"RTN","A1AEK2VC",274,0)
FNDPRM2(KIDGLO,PARMNM) ; $$ ; Find IEN of parameter in 8989.51 matching PARMNM
"RTN","A1AEK2VC",275,0)
 N OUT S OUT=0
"RTN","A1AEK2VC",276,0)
 N I F I=0:0 S I=$O(@KIDGLO@("KRN",8989.51,I)) Q:'I  D  Q:OUT
"RTN","A1AEK2VC",277,0)
 . N NM S NM=$P(^(I,0),U)
"RTN","A1AEK2VC",278,0)
 . I NM=PARMNM S OUT=I
"RTN","A1AEK2VC",279,0)
 QUIT OUT
"RTN","A1AEK2VC",280,0)
 ;
"RTN","A1AEK2VC",281,0)
ZWRITE(NAME,QS,QSREP) ; Replacement for ZWRITE ; Public Proc
"RTN","A1AEK2VC",282,0)
 GOTO ZWRITE0^A1AEK2V0 ; Moved to extension routine for size
"RTN","A1AEK2VC",283,0)
 ;
"RTN","A1AEK2VC",284,0)
RED(X) ; Convenience method for Sam to see things on the screen.
"RTN","A1AEK2VC",285,0)
 Q $C(27)_"[41;1m"_X_$C(27)_"[0m"
"RTN","A1AEK2VC",286,0)
 ;
"RTN","A1AEK2VC",287,0)
TEST D EN^XTMUNIT($T(+0),1,1) QUIT
"RTN","A1AEK2VC",288,0)
 ;
"RTN","A1AEK2VC",289,0)
T3 ; @TEST Export components for one KIDS build
"RTN","A1AEK2VC",290,0)
 N I F I=0:0 S I=$O(^A1AE(11005,I)) Q:'I  D EN(I)
"RTN","A1AEK2VC",291,0)
 QUIT
"RTN","A1AEK2VC",292,0)
 ;
"RTN","A1AEK2VC",293,0)
ASSERT(X,Y) ; Internal assertion function
"RTN","A1AEK2VC",294,0)
 N MUNIT S MUNIT=$$INMUNIT()
"RTN","A1AEK2VC",295,0)
 I MUNIT D CHKTF^XTMUNIT(X,$G(Y))
"RTN","A1AEK2VC",296,0)
 E  I 'X S $EC=",U-ASSERTION-FAILED,"
"RTN","A1AEK2VC",297,0)
 QUIT
"RTN","A1AEK2VC",298,0)
 ;
"RTN","A1AEK2VC",299,0)
INMUNIT() ; Am I being invoked from M-Unit?
"RTN","A1AEK2VC",300,0)
 N MUNIT S MUNIT=0
"RTN","A1AEK2VC",301,0)
 N I F I=1:1:$ST I $ST(I,"PLACE")["XTMUNIT" S MUNIT=1
"RTN","A1AEK2VC",302,0)
 Q MUNIT
"RTN","A1AEKEY")
0^8^B20742998
"RTN","A1AEKEY",1,0)
A1AEKEY ; RMO,MJK/ALBANY ;2014-04-18  12:49 AM;24 NOV 87 11:00 am
"RTN","A1AEKEY",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEKEY",3,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;12/02/92
"RTN","A1AEKEY",4,0)
 ;----------------------------------------------------------------
"RTN","A1AEKEY",5,0)
 ; This module has two separate entry points:
"RTN","A1AEKEY",6,0)
 ;      ASKKEY -- is used to prompt the patch user for patch keys
"RTN","A1AEKEY",7,0)
 ;                and to enter/edit holders
"RTN","A1AEKEY",8,0)
 ;      KEY    -- for automatic allocation of patch keys to users
"RTN","A1AEKEY",9,0)
 ;                in a specific package
"RTN","A1AEKEY",10,0)
 ;----------------------------------------------------------------
"RTN","A1AEKEY",11,0)
ASKKEY ;Prompt for patch function key
"RTN","A1AEKEY",12,0)
 S DIC("A")="Select PATCH KEY: ",DIC("S")="S A1AEX=^(0) I $E($P(^(0),U,1),1,4)=""A1AE"",$S($D(^XUSEC(""A1AE MGR"",DUZ)):1,($P(A1AEX,U,1)'=""A1AE XUSEC"")&($P(A1AEX,U,1)'=""A1AE MGR""):1,1:0) K A1AEX",DIC="^DIC(19.1,",DIC(0)="AEMQZ"
"RTN","A1AEKEY",13,0)
 W ! D ^DIC K DIC("A"),DIC("S") Q:Y<0  S A1AEKYIF=+Y,A1AEKEY=$P(Y,U,2)
"RTN","A1AEKEY",14,0)
 D ASKHLD K A1AEDUZ0,A1AEPK,A1AEPKIF,A1AEPKNM,A1AEKEY,A1AEUSR,A1AEXRF,A1AEDES,A1AEKYIF,A1AEHDIF,A1AEUSNM Q:X="^"  G ASKKEY
"RTN","A1AEKEY",15,0)
 ;
"RTN","A1AEKEY",16,0)
ASKHLD ;Prompt for key holder
"RTN","A1AEKEY",17,0)
 S A1AEDUZ0=DUZ(0),DUZ(0)="@"
"RTN","A1AEKEY",18,0)
 S DIC="^VA(200,",DIC(0)="AEQ",DIC("A")="Select Patch user: " W ! D ^DIC K DIC Q:Y<0
"RTN","A1AEKEY",19,0)
 S A1AEUSR=+Y,A1AEUSNM=$P(Y,"^",2)
"RTN","A1AEKEY",20,0)
 I '$D(^VA(200,A1AEUSR,51,A1AEKYIF)) DO  G ASKHLD
"RTN","A1AEKEY",21,0)
 .S DIC(0)="NMQ" S:'$D(^VA(200,A1AEUSR,51,0)) ^(0)="^200.051PA^^"
"RTN","A1AEKEY",22,0)
 .S DIC="^VA(200,"_A1AEUSR_",51,",DA(1)=A1AEUSR,X=A1AEKYIF,DINUM=X
"RTN","A1AEKEY",23,0)
 .K DO,DD D FILE^DICN S DUZ(0)=A1AEDUZ0 K A1AEDUZ0,DO,DD,DA,DE,DQ
"RTN","A1AEKEY",24,0)
 .I '$P(Y,"^",3) Q
"RTN","A1AEKEY",25,0)
 .W !?3,"..",A1AEUSNM,"...added as an ",A1AEKEY," key holder"
"RTN","A1AEKEY",26,0)
 .Q
"RTN","A1AEKEY",27,0)
 D LIST:A1AEKEY="A1AE DEVELOPER"!(A1AEKEY="A1AE SUPPORT")!(A1AEKEY="A1AE PHVER"),ASKDEL G ASKHLD
"RTN","A1AEKEY",28,0)
 ;
"RTN","A1AEKEY",29,0)
LIST ;List the packages the selected holder may require this key for
"RTN","A1AEKEY",30,0)
 S A1AEXRF=$S(A1AEKEY="A1AE DEVELOPER":"AD",A1AEKEY="A1AE SUPPORT":"AS",A1AEKEY="A1AE PHVER":"AV",1:""),A1AEDES=$S(A1AEXRF="AD":"developer",A1AEXRF="AS":"support person",A1AEXRF="AV":"verifier",1:"")
"RTN","A1AEKEY",31,0)
 I '$D(^A1AE(11007,A1AEXRF,A1AEUSR)) W !!?3,A1AEUSNM," is not a ",A1AEDES," for any package in the Patch file." Q
"RTN","A1AEKEY",32,0)
 I $D(^A1AE(11007,A1AEXRF,A1AEUSR)) W !!?3,A1AEUSNM," is a ",A1AEDES," for:" F A1AEPKIF=0:0 S A1AEPKIF=+$O(^A1AE(11007,A1AEXRF,A1AEUSR,A1AEPKIF)) Q:'A1AEPKIF  I $D(^DIC(9.4,A1AEPKIF,0)) W !?7,$P(^(0),"^",2),?12,"-",?14,$P(^(0),"^",1)
"RTN","A1AEKEY",33,0)
 Q
"RTN","A1AEKEY",34,0)
ASKDEL ;Prompt for deleting the key holder
"RTN","A1AEKEY",35,0)
 S A1AERD("A")="Do you want to delete "_A1AEUSNM_" as an "_A1AEKEY_" key holder? ",A1AERD(0)="S",A1AERD(1)="Yes^delete key holder",A1AERD(2)="No^not delete",A1AERD("B")=2 D SET^A1AERD K A1AERD Q:X="^"!("N"[$E(X,1))
"RTN","A1AEKEY",36,0)
 S DIK="^VA(200,"_A1AEUSR_",51,",DA(1)=A1AEUSR,DA=A1AEKYIF
"RTN","A1AEKEY",37,0)
 D ^DIK K DIK,DA,D0
"RTN","A1AEKEY",38,0)
 W !?3,"...deleted as an ",A1AEKEY," key holder" Q
"RTN","A1AEKEY",39,0)
 ;
"RTN","A1AEKEY",40,0)
KEY ;Automatic allocation of A1AE SUPPORT, A1AE PHVER, A1AE DEVELOPER keys
"RTN","A1AEKEY",41,0)
 ;for a specific package
"RTN","A1AEKEY",42,0)
 W !!?3,"...allocating A1AE SUPPORT, A1AE PHVER, and A1AE DEVELOPER keys" S A1AESKY=+$O(^DIC(19.1,"B","A1AE SUPPORT",0)),A1AEVKY=+$O(^DIC(19.1,"B","A1AE PHVER",0)),A1AEDKY=+$O(^DIC(19.1,"B","A1AE DEVELOPER",0))
"RTN","A1AEKEY",43,0)
 D SUPPORT:A1AESKY,DEVELOP:A1AEDKY W:'A1AESKY !?6,"A1AE SUPPORT key does not exist" W:'A1AEVKY !?6,"A1AE DEVELOPER key does not exist" W:'A1AEDKY !?6,"A1AE DEVELOPER key does not exist"
"RTN","A1AEKEY",44,0)
 K A1AESKY,A1AEVKY,A1AEDKY,A1AEUSR,A1AEVR,A1AEUSNM
"RTN","A1AEKEY",45,0)
 Q
"RTN","A1AEKEY",46,0)
 ;
"RTN","A1AEKEY",47,0)
SUPPORT F A1AEUSR=0:0 S A1AEUSR=+$O(^A1AE(11007,A1AEPKIF,"PB",A1AEUSR)) Q:'A1AEUSR  S A1AEVR=$P(^(A1AEUSR,0),"^",2),DA=A1AESKY D SETKEY:'$D(^XUSEC("A1AE SUPPORT",A1AEUSR)) I A1AEVR="V",A1AEVKY D VERIFY
"RTN","A1AEKEY",48,0)
 Q
"RTN","A1AEKEY",49,0)
 ;
"RTN","A1AEKEY",50,0)
VERIFY S DA=A1AEVKY D SETKEY:'$D(^XUSEC("A1AE PHVER",A1AEUSR))
"RTN","A1AEKEY",51,0)
 Q
"RTN","A1AEKEY",52,0)
 ;
"RTN","A1AEKEY",53,0)
DEVELOP F A1AEUSR=0:0 S A1AEUSR=+$O(^A1AE(11007,A1AEPKIF,"PH",A1AEUSR)) Q:'A1AEUSR  S DA=A1AEDKY D SETKEY:'$D(^XUSEC("A1AE DEVELOPER",A1AEUSR))
"RTN","A1AEKEY",54,0)
 Q
"RTN","A1AEKEY",55,0)
 ;
"RTN","A1AEKEY",56,0)
SETKEY S X=DA K DA
"RTN","A1AEKEY",57,0)
 S A1AEUSNM=$S($D(^VA(200,A1AEUSR,0)):$E($P(^(0),"^"),1,20),1:"UNKNOWN")
"RTN","A1AEKEY",58,0)
 S A1AEDUZ0=DUZ(0),DUZ(0)="@"
"RTN","A1AEKEY",59,0)
 S:'$D(^VA(200,A1AEUSR,51,0)) ^(0)="^200.051PA^0^-1"
"RTN","A1AEKEY",60,0)
 S DIC(0)="NMQ"
"RTN","A1AEKEY",61,0)
 S DIC="^VA(200,"_A1AEUSR_",51,",DA(1)=A1AEUSR,DINUM=X
"RTN","A1AEKEY",62,0)
 K DO,DD D FILE^DICN S DUZ(0)=A1AEDUZ0 K DO,DD,DA,A1AEDUZ0,DE,DQ  I $P(Y,"^",3) W "."
"RTN","A1AEKEY",63,0)
 Q
"RTN","A1AEM")
0^10^B42478438
"RTN","A1AEM",1,0)
A1AEM ;ISC-Albany/pke-called entries for mailing patches ; 3/31/14 1:00pm
"RTN","A1AEM",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEM",3,0)
 ;
"RTN","A1AEM",4,0)
 ; change history
"RTN","A1AEM",5,0)
 ;
"RTN","A1AEM",6,0)
 ; 2007 01 10 (??/??): last change prior to v2.4
"RTN","A1AEM",7,0)
 ;
"RTN","A1AEM",8,0)
 ; 2014 03 31 (ven/toad): Rick Marshall of the VISTA Expertise Network
"RTN","A1AEM",9,0)
 ; added subroutine CONTS2 to handle input template A1AE AD/EDIT
"RTN","A1AEM",10,0)
 ; PATCHES's confirmation about changing the status from secondary
"RTN","A1AEM",11,0)
 ; development (s2)
"RTN","A1AEM",12,0)
 ;
"RTN","A1AEM",13,0)
DD ;
"RTN","A1AEM",14,0)
 I $D(X),X="db",$P(^A1AE(11005,D0,0),"^",3)'=999 W !?3,"The 'DATABASE' category is only for DBA patches." K X Q
"RTN","A1AEM",15,0)
 I $D(X),"Ee"[$E(X_1),"em"'[$E($P(^A1AE(11005,D0,0),"^",7)_1) W !?3,"The 'ENHANCEMENT' category must have PRIORITY of EMERGENCY or MANDATORY." K X Q
"RTN","A1AEM",16,0)
 Q
"RTN","A1AEM",17,0)
 ;I $D(X),"PApp"[$E(X_1,1,2),"em"'[$E($P(^A1AE(11005,D0,0),"^",7)_1) W !?3,"The 'PATCH FOR A PATCH' category must have PRIORITY of EMERGENCY or MANDATORY." K X Q
"RTN","A1AEM",18,0)
 Q
"RTN","A1AEM",19,0)
CREC D NOW^%DTC I $D(^A1AE(11005.1,DA,0)) S $P(^(0),U,4,5)=AXMZ_"^"_%
"RTN","A1AEM",20,0)
 K %
"RTN","A1AEM",21,0)
 Q
"RTN","A1AEM",22,0)
VREC D NOW^%DTC I $D(^A1AE(11005.1,DA,0)) S $P(^(0),U,6,7)=AXMZ_"^"_%
"RTN","A1AEM",23,0)
 K %
"RTN","A1AEM",24,0)
 Q
"RTN","A1AEM",25,0)
 ;
"RTN","A1AEM",26,0)
 ;
"RTN","A1AEM",27,0)
CONT ; prompt for input template A1AE ADD/EDIT PATCHES to confirm
"RTN","A1AEM",28,0)
 ; changing status from Completed/Unreleased (c)
"RTN","A1AEM",29,0)
 ;
"RTN","A1AEM",30,0)
 S SAVX=X
"RTN","A1AEM",31,0)
 W !?2,"This patch has already been 'Completed', editing will change "
"RTN","A1AEM",32,0)
 S A1AERD("A")="  the status back to 'UNDER DEVELOPMENT' continue ? "
"RTN","A1AEM",33,0)
 S A1AERD(1)="Yes^continue editing with status as 'UNDER DEVELOPMENT'"
"RTN","A1AEM",34,0)
 S A1AERD(2)="No^quit and keep the status as 'COMPLETE/NOT RELEASED'"
"RTN","A1AEM",35,0)
 S A1AERD(0)="S"
"RTN","A1AEM",36,0)
 S A1AERD("B")=2
"RTN","A1AEM",37,0)
 D ^A1AERD ; call to primitive reader (pre-DIR)
"RTN","A1AEM",38,0)
 K A1AERD
"RTN","A1AEM",39,0)
 I X'["Y" S Y=""
"RTN","A1AEM",40,0)
 S X=SAVX
"RTN","A1AEM",41,0)
 ;
"RTN","A1AEM",42,0)
 QUIT  ; end of CONT
"RTN","A1AEM",43,0)
 ;
"RTN","A1AEM",44,0)
 ;
"RTN","A1AEM",45,0)
CONTS2 ; two prompts for input template A1AE ADD/EDIT PATCHES to confirm
"RTN","A1AEM",46,0)
 ; changing status from Sec Completion (s2)
"RTN","A1AEM",47,0)
 ;;private;procedure;interactive;clean;SAC compliant
"RTN","A1AEM",48,0)
 ; called by input template A1AE ADD/EDIT PATCHES
"RTN","A1AEM",49,0)
 ; calls ^DIR (Fileman Readermaid)
"RTN","A1AEM",50,0)
 ; input: none
"RTN","A1AEM",51,0)
 ; output:
"RTN","A1AEM",52,0)
 ;   A1AEMNEW = new code (i2, r2, or n2) or "" to exit template
"RTN","A1AEM",53,0)
 ;
"RTN","A1AEM",54,0)
 ; 1) prompt to confirm changing status from s2
"RTN","A1AEM",55,0)
 ;
"RTN","A1AEM",56,0)
 K A1AEMNEW D
"RTN","A1AEM",57,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","A1AEM",58,0)
 . W !?2,"This patch has already been 'Secondarily Completed',"
"RTN","A1AEM",59,0)
 . W " editing will "
"RTN","A1AEM",60,0)
 . W !?2,"require you to select a new status for this patch."
"RTN","A1AEM",61,0)
 . S DIR("A")="Are you sure you want to continue?"
"RTN","A1AEM",62,0)
 . S DIR("B")="NO"
"RTN","A1AEM",63,0)
 . S DIR(0)="S^YES:Continue editing with a new status you select;"
"RTN","A1AEM",64,0)
 . S DIR(0)=DIR(0)_"NO:Quit and keep status 'Sec Completion'"
"RTN","A1AEM",65,0)
 . D ^DIR ; confirm status change
"RTN","A1AEM",66,0)
 . S A1AEMNEW=Y
"RTN","A1AEM",67,0)
 I A1AEMNEW'="YES" D  Q  ; exit template if change not confirmed
"RTN","A1AEM",68,0)
 . S A1AEMNEW=""
"RTN","A1AEM",69,0)
 ;
"RTN","A1AEM",70,0)
 ; 2) prompt to choose new status (i2, r2, or n2)
"RTN","A1AEM",71,0)
 ;
"RTN","A1AEM",72,0)
 S A1AEMNEW="" D
"RTN","A1AEM",73,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","A1AEM",74,0)
 . S DIR("A")="New STATUS OF PATCH"
"RTN","A1AEM",75,0)
 . S DIR("B")="SEC RELEASE"
"RTN","A1AEM",76,0)
 . S DIR(0)="SB^I2:IN REVIEW;R2:SEC RELEASE;N2:NOT FOR SEC RELEASE"
"RTN","A1AEM",77,0)
 . D ^DIR ; confirm status change
"RTN","A1AEM",78,0)
 . S A1AEMNEW=Y
"RTN","A1AEM",79,0)
 ;
"RTN","A1AEM",80,0)
 QUIT  ; end of CONTS2
"RTN","A1AEM",81,0)
 ;
"RTN","A1AEM",82,0)
 ;
"RTN","A1AEM",83,0)
TRASH ;Remove old message from queue
"RTN","A1AEM",84,0)
 Q:'$D(AXMZ)
"RTN","A1AEM",85,0)
 N QUE,XMDUZ,X
"RTN","A1AEM",86,0)
 D QUE I $D(QUE),QUE S (XMKD,XMK)=QUE,XMZ=AXMZ,XMDUZ=.5 D KLQ
"RTN","A1AEM",87,0)
 K AXMDUZ,XMKD,XMK,XMZ,XMDI
"RTN","A1AEM",88,0)
 Q
"RTN","A1AEM",89,0)
KLQ ;
"RTN","A1AEM",90,0)
 D KLQ^XMA1B Q
"RTN","A1AEM",91,0)
 ;
"RTN","A1AEM",92,0)
TRASHALL(AXMZ) ;Remove other entries in QUE with same start
"RTN","A1AEM",93,0)
 N XMKD,XMK,XMZ,XMDUZ,DA,X1,XMSUB
"RTN","A1AEM",94,0)
 S XMSUB=$P($G(^XMB(3.9,AXMZ,0)),U) Q:'$L(XMSUB)
"RTN","A1AEM",95,0)
 S XMSUB=$P(XMSUB," "),DA=0
"RTN","A1AEM",96,0)
 F  S DA=$O(^XMB(3.7,.5,2,QUE,1,DA)) Q:'DA  S X=^(DA,0) D
"RTN","A1AEM",97,0)
 . S XMZ=+X,X=$G(^XMB(3.9,XMZ,0)),X1=$P($P(X,U)," ")
"RTN","A1AEM",98,0)
 . I XMSUB=X1 D
"RTN","A1AEM",99,0)
 . . N XMKD,XMK S (XMKD,XMK)=QUE,XMDUZ=.5 D KLQ
"RTN","A1AEM",100,0)
 Q 
"RTN","A1AEM",101,0)
 ;
"RTN","A1AEM",102,0)
XM I '$D(XMDUZ) S XMDUZ=DUZ
"RTN","A1AEM",103,0)
 S XMDUN=$P(^VA(200,XMDUZ,0),U),(XMKN,XMLOCK)="",(XMK,XMZ)=0
"RTN","A1AEM",104,0)
 Q
"RTN","A1AEM",105,0)
 ;
"RTN","A1AEM",106,0)
AGN R !?3,"Enter Subject: ",X:DTIME Q:X=""!(X["^")  I X?1"R"1N.N!($L(X)>64)!($L(X)<3) W *7 W:X["?" "      Use namespace*version anything 'AAAA*n.nn ....'" G AGN
"RTN","A1AEM",107,0)
 S XMSUB=X K ^UTILITY($J) X ^%ZOSF("RSEL")
"RTN","A1AEM",108,0)
 S AZ="" F I=0:0 S AZ=$O(^UTILITY($J,AZ)) Q:AZ=""  S XMROU(AZ)=""
"RTN","A1AEM",109,0)
 I $D(XMROU)<10 W !?3,"No routines selected" H 2 Q
"RTN","A1AEM",110,0)
 S XMTEXT="X(",X(1)=""
"RTN","A1AEM",111,0)
 S XMY(XMDUN_"@Q-PATCH.VA.GOV")=""
"RTN","A1AEM",112,0)
 D ^XMD W !?3,"message queued to 'Q-PATCH.VA.GOV' "
"RTN","A1AEM",113,0)
 Q
"RTN","A1AEM",114,0)
 ;
"RTN","A1AEM",115,0)
PACK ;Build a packman message
"RTN","A1AEM",116,0)
 D XM,AGN G QPK
"RTN","A1AEM",117,0)
 ;
"RTN","A1AEM",118,0)
QPK D KILL^XM K AZ,XMROU,^UTILITY($J)
"RTN","A1AEM",119,0)
 Q
"RTN","A1AEM",120,0)
 ;
"RTN","A1AEM",121,0)
MMM ;ov x=val domain, "",x9
"RTN","A1AEM",122,0)
 S DIC="^DIC(4.2,",DIC(0)="",X9="" F Y=0:0 D ^DIC Q:Y>0  S X9=X9_$S($L(X9):".",1:"")_$P(X,"."),X=$P(X,".",2,999) I X="" W !,*7,"Domain not found." Q
"RTN","A1AEM",123,0)
 Q
"RTN","A1AEM",124,0)
DOMAIN ;out xxmy("user or group @ domain")
"RTN","A1AEM",125,0)
 ;
"RTN","A1AEM",126,0)
 ;
"RTN","A1AEM",127,0)
 ;Send to the NETWORK ROUTING list in the 11007 file for A1AE package.
"RTN","A1AEM",128,0)
VER K XMY,AXMY S AN=$O(^DIC(9.4,"C","A1AE",0)) Q:'AN
"RTN","A1AEM",129,0)
 F AZ=0:0 S AZ=$O(^A1AE(11007,AN,"NT",AZ)) Q:'AZ  I $D(^(AZ,0)),'$P(^(0),U,3) S AXMY($TR($P(^(0),U,1,2),"^","@"))=""
"RTN","A1AEM",130,0)
 D XMYCHK
"RTN","A1AEM",131,0)
 Q
"RTN","A1AEM",132,0)
COM K XMY,AXMY
"RTN","A1AEM",133,0)
 F AZ=0:0 S AZ=$O(^A1AE(11007,AN,"PB",AZ)) Q:'AZ  I $D(^(AZ,0)),$P(^(0),U,2)="V" S DOM=$P(^(0),U,3),NAM=$P(^VA(200,AZ,0),U),AXMY(NAM_"@"_DOM)=""
"RTN","A1AEM",134,0)
 D XMYCHK
"RTN","A1AEM",135,0)
 Q
"RTN","A1AEM",136,0)
 ;tst ste
"RTN","A1AEM",137,0)
TST K XMY,AXMY
"RTN","A1AEM",138,0)
 F AZ=0:0 S AZ=$O(^A1AE(11007,AN,1,AZ)) Q:'AZ  I $D(^(AZ,0)),$L($P(^(0),U,3)) S DOM=$P(^(0),U,3),NAM=$P(^VA(200,AZ,0),U),AXMY(NAM_"@"_DOM)=""
"RTN","A1AEM",139,0)
 ;
"RTN","A1AEM",140,0)
XMYCHK S AN="" F  S AN=$O(AXMY(AN)) Q:AN=""  I $E(AN,$L(AN))="@" K AXMY(AN)
"RTN","A1AEM",141,0)
 MERGE XMY=AXMY
"RTN","A1AEM",142,0)
 ;should not be necessary with new mailman
"RTN","A1AEM",143,0)
 ;S (AN,XMN)=0,XMDUZ=DUZ F AZ=0:0 S AN=$O(AXMY(AN)) Q:AN=""  S X=AN D INST^XMA21 I '$D(ZTQUEUED) W "." R ZZ:0
"RTN","A1AEM",144,0)
 I '$D(ZTQUEUED) W "." R ZZ:0
"RTN","A1AEM",145,0)
 K DOM,NAM,AZ,AN,AXMY,XMN,XMDUZ
"RTN","A1AEM",146,0)
 Q
"RTN","A1AEM",147,0)
QUE ;ov xminst, 1st mess
"RTN","A1AEM",148,0)
 N %
"RTN","A1AEM",149,0)
 ;S QUE="Q-PATCH.VA.GOV"
"RTN","A1AEM",150,0)
 S %=$L(^XMB("NETNAME"),"."),%=$P(^XMB("NETNAME"),".",%-1,%),QUE="Q-PATCH."_%
"RTN","A1AEM",151,0)
 S QUE=$O(^XMB(3.7,.5,2,"B",QUE,0)) I 'QUE W !,"No queue 'Q-PATCH'" K QUE Q
"RTN","A1AEM",152,0)
 I '$D(^XMB(3.7,.5,2,QUE,0)) W !,"No queue 'Q-PATCH'" K QUE Q
"RTN","A1AEM",153,0)
 I QUE<1001 W !,"No queue 'Q-PATCH'" K QUE Q
"RTN","A1AEM",154,0)
 S QMES=$O(^XMB(3.7,.5,2,QUE,1,0)) I 'QMES W !,"No messages in Q-PATCH" K QUE,QMES Q
"RTN","A1AEM",155,0)
 Q
"RTN","A1AEM",156,0)
LOC ;ov a1aerd(),x()=axmz,a1aerd(2)=last
"RTN","A1AEM",157,0)
 Q:'$D(QUE)
"RTN","A1AEM",158,0)
 S QMESUB=$P(A1AEPD,"*",1,2)
"RTN","A1AEM",159,0)
 S QMES=0,AN=0,ADD=^DD("DD")
"RTN","A1AEM",160,0)
 F AZ=0:0 S QMES=$O(^XMB(3.7,.5,2,QUE,1,QMES)) Q:'QMES  I $D(^XMB(3.9,QMES,0)),$P(^(0),U)[QMESUB S A0=^(0) D EXTR
"RTN","A1AEM",161,0)
 K ADD,A0,AN,AZ,SHOW,QMES Q
"RTN","A1AEM",162,0)
EXTR S AN=AN+1,A1AERD(AN)=AN_U_"Copy message ' "_$P(A0,U)_" '",X(AN)=QMES,A1AERD("B")=AN
"RTN","A1AEM",163,0)
 I $D(SHOW) W !,?SHOW,"(",AN,")",?SHOW+5,$E($P(A0,U),1,25),?SHOW+32,$E($S('$P(A0,U,2):$P(A0,U,2),1:$P(^VA(200,$P(A0,U,2),0),U,1)),1,25),?SHOW+59 S Y=$P($P(A0,"^",3),".") X ADD W Y
"RTN","A1AEM",164,0)
 Q
"RTN","A1AEM",165,0)
 ;
"RTN","A1AEM",166,0)
FCOPY ;ivAXMZ,A1AEROU,ovRNAM^start^end
"RTN","A1AEM",167,0)
 S AROU=A1AEROU
"RTN","A1AEM",168,0)
 S BEG="$ROU "_AROU,END="$END ROU "_AROU
"RTN","A1AEM",169,0)
 S L1=5+$L(AROU),L2=9+$L(AROU)
"RTN","A1AEM",170,0)
 F AZ=0:0 S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)),$E(^(0),1,L1)=BEG!($E(^(0),1,L2)=END) S AP=$E(^(0),1,20) S:AP=BEG RNAM=AROU_"^"_AZ I AP=END,$D(RNAM) S $P(RNAM,"^",3)=AZ Q
"RTN","A1AEM",171,0)
 K BEG,END,AROU,AZ,AP,AZ
"RTN","A1AEM",172,0)
 Q
"RTN","A1AEM",173,0)
 ;
"RTN","A1AEM",174,0)
44 F XQ=1:1 Q:$P(X,".",XQ,99)=""  I X[$P(X,".",XQ,99) S $P(X,".",1,XQ-1)=XX Q
"RTN","A1AEM",175,0)
 Q
"RTN","A1AEM",176,0)
 ;
"RTN","A1AEM",177,0)
 ;
"RTN","A1AEM",178,0)
EOR ; end of routine A1AEM
"RTN","A1AEM1")
0^11^B57050036
"RTN","A1AEM1",1,0)
A1AEM1 ;ISC-Albany/pke - copy message ;2014-03-24  10:23 PM
"RTN","A1AEM1",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEM1",3,0)
MES ;copy mesage into file #11005.1
"RTN","A1AEM1",4,0)
 N X,Y,A1AERD,AN,GLOBAL,GLOBAL0,RTXT,RSTART,RVER,LINE2
"RTN","A1AEM1",5,0)
 S A1AERD("A")="Do you want to copy "_$S($D(QMSUB):"'"_QMSUB_"'",1:"a packman message")_" into the Message Text? "
"RTN","A1AEM1",6,0)
 S A1AERD(1)="Yes^copy a message "_$S($D(QMSUB):"'"_QMSUB_"'",1:" containing "_$P(A1AEPD,"*",1,2))
"RTN","A1AEM1",7,0)
 S A1AERD(2)="No^Do not copy a message"
"RTN","A1AEM1",8,0)
        S A1AERD(3)="Load^Load a KIDS build from the File system or the Web"
"RTN","A1AEM1",9,0)
 S A1AERD(0)="S"
"RTN","A1AEM1",10,0)
 S A1AERD("B")=2 D SET^A1AERD K A1AERD
"RTN","A1AEM1",11,0)
 S A1AEKIDS=0 ;Used to jump in the DIE template
"RTN","A1AEM1",12,0)
 I X["Y" D ASKS ;Get KIDS message
"RTN","A1AEM1",13,0)
 I X'["Y" D HFS ;Get HFS message
"RTN","A1AEM1",14,0)
        I X["L" D SELFILQ^A1AEK2M3(DA)
"RTN","A1AEM1",15,0)
QMES K A1AERD,AN,AXMY,GLOBAL,GLOBAL0,RTXT,RSTART,RVER,REND,RVER,MARK,AXMZ,RNAM,QMSUB,QUE
"RTN","A1AEM1",16,0)
 Q
"RTN","A1AEM1",17,0)
 ;
"RTN","A1AEM1",18,0)
ASKS ;at this point AXMZ defined will avoid the select question
"RTN","A1AEM1",19,0)
 N X
"RTN","A1AEM1",20,0)
 I $D(AXMZ) S QMSUB=$P(^XMB(3.9,AXMZ,0),U) D FND Q
"RTN","A1AEM1",21,0)
 ;this is for AXMZ
"RTN","A1AEM1",22,0)
 S SHOW=10 D QUE^A1AEM,LOC^A1AEM I '$D(QUE) Q
"RTN","A1AEM1",23,0)
 I $D(X)<10 W !!?3,"No message in queue has subject containing ",$P(A1AEPD,"*",1,2) Q
"RTN","A1AEM1",24,0)
 S A1AERD(0)="S",A1AERD("A")="Select Message to copy : "
"RTN","A1AEM1",25,0)
 D SET^A1AERD
"RTN","A1AEM1",26,0)
 I X["^" Q
"RTN","A1AEM1",27,0)
 S AXMZ=X(X),QMSUB=$P(^XMB(3.9,AXMZ,0),U)
"RTN","A1AEM1",28,0)
FND W !?5,"Using message '",QMSUB,"'  "
"RTN","A1AEM1",29,0)
 ;
"RTN","A1AEM1",30,0)
 S RTXT="$TXT Created by",LINE2=""
"RTN","A1AEM1",31,0)
 ;bug in textprint
"RTN","A1AEM1",32,0)
 S RTXTEND="$END TXT"
"RTN","A1AEM1",33,0)
 S RSTART="$ROU "
"RTN","A1AEM1",34,0)
 S REND="$END ROU "
"RTN","A1AEM1",35,0)
 S GLOBAL="^A1AE(11005.1,"_DA_",2,"
"RTN","A1AEM1",36,0)
 ;
"RTN","A1AEM1",37,0)
 W "Checking the input .." ;find $txt in case message was edited
"RTN","A1AEM1",38,0)
 S AZ=0
"RTN","A1AEM1",39,0)
 F  S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)),$E(^(0),1,15)="$TXT Created by" S RTXT(1)=AZ Q
"RTN","A1AEM1",40,0)
 ;
"RTN","A1AEM1",41,0)
 I '$D(RTXT(1)) DO  D KIL QUIT
"RTN","A1AEM1",42,0)
 .W !?5,*7,"Input message missing standard text '",RTXT,"'"
"RTN","A1AEM1",43,0)
 .W !,"           Message NOT copied!!"
"RTN","A1AEM1",44,0)
 ;
"RTN","A1AEM1",45,0)
 ;kids here
"RTN","A1AEM1",46,0)
 I "XK"[$E($P(^XMB(3.9,AXMZ,0),"^",7)_0) DO  QUIT
"RTN","A1AEM1",47,0)
 . S $P(^A1AE(11005.1,DA,0),"^",11)=$P(^XMB(3.9,AXMZ,0),"^",7) ;Copy Message type
"RTN","A1AEM1",48,0)
 . ;
"RTN","A1AEM1",49,0)
 . D TRASH
"RTN","A1AEM1",50,0)
 . W !?3,"Merge KIDS message into patch message text",!
"RTN","A1AEM1",51,0)
 . MERGE ^A1AE(11005.1,DA,2)=^XMB(3.9,AXMZ,2)
"RTN","A1AEM1",52,0)
 . ;get rid of .00n nodes
"RTN","A1AEM1",53,0)
 . S AZ=0 F  S AZ=$O(^A1AE(11005.1,DA,2,AZ)) Q:AZ'<1  DO
"RTN","A1AEM1",54,0)
 . . K ^A1AE(11005.1,DA,2,AZ)
"RTN","A1AEM1",55,0)
 . ;
"RTN","A1AEM1",56,0)
 . S A1AEKIDS=1
"RTN","A1AEM1",57,0)
 . S $P(^A1AE(11005.1,DA,2,0),"^",5)=DT
"RTN","A1AEM1",58,0)
 . S $P(^A1AE(11005.1,DA,2,0),"^",2)=""
"RTN","A1AEM1",59,0)
 . S $P(^A1AE(11005.1,DA,0),"^",2,3)=AXMZ_"^"_DT
"RTN","A1AEM1",60,0)
 . D RTNBLD(DA) ;Build RTN multiple
"RTN","A1AEM1",61,0)
 . ;If we load from a message get rid of the HFS data.
"RTN","A1AEM1",62,0)
 . I $D(^A1AE(11005.5,DA,0)) N DIK S DIK="^A1AE(11005.5," D ^DIK
"RTN","A1AEM1",63,0)
 . Q
"RTN","A1AEM1",64,0)
 ;
"RTN","A1AEM1",65,0)
 ;packman here
"RTN","A1AEM1",66,0)
 E  DO  I '$D(RSTART) QUIT
"RTN","A1AEM1",67,0)
 .S $P(^A1AE(11005.1,DA,0),"^",11)="P" ;message type
"RTN","A1AEM1",68,0)
 .F AZ=RTXT(1):0 S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)),$E(^(0),1,5)="$ROU " S:$E(^(0),1,5)=RSTART RSTART(AZ)=^(0) I $E(^(0),1,5)'=RSTART S RSTART(0)=^(0)
"RTN","A1AEM1",69,0)
 .I $D(RSTART)<10 W *7,"Input message missing '",RSTART,"..'" D KIL Q
"RTN","A1AEM1",70,0)
 .D TRASH
"RTN","A1AEM1",71,0)
 .S AN=1,@(GLOBAL_AN_",0)")=^XMB(3.9,AXMZ,2,RTXT(1),0)
"RTN","A1AEM1",72,0)
 .S AN=2,@(GLOBAL_AN_",0)")=""
"RTN","A1AEM1",73,0)
 .S AN=3,@(GLOBAL_AN_",0)")="$END TXT"
"RTN","A1AEM1",74,0)
 .;$o(rstart(0))=1st az  of $rou line in XMB  , A1AE.1 can get offset
"RTN","A1AEM1",75,0)
 .F AZ=$O(RSTART(0))-1:0 S AZ=$O(^XMB(3.9,AXMZ,2,AZ)) Q:'AZ  I $D(^(AZ,0)) S AN=AN+1,@(GLOBAL_AN_",0)")=^(0)
"RTN","A1AEM1",76,0)
 .;set zero node
"RTN","A1AEM1",77,0)
 .I AN>1 S GLOBAL0=GLOBAL_"0)" S $P(@(GLOBAL0),"^",3,5)=AN_"^"_AN_"^"_DT S $P(^A1AE(11005.1,DA,0),U,2,3)=AXMZ_"^"_DT
"RTN","A1AEM1",78,0)
 .E  W !,?5,*7,"Message not copied "
"RTN","A1AEM1",79,0)
 S MARK=1
"RTN","A1AEM1",80,0)
MARK ;this is entered from above and at mark for release of verified
"RTN","A1AEM1",81,0)
 S AN=1,AP=$P(A1AEPD,"*",3),NV="<<= NOT VERIFIED >"
"RTN","A1AEM1",82,0)
 S RSTART="$ROU "
"RTN","A1AEM1",83,0)
 ;
"RTN","A1AEM1",84,0)
CHANG ;
"RTN","A1AEM1",85,0)
 I "KX"[$E($P($G(^A1AE(11005.1,DA,0)),"^",11)_0) K RVER,FL Q
"RTN","A1AEM1",86,0)
 I MARK W !?10,"Adding  <<= NOT VERIFIED > to the first line"
"RTN","A1AEM1",87,0)
 E  W !?10,"Removing  <<= NOT VERIFIED > from the first line"
"RTN","A1AEM1",88,0)
 ;
"RTN","A1AEM1",89,0)
 F AZ=0:0 S AZ=$O(^A1AE(11005.1,DA,2,AZ)) Q:'AZ  I $D(^(AZ,0)),$E(^(0),1,5)=RSTART S:$D(^A1AE(11005.1,DA,2,AZ+1,0)) FL=^(0) D FL S:$D(FL) ^(0)=FL I MARK S:$D(^A1AE(11005.1,DA,2,AZ+2,0)) RVER=^(0) D CHECK I $D(RVER) S ^(0)=RVER D WR S AZ=AZ+3
"RTN","A1AEM1",90,0)
 ;
"RTN","A1AEM1",91,0)
KIL K RVER,AZ,PC,NV,AP,MARK,RNSPACE,LCASE,Y,Y1,RSTART
"RTN","A1AEM1",92,0)
 Q
"RTN","A1AEM1",93,0)
 ;
"RTN","A1AEM1",94,0)
WR W !,$J("line ("_(AZ+2)_")",20),"  ",RVER
"RTN","A1AEM1",95,0)
 Q
"RTN","A1AEM1",96,0)
 ;
"RTN","A1AEM1",97,0)
CHECK ;fix for RVER ok check+1
"RTN","A1AEM1",98,0)
 I $E($G(FL),1,8)="XPDPINIT" K RVER,FL Q
"RTN","A1AEM1",99,0)
 S ZZN=$S($D(A1AEPD):$P(A1AEPD,"*",3),1:0) I ZZN,$S($F(RVER,"**"_ZZN_"**"):1,$F(RVER,","_ZZN_"**"):1,$F(RVER,","_ZZN_","):1,$F(RVER,"**"_ZZN_","):1,1:0) K RVER Q
"RTN","A1AEM1",100,0)
 I $L(RVER)>240 W !,*7,"Version line too long to modify " H 2 K RVER Q
"RTN","A1AEM1",101,0)
 ; ;v or ;;v
"RTN","A1AEM1",102,0)
 ;S PC=4 I RVER?1" ;;".E S PC=5
"RTN","A1AEM1",103,0)
 S PC=4 I $P(RVER," ",2)?1";;".E S PC=5
"RTN","A1AEM1",104,0)
 I RVER'["**" S $P(RVER,";",PC)="**"_AP_"**" D LST Q
"RTN","A1AEM1",105,0)
 E  S $P(RVER,"**",2)=$P(RVER,"**",2)_","_AP D LST Q
"RTN","A1AEM1",106,0)
 W !,"Unable to mark version line '",RVER,"'" K RVER
"RTN","A1AEM1",107,0)
 Q
"RTN","A1AEM1",108,0)
 ;
"RTN","A1AEM1",109,0)
LST I '$F(RVER,";",$F(RVER,"**")) S RVER=RVER_";" Q
"RTN","A1AEM1",110,0)
 Q
"RTN","A1AEM1",111,0)
 ;
"RTN","A1AEM1",112,0)
LCASE ; cvrts 2 + % if there
"RTN","A1AEM1",113,0)
 S Y=$P(LCASE,"$ROU ",2),Y=$E(Y,1,$S($E(Y)'="%":2,1:3)),Y1=Y
"RTN","A1AEM1",114,0)
 S Y=$TR(Y,"ABCDEFGHIJKLMNOPQRSTUVWXYZ%","abcdefghijklmnopqrstuvwxyz%")
"RTN","A1AEM1",115,0)
 S LCASE="$ROU "_Y_$P(LCASE,Y1,2) K:'$L(LCASE) LCASE Q
"RTN","A1AEM1",116,0)
 Q
"RTN","A1AEM1",117,0)
FL ;1st line
"RTN","A1AEM1",118,0)
 I 'MARK S FL=$P(FL,NV) Q
"RTN","A1AEM1",119,0)
 I $E(FL,1,8)="XPDPINIT" W !?10,"Skipping XPDPINIT" Q
"RTN","A1AEM1",120,0)
 I $L(FL)>240 W !,*7,"First line too long to add '<<= NOT VERIFIED >'" H 2 K FL Q
"RTN","A1AEM1",121,0)
 I FL[NV Q
"RTN","A1AEM1",122,0)
 S FL=FL_NV Q
"RTN","A1AEM1",123,0)
 ;
"RTN","A1AEM1",124,0)
TRASH ;Remove old msg from queue.
"RTN","A1AEM1",125,0)
 I $D(^A1AE(11005.1,DA,0)),$P(^(0),"^",2),$P(^(0),"^",2)'=AXMZ DO
"RTN","A1AEM1",126,0)
 .N AXMZ S AXMZ=$P(^(0),"^",2) D TRASH^A1AEM
"RTN","A1AEM1",127,0)
 .W !?3,"Removing old message from que"
"RTN","A1AEM1",128,0)
 ;
"RTN","A1AEM1",129,0)
 W "   Deleting old text .."
"RTN","A1AEM1",130,0)
 ;S AZ=0 F  S AZ=$O(@(GLOBAL_AZ_")")) Q:'AZ  K ^(AZ)
"RTN","A1AEM1",131,0)
 K ^A1AE(11005.1,DA,2) Q
"RTN","A1AEM1",132,0)
 ;
"RTN","A1AEM1",133,0)
RTNBLD(A1AEDA) ;Build Routine multiple
"RTN","A1AEM1",134,0)
 N FDA,IEN,A1,A2,A3,A4,DIK,DA
"RTN","A1AEM1",135,0)
 ;Load
"RTN","A1AEM1",136,0)
 S A1=1,LINE2=""
"RTN","A1AEM1",137,0)
 F  S A1=$O(^A1AE(11005.1,A1AEDA,2,A1)) Q:'A1  I $E(^(A1,0),1,5)="""RTN""" Q
"RTN","A1AEM1",138,0)
 Q:'A1  ;At start of routines.
"RTN","A1AEM1",139,0)
 K ^TMP("A1AE",$J)
"RTN","A1AEM1",140,0)
 S A1=$O(^A1AE(11005.1,A1AEDA,2,A1))
"RTN","A1AEM1",141,0)
 F  S A1=$O(^A1AE(11005.1,A1AEDA,2,A1)) Q:'A1  D
"RTN","A1AEM1",142,0)
 . S X=^A1AE(11005.1,A1AEDA,2,A1,0) I $E(X,2,4)'="RTN" S A1=" " Q
"RTN","A1AEM1",143,0)
 . S A1=$O(^A1AE(11005.1,A1AEDA,2,A1)),Y=^(A1,0)
"RTN","A1AEM1",144,0)
 . S @("^TMP(""A1AE"",$J,"_X)=Y ;Build global
"RTN","A1AEM1",145,0)
 . Q
"RTN","A1AEM1",146,0)
 S A1="",A3=0
"RTN","A1AEM1",147,0)
 F  S A1=$O(^TMP("A1AE",$J,"RTN",A1)) Q:A1=""  S A2=^(A1) D
"RTN","A1AEM1",148,0)
 . S A4=$G(^TMP("A1AE",$J,"RTN",A1,2,0)) S:'$L(LINE2) LINE2=A4 S A4=$P(A4,";",5)
"RTN","A1AEM1",149,0)
 . ;.01 RTN name, 3 RSUM, 4 Patch List, 5 Old Rsum - set at Release
"RTN","A1AEM1",150,0)
 . S A3=A3+1,IEN="?+"_A3_","_A1AEDA_",",FDA(11005.03,IEN,.01)=A1
"RTN","A1AEM1",151,0)
 . S FDA(11005.03,IEN,3)=$S(+A2:"Delete",1:$P(A2,"^",3)) ;Only set if sending routine
"RTN","A1AEM1",152,0)
 . S FDA(11005.03,IEN,4)=A4
"RTN","A1AEM1",153,0)
 . I A3>99 D UPDATE^DIE("","FDA") S A3=0 K FDA
"RTN","A1AEM1",154,0)
 . Q
"RTN","A1AEM1",155,0)
 I A3 D UPDATE^DIE("","FDA")
"RTN","A1AEM1",156,0)
 I $L(LINE2) S ^A1AE(11005,A1AEDA,"P2")=$P(LINE2,";",1,4)_";**[Patch List]**;"_$P(LINE2,";",6,99)
"RTN","A1AEM1",157,0)
 ;Remove Unused ROUTINE's from multiple
"RTN","A1AEM1",158,0)
 D RTNREM
"RTN","A1AEM1",159,0)
 K ^TMP("A1AE",$J)
"RTN","A1AEM1",160,0)
 Q
"RTN","A1AEM1",161,0)
 ;
"RTN","A1AEM1",162,0)
RTNREM ;Remove routines from the Routine multipule
"RTN","A1AEM1",163,0)
 ;Will not remove a routine name in ^TMP("A1AE",$J,"RTN",name)
"RTN","A1AEM1",164,0)
 N DIK,DA
"RTN","A1AEM1",165,0)
 S DIK="^A1AE(11005,"_A1AEDA_",""P"",",DA(1)=A1AEDA,DA=0
"RTN","A1AEM1",166,0)
 F  S DA=$O(^A1AE(11005,DA(1),"P",DA)) Q:'DA  S A1=$P($G(^(DA,0)),U) I '$D(^TMP("A1AE",$J,"RTN",A1)) D ^DIK
"RTN","A1AEM1",167,0)
 Q
"RTN","A1AEM1",168,0)
HFS ;
"RTN","A1AEM1",169,0)
 N X,MZ
"RTN","A1AEM1",170,0)
 S X=$G(^A1AE(11005.5,DA,0)),MZ=$G(^XMB(3.9,+$P(X,U,2),0))
"RTN","A1AEM1",171,0)
 Q:'$L(X)
"RTN","A1AEM1",172,0)
 I MZ="" S $P(MZ,U,2)=$P(X,U,5),$P(MZ,U,3)=$$FMTE^XLFDT($P(X,U,3))
"RTN","A1AEM1",173,0)
 W !,"Want to copy HFS cache,",!,"  From: ",$P(MZ,U,2),!,"    On: ",$P(MZ,U,3)
"RTN","A1AEM1",174,0)
 S A1AERD("A")="Do you want to copy Routine Names and Checksums from the HFS cache file. "
"RTN","A1AEM1",175,0)
 S A1AERD(1)="Yes^Copy Routine Names and Checksums."
"RTN","A1AEM1",176,0)
 S A1AERD(2)="No^Do not copy Routine data."
"RTN","A1AEM1",177,0)
 S A1AERD(0)="S"
"RTN","A1AEM1",178,0)
 S A1AERD("B")=$S($D(^A1AE(11005.1,DA,0)):2,1:1) D SET^A1AERD
"RTN","A1AEM1",179,0)
 I X["Y" D HFS2(DA)
"RTN","A1AEM1",180,0)
 Q
"RTN","A1AEM1",181,0)
 ;
"RTN","A1AEM1",182,0)
HFS2(A1AEDA) ;Move Routine Info from HFS file to Routine sub-file.
"RTN","A1AEM1",183,0)
 N A1,A2,A3,FDA,DA,IEN,DIK
"RTN","A1AEM1",184,0)
 S A1AEKIDS=1 ;Can skip Routine multiple
"RTN","A1AEM1",185,0)
 ;Remove any Message Text
"RTN","A1AEM1",186,0)
 ;S DA=A1AEDA,DIK="^A1AE(11005.1," D ^DIK
"RTN","A1AEM1",187,0)
 K ^A1AE(11005.1,A1AEDA,2)
"RTN","A1AEM1",188,0)
 ;Clear out any current Routine data
"RTN","A1AEM1",189,0)
 K ^TMP("A1AE",$J)
"RTN","A1AEM1",190,0)
 D RTNREM
"RTN","A1AEM1",191,0)
 ;.01 RTN name, 3 RSUM, 4 Patch List
"RTN","A1AEM1",192,0)
 ;^A1AE(11005.5,DA(1),1,DA,0)= RTN name^Send^^Checksum^Patch List
"RTN","A1AEM1",193,0)
 ;MOVE
"RTN","A1AEM1",194,0)
 S A1=0,A3=0
"RTN","A1AEM1",195,0)
 F  S A1=$O(^A1AE(11005.5,A1AEDA,1,A1)) Q:'A1  S A2=$G(^(A1,0)) D
"RTN","A1AEM1",196,0)
 . S A3=A3+1,IEN="?+"_A1_","_A1AEDA_","
"RTN","A1AEM1",197,0)
 . S FDA(11005.03,IEN,.01)=$P(A2,U),FDA(11005.03,IEN,3)=$S($P(A1,U,2):"Delete",1:$P(A2,U,4))
"RTN","A1AEM1",198,0)
 . S FDA(11005.03,IEN,4)=$P(A2,U,5)
"RTN","A1AEM1",199,0)
 . I A3>99 D UPDATE^DIE("","FDA") S A3=0 K FDA
"RTN","A1AEM1",200,0)
 . Q
"RTN","A1AEM1",201,0)
 I A3 D UPDATE^DIE("","FDA") K FDA
"RTN","A1AEM1",202,0)
 D EN^DDIOL("Routine Name's and Checksums moved.")
"RTN","A1AEM1",203,0)
 Q
"RTN","A1AEM2")
0^12^B9023362
"RTN","A1AEM2",1,0)
A1AEM2 ;ISC-Albany/pke-forward a patch message ; 4/15/90
"RTN","A1AEM2",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEM2",3,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;12/02/92
"RTN","A1AEM2",4,0)
 ;change FCOM,FVER dic 11005.1 ,scrn lookup
"RTN","A1AEM2",5,0)
RCHK ;input transform on routine name x
"RTN","A1AEM2",6,0)
 Q:'$D(A1AEPD)  S:'$D(TAB) TAB=42
"RTN","A1AEM2",7,0)
 N VERS,APD,BEEP,AZ
"RTN","A1AEM2",8,0)
 S APD=A1AEPD,VERS=$P(APD,"*",2) I VERS="DBA" S VERS=999,$P(APD,"*",2)=999
"RTN","A1AEM2",9,0)
 S BEEP=" routine has previous Patches: "_$C(7)
"RTN","A1AEM2",10,0)
 F AZ=0:0 S AZ=$O(^A1AE(11005,"R",X,AZ)) Q:'AZ  I $D(^A1AE(11005,AZ,0)),$P($P(^(0),"^"),"*",2)[VERS,$P(^(0),"^")'=APD DO
"RTN","A1AEM2",11,0)
WR .I $D(BEEP) W !!,"'",X,"'",BEEP,?TAB K BEEP
"RTN","A1AEM2",12,0)
 .I $X>TAB W ", "
"RTN","A1AEM2",13,0)
 .W "(",$TR($P(^(0),"^",8),"ucver","ucver"),")",$P(^(0),"^")
"RTN","A1AEM2",14,0)
 .I $X>65 W !?TAB-1
"RTN","A1AEM2",15,0)
 I '$D(BEEP) W !
"RTN","A1AEM2",16,0)
 Q
"RTN","A1AEM2",17,0)
FCOM ;
"RTN","A1AEM2",18,0)
 S PXMZ=4 D DICC,PAT
"RTN","A1AEM2",19,0)
 G Q
"RTN","A1AEM2",20,0)
FVER ;
"RTN","A1AEM2",21,0)
 S PXMZ=6 D DICV,PAT
"RTN","A1AEM2",22,0)
 G Q
"RTN","A1AEM2",23,0)
Q K PXMZ,XMZ,A1AEIFN,DIC,A1AEPD,Y D KILL^XM
"RTN","A1AEM2",24,0)
 Q
"RTN","A1AEM2",25,0)
 ;duz,xmz,xmy(), xmdun,xmduz ;;;Change lookup to 11005.1 dinum
"RTN","A1AEM2",26,0)
PAT ;
"RTN","A1AEM2",27,0)
 S DIC("A")="Select PATCH to forward: "
"RTN","A1AEM2",28,0)
 S DIC="^A1AE(11005.1,",DIC(0)="AEMQ"
"RTN","A1AEM2",29,0)
 ;S DIC("S")="I $P(^A1AE(11005,+Y,0),U,8)'=""e"""
"RTN","A1AEM2",30,0)
 S DIC("S")="I $P(^A1AE(11005,+Y,0),U,8)=$S(PXMZ=4:""c"",1:""v"")"
"RTN","A1AEM2",31,0)
 D ^DIC K DIC Q:Y<0
"RTN","A1AEM2",32,0)
 S A1AEIFN=+Y,A1AEPD=$P(^A1AE(11005,+Y,0),U,1)
"RTN","A1AEM2",33,0)
 I $P(A1AEPD,"*",2)=999 S $P(A1AEPD,"*",2)="DBA"
"RTN","A1AEM2",34,0)
 S XMZ=$P($G(^A1AE(11005.1,A1AEIFN,0)),U,PXMZ)
"RTN","A1AEM2",35,0)
 I 'XMZ W !?8,"No message available" G PAT
"RTN","A1AEM2",36,0)
 I '$D(^XMB(3.9,XMZ,0)) D  G:'$D(XMZ) PAT
"RTN","A1AEM2",37,0)
 . N A1AERCR8,SAVX,X,A1AENEW,SEQ,D0,DA
"RTN","A1AEM2",38,0)
 . W !,$C(7),"The message no longer exists."
"RTN","A1AEM2",39,0)
 . K XMZ
"RTN","A1AEM2",40,0)
 . I $P(^A1AE(11005,A1AEIFN,0),U,8)'="v" D  Q
"RTN","A1AEM2",41,0)
 . . W !,"That patch is not released."
"RTN","A1AEM2",42,0)
 . . W !,"We only create new messages for released patches."
"RTN","A1AEM2",43,0)
 . W !,"That's OK - we'll create a new one.  This won't take long."
"RTN","A1AEM2",44,0)
 . S A1AERCR8=1 ; Indicates that we are recreating a message.
"RTN","A1AEM2",45,0)
 . S DA=A1AEIFN,(A1AENEW,SAVX)="v"
"RTN","A1AEM2",46,0)
 . D EN^A1AEMAL Q:'$D(XMZ)
"RTN","A1AEM2",47,0)
 . D MES^A1AEMAL
"RTN","A1AEM2",48,0)
 ;Ask Rcpts / XMDF means programmer call MailMan ignores KSP limits
"RTN","A1AEM2",49,0)
 D XM
"RTN","A1AEM2",50,0)
 N XMDF
"RTN","A1AEM2",51,0)
 D DEST^XMA21 Q:$D(XMOUT)  ; Don't forward to closed domains
"RTN","A1AEM2",52,0)
 D ENT1^XMD W !?8,"Message ",XMZ," has been forwarded."
"RTN","A1AEM2",53,0)
 Q
"RTN","A1AEM2",54,0)
XM ;
"RTN","A1AEM2",55,0)
 I '$D(XMDUZ) S XMDUZ=DUZ
"RTN","A1AEM2",56,0)
 S XMDUN=$P(^VA(200,XMDUZ,0),U)
"RTN","A1AEM2",57,0)
 Q
"RTN","A1AEM2",58,0)
DICC ; Completed/Unverified ;;;change screen to 11005.1
"RTN","A1AEM2",59,0)
 ;S DIC("S")="I $P(^(0),U,8)=""c"",$S($D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0)):1,'$D(^A1AE(11007,+$P(^A1AE(11005,+Y,0),U,2),""PB"",DUZ,0)):0,$P(^(0),U,2)=""V"":1,1:0)"
"RTN","A1AEM2",60,0)
 S DIC("S")="I $P(^(0),U,PXMZ),$S($D(^A1AE(11007,+$P(^A1AE(11005,+Y,0),U,2),""PH"",DUZ,0)):1,'$D(^A1AE(11007,+$P(^A1AE(11005,+Y,0),U,2),""PB"",DUZ,0)):0,$P(^(0),U,2)=""V"":1,1:0)"
"RTN","A1AEM2",61,0)
 Q
"RTN","A1AEM2",62,0)
DICV ; Verified Patch ;;; change screen to 11005.1
"RTN","A1AEM2",63,0)
 ;S DIC("S")="I ($P(^(0),U,8)=""v"")&($S('$D(^A1AE(11007,+$P(^(0),U,2),0)):0,$P(^(0),U,2)=""Y"":1,$P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+$P(^A1AE(11005,+Y,0),U,2)))):1,1:0))"
"RTN","A1AEM2",64,0)
 S DIC("S")="I $P(^(0),U,PXMZ),$S('$D(^A1AE(11007,+$P(^A1AE(11005,+Y,0),U,2),0)):0,$P(^(0),U,2)=""Y"":1,$P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+$P(^A1AE(11005,+Y,0),U,2)))):1,1:0)"
"RTN","A1AEM2",65,0)
 Q
"RTN","A1AEM2K")
0^57^B39456093
"RTN","A1AEM2K",1,0)
A1AEM2K ; VEN/SMH - Save patches to HFS files ;2014-04-17  6:30 PM
"RTN","A1AEM2K",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEM2K",3,0)
 ; Original by Dr. Cameron Schleheuber
"RTN","A1AEM2K",4,0)
 ;
"RTN","A1AEM2K",5,0)
 ; Get User
"RTN","A1AEM2K",6,0)
 I '$D(DUZ) D ^XUP
"RTN","A1AEM2K",7,0)
 ;
"RTN","A1AEM2K",8,0)
 ; TODO: Move the DIC("S") in a central location in A1AEPH6
"RTN","A1AEM2K",9,0)
 ; Ask the user to the pats to export and stores in LV PATCHES
"RTN","A1AEM2K",10,0)
 D EN^DDIOL("Select the patches to export.")
"RTN","A1AEM2K",11,0)
 D EN^DDIOL("PLEASE NOTE: Multiple patches will be concatenated together into a Multibuild")
"RTN","A1AEM2K",12,0)
 N PATCHES S PATCHES=0
"RTN","A1AEM2K",13,0)
 N Y ; DIC Output
"RTN","A1AEM2K",14,0)
 F  D  Q:Y<0
"RTN","A1AEM2K",15,0)
 . N DIC
"RTN","A1AEM2K",16,0)
 . ; Verified      !ent.in err!retired    &
"RTN","A1AEM2K",17,0)
 . ; ( not no 11007 record for package ! user selection permitted ! ("test site only"& user is [self]"selected" for package )
"RTN","A1AEM2K",18,0)
 . S DIC("S")="I ($P(^(0),U,8)=""v""!($P(^(0),U,8)=""e"")!($P(^(0),U,8)=""r""))&($S('$D(^A1AE(11007,+$P(^(0),U,2),0)):0,$P(^(0),U,2)=""Y"":1,$P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+$P(^A1AE(11005,+Y,0),U,2)))):1,1:0))"
"RTN","A1AEM2K",19,0)
 . S DIC("S")=DIC("S")_"!$D(^A1AE(11007,""AD"",DUZ,+$P(^A1AE(11005,+Y,0),U,2)))"
"RTN","A1AEM2K",20,0)
 . S DIC="^A1AE(11005,",DIC(0)="AEMQZ",DIC("A")="Select Patch/Package: "
"RTN","A1AEM2K",21,0)
        . I $G(A1AEUT1IEN) S Y=A1AEUT1IEN  ; Unit testing
"RTN","A1AEM2K",22,0)
        . E  D ^DIC
"RTN","A1AEM2K",23,0)
 . I Y<0 QUIT
"RTN","A1AEM2K",24,0)
 . S PATCHES(+Y)="",PATCHES=PATCHES+1
"RTN","A1AEM2K",25,0)
        . I $G(A1AEUT1IEN) S Y=-1  ; Unit testing
"RTN","A1AEM2K",26,0)
 I 'PATCHES QUIT  ; Done. No patches selected.
"RTN","A1AEM2K",27,0)
 ;
"RTN","A1AEM2K",28,0)
 ;
"RTN","A1AEM2K",29,0)
 ; Ask where to export these patches
"RTN","A1AEM2K",30,0)
 N DIR,Y
"RTN","A1AEM2K",31,0)
 N ROOT ; Where we export these
"RTN","A1AEM2K",32,0)
 D EN^DDIOL("Enter where I should export these patches.")
"RTN","A1AEM2K",33,0)
 S DIR("B")=$$DEFDIR^%ZISH()
"RTN","A1AEM2K",34,0)
 S DIR(0)="F^2:255",DIR("A")="Full path, up to but not including patch names"
"RTN","A1AEM2K",35,0)
        I '$G(A1AEUT1IEN) D ^DIR QUIT:Y="^"  S ROOT=Y I 1  ; For Unit Testing again
"RTN","A1AEM2K",36,0)
        E  S ROOT=DIR("B")
"RTN","A1AEM2K",37,0)
 ;
"RTN","A1AEM2K",38,0)
 ; Entire stanza below to get Filename. Abstractable.
"RTN","A1AEM2K",39,0)
 N DIR
"RTN","A1AEM2K",40,0)
 N FN ; File name
"RTN","A1AEM2K",41,0)
 I PATCHES>1 D  QUIT:Y="^"  S FN=Y
"RTN","A1AEM2K",42,0)
 . D EN^DDIOL("Because you are exporting more than one patch, you have to pick a name for your file. Don't include the extension as we will append .TXT or .KID to the name you give us.")
"RTN","A1AEM2K",43,0)
 . S DIR(0)="F^2:255",DIR("A")="File name for Multibuild" D ^DIR
"RTN","A1AEM2K",44,0)
 E  D
"RTN","A1AEM2K",45,0)
 . N PATCH S PATCH=$O(PATCHES(""))
"RTN","A1AEM2K",46,0)
 . N DESIGNATION S DESIGNATION=$$GET1^DIQ(11005,PATCH,.01) ; Designation
"RTN","A1AEM2K",47,0)
 . N PKABBR S PKABBR=$P(DESIGNATION,"*")                   ; Get package abbreviation
"RTN","A1AEM2K",48,0)
 . Q:'$O(^DIC(9.4,"C",PKABBR,""))                          ; Quit if it isn't a valid package
"RTN","A1AEM2K",49,0)
 . N VER S VER=$P(DESIGNATION,"*",2)                       ; Version number
"RTN","A1AEM2K",50,0)
 . N NUM S NUM=$P(DESIGNATION,"*",3)                       ; Patch Number
"RTN","A1AEM2K",51,0)
 . N SEQ S SEQ=$$GET1^DIQ(11005,PATCH,"SEQUENTIAL RELEASE NUMBER")
"RTN","A1AEM2K",52,0)
 . I SEQ="",NUM'=0 S SEQ="NOSEQ"                           ; If not package release and no SEQ, say so.
"RTN","A1AEM2K",53,0)
 . S FN=PKABBR_"-"_$TR(VER,".","P")_"_SEQ-"_SEQ_"_PAT-"_NUM
"RTN","A1AEM2K",54,0)
 ;
"RTN","A1AEM2K",55,0)
 ; Stanza to open File.
"RTN","A1AEM2K",56,0)
 N POP
"RTN","A1AEM2K",57,0)
 D EN^DDIOL("Writing: "_$$DEFDIR^%ZISH(ROOT)_FN_".TXT")
"RTN","A1AEM2K",58,0)
 D OPEN^%ZISH("TXTFIL",ROOT,FN_".TXT","W")
"RTN","A1AEM2K",59,0)
 I POP D EN^DDIOL("Can't open file "_FN_" in path "_ROOT) QUIT
"RTN","A1AEM2K",60,0)
 U IO
"RTN","A1AEM2K",61,0)
 ;
"RTN","A1AEM2K",62,0)
 ; Stanza to write text file. Reuses code in A1AEPH6
"RTN","A1AEM2K",63,0)
 N PATCH F PATCH=0:0 S PATCH=$O(PATCHES(PATCH)) Q:'PATCH  D
"RTN","A1AEM2K",64,0)
 . N A1AEIFN,D0 S (A1AEIFN,D0)=PATCH
"RTN","A1AEM2K",65,0)
 . N A1AEPD S A1AEPD=$$GET1^DIQ(11005,PATCH,.01)
"RTN","A1AEM2K",66,0)
 . N A1AEVPR S A1AEVPR=""
"RTN","A1AEM2K",67,0)
 . N A1AEHD S A1AEHD="DHCP Patch Export"
"RTN","A1AEM2K",68,0)
 . S $P(A1AEPD,"*",2)=$S($P(A1AEPD,"*",2)=999:"DBA",1:$P(A1AEPD,"*",2))
"RTN","A1AEM2K",69,0)
 . I $P(^A1AE(11005,A1AEIFN,0),"^",8)="e"!($P(^(0),"^",8)="r") D
"RTN","A1AEM2K",70,0)
 . . N DHD S DHD="@"
"RTN","A1AEM2K",71,0)
 . . N L S L=0
"RTN","A1AEM2K",72,0)
 . . N DIC S DIC="^A1AE(11005,"
"RTN","A1AEM2K",73,0)
 . . D SETFLDS^A1AEPH6
"RTN","A1AEM2K",74,0)
 . . N BY,FR,TO S BY="",(FR,TO)=A1AEIFN
"RTN","A1AEM2K",75,0)
 . . D EN1^DIP
"RTN","A1AEM2K",76,0)
 . I $P(^A1AE(11005,A1AEIFN,0),"^",8)="v"!$D(^A1AE(11007,"AD",DUZ,+$P(^A1AE(11005,+A1AEIFN,0),U,2))) D
"RTN","A1AEM2K",77,0)
 . . N A1AEPGE S A1AEPGE=0
"RTN","A1AEM2K",78,0)
 . . ; S ^UTILITY($J,1)="D HD^A1AEPH2" ; Don't print headers at the end of IOSL.
"RTN","A1AEM2K",79,0)
 . . N DIWF S DIWF="B4X"
"RTN","A1AEM2K",80,0)
 . . N DN,DXS
"RTN","A1AEM2K",81,0)
 . . K ^UTILITY($J,"W")
"RTN","A1AEM2K",82,0)
 . . D HD^A1AEPH2,^A1AEP
"RTN","A1AEM2K",83,0)
 D CLOSE^%ZISH()
"RTN","A1AEM2K",84,0)
 D Q^A1AEPH6 ; Kill variables, and Reset to Home Device
"RTN","A1AEM2K",85,0)
 ;
"RTN","A1AEM2K",86,0)
 ;
"RTN","A1AEM2K",87,0)
 ;
"RTN","A1AEM2K",88,0)
 ; Now export the KIDS file
"RTN","A1AEM2K",89,0)
 ;
"RTN","A1AEM2K",90,0)
 ; Block to open File.
"RTN","A1AEM2K",91,0)
 N POP
"RTN","A1AEM2K",92,0)
 D EN^DDIOL("Writing: "_$$DEFDIR^%ZISH(ROOT)_FN_".KID")
"RTN","A1AEM2K",93,0)
 D OPEN^%ZISH("KIDFIL",ROOT,FN_".KID","W")
"RTN","A1AEM2K",94,0)
 I POP D EN^DDIOL("Can't open file "_FN_" in path "_ROOT) QUIT
"RTN","A1AEM2K",95,0)
 U IO
"RTN","A1AEM2K",96,0)
 ; 
"RTN","A1AEM2K",97,0)
 ; Header (2 lines)
"RTN","A1AEM2K",98,0)
 W "KIDS Distributions saved on "_$$FMTE^XLFDT($$NOW^XLFDT())_" by the Patch Module on "_^XMB("NETNAME"),!
"RTN","A1AEM2K",99,0)
 W "Patches/Packages: "
"RTN","A1AEM2K",100,0)
 N PATCH F PATCH=0:0 S PATCH=$O(PATCHES(PATCH)) Q:'PATCH  D
"RTN","A1AEM2K",101,0)
 . N PN S PN=$$PM2KD($$GET1^DIQ(11005,PATCH,.01))
"RTN","A1AEM2K",102,0)
 . N KIDGLO S KIDGLO=$NA(^TMP($J,"KID",PATCH))
"RTN","A1AEM2K",103,0)
 . D KIDGLO(KIDGLO,PATCH)
"RTN","A1AEM2K",104,0)
 . I '$D(KIDGLO) U IO(0) D EN^DDIOL("No global for "_PN) U IO K PATCHES(PATCH) QUIT
"RTN","A1AEM2K",105,0)
 . N SEQ S SEQ=$$GET1^DIQ(11005,PATCH,"SEQUENTIAL RELEASE NUMBER")
"RTN","A1AEM2K",106,0)
 . W PN_" SEQ# "_SEQ
"RTN","A1AEM2K",107,0)
 . W:$O(PATCHES(PATCH)) ", " ; If more, write a comma
"RTN","A1AEM2K",108,0)
 W !
"RTN","A1AEM2K",109,0)
 ;
"RTN","A1AEM2K",110,0)
 ; **KIDS** line and blank line.
"RTN","A1AEM2K",111,0)
 W "**KIDS**:"
"RTN","A1AEM2K",112,0)
 N PATCH F PATCH=0:0 S PATCH=$O(PATCHES(PATCH)) Q:'PATCH  D
"RTN","A1AEM2K",113,0)
 . W $$PM2KD($$GET1^DIQ(11005,PATCH,.01))_"^"
"RTN","A1AEM2K",114,0)
 W !!
"RTN","A1AEM2K",115,0)
 ;
"RTN","A1AEM2K",116,0)
 ; Write the contents of each KIDS build in sequence
"RTN","A1AEM2K",117,0)
 N PATCH F PATCH=0:0 S PATCH=$O(PATCHES(PATCH)) Q:'PATCH  D
"RTN","A1AEM2K",118,0)
 . N I F I=0:0 S I=$O(^TMP($J,"KID",PATCH,I)) Q:'I  W ^(I),!
"RTN","A1AEM2K",119,0)
 ;
"RTN","A1AEM2K",120,0)
 ; KIDS trailer
"RTN","A1AEM2K",121,0)
 W "**END**",!,"**END**",!
"RTN","A1AEM2K",122,0)
 D CLOSE^%ZISH()
"RTN","A1AEM2K",123,0)
 W !,"Done..."
"RTN","A1AEM2K",124,0)
 K ^TMP($J,"KID")
"RTN","A1AEM2K",125,0)
 QUIT
"RTN","A1AEM2K",126,0)
 ;
"RTN","A1AEM2K",127,0)
PM2KD(X) ; $$ Private PM to KIDS designation
"RTN","A1AEM2K",128,0)
 N PKABBR,VER,NUM
"RTN","A1AEM2K",129,0)
 S PKABBR=$P(X,"*",1)
"RTN","A1AEM2K",130,0)
 S VER=$P(X,"*",2)
"RTN","A1AEM2K",131,0)
 S NUM=$P(X,"*",3)
"RTN","A1AEM2K",132,0)
 I VER[".",VER<1 S VER=0_VER ; .1 => 0.1
"RTN","A1AEM2K",133,0)
 I VER'["." S VER=VER_".0" ; 2 => 2.0
"RTN","A1AEM2K",134,0)
 I NUM'=0 Q PKABBR_"*"_VER_"*"_NUM
"RTN","A1AEM2K",135,0)
 I NUM=0 N PN D  Q PN
"RTN","A1AEM2K",136,0)
 . N PK S PK=$O(^DIC(9.4,"C",PKABBR,""))
"RTN","A1AEM2K",137,0)
 . N PKNM S PKNM=$P(^DIC(9.4,PK,0),U)
"RTN","A1AEM2K",138,0)
 . S PN=PKNM_" "_VER
"RTN","A1AEM2K",139,0)
 QUIT
"RTN","A1AEM2K",140,0)
 ;
"RTN","A1AEM2K",141,0)
KIDGLO(OUTGLO,IEN) ; Private; Load KID contents from 11005.1 to OUTGLO
"RTN","A1AEM2K",142,0)
 ; OUTGLO - Global Name
"RTN","A1AEM2K",143,0)
 ; IEN - IEN in 11005/11005.1
"RTN","A1AEM2K",144,0)
 K @OUTGLO
"RTN","A1AEM2K",145,0)
 I '$D(^A1AE(11005.1,IEN,2)) QUIT
"RTN","A1AEM2K",146,0)
 N LINE S LINE=0
"RTN","A1AEM2K",147,0)
 N TEXT
"RTN","A1AEM2K",148,0)
 F  S LINE=$O(^A1AE(11005.1,IEN,2,LINE)) Q:'LINE  S TEXT=^(LINE,0) Q:TEXT["$END TXT"  ; spin to $END TXT
"RTN","A1AEM2K",149,0)
 I 'LINE QUIT  ; This line isn't needed but is here for clarity
"RTN","A1AEM2K",150,0)
 S LINE=$O(^A1AE(11005.1,IEN,2,LINE)),TEXT=^(LINE,0)        ; Get next line
"RTN","A1AEM2K",151,0)
 I $E(TEXT,1,4)'="$KID" QUIT  ; Must be $KID line
"RTN","A1AEM2K",152,0)
 F  S LINE=$O(^A1AE(11005.1,IEN,2,LINE)) Q:'LINE  S TEXT=^(LINE,0) Q:TEXT["$END KID"  S @OUTGLO@(LINE)=TEXT  ; load all until $END KID
"RTN","A1AEM2K",153,0)
 QUIT
"RTN","A1AEM2K",154,0)
 ;
"RTN","A1AEM2K",155,0)
TEST D EN^XTMUNIT($T(+0),1) QUIT
"RTN","A1AEM2K",156,0)
PM2KDT ; @TEST PM to KIDS designation works properly
"RTN","A1AEM2K",157,0)
 D CHKEQ^XTMUNIT($$PM2KD("LR*.1*3"),"LR*0.1*3")
"RTN","A1AEM2K",158,0)
 D CHKEQ^XTMUNIT($$PM2KD("LR*1.5*3"),"LR*1.5*3")
"RTN","A1AEM2K",159,0)
 D CHKEQ^XTMUNIT($$PM2KD("LR*3*3"),"LR*3.0*3")
"RTN","A1AEM2K",160,0)
 D CHKEQ^XTMUNIT($$PM2KD("LR*3*0"),"LAB SERVICE 3.0")
"RTN","A1AEM2K",161,0)
 QUIT
"RTN","A1AEMAL")
0^13^B44810612
"RTN","A1AEMAL",1,0)
A1AEMAL ;ISC-Albany/JLU- creates the mail message when v or c. ;2014-03-26  5:35 PM
"RTN","A1AEMAL",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEMAL",3,0)
GET ;Called from A1AEPHS
"RTN","A1AEMAL",4,0)
 I $D(X) S SAVX=X
"RTN","A1AEMAL",5,0)
 ;verified or test remove <<not verified
"RTN","A1AEMAL",6,0)
 I SAVX="v" S MARK=0 D MARK^A1AEM1
"RTN","A1AEMAL",7,0)
 I SAVX="t" S MARK=0 D MARK^A1AEM1
"RTN","A1AEMAL",8,0)
EN ;
"RTN","A1AEMAL",9,0)
 K A1AEPD2
"RTN","A1AEMAL",10,0)
 S $P(AEQ,"=",78)=""
"RTN","A1AEMAL",11,0)
 S A1AEJH=^A1AE(11005,DA,0)
"RTN","A1AEMAL",12,0)
 S A1AEPD=$P(A1AEJH,U),A1AEVR=$P(A1AEPD,"*",2)
"RTN","A1AEMAL",13,0)
 I '$P(A1AEPD,"*",3) S A1AEPD2=$P($G(^A1AE(11005,DA,4)),U)
"RTN","A1AEMAL",14,0)
 S XMSUB=$S($P(A1AEJH,U,7)="e":"EMERGENCY ",1:"")_$S(A1AENEW="v":"Released",1:"Completed/NotReleased")_" "_$S($D(A1AEPD2):A1AEPD2,1:A1AEPD)
"RTN","A1AEMAL",15,0)
 I A1AEVR=999 S XMSUB=$P(XMSUB,"999")_"DBA"_$P(XMSUB,"999",2)
"RTN","A1AEMAL",16,0)
 I $G(TESTMES) S XMSUB=$S($D(A1AEPD2):A1AEPD2,1:A1AEPD)_" "_TXVER
"RTN","A1AEMAL",17,0)
 ;if not called from a1aephs must have pkif
"RTN","A1AEMAL",18,0)
 S SEQ=$P(A1AEJH,"^",6) I SEQ S SEQ="SEQ #"_SEQ
"RTN","A1AEMAL",19,0)
 ;seq "" till verified when not adding seq to complete
"RTN","A1AEMAL",20,0)
 K XMZ S XMDUZ="National Patch Module",XMSUB=XMSUB_" "_SEQ
"RTN","A1AEMAL",21,0)
 D XMZ^XMA2 K XMDUZ I XMZ=-1 W !?5,"Failed to get get message number",! K SEQ,XMZ
"RTN","A1AEMAL",22,0)
 Q
"RTN","A1AEMAL",23,0)
 ;
"RTN","A1AEMAL",24,0)
ADD(T) ;Inc E, Add text to Message. Also called from A1AEUTL2
"RTN","A1AEMAL",25,0)
        I $G(A1AEPRNT)=1 W T,! Q  ; From A1AE STANDARD PRINT template
"RTN","A1AEMAL",26,0)
 S E=E+1,^XMB(3.9,XMZ,2,E,0)=T
"RTN","A1AEMAL",27,0)
 Q
"RTN","A1AEMAL",28,0)
 ;
"RTN","A1AEMAL",29,0)
MES ;Build message, Called from A1AEPHS
"RTN","A1AEMAL",30,0)
 S JL=A1AENEW,E=1 ;Start E at 1, Line 1 gets $TXT
"RTN","A1AEMAL",31,0)
 D ADD(AEQ)
"RTN","A1AEMAL",32,0)
        N STRMABBR S STRMABBR=$$STRMABBR^A1AEPH2(DA)
"RTN","A1AEMAL",33,0)
        N RD
"RTN","A1AEMAL",34,0)
        S RD="Run Date: "_$$LJ^XLFSTR($$EDT($S($G(A1AERCR8):$P(A1AEJH,U,11),1:$$DT^XLFDT)),33)
"RTN","A1AEMAL",35,0)
        I $L(STRMABBR) D
"RTN","A1AEMAL",36,0)
        . N STRM S STRM="Stream: "_$$LJ^XLFSTR(STRMABBR,10)
"RTN","A1AEMAL",37,0)
        . S RD=$E(RD,1,25)_STRM
"RTN","A1AEMAL",38,0)
        ;
"RTN","A1AEMAL",39,0)
 D ADD(RD_"Designation: "_$S($D(A1AEPD2):A1AEPD2,1:A1AEPD))
"RTN","A1AEMAL",40,0)
        K RD
"RTN","A1AEMAL",41,0)
 S A1AEJ1=^DIC(9.4,$P(A1AEJH,U,2),0),A1AEJP=$P(A1AEJH,U,7),A1AEJP=$S(A1AEJP="p":"Patch for a Patch",A1AEJP="n":"Not Urgent",A1AEJP="m":"Mandatory",A1AEJP="e":"EMERGENCY",A1AEJP="i":"Informational",1:"")
"RTN","A1AEMAL",42,0)
 S AJL=$P(A1AEJ1,U,2)_" - "_$P(A1AEJ1,U)
"RTN","A1AEMAL",43,0)
 S AJL=$$LJ^XLFSTR($E(AJL,1,35),36)
"RTN","A1AEMAL",44,0)
 D ADD("Package : "_AJL_"Priority: "_A1AEJP)
"RTN","A1AEMAL",45,0)
 S AJL=$$LJ^XLFSTR($P(A1AEJH,U,3)_$J(SEQ,15),38)
"RTN","A1AEMAL",46,0)
 D ADD("Version : "_AJL_"Status: "_$$STATUS2E^A1AEPH2(JL))
"RTN","A1AEMAL",47,0)
 I $P(A1AEJH,U,18) D ADD("                  Compliance Date: "_$$EDT($P(A1AEJH,U,18)))
"RTN","A1AEMAL",48,0)
 D ADD(AEQ)
"RTN","A1AEMAL",49,0)
 D ADD("")
"RTN","A1AEMAL",50,0)
 I $D(^A1AE(11005,DA,"Q","B")) K AZ S D0=DA D PCHK^A1AEUTL1 ;Returns AZ
"RTN","A1AEMAL",51,0)
 I $D(AZ)=11 D PCHK^A1AEMAL1 K AZ,AN
"RTN","A1AEMAL",52,0)
        ; VEN/SMH - Next lines are new. Mirror what's in the Print Template A1AE STANDARD PRINT
"RTN","A1AEMAL",53,0)
        I $P(^A1AE(11005,DA,0),U,20) D  ; Print Patch Stream
"RTN","A1AEMAL",54,0)
        . N %,Y
"RTN","A1AEMAL",55,0)
        . D ADD("")
"RTN","A1AEMAL",56,0)
        . S %=$G(^A1AE(11005,DA,0)),Y=$P(%,U,20),Y=$S(Y="":Y,$D(^A1AE(11007.1,Y,0))#2:$P(^(0),U),1:Y)
"RTN","A1AEMAL",57,0)
        . D ADD("Source: "_Y)
"RTN","A1AEMAL",58,0)
        I $P(^A1AE(11005,DA,5),U,2) D  ; Print Dervied From Patch
"RTN","A1AEMAL",59,0)
        . N %,Y
"RTN","A1AEMAL",60,0)
        . D ADD("")
"RTN","A1AEMAL",61,0)
        . S %=$G(^A1AE(11005,DA,5)),Y=$P(%,U,2),Y=$S(Y="":Y,$D(^A1AE(11005,Y,0))#2:$P(^(0),U),1:Y)
"RTN","A1AEMAL",62,0)
        . D ADD("Derived from Patch: "_Y)
"RTN","A1AEMAL",63,0)
        ; VEN/SMH - End
"RTN","A1AEMAL",64,0)
 D ADD("")
"RTN","A1AEMAL",65,0)
 D ADD("Subject: "_$P(A1AEJH,U,5))
"RTN","A1AEMAL",66,0)
 D ADD("")
"RTN","A1AEMAL",67,0)
 D ADD("Category: ")
"RTN","A1AEMAL",68,0)
 I '$D(ZTQUEUED) W !?3,"." R ZZ:0
"RTN","A1AEMAL",69,0)
 S D1=0,A1B="  - "
"RTN","A1AEMAL",70,0)
 F  S D1=$O(^A1AE(11005,DA,"C",D1)) Q:'D1  D SJ D ADD(A1B_J)
"RTN","A1AEMAL",71,0)
 D ADD("")
"RTN","A1AEMAL",72,0)
 ;
"RTN","A1AEMAL",73,0)
 D ADD("Description:")
"RTN","A1AEMAL",74,0)
 D ADD("============")
"RTN","A1AEMAL",75,0)
 D ADD("")
"RTN","A1AEMAL",76,0)
 S D1=0
"RTN","A1AEMAL",77,0)
 F  S D1=$O(^A1AE(11005,DA,"D",D1)) Q:'D1  D ADD(" "_^(D1,0))
"RTN","A1AEMAL",78,0)
 D ADD("")
"RTN","A1AEMAL",79,0)
 ;
"RTN","A1AEMAL",80,0)
 D ADD("Routine Information:")
"RTN","A1AEMAL",81,0)
 D ADD("====================")
"RTN","A1AEMAL",82,0)
 D RTNINFO
"RTN","A1AEMAL",83,0)
 D ADD("")
"RTN","A1AEMAL",84,0)
 ;
"RTN","A1AEMAL",85,0)
 D ADD(AEQ)
"RTN","A1AEMAL",86,0)
 D ADD("User Information:"_$S($P(A1AEJH,U,17):$$RJ^XLFSTR("Hold Date     : ",42)_$$EDT($P(A1AEJH,U,17)),1:""))
"RTN","A1AEMAL",87,0)
 D ADD($$WHOWHEN("Entered",$P(A1AEJH,U,9),$P(A1AEJH,U,12)))
"RTN","A1AEMAL",88,0)
 D ADD($$WHOWHEN("Completed",$S(JL="c":DUZ,JL="v":$P(A1AEJH,U,13),1:""),$S(JL="c":$P(DT,"."),JL="v":$P(A1AEJH,U,10),1:"")))
"RTN","A1AEMAL",89,0)
 D ADD($$WHOWHEN("Released",$S($G(A1AERCR8):$P(A1AEJH,U,14),JL="v":DUZ,1:""),$S($G(A1AERCR8):$P(A1AEJH,U,11),JL="v":$P(DT,"."),1:"")))
"RTN","A1AEMAL",90,0)
        ;
"RTN","A1AEMAL",91,0)
        I "^i2^d2^s2^r2^n2^"[(U_JL_U) D USERS(DA)
"RTN","A1AEMAL",92,0)
        ;
"RTN","A1AEMAL",93,0)
 D ADD(AEQ)
"RTN","A1AEMAL",94,0)
 I '$D(ZTQUEUED) W " ." R ZZ:0
"RTN","A1AEMAL",95,0)
 ;Add the KIDS build to Mail message
"RTN","A1AEMAL",96,0)
 D ^A1AEMAL1
"RTN","A1AEMAL",97,0)
 ;
"RTN","A1AEMAL",98,0)
 I '$G(A1AERCR8) D
"RTN","A1AEMAL",99,0)
 . K XMZ
"RTN","A1AEMAL",100,0)
 . W !,"NOTE: A message has been sent to the",$S(A1AENEW="c":" CS Team",A1AENEW="v":" Network Mail groups",1:" Test Site Users")_$S(A1AENEW="c":" for this package",1:" for distribution.")
"RTN","A1AEMAL",101,0)
 K A1AEPD,A1AEVR,%H,A1AED,A1AEDC,A1AEDV,A1AEJ1,A1AEJH,A1AEJP,A1B,A1CB,A1CV,A1US,AJL,AJL1,E,J,JL,JSP,XMTEXT,XMY,D2,D1,AN,ZZ,AEQ
"RTN","A1AEMAL",102,0)
 I $G(TESTMES) W !,"      Please use mailman if you need to forward this message again."
"RTN","A1AEMAL",103,0)
 W ! I $D(SAVX) S X=SAVX K SAVX
"RTN","A1AEMAL",104,0)
 Q
"RTN","A1AEMAL",105,0)
SJ ;
"RTN","A1AEMAL",106,0)
 S J=^A1AE(11005,DA,"C",D1,0),J=$S(J="d":"Data Dictionary",J="i":"Input Template",J="p":"Print Template",J="r":"Routine",J="s":"Sort Template",J="o":"Other",J="db":"Database",J="e":"e",J="pp":"PATCH FOR A PATCH",J="inf":"Informational",1:"")
"RTN","A1AEMAL",107,0)
 I J="e" S J="Enhancement ("_$S($P(^A1AE(11005,DA,0),"^",7)="m":"Mandatory",$P(^(0),"^",7)="n":"Optional",1:"")_")"
"RTN","A1AEMAL",108,0)
 Q
"RTN","A1AEMAL",109,0)
 ;
"RTN","A1AEMAL",110,0)
EDT(FMDT) ;
"RTN","A1AEMAL",111,0)
 Q $$UP^XLFSTR($$FMTE^XLFDT(FMDT))
"RTN","A1AEMAL",112,0)
 ;
"RTN","A1AEMAL",113,0)
USERS(DA)   ; Extra users
"RTN","A1AEMAL",114,0)
        ; VEN/SMH - This is new for the new statuses
"RTN","A1AEMAL",115,0)
        ; TODO: This happens during input transform. These fields WILL NOT be populated yet on the first pass.
"RTN","A1AEMAL",116,0)
        ; Fileman filing happens after the input transform but b4 xreffing.
"RTN","A1AEMAL",117,0)
        N USER,DATE
"RTN","A1AEMAL",118,0)
        S USER=$$GET1^DIQ(11005,DA,8.1,"I") ; Rev usr
"RTN","A1AEMAL",119,0)
        S DATE=$$GET1^DIQ(11005,DA,8.09,"I") ; Rev Date
"RTN","A1AEMAL",120,0)
        D ADD($$WHOWHEN("Reviewed",USER,DATE)) ; Always print
"RTN","A1AEMAL",121,0)
        S USER=$$GET1^DIQ(11005,DA,8.12,"I") ; Sec Dev usr
"RTN","A1AEMAL",122,0)
        S DATE=$$GET1^DIQ(11005,DA,8.11,"I") ; Sec Dev date
"RTN","A1AEMAL",123,0)
        I DATE D ADD($$WHOWHEN("Sec Dev",USER,DATE)) ; print if there is a value
"RTN","A1AEMAL",124,0)
        S USER=$$GET1^DIQ(11005,DA,8.14,"I") ; Sec Com usr
"RTN","A1AEMAL",125,0)
        S DATE=$$GET1^DIQ(11005,DA,8.13,"I") ; Sec Com date
"RTN","A1AEMAL",126,0)
        I DATE D ADD($$WHOWHEN("Sec Com",USER,DATE)) ; ditto
"RTN","A1AEMAL",127,0)
        S USER=$$GET1^DIQ(11005,DA,8.16,"I") ; Sec Rel usr
"RTN","A1AEMAL",128,0)
        S DATE=$$GET1^DIQ(11005,DA,8.15,"I") ; Sec Rel date
"RTN","A1AEMAL",129,0)
        I DATE D ADD($$WHOWHEN("Sec Rel",USER,DATE)) ; ditto
"RTN","A1AEMAL",130,0)
        S USER=$$GET1^DIQ(11005,DA,8.18,"I") ; Sec Deny usr
"RTN","A1AEMAL",131,0)
        S DATE=$$GET1^DIQ(11005,DA,8.17,"I") ; Sec Deny date
"RTN","A1AEMAL",132,0)
        I DATE D ADD($$WHOWHEN("Denied",USER,DATE)) ; ditto
"RTN","A1AEMAL",133,0)
        QUIT
"RTN","A1AEMAL",134,0)
        ;
"RTN","A1AEMAL",135,0)
WHOWHEN(WHAT,WHO,WHEN) ;
"RTN","A1AEMAL",136,0)
 N LINE
"RTN","A1AEMAL",137,0)
 S LINE=$$LJ^XLFSTR(WHAT_" By",12)_": "
"RTN","A1AEMAL",138,0)
 S LINE=LINE_$$LJ^XLFSTR($S(+WHO:$E($$NAME^XMXUTIL(WHO),1,29),1:""),30)
"RTN","A1AEMAL",139,0)
 S LINE=LINE_$$LJ^XLFSTR("Date "_WHAT,14)_": "
"RTN","A1AEMAL",140,0)
 Q LINE_$S(+WHEN:$$EDT(WHEN),1:"")
"RTN","A1AEMAL",141,0)
 ;
"RTN","A1AEMAL",142,0)
RTNINFO ;Put the routine info out
"RTN","A1AEMAL",143,0)
 N D0 S D0=DA D RTNINFO^A1AEUTL2(1)
"RTN","A1AEMAL",144,0)
 Q
"RTN","A1AEMAL1")
0^14^B24198637
"RTN","A1AEMAL1",1,0)
A1AEMAL1 ;ISC-Albany/JLU - creates the Patch mail message ;2014-03-08  3:35 PM
"RTN","A1AEMAL1",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEMAL1",3,0)
 I $G(A1AERCR8) D
"RTN","A1AEMAL1",4,0)
 . S $P(^XMB(3.9,XMZ,0),"^",7)=$S($P(^A1AE(11005.1,DA,0),U,11)="K":"K",1:"X")
"RTN","A1AEMAL1",5,0)
 E  D
"RTN","A1AEMAL1",6,0)
 . ;Address Message
"RTN","A1AEMAL1",7,0)
 . S AN=$P(A1AEJH,U,2),TEST=$P(^A1AE(11007,AN,0),U,4)
"RTN","A1AEMAL1",8,0)
 . I AN D VER^A1AEM:SAVX="v" D:TEST'="y" COM^A1AEM:SAVX="c" D:TEST="y" TST^A1AEM:SAVX="c"
"RTN","A1AEMAL1",9,0)
 . I $G(TESTMES) K XMY
"RTN","A1AEMAL1",10,0)
 . I '$G(TESTMES) S XMY(DUZ)="" ;'? to hid xmy(n)
"RTN","A1AEMAL1",11,0)
 . I '$G(TESTMES) S JL2="" F JL=1:0 S JL2=$O(XMY(JL2)) Q:JL2=""  S A1AETX(JL)="                     "_JL2 S:JL=1 A1AETX(1)="     Recipient     : "_JL2 I JL2'?1N.N S JL=JL+1
"RTN","A1AEMAL1",12,0)
 I '$D(ZTQUEUED) W " ." R ZZ:0
"RTN","A1AEMAL1",13,0)
 ;Load the KIDS Message Text
"RTN","A1AEMAL1",14,0)
 I $D(^A1AE(11005.1,DA,0)) D RO
"RTN","A1AEMAL1",15,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92A^"_E_"^"_E_"^"_DT
"RTN","A1AEMAL1",16,0)
 ;kids patches always difrom
"RTN","A1AEMAL1",17,0)
 I SAVX="v",$D(^DIC(19,"B","A1AE SERVER VERIFIED")) S XMY("S.A1AE SERVER VERIFIED")=""
"RTN","A1AEMAL1",18,0)
 I $P(^XMB(3.9,XMZ,0),"^",2)="National Patch Module",SAVX="c" S $P(^(0),"^",2)="NPM   [#"_XMZ_"]"
"RTN","A1AEMAL1",19,0)
 I $P(^XMB(3.9,XMZ,0),"^",2)="National Patch Module",$G(TESTMES) S $P(^(0),"^",2)="NPM   [#"_XMZ_"]"
"RTN","A1AEMAL1",20,0)
 ;Send Msg
"RTN","A1AEMAL1",21,0)
 I '$G(TESTMES) N XMDF S XMDF=1 S ZTQUEUED="" D ENT1^XMD K ZTQUEUED,XMDF
"RTN","A1AEMAL1",22,0)
 I $G(TESTMES) DO
"RTN","A1AEMAL1",23,0)
 . S (XMDUN,XMDUZ)=$P(^VA(200,DUZ,0),"^"),XMY(DUZ)=""
"RTN","A1AEMAL1",24,0)
 . W !!,"Please add recipients for `",$P(A1AE0,"^"),"' test message"
"RTN","A1AEMAL1",25,0)
 . D ENT2^XMD K XMDUN,XMDUZ
"RTN","A1AEMAL1",26,0)
 . W !,"message number [#",XMZ,"]"
"RTN","A1AEMAL1",27,0)
 . S $P(^A1AE(11005.1,DA,0),"^",12)=TVER
"RTN","A1AEMAL1",28,0)
 ;record message, dt
"RTN","A1AEMAL1",29,0)
 I $G(A1AERCR8) S $P(^A1AE(11005.1,DA,0),U,6)=XMZ Q
"RTN","A1AEMAL1",30,0)
 S A1AESUB=XMSUB
"RTN","A1AEMAL1",31,0)
 S (AXMZ,A1AEXMZ)=XMZ
"RTN","A1AEMAL1",32,0)
 D VREC^A1AEM:SAVX="v",CREC^A1AEM:SAVX="c" K AXMZ
"RTN","A1AEMAL1",33,0)
 ;
"RTN","A1AEMAL1",34,0)
 ;remove input message from que ;do this on Completed ??/release
"RTN","A1AEMAL1",35,0)
 I SAVX="c",$D(^A1AE(11005.1,DA,0)) S AXMZ=$P(^(0),U,2) I AXMZ D TRASH^A1AEM
"RTN","A1AEMAL1",36,0)
 ;test the new kids import logic
"RTN","A1AEMAL1",37,0)
 I $P($G(^A1AE(11005.1,DA,0)),"^",11)="K" D  Q
"RTN","A1AEMAL1",38,0)
 . S $P(^XMB(3.9,A1AEXMZ,0),"^",7)="K"
"RTN","A1AEMAL1",39,0)
 I $P($G(^A1AE(11005.1,DA,0)),"^",11)="X" D  Q
"RTN","A1AEMAL1",40,0)
 . S $P(^XMB(3.9,A1AEXMZ,0),"^",7)="X"
"RTN","A1AEMAL1",41,0)
 Q
"RTN","A1AEMAL1",42,0)
 ;
"RTN","A1AEMAL1",43,0)
 ;Removed code testing for current patches
"RTN","A1AEMAL1",44,0)
ADD(T) ;Inc E, Add text to Message.
"RTN","A1AEMAL1",45,0)
 S E=E+1,^XMB(3.9,XMZ,2,E,0)=T
"RTN","A1AEMAL1",46,0)
 Q
"RTN","A1AEMAL1",47,0)
 ;
"RTN","A1AEMAL1",48,0)
RO ;Add KIDS message
"RTN","A1AEMAL1",49,0)
 ;1st line $txt
"RTN","A1AEMAL1",50,0)
 ;fix for <undef> when 11005.1 stub not getting set
"RTN","A1AEMAL1",51,0)
 S ^XMB(3.9,XMZ,2,1,0)=$G(^A1AE(11005.1,DA,2,1,0)) ; VEN/SMH - THIS IS THE LINE THAT PUTS '$TXT Created By' etc...
"RTN","A1AEMAL1",52,0)
 D ADD(""),ADD("")
"RTN","A1AEMAL1",53,0)
 D ADD("Packman Mail Message:")
"RTN","A1AEMAL1",54,0)
 D ADD("=====================")
"RTN","A1AEMAL1",55,0)
 D ADD("")
"RTN","A1AEMAL1",56,0)
 I $G(^A1AE(11005.1,DA,2,1,0))["No routines included" D  Q
"RTN","A1AEMAL1",57,0)
 . D ADD(^(0)) ; naked ref to $G above.
"RTN","A1AEMAL1",58,0)
 . S ^XMB(3.9,XMZ,2,1,0)=""
"RTN","A1AEMAL1",59,0)
 I '$D(^A1AE(11005.1,DA,2,1)),'$D(^(2)),'$D(^(3)),'$D(^(4)),'$D(^(5)) D  Q
"RTN","A1AEMAL1",60,0)
 . D ADD("No routines included")
"RTN","A1AEMAL1",61,0)
 ;
"RTN","A1AEMAL1",62,0)
 N ZA,ZB,ZC,RN,BCS
"RTN","A1AEMAL1",63,0)
 S Z=0,ZA=0,ZB=0,RN="",BCS=""
"RTN","A1AEMAL1",64,0)
 ;skip any txt loaded in with message
"RTN","A1AEMAL1",65,0)
 F  S Z=$O(^A1AE(11005.1,DA,2,Z)) Q:'Z  I $E(^(Z,0),1,8)="$END TXT",^(0)'["KIDS" Q
"RTN","A1AEMAL1",66,0)
 ;
"RTN","A1AEMAL1",67,0)
 I Z D
"RTN","A1AEMAL1",68,0)
 . S Z=$O(^A1AE(11005.1,DA,2,Z),-1) ;backup 1 to get $end txt  
"RTN","A1AEMAL1",69,0)
 . ;Find the build number for later
"RTN","A1AEMAL1",70,0)
 . S ZA=Z F  S ZA=$O(^A1AE(11005.1,DA,2,ZA)) Q:'ZA  I $E(^(ZA,0),1,5)="""BLD""" Q
"RTN","A1AEMAL1",71,0)
 . ;Move Message Text into Message Stop at $END KID
"RTN","A1AEMAL1",72,0)
        . ;VEN/SMH - Old checksum gets put here.
"RTN","A1AEMAL1",73,0)
 . F  S Z=$O(^A1AE(11005.1,DA,2,Z)) Q:'Z  S ZB=^(Z,0) DO  Q:$E(ZB,1,8)="$END KID"
"RTN","A1AEMAL1",74,0)
 . . I $E(ZB,1,5)="""RTN""",RN'=$P(ZB,$C(34),4) S RN=$P(ZB,$C(34),4),BCS=$$BCS^A1AEUTL2(DA,RN)
"RTN","A1AEMAL1",75,0)
 . . D ADD(ZB) ;node
"RTN","A1AEMAL1",76,0)
 . . S Z=$O(^A1AE(11005.1,DA,2,Z)) Q:'Z  S ZC=^(Z,0)
"RTN","A1AEMAL1",77,0)
 . . I $L(BCS),'$L($P(ZC,U,4)) S $P(ZC,U,4)=BCS ; VEN/SMH - Don't update the old checksum if we have one
"RTN","A1AEMAL1",78,0)
        . . S BCS="" ; empty for the next time in the loop.
"RTN","A1AEMAL1",79,0)
 . . D ADD(ZC) ;value
"RTN","A1AEMAL1",80,0)
 . . I Z#66=0,'$D(ZTQUEUED) W "." R ZZ:0
"RTN","A1AEMAL1",81,0)
 . Q
"RTN","A1AEMAL1",82,0)
 ;Add Test and SEQ to BLD section
"RTN","A1AEMAL1",83,0)
 I '$D(A1AEPKV),ZA D
"RTN","A1AEMAL1",84,0)
 . N ZAA
"RTN","A1AEMAL1",85,0)
 . S ZAA=^A1AE(11005.1,DA,2,ZA,0),ZA(1)=$P(ZAA,",",1),ZA(2)=$P(ZAA,",",2)
"RTN","A1AEMAL1",86,0)
 . S ZZA(1)=ZA(1)_","_ZA(2)_",6)"
"RTN","A1AEMAL1",87,0)
 . S ZZA(9)=^XMB(3.9,XMZ,2,E,0),E=E-1 ;Backup one
"RTN","A1AEMAL1",88,0)
 . D ADD(ZZA(1)) ;Replaces last line
"RTN","A1AEMAL1",89,0)
 . D ADD($G(TVER)_"^"_$P($G(SEQ),"#",2))
"RTN","A1AEMAL1",90,0)
 . D ADD(ZZA(9))
"RTN","A1AEMAL1",91,0)
 Q
"RTN","A1AEMAL1",92,0)
 ;
"RTN","A1AEMAL1",93,0)
PCHK ;Called from A1AEMAL
"RTN","A1AEMAL1",94,0)
 S AN=0
"RTN","A1AEMAL1",95,0)
 S AZ=0 F  S AZ=$O(AZ(AZ)) Q:'AZ  I AZ(AZ)'["<<" DO PSET
"RTN","A1AEMAL1",96,0)
 S AZ=0 F  S AZ=$O(AZ(AZ)) Q:'AZ  I AZ(AZ)["<<" DO PSET
"RTN","A1AEMAL1",97,0)
 Q
"RTN","A1AEMAL1",98,0)
 ;
"RTN","A1AEMAL1",99,0)
PSET ;
"RTN","A1AEMAL1",100,0)
 I $D(AZ("TX",1)) D ADD(AZ("TX",1)_AZ(AZ)) K AZ("TX",1) Q
"RTN","A1AEMAL1",101,0)
 E  D ADD("                    "_AZ(AZ))
"RTN","A1AEMAL1",102,0)
 Q
"RTN","A1AEMAL1",103,0)
 ;
"RTN","A1AEMAL1",104,0)
NOMESS ;from a1aephs write warning that released message already sent
"RTN","A1AEMAL1",105,0)
 W !!?3,"A Released Patch message `",$P(A1AE0,"^"),"' #"
"RTN","A1AEMAL1",106,0)
 W $P(^A1AE(11005.1,DA,0),"^",6),"  " S Y=$P(^(0),"^",7) D DT^DIQ
"RTN","A1AEMAL1",107,0)
 W !?3,"has already been sent."
"RTN","A1AEMAL1",108,0)
 W !!?3,"NO additional message or bulletin will be generated."
"RTN","A1AEMAL1",109,0)
 W !?3,"It is assummed that the previous release was interrupted"
"RTN","A1AEMAL1",110,0)
 W !?3,"by a system disconnect.  PLEASE CHECK this message for "
"RTN","A1AEMAL1",111,0)
 W !?3,"correct SEQ# and content."
"RTN","A1AEMAL1",112,0)
 W !!?3,"If this message does NOT exist the Patch status will have"
"RTN","A1AEMAL1",113,0)
 W !?3,"to be reset manually,  please notify Patch Developers."
"RTN","A1AEMAL1",114,0)
 W !!?3,"The Patch status of `",$P(A1AE0,"^"),"' will now be reset to Released."
"RTN","A1AEMAL1",115,0)
 W !,$C(7) H 3
"RTN","A1AEMAL1",116,0)
 Q
"RTN","A1AEMGR")
0^15^B10155661
"RTN","A1AEMGR",1,0)
A1AEMGR ; RMO/ALBANY ;2014-03-28  5:11 PM;23 MAR 88 9:00 am
"RTN","A1AEMGR",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEMGR",3,0)
 ;*** NOT FOR GENERAL DISTRIBUTION- Sent to Milt on FORUM 3/23/88 ***
"RTN","A1AEMGR",4,0)
 ;
"RTN","A1AEMGR",5,0)
SELUSR ;Update patches as printed for ALL selected packages for a select user
"RTN","A1AEMGR",6,0)
 G Q:'$D(^XUSEC("A1AE MGR",DUZ)) S DIC="^VA(200,",DIC(0)="AEMQ" W ! D ^DIC G Q:Y<0 S A1AEUSR=+Y,A1AEUSNM=$P(Y,"^",2) I '$D(^A1AE(11007,"AU",A1AEUSR)) W !!?3,*7,"This user has no packages currently selected." G SELUSR
"RTN","A1AEMGR",7,0)
 S A1AERD("A")="Are you sure you want to update the print status for "_A1AEUSNM_"? ",A1AERD(0)="S",A1AERD(1)="Yes^update print status of verified patches for user",A1AERD(2)="No^do not update print status for user"
"RTN","A1AEMGR",8,0)
 S A1AERD("B")=2 D SET^A1AERD G SELUSR:"N"[$E(X,1)!(X["^") D UPDATE:"Y"[$E(X,1)
"RTN","A1AEMGR",9,0)
 ;
"RTN","A1AEMGR",10,0)
Q K A1AEUSNM,A1AEDTV,A1AEIFN,A1AEPKIF,A1AEUSR
"RTN","A1AEMGR",11,0)
 Q
"RTN","A1AEMGR",12,0)
 ;
"RTN","A1AEMGR",13,0)
UPDATE W !!,"Overriding patch print status for ",A1AEUSNM,"'s selected packages.",! S %DT="",X="T" D ^%DT S DT=Y
"RTN","A1AEMGR",14,0)
 F A1AEPKIF=0:0 S A1AEPKIF=$O(^A1AE(11007,"AU",A1AEUSR,A1AEPKIF)) Q:'A1AEPKIF  I $D(^A1AE(11007,A1AEPKIF,0)),$P(^(0),"^",2)="Y",$D(^DIC(9.4,A1AEPKIF,0)) W !?3,"Updating print status for ",$P(^(0),"^",2)," patches..." D CHKDTV
"RTN","A1AEMGR",15,0)
 Q
"RTN","A1AEMGR",16,0)
 ;
"RTN","A1AEMGR",17,0)
CHKDTV F A1AEDTV=0:0 S A1AEDTV=+$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV)) Q:'A1AEDTV  F A1AEIFN=0:0 S A1AEIFN=+$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV,A1AEIFN)) Q:'A1AEIFN  I '$D(^A1AE(11005,A1AEIFN,2,A1AEUSR)) D SETPRT
"RTN","A1AEMGR",18,0)
 Q
"RTN","A1AEMGR",19,0)
 ;
"RTN","A1AEMGR",20,0)
SETPRT W !?6,$P(^A1AE(11005,A1AEIFN,0),"^")
"RTN","A1AEMGR",21,0)
 L +^A1AE(11005,A1AEIFN,2):0 E  W $C(7),"Couldn't lock at "_$ST($ST,"PLACE")_". Try again later.",! QUIT
"RTN","A1AEMGR",22,0)
 S:'$D(^A1AE(11005,A1AEIFN,2,0)) ^(0)="^11005.02P^^"
"RTN","A1AEMGR",23,0)
 S:'$D(^A1AE(11005,A1AEIFN,2,A1AEUSR,0)) $P(^(0),"^",1,2)=A1AEUSR_"^"_DT,$P(^(0),"^",4)=$P(^A1AE(11005,A1AEIFN,2,0),"^",4)+1
"RTN","A1AEMGR",24,0)
 S $P(^A1AE(11005,A1AEIFN,2,A1AEUSR,0),"^",3)=DT
"RTN","A1AEMGR",25,0)
 S $P(^A1AE(11005,A1AEIFN,2,0),"^",3)=A1AEUSR
"RTN","A1AEMGR",26,0)
 S ^A1AE(11005,"AU",A1AEUSR,+$P(^A1AE(11005,A1AEIFN,0),"^",2),(9999999-DT))=""
"RTN","A1AEMGR",27,0)
 L -^A1AE(11005,A1AEIFN,2)
"RTN","A1AEMGR",28,0)
 Q
"RTN","A1AEOS")
0^60^B4736088
"RTN","A1AEOS",1,0)
A1AEOS ; VEN/SMH - Patch Module Operating System Interface;2014-03-31  1:27 PM
"RTN","A1AEOS",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEOS",3,0)
 ;
"RTN","A1AEOS",4,0)
 ; This routine is not SAC compliant
"RTN","A1AEOS",5,0)
 ;
"RTN","A1AEOS",6,0)
MKDIR(DIR) ; [PUBLIC] - $$; mkdir DIR name. Unix output for success and failure.
"RTN","A1AEOS",7,0)
 N CMD S CMD="mkdir -p '"_DIR_"'" ; mk sure that we take in account spaces
"RTN","A1AEOS",8,0)
 N OUT ; Exit value of command.
"RTN","A1AEOS",9,0)
 I +$SY=47 D  ; GT.M
"RTN","A1AEOS",10,0)
 . O "p":(shell="/bin/sh":command=CMD)::"pipe" U "p" C "p"
"RTN","A1AEOS",11,0)
 . I $ZV["V6.1" S OUT=$ZCLOSE ; GT.M 6.1 only returns the status!!
"RTN","A1AEOS",12,0)
 . E  S OUT=0
"RTN","A1AEOS",13,0)
 I +$SY=0 S OUT=$ZF(-1,CMD) ; Cache
"RTN","A1AEOS",14,0)
 QUIT OUT
"RTN","A1AEOS",15,0)
 ;
"RTN","A1AEOS",16,0)
T2 ; @TEST Make a directory
"RTN","A1AEOS",17,0)
 N % S %=$$MKDIR("/tmp/test/sam")
"RTN","A1AEOS",18,0)
 D CHKEQ^XTMUNIT(%,0,"Status of mkdir should be zero")
"RTN","A1AEOS",19,0)
 N % S %=$$MKDIR("/lksjdfkjsdf/")
"RTN","A1AEOS",20,0)
 D CHKEQ^XTMUNIT(%,1,"Status of failed mkdir should be one")
"RTN","A1AEOS",21,0)
 QUIT
"RTN","A1AEOS",22,0)
 ;
"RTN","A1AEOS",23,0)
PWD() ; [PUBLIC] $$ - Current directory
"RTN","A1AEOS",24,0)
 I +$SY=47 Q $ZD
"RTN","A1AEOS",25,0)
 I +$SY=0 Q $ZU(168)
"RTN","A1AEOS",26,0)
 S $EC=",U-M-VM-NOT-SUPPORTED,"
"RTN","A1AEOS",27,0)
 QUIT
"RTN","A1AEOS",28,0)
 ;
"RTN","A1AEOS",29,0)
D() ; [PUBLIC] $$ - Delimiter
"RTN","A1AEOS",30,0)
 N OS S OS=$$OS^%ZOSV
"RTN","A1AEOS",31,0)
 I $$UP^XLFSTR(OS)["UNIX" Q "/"
"RTN","A1AEOS",32,0)
 I $$UP^XLFSTR(OS)["NT" Q "\"
"RTN","A1AEOS",33,0)
 S $EC=",U-M-VM-NOT-SUPPORTED,"
"RTN","A1AEOS",34,0)
 QUIT
"RTN","A1AEOS",35,0)
 ;
"RTN","A1AEOS",36,0)
CD(ND) ; [PUBLIC] $$ - Change directory
"RTN","A1AEOS",37,0)
 I +$SY=47 S $ZD=ND Q $$PWD()
"RTN","A1AEOS",38,0)
 I +$SY=0 N % S %=$ZU(168,ND) Q $$PWD()
"RTN","A1AEOS",39,0)
 S $EC=",U-M-VM-NOT-SUPPORTED,"
"RTN","A1AEOS",40,0)
 ;
"RTN","A1AEOS",41,0)
RDPIPE(RTN,CMD) ; [PUBLIC] $$ - Execute a read only (non-interactive) command as a pipe
"RTN","A1AEOS",42,0)
 I +$SY=47 D  QUIT:$ZV["V6.1" $ZCLOSE QUIT 0
"RTN","A1AEOS",43,0)
 . N P S P="pipe"
"RTN","A1AEOS",44,0)
 . O P:(shell="/bin/sh":command=CMD:PARSE:READONLY)::"pipe"
"RTN","A1AEOS",45,0)
 . U P
"RTN","A1AEOS",46,0)
 . N CNT S CNT=1
"RTN","A1AEOS",47,0)
 . N X F  R X:1 Q:$ZEOF  U $P D EN^DDIOL(X) S RTN(CNT)=X,CNT=CNT+1 U P  ; just loop around until we are done.
"RTN","A1AEOS",48,0)
 . C P
"RTN","A1AEOS",49,0)
 I +$SY=0 D  Q 0
"RTN","A1AEOS",50,0)
 . O CMD:"QR"
"RTN","A1AEOS",51,0)
 . U CMD
"RTN","A1AEOS",52,0)
 . N CNT S CNT=1
"RTN","A1AEOS",53,0)
 . N X F  R X:1 Q:$ZEOF  U $P D EN^DDIOL(X) S RTN(CNT)=X,CNT=CNT+1 U CMD  ; ditto
"RTN","A1AEOS",54,0)
 . C CMD
"RTN","A1AEOS",55,0)
 S $EC=",U-M-VM-NOT-SUPPORTED,"
"RTN","A1AEOS",56,0)
 QUIT
"RTN","A1AEPB1")
0^19^B13048468
"RTN","A1AEPB1",1,0)
A1AEPB1 ; RMO,MJK/ALBANY ; Entry/Edit Problem Menu ;24 NOV 87 11:00 am
"RTN","A1AEPB1",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEPB1",3,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;11/23/92
"RTN","A1AEPB1",4,0)
 G:$D(^DOPT("A1AEPB1",5)) A S ^DOPT("A1AEPB1",0)="Entry/Edit Problem Menu Option^1N^" F I=1:1 S X=$T(@I) Q:X=""  S ^DOPT("A1AEPB1",I,0)=$P(X,";;",2,99)
"RTN","A1AEPB1",5,0)
 S DIK="^DOPT(""A1AEPB1""," D IXALL^DIK
"RTN","A1AEPB1",6,0)
A W !! S DIC="^DOPT(""A1AEPB1"",",DIC(0)="AEQM" D ^DIC Q:Y<0  D @+Y G A
"RTN","A1AEPB1",7,0)
 ;
"RTN","A1AEPB1",8,0)
1 ;;Add a New Problem
"RTN","A1AEPB1",9,0)
 S A1AEFL=11006,A1AETY="PB",DIC("S")="I $D(^A1AE(11007,+Y,A1AETY,DUZ,0))" D PKG^A1AEUTL G Q:'($D(A1AEPK)&$D(A1AEVR)) D NUM^A1AEUTL G Q:'$D(A1AEPD)
"RTN","A1AEPB1",10,0)
 W !!,"Adding Problem: ",A1AEPD,! S $P(^A1AE(A1AEFL,DA,0),"^",8)=DUZ,$P(^(0),"^",9)=DT,$P(^(0),"^",10)="n",DIE="^A1AE(A1AEFL,",DR="[A1AE ADD/EDIT PROBLEMS]" D ^DIE
"RTN","A1AEPB1",11,0)
 G Q
"RTN","A1AEPB1",12,0)
 ;
"RTN","A1AEPB1",13,0)
2 ;;Delete an Existing Problem
"RTN","A1AEPB1",14,0)
 S A1AEFL=11006,DIC("A")="Select PROBLEM: ",DIC("S")="I $P(^(0),U,8)=DUZ,($P(^(0),U,10)=""c""!($P(^(0),U,10)=""n""))",DIC="^A1AE(A1AEFL,",DIC(0)="AEMQ" W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S DA=+Y,A1AEPD=$P(Y,U,2)
"RTN","A1AEPB1",15,0)
PMT2 W !!,"Are you sure you want to delete problem "_A1AEPD_"? N// " R X:DTIME G Q:'$T!(X="^")!("Nn"[$E(X,1)) G DEL2:"Yy"[$E(X,1) W:X'["?" *7 W !!,"Enter Y to delete the selected problem, or N to exit." G PMT2
"RTN","A1AEPB1",16,0)
DEL2 S DIK="^A1AE(A1AEFL," D ^DIK W !!?3,"...deletion of "_A1AEPD_" from 'Problem File completed"
"RTN","A1AEPB1",17,0)
 G Q
"RTN","A1AEPB1",18,0)
 ;
"RTN","A1AEPB1",19,0)
3 ;;Edit an Existing Problem
"RTN","A1AEPB1",20,0)
 S A1AEFL=11006,DIC("A")="Select PROBLEM: ",DIC("S")="I $P(^(0),U,8)=DUZ,($P(^(0),U,10)=""c""!($P(^(0),U,10)=""n""))",DIC="^A1AE(A1AEFL,",DIC(0)="AEQM" W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S DA=+Y,A1AEPD=$P(Y,U,2)
"RTN","A1AEPB1",21,0)
 W !!,"Editing Problem: ",A1AEPD,! S DIE="^A1AE(A1AEFL,",DR="[A1AE ADD/EDIT PROBLEMS]" D ^DIE
"RTN","A1AEPB1",22,0)
 G Q
"RTN","A1AEPB1",23,0)
 ;
"RTN","A1AEPB1",24,0)
4 ;;Resolve/Review an Existing Problem
"RTN","A1AEPB1",25,0)
 S A1AEFL=11006,DIC("A")="Select PROBLEM: ",DIC("S")="I $P(^(0),U,10)'=""n"",$D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0))",DIC="^A1AE(A1AEFL,",DIC(0)="AEMQ" W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S A1AEIFN=+Y,A1AEPD=$P(Y,U,2)
"RTN","A1AEPB1",26,0)
 W ! S L=0,DIC="^A1AE(A1AEFL,",FLDS="[A1AE PROBLEM DETAILS]",BY="@.01",FR=A1AEPD,TO=A1AEPD S IOP="HOME" D EN1^DIP K FLDS,BY,L,FR,TO,IOP
"RTN","A1AEPB1",27,0)
 R !!,"Do you want to Change the Status of this Problem? N// ",X:DTIME G Q:'$T!(X="^")!("Nn"[$E(X,1)) S DA=A1AEIFN,DIE="^A1AE(A1AEFL,",DR="[A1AE CHANGE PROBLEM STATUS]" D ^DIE
"RTN","A1AEPB1",28,0)
 ;
"RTN","A1AEPB1",29,0)
Q K A1AEIFN,A1AEPKIF,A1AEPKNM,A1AEONE,A1AEPD,A1AEPK,A1AEVR,A1AENB,A1AEFL,A1AETY
"RTN","A1AEPH1")
0^22^B33099177
"RTN","A1AEPH1",1,0)
A1AEPH1 ; RMO,MJK/ALBANY - Patch control ;2014-03-28  5:34 PM
"RTN","A1AEPH1",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEPH1",3,0)
 G:$D(^DOPT("A1AEPH1",5)) A S ^DOPT("A1AEPH1",0)="Entry/Edit Patch Menu Option^1N^" F I=1:1 S X=$T(@I) Q:X=""  S ^DOPT("A1AEPH1",I,0)=$P(X,";;",2,99)
"RTN","A1AEPH1",4,0)
 S DIK="^DOPT(""A1AEPH1""," D IXALL^DIK
"RTN","A1AEPH1",5,0)
A W !! S DIC="^DOPT(""A1AEPH1"",",DIC(0)="AEMQ" D ^DIC Q:Y<0  D @+Y G A
"RTN","A1AEPH1",6,0)
 ;
"RTN","A1AEPH1",7,0)
1 ;;Add a Patch
"RTN","A1AEPH1",8,0)
 S A1AEFL=11005,A1AETY="PH",DIC("S")="I $D(^A1AE(11007,+Y,A1AETY,DUZ,0))" D PKG^A1AEUTL G Q:'$D(A1AEPK) S A1AE(0)="AEQL" D VER^A1AEUTL G Q:'$D(A1AEVR) D NUM^A1AEUTL G Q:'$D(A1AEPD)
"RTN","A1AEPH1",9,0)
 S $P(A1AEPD,"*",2)=$S($P(A1AEPD,"*",2)=999:"DBA",1:$P(A1AEPD,"*",2))
"RTN","A1AEPH1",10,0)
 W !!,"Patch Added: ",A1AEPD,! S $P(^A1AE(11005,DA,0),"^",8)="u",$P(^(0),"^",9)=DUZ,$P(^(0),"^",12)=DT,^A1AE(11005,"AS",A1AEPKIF,A1AEVR,"u",A1AENB,DA)=""
"RTN","A1AEPH1",11,0)
 S DIE="^A1AE(11005," I $P(A1AEPD,"*",2)="DBA" S DR="6.5///db" D ^DIE K DE,DQ,DR
"RTN","A1AEPH1",12,0)
 ;
"RTN","A1AEPH1",13,0)
 S (X,DINUM)=DA,DIC="^A1AE(11005.1,",DIC("DR")="20///"_"No routines included" K DD,DO D FILE^DICN K DE,DQ,DR,DIC("DR")
"RTN","A1AEPH1",14,0)
 ;
"RTN","A1AEPH1",15,0)
 S DR="[A1AE ADD/EDIT PATCHES]" D ^DIE K DQ,DE,DIE
"RTN","A1AEPH1",16,0)
 D Q G 1
"RTN","A1AEPH1",17,0)
 ;
"RTN","A1AEPH1",18,0)
2 ;;Delete an Unverified Patch
"RTN","A1AEPH1",19,0)
 S DIC("A")="Select PATCH: ",DIC("S")="I ($P(^(0),U,8)=""u""!($P(^(0),U,8)=""c"")),$D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0))",DIC="^A1AE(11005,",DIC(0)="AEMQZ" W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S DA=+Y,A1AEPD=$P(Y,U,2),A1AE0=Y(0)
"RTN","A1AEPH1",20,0)
 S $P(A1AEPD,"*",2)=$S($P(A1AEPD,"*",2)=999:"DBA",1:$P(A1AEPD,"*",2))
"RTN","A1AEPH1",21,0)
PMT2 W !!,"Are you sure you want to delete patch "_A1AEPD_"? N// " R X:DTIME G Q:'$T!(X="^")!("Nn"[$E(X,1)) G DEL2:"Yy"[$E(X,1) W:X'["?" *7 W !!,"Enter Y to delete the selected patch, or N to exit." G PMT2
"RTN","A1AEPH1",22,0)
DEL2 S DIK="^A1AE(11005," D ^DIK W !!?3,"...deletion of "_A1AEPD_" from 'DHCP Patch File' completed"
"RTN","A1AEPH1",23,0)
 L +^A1AE(11007,$P(A1AE0,"^",2),"V",$P(A1AE0,"^",3),"PH"):60
"RTN","A1AEPH1",24,0)
 I $D(^A1AE(11007,$P(A1AE0,"^",2),"V",$P(A1AE0,"^",3),"PH")) S:$P(A1AE0,"^",4)<^("PH") ^("PH")=$P(A1AE0,"^",4)
"RTN","A1AEPH1",25,0)
 L -^A1AE(11007,$P(A1AE0,"^",2),"V",$P(A1AE0,"^",3),"PH")
"RTN","A1AEPH1",26,0)
 ;delete message entry
"RTN","A1AEPH1",27,0)
 S DIK="^A1AE(11005.1," D ^DIK
"RTN","A1AEPH1",28,0)
 G Q
"RTN","A1AEPH1",29,0)
 ;
"RTN","A1AEPH1",30,0)
3 ;;Edit a Patch
"RTN","A1AEPH1",31,0)
 N A1AESTOP
"RTN","A1AEPH1",32,0)
 S A1AESTOP=0
"RTN","A1AEPH1",33,0)
 F  D  D Q Q:A1AESTOP
"RTN","A1AEPH1",34,0)
 . N DIC,X,Y,DA,A1AEPD
"RTN","A1AEPH1",35,0)
 . S DIC("A")="Select PATCH: "
"RTN","A1AEPH1",36,0)
 . S DIC("S")="I $D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0))"
"RTN","A1AEPH1",37,0)
 . S DIC="^A1AE(11005,",DIC(0)="AEMQ"
"RTN","A1AEPH1",38,0)
 . W !
"RTN","A1AEPH1",39,0)
 . D ^DIC I Y<0 S A1AESTOP=1 Q
"RTN","A1AEPH1",40,0)
 . S DA=+Y,A1AEPD=$P(Y,U,2) K DIC
"RTN","A1AEPH1",41,0)
 . I $P(A1AEPD,"*",2)=999 S $P(A1AEPD,"*",2)="DBA"
"RTN","A1AEPH1",42,0)
 . I '$D(^A1AE(11005.1,DA,0)) D
"RTN","A1AEPH1",43,0)
 . . N DINUM,DD,DO,DIC
"RTN","A1AEPH1",44,0)
 . . S (X,DINUM)=DA,DIC(0)="LE",DIC="^A1AE(11005.1,"
"RTN","A1AEPH1",45,0)
 . . S DIC("DR")="20///No routines included"
"RTN","A1AEPH1",46,0)
 . . D FILE^DICN
"RTN","A1AEPH1",47,0)
 . W !!,"Editing Patch: ",A1AEPD,!
"RTN","A1AEPH1",48,0)
 . L +^A1AE(11005,DA):5 E  D  Q
"RTN","A1AEPH1",49,0)
 . . W !,$C(7),"This patch is being edited by another user" H 3
"RTN","A1AEPH1",50,0)
 . N A1AEOLD
"RTN","A1AEPH1",51,0)
 . S A1AEOLD=$P($G(^A1AE(11005,DA,0)),U,8)
"RTN","A1AEPH1",52,0)
 . D
"RTN","A1AEPH1",53,0)
 . . N A1AEOLD,DIE,DR ; Preserve A1AEOLD.  It's killed in Q^A1AEPHS
"RTN","A1AEPH1",54,0)
 . . S DIE="^A1AE(11005,",DR="[A1AE ADD/EDIT PATCHES]"
"RTN","A1AEPH1",55,0)
 . . D ^DIE
"RTN","A1AEPH1",56,0)
 . N A1AE0,A1AENEW
"RTN","A1AEPH1",57,0)
 . S A1AE0=$G(^A1AE(11005,DA,0))
"RTN","A1AEPH1",58,0)
 . L -^A1AE(11005,DA)
"RTN","A1AEPH1",59,0)
 . S A1AENEW=$P(A1AE0,U,8)
"RTN","A1AEPH1",60,0)
 . I A1AEOLD'="v"!(A1AENEW'="e") Q
"RTN","A1AEPH1",61,0)
 . ; Send the 'Entered in Error' bulletin
"RTN","A1AEPH1",62,0)
 . N A1AETX,X,A1AEOPT
"RTN","A1AEPH1",63,0)
 . S A1AEOPT="'Entered in Error'"
"RTN","A1AEPH1",64,0)
 . S X=$$GET1^DIQ(11005,DA_",",8.5,"Z","A1AETX")
"RTN","A1AEPH1",65,0)
 . S A1AETX(.1,0)=""
"RTN","A1AEPH1",66,0)
 . S A1AETX(.2,0)="Entered in Error Description:"
"RTN","A1AEPH1",67,0)
 . D BOTH^A1AEPHS
"RTN","A1AEPH1",68,0)
 Q
"RTN","A1AEPH1",69,0)
 ;
"RTN","A1AEPH1",70,0)
4 ;;Verify a Patch
"RTN","A1AEPH1",71,0)
 K A1AEPKV
"RTN","A1AEPH1",72,0)
 S DIC("A")="Select PATCH: ",DIC("S")="I $P(^(0),U,8)=""c"",$D(^A1AE(11007,+$P(^(0),U,2),""PB"",DUZ,0)),$P(^(0),U,2)=""V""",DIC="^A1AE(11005,",DIC(0)="AEMQZ" W ! D ^DIC K DIC G Q:Y<0 S (A1AEIFN,DA)=+Y,A1AEPD=$P(Y,U,2)
"RTN","A1AEPH1",73,0)
 I $L($P($G(^A1AE(11005,DA,4)),U,1)) W !,"This is a Package Release, You need to use the Package Release option." D Q G 4
"RTN","A1AEPH1",74,0)
 S $P(A1AEPD,"*",2)=$S($P(A1AEPD,"*",2)=999:"DBA",1:$P(A1AEPD,"*",2))
"RTN","A1AEPH1",75,0)
 ;
"RTN","A1AEPH1",76,0)
 S Y=$P(Y(0),"^",17) I Y,Y>DT W !!,"Do not release until: " D DT^DIQ
"RTN","A1AEPH1",77,0)
 S A1AEST=$S($P(Y(0),U,7)="e":2,1:31) ;get status
"RTN","A1AEPH1",78,0)
 ;
"RTN","A1AEPH1",79,0)
 W !!,"Internal Comments to developers/releasers for: ",A1AEPD,! K Y S DIE="^A1AE(11005,",DR="16;" D ^DIE K DQ,DE,DIE,DIC,DR,D0,DA
"RTN","A1AEPH1",80,0)
 W ! S DIR(0)="Y",DIR("B")="No",DIR("A")="Continue and Display Patch " D ^DIR K DIR I 'Y D Q G 4
"RTN","A1AEPH1",81,0)
 ;check routine patches
"RTN","A1AEPH1",82,0)
 F AX=0:0 S AX=$O(^A1AE(11005,A1AEIFN,"P",AX)) Q:'AX  I $D(^(AX,0)) S X=^(0) D RCHK^A1AEM2
"RTN","A1AEPH1",83,0)
 W ! S DIR(0)="E" D ^DIR K DIR I 'Y D Q G 4
"RTN","A1AEPH1",84,0)
 ;
"RTN","A1AEPH1",85,0)
 S D0=A1AEIFN,A1AEVPR="",A1AEHD="DHCP Completed/NotReleased Patch Display"
"RTN","A1AEPH1",86,0)
 W ! S %ZIS="",A1AEPGE=0 D ^%ZIS G Q:POP K IOP,%ZIS U IO S ^UTILITY($J,1)="D HD^A1AEPH2",DIWF="B4X" K ^UTILITY($J,"W"),DXS D HD^A1AEPH2,^A1AEP ;SO DI*22*152
"RTN","A1AEPH1",87,0)
 K DN,DXS,DIWF ;;; I A1AEOUT'["^" B  G Q
"RTN","A1AEPH1",88,0)
 K A1AEHD,A1AELNE,A1AEOUT,A1AEPGE,A1AEVPR D CLOSE^A1AEUTL1
"RTN","A1AEPH1",89,0)
 ;S X2=A1AEST,X1=DT D C^%DTC S Y=X D DD^%DT S A1AEST=Y
"RTN","A1AEPH1",90,0)
 S X=$$FMADD^XLFDT(DT,A1AEST),A1AEST=$$FMTE^XLFDT(X) ;Get Compliance date
"RTN","A1AEPH1",91,0)
 W !!,"Releasing Patch: ",A1AEPD,! K Y S DA=A1AEIFN,DIE="^A1AE(11005,",DR="18//^S X=A1AEST;8;S Y=$S(X=""e"":""@10"",1:"""");@10;8.5" ;;;D ^DIE K DQ,DE
"RTN","A1AEPH1",92,0)
 L +@(DIE_DA_")"):5
"RTN","A1AEPH1",93,0)
 I '$T W !,$C(7),"This patch is being released by another user" H 3
"RTN","A1AEPH1",94,0)
 E  D ^DIE K DQ,DE L -@(DIE_DA_")")
"RTN","A1AEPH1",95,0)
 D Q G 4
"RTN","A1AEPH1",96,0)
 ;
"RTN","A1AEPH1",97,0)
5 ;;Copy a patch into a new patch
"RTN","A1AEPH1",98,0)
 G ^A1AEPH8
"RTN","A1AEPH1",99,0)
 ;
"RTN","A1AEPH1",100,0)
6 ;;Create a packman message
"RTN","A1AEPH1",101,0)
 G PACK^A1AEM
"RTN","A1AEPH1",102,0)
 ;
"RTN","A1AEPH1",103,0)
7 ;;Forward a Complete/unverified message
"RTN","A1AEPH1",104,0)
 G FCOM^A1AEM2
"RTN","A1AEPH1",105,0)
 ;
"RTN","A1AEPH1",106,0)
8 ;;Forward a Verified patch message
"RTN","A1AEPH1",107,0)
 G FVER^A1AEM2
"RTN","A1AEPH1",108,0)
 ;
"RTN","A1AEPH1",109,0)
Q K ^UTILITY($J,"A1AECOP"),A1AEOLPD,A1AE0,A1AEPKIF,A1AEPKNM,A1AEPD,A1AEPK,A1AEVR,A1AENB,A1AEFL,A1AETY
"RTN","A1AEPH1",110,0)
 K DIK,A1AEHD,A1AEIFN,A1AELNE,A1AEOUT,A1AEPGE,A1AEVPR
"RTN","A1AEPH1",111,0)
 K AEQ,A1AESUB,A1AETX,A1AEXMZ,A1NAM,A1NAM1,AX,AXMZ,A1AEST,A1AETVR
"RTN","A1AEPH1",112,0)
 K JL2,SAVEX,C,D0,DA,DI,DIG,DIH,DIW,DIV,DR,XMB,XMDT,XMDUZ,XMM,XMSUB Q
"RTN","A1AEPH2")
0^23^B117299389
"RTN","A1AEPH2",1,0)
A1AEPH2 ;  REW/WCIOFO,RMO,MJK/ALBANY ;2014-03-28  4:27 PM
"RTN","A1AEPH2",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEPH2",3,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;11/23/92
"RTN","A1AEPH2",4,0)
 ;
"RTN","A1AEPH2",5,0)
 G:$D(^DOPT("A1AEPH2",11)) A S ^DOPT("A1AEPH2",0)="Print Patch Menu Option^1N^" F I=1:1 S X=$T(@I) Q:X=""  S ^DOPT("A1AEPH2",I,0)=$P(X,";",2,99)
"RTN","A1AEPH2",6,0)
 S DIK="^DOPT(""A1AEPH2""," D IXALL^DIK
"RTN","A1AEPH2",7,0)
A W !! S DIC="^DOPT(""A1AEPH2"",",DIC(0)="AEMQ" D ^DIC Q:Y<0  D @+Y G A
"RTN","A1AEPH2",8,0)
 ;
"RTN","A1AEPH2",9,0)
1 ;Completed/unverified Patch Report
"RTN","A1AEPH2",10,0)
 S DIS(0)="I $P(^A1AE(11005,D0,0),U,8)=""c""",A1AEHD="Completed/NotReleased DHCP Patches Report",A1AES=""
"RTN","A1AEPH2",11,0)
 S DIC("S")="I $S($D(^A1AE(11007,+Y,""PH"",DUZ,0)):1,'$D(^A1AE(11007,+Y,""PB"",DUZ,0)):0,$P(^(0),U,2)=""V"":1,1:0)" G DIP^A1AEPH3
"RTN","A1AEPH2",12,0)
 ;
"RTN","A1AEPH2",13,0)
2 ;New Patch Report
"RTN","A1AEPH2",14,0)
 G PRTNEW^A1AEVP
"RTN","A1AEPH2",15,0)
 ;
"RTN","A1AEPH2",16,0)
3 ;Under Development Patch Report
"RTN","A1AEPH2",17,0)
 S DIS(0)="I $P(^A1AE(11005,D0,0),U,8)=""u""",A1AEHD="Under Development DHCP Patches Report",A1AES=""
"RTN","A1AEPH2",18,0)
 S DIC("S")="I $D(^A1AE(11007,+Y,""PH"",DUZ,0))" G DIP^A1AEPH3
"RTN","A1AEPH2",19,0)
 ;
"RTN","A1AEPH2",20,0)
4 ;Display a Completed/NotReleased Patch
"RTN","A1AEPH2",21,0)
 G COMDIS^A1AEPH6
"RTN","A1AEPH2",22,0)
 ;
"RTN","A1AEPH2",23,0)
5 ;Summary Report for a Package
"RTN","A1AEPH2",24,0)
 ;replace .01 sort with 3 in template
"RTN","A1AEPH2",25,0)
 N A1AEPK,A1AEPKIF,A1AEPKNM,A1AEVR,A1AEREV,X,Y,DIR,ZTSK,%ZIS,A1AEDEV
"RTN","A1AEPH2",26,0)
 D PKG^A1AEUTL G Q:'$D(A1AEPK) D VER^A1AEUTL G Q:'$D(A1AEVR)
"RTN","A1AEPH2",27,0)
 N DIC,X,Y S DIC(0)="AEMQ",DIC=11007.1,DIC("A")="Select Stream (enter to see all streams): " D ^DIC
"RTN","A1AEPH2",28,0)
 I Y>0 N A1AESTRM S A1AESTRM=+Y
"RTN","A1AEPH2",29,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Sort by reverse SEQ # "
"RTN","A1AEPH2",30,0)
 D ^DIR Q:$D(DIRUT)
"RTN","A1AEPH2",31,0)
 S A1AEREV=Y
"RTN","A1AEPH2",32,0)
 S %ZIS="QN"
"RTN","A1AEPH2",33,0)
 D ^%ZIS Q:POP
"RTN","A1AEPH2",34,0)
 S A1AEDEV=ION_";"_IOM_";"_IOSL
"RTN","A1AEPH2",35,0)
 I '$D(IO("Q")) D
"RTN","A1AEPH2",36,0)
 . D DQ5
"RTN","A1AEPH2",37,0)
 E  D
"RTN","A1AEPH2",38,0)
 . N ZTRTN,ZTSAVE,ZTDESC,ZTSK,ZTDTH,ZTIO,I
"RTN","A1AEPH2",39,0)
 . S ZTDESC="A1AE Patch Summary"
"RTN","A1AEPH2",40,0)
 . S ZTRTN="DQ5^A1AEPH2"
"RTN","A1AEPH2",41,0)
 . F I="A1AEPK","A1AEPKIF","A1AEPKNM","A1AEVR","A1AEREV","A1AEDEV" S ZTSAVE(I)=""
"RTN","A1AEPH2",42,0)
 . I $D(A1AESTAR) S ZTSAVE("A1AESTAR")=""
"RTN","A1AEPH2",43,0)
 . I $D(A1AESTRM) S ZTSAVE("A1AESTRM")=""
"RTN","A1AEPH2",44,0)
 . S ZTIO=""
"RTN","A1AEPH2",45,0)
 . D ^%ZTLOAD
"RTN","A1AEPH2",46,0)
 . K IO("Q")
"RTN","A1AEPH2",47,0)
 . I $D(ZTSK) W !,"Request queued.  Task number: ",ZTSK
"RTN","A1AEPH2",48,0)
 D HOME^%ZIS
"RTN","A1AEPH2",49,0)
 Q
"RTN","A1AEPH2",50,0)
DQ5 ;
"RTN","A1AEPH2",51,0)
 N L,DIC,FLDS,BY,TO,FR,TREV,FREV,TMP,A1AEDJDH
"RTN","A1AEPH2",52,0)
 S L=0,DIC="^A1AE(11005,"
"RTN","A1AEPH2",53,0)
 S FLDS="[A1AE VERIFIED PATCH SUMMARY]"
"RTN","A1AEPH2",54,0)
 ;
"RTN","A1AEPH2",55,0)
 I '$D(DIS(0)) S DIC("S")="I $P(^(0),U,2)=""Y""!($P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+Y))))"
"RTN","A1AEPH2",56,0)
 I $D(A1AESTRM) D  ; If we have a stream, put in DIS(0) or 1 if 0 is occupied.
"RTN","A1AEPH2",57,0)
 . N SCN S SCN="I $P(^(0),U,20)=A1AESTRM"
"RTN","A1AEPH2",58,0)
 . I $D(DIS(0)) S DIS(1)=SCN
"RTN","A1AEPH2",59,0)
 . E  S DIS(0)=SCN
"RTN","A1AEPH2",60,0)
 ;
"RTN","A1AEPH2",61,0)
 ;fix for fileman BY restriction -- can't use format BY with BY(0)
"RTN","A1AEPH2",62,0)
 S BY=$S(A1AEREV:"@INTERNAL(#3),-6",1:"@INTERNAL(#3),6")
"RTN","A1AEPH2",63,0)
 S FR="0,@",TO="99999,99999"
"RTN","A1AEPH2",64,0)
 ;use entry# of print driver for namespace
"RTN","A1AEPH2",65,0)
 S A1AEDJDH=$J_"."_$P($H,",",2) K ^TMP("A1AE5",A1AEDJDH) S TMP="" ; REW added seconds in case user tries to run a second listing before the first finishes
"RTN","A1AEPH2",66,0)
 ;
"RTN","A1AEPH2",67,0)
 ; VEN/SMH - Changed logic here for v 2.4 with new AB index
"RTN","A1AEPH2",68,0)
 ; Regular Patches
"RTN","A1AEPH2",69,0)
 N I S I=""
"RTN","A1AEPH2",70,0)
 F  S I=$O(^A1AE(11005,"AB",A1AEPK,A1AEVR,I)) Q:'I  S ^TMP("A1AE5",A1AEDJDH,$O(^(I,0)))=""
"RTN","A1AEPH2",71,0)
 ; DBA Patches (DBA = version 999)
"RTN","A1AEPH2",72,0)
 N I S I=""
"RTN","A1AEPH2",73,0)
 I A1AEPK'="XM" F  S I=$O(^A1AE(11005,"AB",A1AEPK,999,I)) Q:'I  S ^TMP("A1AE5",A1AEDJDH,$O(^(I,0)))=""
"RTN","A1AEPH2",74,0)
DIP5 ;
"RTN","A1AEPH2",75,0)
 ;I '$D(^TMP("A1AE5",A1AEDJDH)) W !?10,"No summary available" Q
"RTN","A1AEPH2",76,0)
 K FREV,TREV S BY(0)="^TMP(""A1AE5"","_A1AEDJDH_",",L(0)=1
"RTN","A1AEPH2",77,0)
 S IOP=A1AEDEV
"RTN","A1AEPH2",78,0)
 D EN1^DIP
"RTN","A1AEPH2",79,0)
 K ^TMP("A1AE5",A1AEDJDH),DIS
"RTN","A1AEPH2",80,0)
 Q
"RTN","A1AEPH2",81,0)
 ;
"RTN","A1AEPH2",82,0)
6 ;Display a Patch
"RTN","A1AEPH2",83,0)
 G PATDIS^A1AEPH6
"RTN","A1AEPH2",84,0)
 ;
"RTN","A1AEPH2",85,0)
7 ;All Verified Patches for a Package
"RTN","A1AEPH2",86,0)
 N A1AESTRM
"RTN","A1AEPH2",87,0)
 N DIC,X,Y S DIC(0)="AEMQ",DIC=11007.1,DIC("A")="Select a Stream: " D ^DIC
"RTN","A1AEPH2",88,0)
 I Y'>0 QUIT
"RTN","A1AEPH2",89,0)
 S A1AESTRM=+Y
"RTN","A1AEPH2",90,0)
 S DIS(0)="I $P(^(0),U,8)=""v"",$P(^(0),U,20)=A1AESTRM",A1AEHD="Released DHCP Patches",DIC("S")="I $P(^(0),U,2)=""Y""!($P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+Y))))" G DIP^A1AEPH3
"RTN","A1AEPH2",91,0)
 ;
"RTN","A1AEPH2",92,0)
8 ;Extended Display of a Patch
"RTN","A1AEPH2",93,0)
 G EXTDIS^A1AEPH6
"RTN","A1AEPH2",94,0)
 ;
"RTN","A1AEPH2",95,0)
9 ;Verified Patch Summary Report by Date
"RTN","A1AEPH2",96,0)
 G ^A1AEPH4
"RTN","A1AEPH2",97,0)
 ;
"RTN","A1AEPH2",98,0)
10 ;Detailed Report of Verified Patches by Date
"RTN","A1AEPH2",99,0)
 G ^A1AEPH5
"RTN","A1AEPH2",100,0)
 ;
"RTN","A1AEPH2",101,0)
11 ;Display Number of New Patches
"RTN","A1AEPH2",102,0)
 G DSPNEW^A1AEVP
"RTN","A1AEPH2",103,0)
 ;
"RTN","A1AEPH2",104,0)
12 ;Update patches as printed for a User's packages
"RTN","A1AEPH2",105,0)
 G ^A1AEVP1
"RTN","A1AEPH2",106,0)
 ;
"RTN","A1AEPH2",107,0)
13 ;Complete/unverified Summary Report for Assigned Packages
"RTN","A1AEPH2",108,0)
 W !
"RTN","A1AEPH2",109,0)
 ; VEN/SMH - Added selection fo patch stream
"RTN","A1AEPH2",110,0)
 N STRM
"RTN","A1AEPH2",111,0)
 N DIC,X,Y S DIC(0)="AEMQ",DIC=11007.1,DIC("A")="Select a Stream: " D ^DIC
"RTN","A1AEPH2",112,0)
 I Y'>0 QUIT
"RTN","A1AEPH2",113,0)
 S STRM=+Y
"RTN","A1AEPH2",114,0)
 D ^%ZIS S AIOP=IO G PKG
"RTN","A1AEPH2",115,0)
 ;
"RTN","A1AEPH2",116,0)
14 ;Summary Report (OLD 5)
"RTN","A1AEPH2",117,0)
 ;
"RTN","A1AEPH2",118,0)
PKG K AN S PKG=0
"RTN","A1AEPH2",119,0)
 F  S PKG=$O(^A1AE(11007,"AV",DUZ,PKG)) Q:'PKG  DO
"RTN","A1AEPH2",120,0)
 .I $D(^DIC(9.4,PKG,0)) S (AN(PKG),A1AEPK)=$P(^(0),"^",2) DO
"RTN","A1AEPH2",121,0)
 ..S A1AEVR=0
"RTN","A1AEPH2",122,0)
 ..F  S A1AEVR=$O(^A1AE(11007,PKG,"V",A1AEVR)) Q:'A1AEVR  DO 
"RTN","A1AEPH2",123,0)
 ...S AN(PKG,A1AEVR)=""
"RTN","A1AEPH2",124,0)
 S PKG=0
"RTN","A1AEPH2",125,0)
 F  S PKG=$O(AN(PKG)) Q:'PKG  S A1AEPK=AN(PKG) DO
"RTN","A1AEPH2",126,0)
 .S A1AEVR=0
"RTN","A1AEPH2",127,0)
 .F  S A1AEVR=$O(AN(PKG,A1AEVR)) Q:'A1AEVR  DO
"RTN","A1AEPH2",128,0)
 ..I '$D(^A1AE(11005,"AS",PKG,A1AEVR,"c")) K AN(PKG,A1AEVR) Q
"RTN","A1AEPH2",129,0)
 ..D PRT
"RTN","A1AEPH2",130,0)
 K AN G Q
"RTN","A1AEPH2",131,0)
PRT S DHD="DHCP Patch Summary Report for "_A1AEPK_"*"_A1AEVR_" Complete/NotReleased Patches",FLDS="[A1AE VERIFIED PATCH SUMMARY]",L=0,DIC="^A1AE(11005,",BY(0)="^A1AE(11005,""AB"",",A1AEPGE=1,L(0)=4
"RTN","A1AEPH2",132,0)
 S DIS(0)="I $P(^A1AE(11005,D0,0),""^"",3)=A1AEVR!($P(^(0),""^"",3)=999)&($P(^A1AE(11005,D0,0),""^"",8)=""c"")"
"RTN","A1AEPH2",133,0)
 ; VEN/SMH - Now we use BY(0) on the AB index
"RTN","A1AEPH2",134,0)
 S FR(0,1)=A1AEPK
"RTN","A1AEPH2",135,0)
 S TO(0,1)=A1AEPK
"RTN","A1AEPH2",136,0)
 S FR(0,2)=A1AEVR
"RTN","A1AEPH2",137,0)
 S TO(0,2)=999
"RTN","A1AEPH2",138,0)
 S FR(0,3)=STRM-1
"RTN","A1AEPH2",139,0)
 S TO(0,3)=STRM+998
"RTN","A1AEPH2",140,0)
 ; VEN/SMH - Old code
"RTN","A1AEPH2",141,0)
 ; S TO=A1AEPK_"*"_A1AEVR_"*"
"RTN","A1AEPH2",142,0)
 ; S FR=TO_"  1"
"RTN","A1AEPH2",143,0)
 ; S TO=$P(TO,"*")_"*"_999_"*"_999
"RTN","A1AEPH2",144,0)
 S IOP=AIOP,AY=$Y D EN1^DIP S A1AEPGE=A1AEPGE+1
"RTN","A1AEPH2",145,0)
 I A1AEPGE,$E(IOST,1)="C",AY'=$Y W *7 R A1AEOUT:DTIME I A1AEOUT["^" K AN Q
"RTN","A1AEPH2",146,0)
 S AY=$Y
"RTN","A1AEPH2",147,0)
 Q
"RTN","A1AEPH2",148,0)
 ;
"RTN","A1AEPH2",149,0)
HD ; Print Patch Header lines
"RTN","A1AEPH2",150,0)
 S:'$D(A1AEPGE) A1AEPGE=0
"RTN","A1AEPH2",151,0)
 S:'$D(A1AEOUT) A1AEOUT=""
"RTN","A1AEPH2",152,0)
 D CRCHK Q:A1AEOUT["^"
"RTN","A1AEPH2",153,0)
 W @IOF,$S($D(A1AEHD):A1AEHD,1:"Patch Details")
"RTN","A1AEPH2",154,0)
 N A1AELNE
"RTN","A1AEPH2",155,0)
 S $P(A1AELNE,"=",78)=""
"RTN","A1AEPH2",156,0)
 S A1AEPGE=A1AEPGE+1
"RTN","A1AEPH2",157,0)
 W:$X>68 ! W ?70,"Page: ",A1AEPGE,!,A1AELNE
"RTN","A1AEPH2",158,0)
 Q:'$D(D0)
"RTN","A1AEPH2",159,0)
 S A1AE0=$S($D(^A1AE(11005,D0,0)):^(0),1:"")
"RTN","A1AEPH2",160,0)
 S A1AED1=$P(A1AE0,"^")
"RTN","A1AEPH2",161,0)
 W !,"Run Date: " S Y=DT D DT^DIQ
"RTN","A1AEPH2",162,0)
 ;
"RTN","A1AEPH2",163,0)
 N STRMABBR S STRMABBR=$$STRMABBR(D0)
"RTN","A1AEPH2",164,0)
 I $L(STRMABBR) W ?24,"Stream: ",STRMABBR
"RTN","A1AEPH2",165,0)
 ;
"RTN","A1AEPH2",166,0)
 W ?44,"Designation: ",$P(A1AED1,"*")_"*"_$S($P(A1AED1,"*",2)=999:"DBA",1:$P(A1AED1,"*",2))_"*"_$P(A1AED1,"*",3)
"RTN","A1AEPH2",167,0)
 S NOTE=$P(A1AE0,"^",8)
"RTN","A1AEPH2",168,0)
 W:NOTE="u" "  TEST v"_$P($G(^A1AE(11005.1,D0,0)),U,12)
"RTN","A1AEPH2",169,0)
 S P=$P(A1AE0,"^",2)
"RTN","A1AEPH2",170,0)
 W !,"Package : ",$P($G(^DIC(9.4,+P,0)),"^"),?44,"Priority   : ",$P($P(^DD(11005,7,0),$P(^A1AE(11005,D0,0),"^",7)_":",2),";",1)
"RTN","A1AEPH2",171,0)
 ;
"RTN","A1AEPH2",172,0)
 ;This uses the DD status
"RTN","A1AEPH2",173,0)
 ;W !,"Version : ",$S($P(A1AE0,"^",3)=999:"DBA",1:$P(A1AE0,"^",3))," ",$S($P(A1AE0,"^",6):"SEQ #"_$P(A1AE0,"^",6),1:""),?44,"Status     : ",$P($P(^DD(11005,8,0),$P(^A1AE(11005,D0,0),"^",8)_":",2),";",1),!,A1AELNE,! K A1AE0,A1AED1,SEQT
"RTN","A1AEPH2",174,0)
 W !,"Version : ",$S($P(A1AE0,"^",3)=999:"DBA",1:$P(A1AE0,"^",3))," ",$S($P(A1AE0,"^",6):"SEQ #"_$P(A1AE0,"^",6),1:""),?44,"Status     : "
"RTN","A1AEPH2",175,0)
 W $$STATUS2E(NOTE)
"RTN","A1AEPH2",176,0)
 S Y=$P(A1AE0,"^",18) I +Y>0 W !,?25,"Compliance Date: " D DT^DIQ
"RTN","A1AEPH2",177,0)
 W !,A1AELNE,! K A1AE0,A1AED1,SEQT,NOTE
"RTN","A1AEPH2",178,0)
 Q
"RTN","A1AEPH2",179,0)
 ;
"RTN","A1AEPH2",180,0)
STRMABBR(D0) ; $$ Protected. Get Stream Abbreviation
"RTN","A1AEPH2",181,0)
 N STRM S STRM=$P(^A1AE(11005,D0,0),U,20) ; Patch Stream Pointer
"RTN","A1AEPH2",182,0)
 I 'STRM QUIT ""                          ; No stream filled out. Quit.
"RTN","A1AEPH2",183,0)
 I '$D(^A1AE(11007.1,STRM)) QUIT ""       ; Broken pointer
"RTN","A1AEPH2",184,0)
 ;
"RTN","A1AEPH2",185,0)
 ; Is there more than one stream in this instance of the patch module?
"RTN","A1AEPH2",186,0)
 N %1 S %1=$O(^A1AE(11007.1,0))  ; first entry
"RTN","A1AEPH2",187,0)
 I '%1 QUIT ""                   ; This should never happen
"RTN","A1AEPH2",188,0)
 N %2 S %2=$O(^A1AE(11007.1,%1)) ; second entry
"RTN","A1AEPH2",189,0)
 I '%2 QUIT ""                   ; No second entry
"RTN","A1AEPH2",190,0)
 ;
"RTN","A1AEPH2",191,0)
 ; Now grab the stream abbreviation
"RTN","A1AEPH2",192,0)
 Q $$GET1^DIQ(11007.1,STRM,"ABBREVIATION")
"RTN","A1AEPH2",193,0)
 ;
"RTN","A1AEPH2",194,0)
STATUS2E(ABBR) ; [PROTECTED] - $$; Status display to the outside world
"RTN","A1AEPH2",195,0)
 N A
"RTN","A1AEPH2",196,0)
  S A("v")="Released"
"RTN","A1AEPH2",197,0)
  S A("c")="Completed/NotReleased"
"RTN","A1AEPH2",198,0)
  S A("e")="Entered in Error"
"RTN","A1AEPH2",199,0)
  S A("u")="Under Development"
"RTN","A1AEPH2",200,0)
  S A("r")="Retired"
"RTN","A1AEPH2",201,0)
  S A("x")="Cancelled"
"RTN","A1AEPH2",202,0)
 S A("i2")="In Review"
"RTN","A1AEPH2",203,0)
 S A("d2")="Sec Development"
"RTN","A1AEPH2",204,0)
 S A("s2")="Sec Completion"
"RTN","A1AEPH2",205,0)
 S A("r2")="Sec Release"
"RTN","A1AEPH2",206,0)
 S A("n2")="Not for Sec Release"
"RTN","A1AEPH2",207,0)
 I $D(A(ABBR)) Q A(ABBR)
"RTN","A1AEPH2",208,0)
 Q ""
"RTN","A1AEPH2",209,0)
 ;
"RTN","A1AEPH2",210,0)
LASTDATE(DA) ; [PROTECTED] - $$ What is the last action status date (Internal)?
"RTN","A1AEPH2",211,0)
 ; Caller: A1AE VERIFIED PATCH SUMMARY
"RTN","A1AEPH2",212,0)
 ; Set up Array for fields that actually contain the status date
"RTN","A1AEPH2",213,0)
 N A D DTARR(.A)
"RTN","A1AEPH2",214,0)
 ;
"RTN","A1AEPH2",215,0)
 ; Get status, and then date for that status.
"RTN","A1AEPH2",216,0)
 N ST S ST=$P(^A1AE(11005,DA,0),U,8)
"RTN","A1AEPH2",217,0)
 I ST="" Q ""
"RTN","A1AEPH2",218,0)
 I $D(A(ST)) Q $$GET1^DIQ(11005,DA,A(ST),"I")
"RTN","A1AEPH2",219,0)
 Q ""
"RTN","A1AEPH2",220,0)
 ;
"RTN","A1AEPH2",221,0)
DTARR(A) ; [Private to this routine] - Date fields array 
"RTN","A1AEPH2",222,0)
 S A("v")=11
"RTN","A1AEPH2",223,0)
 S A("c")=10
"RTN","A1AEPH2",224,0)
 S A("u")=12
"RTN","A1AEPH2",225,0)
 S A("i2")=8.09
"RTN","A1AEPH2",226,0)
 S A("d2")=8.11
"RTN","A1AEPH2",227,0)
 S A("s2")=8.13
"RTN","A1AEPH2",228,0)
 S A("r2")=8.15
"RTN","A1AEPH2",229,0)
 S A("n2")=8.17
"RTN","A1AEPH2",230,0)
 QUIT
"RTN","A1AEPH2",231,0)
 ;
"RTN","A1AEPH2",232,0)
CRCHK ; Interactive Page Read only if you are on a terminal :: IOST -- "C"
"RTN","A1AEPH2",233,0)
 I A1AEPGE,$E(IOST,1)="C" W !!,*7,"Press RETURN to continue or '^' to stop " R A1AEOUT:DTIME I A1AEOUT["^" S DN=0 K ^UTILITY($J,"W")
"RTN","A1AEPH2",234,0)
 Q
"RTN","A1AEPH2",235,0)
 ;
"RTN","A1AEPH2",236,0)
Q W ! K AZ,A7,A1AEVR,AIOP,DUOUT,DTOUT,^UTILITY($J),PKG,DN,D0,DXS,DIS(0),A1AES,A1AE0,A1AED1,A1AEIX,A1AEJ,A1AEOUT,A1AEN,A1AEI,A1AEAB,A1AED,A1AEHD,A1AELNE,IOP,FLDS,BY,L,FR,TO,DIS,A1AEPD
"RTN","A1AEPH2",237,0)
 K A1AEIFN,A1AESCN,A1AEVPR,A1AEPKIF,A1AEPKNM,A1AEPK,A1AETY,A1AEVPR,POP,PGM,VAR,A1AEPGE D CLOSE^A1AEUTL1 Q
"RTN","A1AEPH2",238,0)
 ;
"RTN","A1AEPH2",239,0)
UD ;UNDEVELOPMENT EP
"RTN","A1AEPH2",240,0)
 S DIS(0)="I $P(^A1AE(11005,D0,0),U,8)=""u""" G 5 ;Under development only
"RTN","A1AEPH2",241,0)
CNR ;COMPLETED/NOT RELEASED EP
"RTN","A1AEPH2",242,0)
 S DIS(0)="I $P(^A1AE(11005,D0,0),U,8)=""c""" G 5 ;Completed/Not Released only
"RTN","A1AEPH2",243,0)
 ;
"RTN","A1AEPH2",244,0)
SEC ; [PROTECTED] - Secondary Statuses Summary Report; VEN/SMH
"RTN","A1AEPH2",245,0)
 ; Used by A1AE PRTPHS SEC
"RTN","A1AEPH2",246,0)
 N A1AESTAR ; Status Array
"RTN","A1AEPH2",247,0)
 N DONE
"RTN","A1AEPH2",248,0)
 F  D  Q:$G(DONE)
"RTN","A1AEPH2",249,0)
 . N X,Y,DA,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","A1AEPH2",250,0)
 . W !,"Selected Statuses: "
"RTN","A1AEPH2",251,0)
 . I $D(A1AESTAR) S Y="" F  S Y=$O(A1AESTAR(Y)) Q:Y=""  W !,?5,Y,?10,$$EXTERNAL^DILFD(11005,8,,Y)
"RTN","A1AEPH2",252,0)
 . E  W "NONE",!
"RTN","A1AEPH2",253,0)
 . W !
"RTN","A1AEPH2",254,0)
 . S DIR("0")="SOA^i2:IN REVIEW;d2:SEC DEVELOPMENT;s2:SEC COMPLETION;r2:SEC RELEASE;n2:NOT FOR SEC RELEASE"
"RTN","A1AEPH2",255,0)
 . S DIR("A")="Select Statuses: "
"RTN","A1AEPH2",256,0)
 . D ^DIR
"RTN","A1AEPH2",257,0)
 . I '$G(DIRUT) S A1AESTAR(Y)=""
"RTN","A1AEPH2",258,0)
 . E  S DONE=1
"RTN","A1AEPH2",259,0)
 I '$D(A1AESTAR) QUIT
"RTN","A1AEPH2",260,0)
 S DIS(0)="I $D(A1AESTAR($P(^A1AE(11005,D0,0),U,8)))"
"RTN","A1AEPH2",261,0)
 G 5 ; Try try try
"RTN","A1AEPH2",262,0)
 ;
"RTN","A1AEPH2",263,0)
SECDT ; [PROTECTED] - Patches in a single Secondary Status by Date
"RTN","A1AEPH2",264,0)
 ; Called by A1AE PRT BY SEC ST BY DATE SUM
"RTN","A1AEPH2",265,0)
 N X,Y,DA,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","A1AEPH2",266,0)
 S DIR("0")="SO^i2:IN REVIEW;d2:SEC DEVELOPMENT;s2:SEC COMPLETION;r2:SEC RELEASE;n2:NOT FOR SEC RELEASE"
"RTN","A1AEPH2",267,0)
 S DIR("A")="Select Status"
"RTN","A1AEPH2",268,0)
 D ^DIR
"RTN","A1AEPH2",269,0)
 I $G(DIRUT) QUIT
"RTN","A1AEPH2",270,0)
 N A1AESTAT S A1AESTAT=Y
"RTN","A1AEPH2",271,0)
 ;
"RTN","A1AEPH2",272,0)
 ; Get date field using DTARR for selected status
"RTN","A1AEPH2",273,0)
 N A D DTARR(.A)
"RTN","A1AEPH2",274,0)
 N DTFLD S DTFLD=A(Y)
"RTN","A1AEPH2",275,0)
 K A
"RTN","A1AEPH2",276,0)
 ;
"RTN","A1AEPH2",277,0)
 ; Beg Date
"RTN","A1AEPH2",278,0)
 N %DT,X,Y S %DT="AE",%DT("A")="Beginning Date: " D ^%DT
"RTN","A1AEPH2",279,0)
 I Y<0 QUIT
"RTN","A1AEPH2",280,0)
 N A1AEBEG S A1AEBEG=Y
"RTN","A1AEPH2",281,0)
 S A1AEBEG=A1AEBEG-.000001
"RTN","A1AEPH2",282,0)
 N %DT,X,Y S %DT="AE",%DT("A")="Ending Date: " D ^%DT
"RTN","A1AEPH2",283,0)
 I Y<0 QUIT
"RTN","A1AEPH2",284,0)
 N A1AEEND S A1AEEND=Y
"RTN","A1AEPH2",285,0)
 S A1AEEND=A1AEEND+.000001
"RTN","A1AEPH2",286,0)
 ;
"RTN","A1AEPH2",287,0)
 ; Construct DIS(0)
"RTN","A1AEPH2",288,0)
 N GLND S GLND=$P(^DD(11005,DTFLD,0),U,4)
"RTN","A1AEPH2",289,0)
 N A1AEND,A1AEP S A1AEND=$P(GLND,";"),A1AEP=$P(GLND,";",2)
"RTN","A1AEPH2",290,0)
 ;
"RTN","A1AEPH2",291,0)
 ; Select Stream
"RTN","A1AEPH2",292,0)
 N A1AESTRM
"RTN","A1AEPH2",293,0)
 N DIC,X,Y S DIC(0)="AEMQ",DIC=11007.1 D ^DIC
"RTN","A1AEPH2",294,0)
 I Y<0 QUIT
"RTN","A1AEPH2",295,0)
 S A1AESTRM=+Y
"RTN","A1AEPH2",296,0)
 ;
"RTN","A1AEPH2",297,0)
 N IOP
"RTN","A1AEPH2",298,0)
 ; Select Device
"RTN","A1AEPH2",299,0)
 N %ZIS S %ZIS="QN" D ^%ZIS
"RTN","A1AEPH2",300,0)
 I $D(IO("Q")) D
"RTN","A1AEPH2",301,0)
 . N ZTRTN,ZTSAVE,ZTDESC,ZTSK,ZTDTH,ZTIO,I
"RTN","A1AEPH2",302,0)
 . S IOP=ION
"RTN","A1AEPH2",303,0)
 . S ZTDESC="Patches in a single Secondary Status by Date"
"RTN","A1AEPH2",304,0)
 . S ZTRTN="DQSECDT^A1AEPH2"
"RTN","A1AEPH2",305,0)
 . F I="A1AEND","A1AEP","A1AEBEG","A1AEEND","A1AESTRM","A1AESTAT","IOP" S ZTSAVE(I)=""
"RTN","A1AEPH2",306,0)
 . D ^%ZTLOAD
"RTN","A1AEPH2",307,0)
 . K IO("Q")
"RTN","A1AEPH2",308,0)
 . I $D(ZTSK) W !,"Request queued.  Task number: ",ZTSK
"RTN","A1AEPH2",309,0)
 E  D
"RTN","A1AEPH2",310,0)
 . S IOP=ION
"RTN","A1AEPH2",311,0)
 . D DQSECDT
"RTN","A1AEPH2",312,0)
 . D ^%ZISC
"RTN","A1AEPH2",313,0)
 QUIT
"RTN","A1AEPH2",314,0)
 ;
"RTN","A1AEPH2",315,0)
DQSECDT ; [PRIVATE] - Print Away
"RTN","A1AEPH2",316,0)
 N L,DIC,FLDS,DHD
"RTN","A1AEPH2",317,0)
 S L=0,DIC="^A1AE(11005,",FLDS="[A1AE VERIFIED PATCH SUMMARY]"
"RTN","A1AEPH2",318,0)
 N BY,FR,TO
"RTN","A1AEPH2",319,0)
 S BY="@INTERNAL(#.01)",FR="",TO=""
"RTN","A1AEPH2",320,0)
 N DIS S DIS(0)="N D S D=$P($G(^A1AE(11005,D0,A1AEND)),U,A1AEP) I D>A1AEBEG&(D<A1AEEND)"
"RTN","A1AEPH2",321,0)
 S DIS(1)="I $P(^A1AE(11005,D0,0),U,20)=A1AESTRM,$P(^(0),U,20)=A1AESTRM,$P(^(0),U,8)=A1AESTAT"
"RTN","A1AEPH2",322,0)
 S DHD="Patches in a single Secondary Status by Date"
"RTN","A1AEPH2",323,0)
 D EN1^DIP
"RTN","A1AEPH2",324,0)
 QUIT
"RTN","A1AEPH2",325,0)
 ;
"RTN","A1AEPH2",326,0)
SECDET ; [PROTECTED] - Secondary Status Detailed Report
"RTN","A1AEPH2",327,0)
 ; Called by A1AE PRTPHA SEC
"RTN","A1AEPH2",328,0)
 N X,Y,DA,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","A1AEPH2",329,0)
 S DIR("0")="SO^i2:IN REVIEW;d2:SEC DEVELOPMENT;s2:SEC COMPLETION;r2:SEC RELEASE;n2:NOT FOR SEC RELEASE"
"RTN","A1AEPH2",330,0)
 S DIR("A")="Select Status"
"RTN","A1AEPH2",331,0)
 D ^DIR
"RTN","A1AEPH2",332,0)
 I $G(DIRUT) QUIT
"RTN","A1AEPH2",333,0)
 N A1AESTAT S A1AESTAT=Y
"RTN","A1AEPH2",334,0)
 ;
"RTN","A1AEPH2",335,0)
 ; Select Stream
"RTN","A1AEPH2",336,0)
 N A1AESTRM
"RTN","A1AEPH2",337,0)
 N DIC,X,Y S DIC(0)="AEMQ",DIC=11007.1 D ^DIC
"RTN","A1AEPH2",338,0)
 I Y<0 QUIT
"RTN","A1AEPH2",339,0)
 S A1AESTRM=+Y
"RTN","A1AEPH2",340,0)
 ;
"RTN","A1AEPH2",341,0)
 S DIS(0)="I $P(^A1AE(11005,D0,0),U,8)=A1AESTAT,$P(^(0),U,20)=A1AESTRM"
"RTN","A1AEPH2",342,0)
 S DIC("S")="I $P(^(0),U,2)=""Y""!($P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+Y))))"
"RTN","A1AEPH2",343,0)
 S A1AEHD="Patches in a Secondary Status Detailed Report",A1AES=""
"RTN","A1AEPH2",344,0)
 G DIP^A1AEPH3
"RTN","A1AEPH3")
0^24^B8359714
"RTN","A1AEPH3",1,0)
A1AEPH3 ; RMO,MJK/ALBANY ;2014-03-28  4:14 PM
"RTN","A1AEPH3",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEPH3",3,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;11/23/92;Build 2
"RTN","A1AEPH3",4,0)
DIP ;
"RTN","A1AEPH3",5,0)
 S %DT="",X="T" D ^%DT S DT=Y
"RTN","A1AEPH3",6,0)
 D PKG^A1AEUTL G Q^A1AEPH2:'$D(A1AEPK) D VER^A1AEUTL G Q^A1AEPH2:'$D(A1AEVR)
"RTN","A1AEPH3",7,0)
 S A1AERD("A")="Select Sort: ",A1AERD(1)="Designation^sort by patch designation",A1AERD(2)="Category^sort by category of patch",A1AERD(3)="Priority^sort by patch priority" S:'$D(A1AES) A1AERD(4)="Status^sort by status of patch"
"RTN","A1AEPH3",8,0)
 S A1AERD("B")=1 W ! D SET^A1AERD K A1AERD S A1AEHD=A1AEHD_" (By "_X_")",X=$E(X,1) G Q^A1AEPH2:X="^"
"RTN","A1AEPH3",9,0)
 S A1AEIX=$S(X="D":"AB",1:"A"_X)
"RTN","A1AEPH3",10,0)
 S PGM="START^A1AEPH3",VAR="A1AEVR^A1AEIX^A1AEPKIF^A1AEHD"
"RTN","A1AEPH3",11,0)
 I $D(A1AESTRM) S VAR=VAR_"^A1AESTRM"
"RTN","A1AEPH3",12,0)
        I $D(A1AESTAT) S VAR=VAR_"^A1AESTAT"
"RTN","A1AEPH3",13,0)
 W !
"RTN","A1AEPH3",14,0)
 D ZIS^A1AEUTL1
"RTN","A1AEPH3",15,0)
 G Q^A1AEPH2:POP
"RTN","A1AEPH3",16,0)
START U IO G Q^A1AEPH2:'$D(^DIC(9.4,A1AEPKIF,0)) S A1AEAB=$P(^(0),"^",2),^UTILITY($J,1)="D HD^A1AEPH2",DIWF="B4X",(A1AEOUT,A1AEJ)="" K ^UTILITY($J,"W") ;SO DI*22*152
"RTN","A1AEPH3",17,0)
 G DESG:A1AEIX="AB" F A1AEVR=A1AEVR,999 F A1AEI=0:0 S A1AEJ=$O(^A1AE(11005,A1AEIX,A1AEPKIF,A1AEVR,A1AEJ)) Q:A1AEJ=""!(A1AEOUT["^")  F A1AEN=0:0 S A1AEN=$O(^A1AE(11005,A1AEIX,A1AEPKIF,A1AEVR,A1AEJ,A1AEN)) Q:'A1AEN!(A1AEOUT["^")  D PRT
"RTN","A1AEPH3",18,0)
 G Q^A1AEPH2
"RTN","A1AEPH3",19,0)
 ;
"RTN","A1AEPH3",20,0)
PRT F A1AED0=0:0 S A1AED0=$O(^A1AE(11005,A1AEIX,A1AEPKIF,A1AEVR,A1AEJ,A1AEN,A1AED0)) Q:'A1AED0!(A1AEOUT["^")  S D0=A1AED0 D PRT1
"RTN","A1AEPH3",21,0)
 Q
"RTN","A1AEPH3",22,0)
 ;
"RTN","A1AEPH3",23,0)
PRT1 I $D(^A1AE(11005,D0,0)) X DIS(0) I $T K DXS D HD^A1AEPH2 Q:A1AEOUT["^"  D ^A1AEP K DN,DXS,^UTILITY($J,"W")
"RTN","A1AEPH3",24,0)
 Q
"RTN","A1AEPH3",25,0)
DESG ; VEN/SMH - Print by designation
"RTN","A1AEPH3",26,0)
 F A1AEVR=A1AEVR,999 D
"RTN","A1AEPH3",27,0)
        . N A1AENB S A1AENB="" ; Patch number
"RTN","A1AEPH3",28,0)
        . F  S A1AENB=$O(^A1AE(11005,"AB",A1AEPK,A1AEVR,A1AENB)) Q:'A1AENB  S D0=+$O(^(A1AENB,0)) D PRT1 Q:A1AEOUT["^"
"RTN","A1AEPH3",29,0)
 G Q^A1AEPH2
"RTN","A1AEPH4")
0^25^B13752635
"RTN","A1AEPH4",1,0)
A1AEPH4 ;RMO/ALBANY ;2014-03-27  4:30 PM;24 NOV 87 11:00 am
"RTN","A1AEPH4",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEPH4",3,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;11/23/92
"RTN","A1AEPH4",4,0)
 S %DT="",X="T" D ^%DT S DT=Y D PKGPMT^A1AEVP G Q:X["^"!($D(A1AENOSL)) D DATE^A1AEUTL1 G Q:'$D(BEGDATE)!('$D(ENDDATE)) S BEGDATE=9999999-BEGDATE,ENDDATE=9999999-ENDDATE
"RTN","A1AEPH4",5,0)
        N A1AESTRM
"RTN","A1AEPH4",6,0)
        N DIC,X,Y S DIC(0)="AEMQ",DIC=11007.1,DIC("A")="Select a Stream: " D ^DIC
"RTN","A1AEPH4",7,0)
        I Y'>0 QUIT
"RTN","A1AEPH4",8,0)
        S A1AESTRM=+Y
"RTN","A1AEPH4",9,0)
 S PGM="START^A1AEPH4",VAR=$S($D(A1AEPKIF):"A1AEPKIF^DUZ^BEGDATE^ENDDATE^A1AESTRM",1:"DUZ^BEGDATE^ENDDATE^A1AESTRM") W ! D ZIS^A1AEUTL1 G Q:POP
"RTN","A1AEPH4",10,0)
 ;
"RTN","A1AEPH4",11,0)
START S COUNT=0
"RTN","A1AEPH4",12,0)
 U IO K A1AEPGE,A1AELNE S A1AEHD="DHCP Summary Report of Released Patches",$P(A1AELNE,"-",78)="",Y=9999999-BEGDATE D D^DIQ S A1AEBEG=Y S Y=9999999-ENDDATE D D^DIQ S A1AEND=Y I $D(A1AEPKIF) D GETDTV G Q
"RTN","A1AEPH4",13,0)
 F A1AEPKIF=0:0 S A1AEPKIF=+$O(^A1AE(11007,"AU",DUZ,A1AEPKIF)) Q:'A1AEPKIF  I $D(^A1AE(11007,A1AEPKIF,0)) D GETDTV:$P(^(0),"^",2)="Y"!($P(^(0),"^",4)="y") Q:X["^"
"RTN","A1AEPH4",14,0)
 ;
"RTN","A1AEPH4",15,0)
Q I '$D(A1AEPGE)&$D(A1AEBEG)&$D(A1AEND) W !?3,"There were no patches released ",$S(A1AEBEG=A1AEND:"on "_A1AEBEG,1:"between "_A1AEBEG_" and "_A1AEND),"."
"RTN","A1AEPH4",16,0)
 W ! I $D(COUNT),COUNT W "-----------------",!,"# Patches Listed = "_COUNT
"RTN","A1AEPH4",17,0)
 K COUNT K A1AED0,A1AED1,A1AEPKIF,A1AEPKNM,A1AEDTV,A1AEHD,A1AEIFN,A1AEPGE,BEGDATE,ENDDATE,A1AEBEG,A1AEND,VAR,PGM,POP,A1AENOSL,A1AELNE,A1AEPK D CLOSE^A1AEUTL1 Q
"RTN","A1AEPH4",18,0)
 ;
"RTN","A1AEPH4",19,0)
GETDTV F A1AEDTV=ENDDATE-1:0 S A1AEDTV=$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV)) Q:'A1AEDTV!(BEGDATE<A1AEDTV)!(X["^")  D GETIFN
"RTN","A1AEPH4",20,0)
 Q
"RTN","A1AEPH4",21,0)
 ;
"RTN","A1AEPH4",22,0)
GETIFN F A1AEIFN=0:0 S A1AEIFN=$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV,A1AEIFN)) Q:'A1AEIFN  I $D(^A1AE(11005,A1AEIFN,0)),$P(^(0),"^",8)="v",$P(^(0),U,20)=A1AESTRM S A1AED0=^(0),A1AED1=$P(A1AED0,"^") D PRT S COUNT=COUNT+1 Q:X["^"
"RTN","A1AEPH4",23,0)
 Q
"RTN","A1AEPH4",24,0)
 ;
"RTN","A1AEPH4",25,0)
PRT D HD:($Y+6)>IOSL!('$D(A1AEPGE)) Q:X["^"  W !,$P(A1AED1,"*")_"*"_$S($P(A1AED1,"*",2)=999:"DBA",1:$P(A1AED1,"*",2))_"*"_$P(A1AED1,"*",3),?15,$J($P(A1AED0,"^",6),3),?22,$E($P(A1AED0,"^",5),1,24),?49
"RTN","A1AEPH4",26,0)
 S Y=$P(A1AED0,"^",11) D DT^DIQ W ?62,$P($P(^DD(11005,7,0),$P(A1AED0,"^",7)_":",2),";",1)
"RTN","A1AEPH4",27,0)
 S Y=$P(A1AED0,"^",17) I Y W !?38,"Hold date: " D DT^DIQ
"RTN","A1AEPH4",28,0)
 I $D(^A1AE(11005,A1AEIFN,"Q","B")) S PRINT="",D0=A1AEIFN D PCHK^A1AEUTL1 K AZ,PRINT,D0
"RTN","A1AEPH4",29,0)
 Q
"RTN","A1AEPH4",30,0)
 ;
"RTN","A1AEPH4",31,0)
HD S:'$D(A1AEPGE) A1AEPGE=0 D CRCHK Q:X["^"  W @IOF,A1AEHD,?50 S Y=DT D DT^DIQ S A1AEPGE=A1AEPGE+1 W ?70,"Page: ",A1AEPGE W !,"between ",A1AEBEG," and ",A1AEND,!
"RTN","A1AEPH4",32,0)
 W !,"Patch",?15,"SEQ #",?22,"Patch Subject",?49,"Date",?62,"Priority",!,"Designation",?49,"Released",!,A1AELNE Q
"RTN","A1AEPH4",33,0)
 ;
"RTN","A1AEPH4",34,0)
CRCHK I A1AEPGE,$E(IOST,1)="C" W !!,*7,"Press RETURN to continue or '^' to stop " R X:DTIME Q
"RTN","A1AEPH5")
0^26^B8392255
"RTN","A1AEPH5",1,0)
A1AEPH5 ;RMO/ALBANY : Detailed Report of Verified Patches by Date;22 OCT 87 11:00 am;24 NOV 87 11:00 am ;6/29/07  10:59
"RTN","A1AEPH5",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEPH5",3,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;11/23/92;Build 2
"RTN","A1AEPH5",4,0)
 S %DT="",X="T" D ^%DT S DT=Y D PKGPMT^A1AEVP G Q:X["^"!($D(A1AENOSL)) D DATE^A1AEUTL1 G Q:'$D(BEGDATE)!('$D(ENDDATE)) S BEGDATE=9999999-BEGDATE,ENDDATE=9999999-ENDDATE
"RTN","A1AEPH5",5,0)
 S PGM="START^A1AEPH5",VAR=$S($D(A1AEPKIF):"A1AEPKIF^DUZ^BEGDATE^ENDDATE",1:"DUZ^BEGDATE^ENDDATE") W ! D ZIS^A1AEUTL1 G Q:POP
"RTN","A1AEPH5",6,0)
 ;
"RTN","A1AEPH5",7,0)
START U IO K A1AEPGE,A1AELNE,^UTILITY($J,"W") S A1AEHD="DHCP Detailed Report of Released Patches",$P(A1AELNE,"-",78)="",^UTILITY($J,1)="D HD^A1AEPH2",DIWF="B4X",A1AEOUT="" ;SO DI*22*152
"RTN","A1AEPH5",8,0)
 S Y=9999999-BEGDATE D D^DIQ S A1AEBEG=Y S Y=9999999-ENDDATE D D^DIQ S A1AEND=Y I $D(A1AEPKIF) D GETDTV G Q
"RTN","A1AEPH5",9,0)
 F A1AEPKIF=0:0 S A1AEPKIF=+$O(^A1AE(11007,"AU",DUZ,A1AEPKIF)) Q:'A1AEPKIF!(A1AEOUT["^")  I $D(^A1AE(11007,A1AEPKIF,0)) D GETDTV:$P(^(0),"^",2)="Y"!($P(^(0),"^",4)="y")
"RTN","A1AEPH5",10,0)
 ;
"RTN","A1AEPH5",11,0)
Q I '$D(A1AEPGE)&$D(A1AEBEG)&$D(A1AEND) W !?3,"There were no patches released ",$S(A1AEBEG=A1AEND:"on "_A1AEBEG,1:"between "_A1AEBEG_" and "_A1AEND),"."
"RTN","A1AEPH5",12,0)
 W ! K ^UTILITY($J),DN,DXS,A1AEPKIF,A1AEPKNM,A1AEDTV,A1AEHD,A1AEOUT,A1AEIFN,A1AEPGE,BEGDATE,ENDDATE,A1AEBEG,A1AEND,VAR,PGM,POP,A1AENOSL,A1AELNE,A1AEPK D CLOSE^A1AEUTL1 Q
"RTN","A1AEPH5",13,0)
 ;
"RTN","A1AEPH5",14,0)
GETDTV F A1AEDTV=ENDDATE-1:0 S A1AEDTV=$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV)) Q:'A1AEDTV!(BEGDATE<A1AEDTV)!(A1AEOUT["^")  D GETIFN
"RTN","A1AEPH5",15,0)
 Q
"RTN","A1AEPH5",16,0)
 ;
"RTN","A1AEPH5",17,0)
GETIFN F A1AEIFN=0:0 S A1AEIFN=$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV,A1AEIFN)) Q:'A1AEIFN!(A1AEOUT["^")  I $D(^A1AE(11005,A1AEIFN,0)),$P(^(0),"^",8)="v" S D0=A1AEIFN K DXS D HD^A1AEPH2,^A1AEP K DN,DXS,^UTILITY($J,"W")
"RTN","A1AEPH5",18,0)
 Q
"RTN","A1AEPH6")
0^27^B21002501
"RTN","A1AEPH6",1,0)
A1AEPH6 ; RMO/ALBANY ;6/29/07  11:01
"RTN","A1AEPH6",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEPH6",3,0)
COMDIS ;Display a Completed/NotReleased Patch
"RTN","A1AEPH6",4,0)
 S DIC("A")="Select PATCH: ",DIC("S")="I $P(^(0),U,8)=""c"",$S($D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0)):1,'$D(^A1AE(11007,+$P(^A1AE(11005,+Y,0),U,2),""PB"",DUZ,0)):0,$P(^(0),U,2)=""V"":1,1:0)",DIC="^A1AE(11005,",DIC(0)="AEMQ"
"RTN","A1AEPH6",5,0)
 W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S (A1AEIFN,D0)=+Y,A1AEPD=$P(Y,U,2),A1AEVPR="",A1AEHD="DHCP Completed/NotReleased Patch Display"
"RTN","A1AEPH6",6,0)
 W ! S %ZIS="",A1AEPGE=0 D ^%ZIS G Q:POP K IOP,%ZIS U IO S ^UTILITY($J,1)="D HD^A1AEPH2",DIWF="B4X" K ^UTILITY($J,"W"),DXS D HD^A1AEPH2,^A1AEP K DN,DXS I $D(A1AEOUT),A1AEOUT["^" G Q ;SO DI*22*152
"RTN","A1AEPH6",7,0)
 D Q G COMDIS
"RTN","A1AEPH6",8,0)
 ;
"RTN","A1AEPH6",9,0)
PATDIS ;Display a Patch
"RTN","A1AEPH6",10,0)
 ;                  Verified      !ent.in err!retired    &
"RTN","A1AEPH6",11,0)
 S DIC("S")="I ($P(^(0),U,8)=""v""!($P(^(0),U,8)=""e"")!($P(^(0),U,8)=""r""))&($S('$D(^A1AE(11007,+$P(^(0),U,2),0)):0,$P(^(0),U,2)=""Y"":1,$P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+$P(^A1AE(11005,+Y,0),U,2)))):1,1:0))"
"RTN","A1AEPH6",12,0)
 S DIC("S")=DIC("S")_"!$D(^A1AE(11007,""AD"",DUZ,+$P(^A1AE(11005,+Y,0),U,2)))"
"RTN","A1AEPH6",13,0)
 ; ( not no 11007 record for package ! user selection permitted ! ("test site only"& user is [self]"selected" for package )
"RTN","A1AEPH6",14,0)
 S DIC("A")="Select PATCH: ",DIC="^A1AE(11005,",DIC(0)="AEMQ" W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S (A1AEIFN,D0)=+Y,A1AEPD=$P(Y,U,2),A1AEVPR="",A1AEHD="DHCP Patch Display"
"RTN","A1AEPH6",15,0)
 S $P(A1AEPD,"*",2)=$S($P(A1AEPD,"*",2)=999:"DBA",1:$P(A1AEPD,"*",2))
"RTN","A1AEPH6",16,0)
 ;I $P(^A1AE(11005,A1AEIFN,0),"^",8)="e"!($P(^(0),"^",8)="r") S DHD="@",L=0,DIC="^A1AE(11005," D SETFLDS S BY="'INTERNAL(#.01)",(FR,TO)=A1AEIFN W ! S IOP="HOME" D EN1^DIP
"RTN","A1AEPH6",17,0)
 I $P(^A1AE(11005,A1AEIFN,0),"^",8)="e"!($P(^(0),"^",8)="r") S DHD="@",L=0,DIC="^A1AE(11005," D SETFLDS S BY="",(FR,TO)=A1AEIFN W !  D EN1^DIP G Q
"RTN","A1AEPH6",18,0)
 I $P(^A1AE(11005,A1AEIFN,0),"^",8)="v"!$D(^A1AE(11007,"AD",DUZ,+$P(^A1AE(11005,+A1AEIFN,0),U,2))) W ! S %ZIS="",A1AEPGE=0 D ^%ZIS G Q:POP D  I $D(A1AEOUT),A1AEOUT["^" G Q
"RTN","A1AEPH6",19,0)
 .  K IOP,%ZIS U IO S ^UTILITY($J,1)="D HD^A1AEPH2",DIWF="B4X" K ^UTILITY($J,"W"),DXS D HD^A1AEPH2,^A1AEP K DN,DXS ;SO DI*22*152
"RTN","A1AEPH6",20,0)
 D Q G PATDIS
"RTN","A1AEPH6",21,0)
 ;
"RTN","A1AEPH6",22,0)
SETFLDS I $P(^A1AE(11005,A1AEIFN,0),"^",8)="e" S FLDS="D HD^A1AEPH2;X;"""",""Subject:"";C1;S1,5;"""",""Entered in Error Description:"";C1;S1,8.5;C1;S1;"""""
"RTN","A1AEPH6",23,0)
 I $P(^A1AE(11005,A1AEIFN,0),"^",8)="r" S FLDS="D HD^A1AEPH2;X;"""",""Subject:"";C1;S1,5;"""",""Description:"";C1;S1,5.5;C1;S1;"""",""Retired After Version:"";C1;S1,15;"""",""Retirement Comments:"";C1;S1,15.5;C1;S1;"""""
"RTN","A1AEPH6",24,0)
 Q
"RTN","A1AEPH6",25,0)
 ;
"RTN","A1AEPH6",26,0)
EXTDIS ;Extended Display of a Patch
"RTN","A1AEPH6",27,0)
 S DIC("A")="Select PATCH: ",DIC("S")="I $D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0))",DIC="^A1AE(11005,",DIC(0)="AEMQ" W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S (DA,A1AEIFN)=+Y D USRPMT G Q:X="^"
"RTN","A1AEPH6",28,0)
 D Q G EXTDIS
"RTN","A1AEPH6",29,0)
 ;
"RTN","A1AEPH6",30,0)
USRPMT ;Developer can display when a select user printed a patch, or the
"RTN","A1AEPH6",31,0)
 ;entire patch including all users who printed it.
"RTN","A1AEPH6",32,0)
 S A1AERD("A")="Do you want to know when a specific user printed this patch? ",A1AERD(0)="S",A1AERD(1)="Yes^print when a specific user saw this patch",A1AERD(2)="No^print patch details WITHOUT selected users",A1AERD("B")=2 ; << REW
"RTN","A1AEPH6",33,0)
 W ! D SET^A1AERD K A1AERD Q:X="^"  G USR:"Y"[$E(X,1) I "N"[$E(X,1) S DR="0;C;D;E;P" W ! D EN^DIQ ; ;2 deleted to remove who/when info.  <<  REW
"RTN","A1AEPH6",34,0)
 Q
"RTN","A1AEPH6",35,0)
 ;
"RTN","A1AEPH6",36,0)
USR S DIC="^VA(200,",DIC(0)="AEMQ" W ! D ^DIC Q:Y<0  S A1AEDUZ=+Y
"RTN","A1AEPH6",37,0)
 I $D(^A1AE(11005,A1AEIFN,2,A1AEDUZ,0)) W !!?3,"Printed patch initially on " S Y=$P(^(0),"^",2) D DT^DIQ I $P(^(0),"^",2)'=$P(^(0),"^",3) W " and last on " S Y=$P(^(0),"^",3) D DT^DIQ
"RTN","A1AEPH6",38,0)
 W:'$D(^A1AE(11005,A1AEIFN,2,A1AEDUZ,0)) !!?3,"Never printed patch" K A1AEDUZ G USR
"RTN","A1AEPH6",39,0)
 ;
"RTN","A1AEPH6",40,0)
Q W ! K ^UTILITY($J),DN,D0,DXS,DIS(0),A1AEOUT,A1AES,A1AED0,A1AEIX,A1AEJ,A1AEN,A1AEI,A1AEAB,A1AED,A1AEHD,A1AELNE,IOP,FLDS,BY,L,FR,TO,DIS,A1AEPD
"RTN","A1AEPH6",41,0)
 K A1AEIFN,A1AESCN,A1AEVPR,A1AEPKIF,A1AEPKNM,A1AEPK,A1AEVR,A1AETY,A1AEVPR,POP,PGM,VAR,A1AEPGE D CLOSE^A1AEUTL1 Q
"RTN","A1AEPH6",42,0)
 ;
"RTN","A1AEPH6",43,0)
       
"RTN","A1AEPH8")
0^29^B13651595
"RTN","A1AEPH8",1,0)
A1AEPH8 ; RMO/ALBANY ; Copy a Patch into a New Patch ;24 NOV 87 11:00 am
"RTN","A1AEPH8",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEPH8",3,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;11/23/92
"RTN","A1AEPH8",4,0)
 ;added logic to copy 11005.1 if present, PCOPY
"RTN","A1AEPH8",5,0)
COPY S DIC("A")="Select PATCH TO COPY: ",DIC("S")="I $D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0))",DIC="^A1AE(11005,",DIC(0)="AEMQZ" W ! D ^DIC K DIC("A"),DIC("S") Q:Y<0  S A1AEIFN=+Y,A1AEOLPD=$P(Y(0),"^",1),A1AEPKIF=$P(Y(0),"^",2)
"RTN","A1AEPH8",6,0)
 K A1AEVR I $P(A1AEOLPD,"*",2)=999 S $P(A1AEOLPD,"*",2)="DBA",A1AEVR=999
"RTN","A1AEPH8",7,0)
 S A1AERD("A")="Do you want to copy patch "_A1AEOLPD_"? ",A1AERD(0)="S",A1AERD(1)="Yes^copy "_A1AEOLPD_" patch information",A1AERD(2)="No^not copy patch information",A1AERD("B")=2 D SET^A1AERD K A1AERD G Q:X="^",COPY:"N"[$E(X,1)
"RTN","A1AEPH8",8,0)
 I $D(^DIC(9.4,A1AEPKIF,0)) S A1AEPKNM=$P(^(0),"^",1),A1AEPK=$P(^(0),"^",2)
"RTN","A1AEPH8",9,0)
 K ^UTILITY($J,"A1AECOP") S %X="^A1AE(11005,A1AEIFN,",%Y="^UTILITY($J,""A1AECOP""," W !!?3,"...copying ",A1AEOLPD," patch into utility global" D %XY^%RCR
"RTN","A1AEPH8",10,0)
NEW G Q:'$D(A1AEPK) S A1AEFL=11005,A1AETY="PH",A1AE(0)="AEQL" W !!,"Copy into a new patch for: ",A1AEPKNM,! I '$D(A1AEVR) D VER^A1AEUTL G Q:'$D(A1AEVR)
"RTN","A1AEPH8",11,0)
 I A1AEVR=999,$P(A1AEOLPD,"*",2)'="DBA" W !!?3,*7,"This version is reserved for 'DBA' type patches!" K A1AEVR G NEW
"RTN","A1AEPH8",12,0)
 D NUM^A1AEUTL G Q:'$D(A1AEPD) W !!?3,"...modifying utility global for new patch "
"RTN","A1AEPH8",13,0)
 S $P(A1AEPD,"*",2)=$S($P(A1AEPD,"*",2)=999:"DBA",1:$P(A1AEPD,"*",2))
"RTN","A1AEPH8",14,0)
 S $P(^UTILITY($J,"A1AECOP",0),"^",1,5)=$P(^A1AE(A1AEFL,DA,0),"^",1,5),$P(^UTILITY($J,"A1AECOP",0),"^",8,14)="u"_"^"_DUZ_"^^^"_DT_"^^" K ^UTILITY($J,"A1AECOP",2),^("E")
"RTN","A1AEPH8",15,0)
 ;
"RTN","A1AEPH8",16,0)
 S %X="^UTILITY($J,""A1AECOP"",",%Y="^A1AE(11005,DA," W !!?3,"...copying modified utility global into new patch ",A1AEPD D %XY^%RCR S DIK="^A1AE(11005," D IX1^DIK K DIK
"RTN","A1AEPH8",17,0)
 ;
"RTN","A1AEPH8",18,0)
PCOPY S (AXMZ,ADT)="" I $P(A1AEOLPD,"*",1,2)'=$P(A1AEPD,"*",1,2) W !!?3,*7,"...different versions!  patch MESSAGE text not copied" D FILE,ADD G Q
"RTN","A1AEPH8",19,0)
 I $D(^A1AE(11005.1,A1AEIFN,0)) S AXMZ=$P(^(0),"^",2),ADT=$P(^(0),"^",3)
"RTN","A1AEPH8",20,0)
 D FILE
"RTN","A1AEPH8",21,0)
 I $D(^A1AE(11005.1,A1AEIFN,2)) S %X="^A1AE(11005.1,A1AEIFN,2,",%Y="^A1AE(11005.1,DA,2," W !!?3,"...copying patch message" D %XY^%RCR S $P(^A1AE(11005.1,DA,2,0),U,5)=DT
"RTN","A1AEPH8",22,0)
ADD W !!,"Patch Added: ",A1AEPD,! S DIE="^A1AE(11005,",DR="[A1AE ADD/EDIT PATCHES]" D ^DIE K DQ,DE,DIE
"RTN","A1AEPH8",23,0)
 ;remove SEQ # and COMPLIANCE DATE if its there.
"RTN","A1AEPH8",24,0)
 I $G(DA) S $P(^A1AE(11005,DA,0),"^",6)="",$P(^A1AE(11005,DA,0),"^",18)=""
"RTN","A1AEPH8",25,0)
 ;
"RTN","A1AEPH8",26,0)
Q K DA,AXMZ,ADT K ^UTILITY($J,"A1AECOP"),A1AEOLPD,A1AE0,A1AEPKIF,A1AEPKNM,A1AEPD,A1AEPK,A1AEVR,A1AENB,A1AEFL,A1AETY Q
"RTN","A1AEPH8",27,0)
 ;added (x,)
"RTN","A1AEPH8",28,0)
FILE S (X,DINUM)=DA,DIC="^A1AE(11005.1,",DIC("DR")="2///"_AXMZ_";3///"_ADT_";20///"_"No routines included" K DD,DO D FILE^DICN K DE,DQ,DR,DIC("DR") Q
"RTN","A1AEPHS")
0^31^B270112857
"RTN","A1AEPHS",1,0)
A1AEPHS ; RMO,MJK/ALBANY - Logic from DD, U triggers test Message ;2014-04-18  12:56 AM
"RTN","A1AEPHS",2,0)
 ;;2.4;PATCH MODULE;;APR 17, 2007;Build 14
"RTN","A1AEPHS",3,0)
 ;
"RTN","A1AEPHS",4,0)
 ; Input Transform of field Status (8) of file DHCP Patches (11005)
"RTN","A1AEPHS",5,0)
 ;
"RTN","A1AEPHS",6,0)
 ; Initialization:
"RTN","A1AEPHS",7,0)
 ;
"RTN","A1AEPHS",8,0)
 Q:'$D(X)  ; if no user input
"RTN","A1AEPHS",9,0)
 I $D(DUZ)[0 D  Q  ; if no user
"RTN","A1AEPHS",10,0)
 . W !?3,"Your user code (DUZ) must be defined to change the status of a patch."
"RTN","A1AEPHS",11,0)
 . K X
"RTN","A1AEPHS",12,0)
 I $D(U)[0 S U="^" ; if called from direct mode without U
"RTN","A1AEPHS",13,0)
 N DIERR ; VEN/SMH - Don't allow DIERR to leak back to DBS Fileman calls
"RTN","A1AEPHS",14,0)
 N A1AEDA S A1AEDA=DA ; Patch IEN
"RTN","A1AEPHS",15,0)
 N A1AE0 S A1AE0=$G(^A1AE(11005,A1AEDA,0)) ; Patch record header
"RTN","A1AEPHS",16,0)
 S A1AEPKIF=$P(A1AE0,U,2) ; field Package (2)
"RTN","A1AEPHS",17,0)
 ;
"RTN","A1AEPHS",18,0)
 ; Prepare new value for processing:
"RTN","A1AEPHS",19,0)
 ;
"RTN","A1AEPHS",20,0)
 N A1AEX S A1AEX=X ; save user input
"RTN","A1AEPHS",21,0)
 N A1AENEWD D  ; lookup user input in file DHCP Patch Status (11005.2)
"RTN","A1AEPHS",22,0)
 . N X ; protect user input from lookup
"RTN","A1AEPHS",23,0)
 . S A1AENEWD=$$FIND1^DIC(11005.2,,"MO",A1AEX)
"RTN","A1AEPHS",24,0)
 . I 'A1AENEWD S A1AENEWD=0 ; failed lookup
"RTN","A1AEPHS",25,0)
 N A1AENEWS S A1AENEWS=$G(^A1AE(11005.2,A1AENEWD,0)) ; new status hdr
"RTN","A1AEPHS",26,0)
 N A1AENEW S A1AENEW=$P(A1AENEWS,U) ; field Code (.01)
"RTN","A1AEPHS",27,0)
 I 'A1AENEWD S A1AENEW=0 ; failed lookup is coded as 0
"RTN","A1AEPHS",28,0)
 N A1AENEWC S A1AENEWC=U_A1AENEW_U ; to test if lists contain new code
"RTN","A1AEPHS",29,0)
 N A1AEOPT S A1AEOPT=$P(A1AENEWS,U,3) ; field Display (.03)
"RTN","A1AEPHS",30,0)
 N A1AEBULL S A1AEBULL=$P(A1AENEWS,U,4) ; field Bulletin Name (.04)
"RTN","A1AEPHS",31,0)
 N A1AESENT S A1AESENT=$P(A1AENEWS,U,5) ; field Sent To (.05)
"RTN","A1AEPHS",32,0)
 N A1AESAME S A1AESAME=$P(A1AENEWS,U,8)
"RTN","A1AEPHS",33,0)
 ; field Same Status to Generate Test Msg (.08)
"RTN","A1AEPHS",34,0)
 ;
"RTN","A1AEPHS",35,0)
 ; Prepare old value for processing:
"RTN","A1AEPHS",36,0)
 ;
"RTN","A1AEPHS",37,0)
 N A1AEOLD S A1AEOLD=$P(A1AE0,U,8) ; field Status (8)
"RTN","A1AEPHS",38,0)
 I A1AEOLD="" S A1AEOLD=0 ; no old status is coded as 0
"RTN","A1AEPHS",39,0)
 N A1AEOLDD D  ; lookup old status in file DHCP Patch Status
"RTN","A1AEPHS",40,0)
 . N X ; protect user input from lookup
"RTN","A1AEPHS",41,0)
 . S A1AEOLDD=$$FIND1^DIC(11005.2,,"X",A1AEOLD,"B")
"RTN","A1AEPHS",42,0)
 . I 'A1AEOLDD S A1AEOLDD=0 ; failed lookup (e.g., new patch)
"RTN","A1AEPHS",43,0)
 N A1AEOLDS S A1AEOLDS=$G(^A1AE(11005.2,A1AEOLDD,0)) ; old status hdr
"RTN","A1AEPHS",44,0)
 N TESTMES S TESTMES=A1AEOLD=A1AENEW&A1AESAME ; generate tst msg?
"RTN","A1AEPHS",45,0)
 ; for three statuses, assigning that same status to the patch causes
"RTN","A1AEPHS",46,0)
 ; it to generate a test message; this feature works for patches in
"RTN","A1AEPHS",47,0)
 ; review or either kind of development
"RTN","A1AEPHS",48,0)
 I TESTMES D  ; if same status entered to generate test message
"RTN","A1AEPHS",49,0)
 . S X=A1AENEW ; reduce user input to the status code
"RTN","A1AEPHS",50,0)
 E  I A1AEOLD=A1AENEW Q  ; otherwise, new status must be different
"RTN","A1AEPHS",51,0)
 S A1AEOLD=$$UP^XLFSTR(A1AEOLD)
"RTN","A1AEPHS",52,0)
 N A1AEOLDC S A1AEOLDC=U_A1AEOLD_U ; to test if lists contain old code
"RTN","A1AEPHS",53,0)
 ;
"RTN","A1AEPHS",54,0)
 ; Branch to processing subroutine based on old value:
"RTN","A1AEPHS",55,0)
 ;
"RTN","A1AEPHS",56,0)
 N A1AELIST S A1AELIST="^U^C^V^E^R^I2^D2^S2^R2^N2^" ; main statuses
"RTN","A1AEPHS",57,0)
 N A1AESEC S A1AESEC="^I2^D2^S2^R2^N2^" ; secondary statuses
"RTN","A1AEPHS",58,0)
 ;
"RTN","A1AEPHS",59,0)
 I A1AELIST[A1AEOLDC D
"RTN","A1AEPHS",60,0)
 . D @A1AEOLD ; process main-status patches
"RTN","A1AEPHS",61,0)
 E  D
"RTN","A1AEPHS",62,0)
 . D NEW ; process new patch (& unfortunately x = cancel)
"RTN","A1AEPHS",63,0)
 ;
"RTN","A1AEPHS",64,0)
 QUIT  ; end of A1AEPHS
"RTN","A1AEPHS",65,0)
 ;
"RTN","A1AEPHS",66,0)
 ;
"RTN","A1AEPHS",67,0)
NEW ; new patch
"RTN","A1AEPHS",68,0)
 ;
"RTN","A1AEPHS",69,0)
 I A1AENEW'="u" D  Q
"RTN","A1AEPHS",70,0)
 . W !?3,"The status of a new patch may only be entered as Under Development (u)!"
"RTN","A1AEPHS",71,0)
 . K X
"RTN","A1AEPHS",72,0)
 ;
"RTN","A1AEPHS",73,0)
 I '$D(^A1AE(11007,A1AEPKIF,"PH",DUZ,0)) D
"RTN","A1AEPHS",74,0)
 . W !?3,"You are not an authorized developer of this package."
"RTN","A1AEPHS",75,0)
 . K X
"RTN","A1AEPHS",76,0)
 ;
"RTN","A1AEPHS",77,0)
 QUIT  ; end of NEW
"RTN","A1AEPHS",78,0)
 ;
"RTN","A1AEPHS",79,0)
 ;
"RTN","A1AEPHS",80,0)
U ; u = UNDER DEVELOPMENT
"RTN","A1AEPHS",81,0)
 ;
"RTN","A1AEPHS",82,0)
 I 'TESTMES,"^c^x^"'[A1AENEWC D  Q
"RTN","A1AEPHS",83,0)
 . W !?3,"The status may only be changed to Completed/Unreleased (c)"
"RTN","A1AEPHS",84,0)
 . W " or Canceled (x)!"
"RTN","A1AEPHS",85,0)
 . K X
"RTN","A1AEPHS",86,0)
 I '$D(^A1AE(11007,A1AEPKIF,"PH",DUZ,0)) D  Q
"RTN","A1AEPHS",87,0)
 . W !?3,"You are not an authorized developer of this package."
"RTN","A1AEPHS",88,0)
 . K X
"RTN","A1AEPHS",89,0)
 I 'TESTMES,A1AENEW="c",$P(^A1AE(11005,DA,0),U,9)=DUZ D  Q
"RTN","A1AEPHS",90,0)
 . W !?3,"Please have another developer of the package review the patch and change"
"RTN","A1AEPHS",91,0)
 . W !?3,"the status to Completed/Unreleased (c)."
"RTN","A1AEPHS",92,0)
 . K X
"RTN","A1AEPHS",93,0)
 ;
"RTN","A1AEPHS",94,0)
 N SAVX,SEQ,TVER,TXVER,XMY
"RTN","A1AEPHS",95,0)
 ;
"RTN","A1AEPHS",96,0)
 I 'TESTMES D  Q:X'=A1AEX
"RTN","A1AEPHS",97,0)
 . D ASKCHG
"RTN","A1AEPHS",98,0)
 I TESTMES D  Q:$D(DUOUT)!($D(DTOUT))!('Y)
"RTN","A1AEPHS",99,0)
 . D ASKTST
"RTN","A1AEPHS",100,0)
 S SEQ=""
"RTN","A1AEPHS",101,0)
 D GET^A1AEMAL
"RTN","A1AEPHS",102,0)
 I '$D(XMZ) D  Q
"RTN","A1AEPHS",103,0)
 . K X
"RTN","A1AEPHS",104,0)
 D MES^A1AEMAL
"RTN","A1AEPHS",105,0)
 I TESTMES D  Q
"RTN","A1AEPHS",106,0)
 . S X="u"
"RTN","A1AEPHS",107,0)
 Q:A1AENEW="x"  ; Canceled exit here
"RTN","A1AEPHS",108,0)
 ;
"RTN","A1AEPHS",109,0)
 K XMY
"RTN","A1AEPHS",110,0)
 F I=0:0 S I=$O(^A1AE(11007,A1AEPKIF,"PB",I)) Q:'I  D
"RTN","A1AEPHS",111,0)
 . I $D(^(I,0)),$P(^(0),U,2)="V" S XMY(I)=""
"RTN","A1AEPHS",112,0)
 S XMY(DUZ)=""
"RTN","A1AEPHS",113,0)
 D BUL
"RTN","A1AEPHS",114,0)
 ;
"RTN","A1AEPHS",115,0)
 QUIT  ; end of U
"RTN","A1AEPHS",116,0)
 ;
"RTN","A1AEPHS",117,0)
 ;
"RTN","A1AEPHS",118,0)
C ; c = COMPLETED/UNVERIFIED
"RTN","A1AEPHS",119,0)
 ;
"RTN","A1AEPHS",120,0)
 I A1AENEW="u" D  Q
"RTN","A1AEPHS",121,0)
 . D NEW
"RTN","A1AEPHS",122,0)
 ;
"RTN","A1AEPHS",123,0)
 I A1AENEW'="v" D  Q
"RTN","A1AEPHS",124,0)
 . W !?3,"The status may only be changed to Released (v)!"
"RTN","A1AEPHS",125,0)
 . K X
"RTN","A1AEPHS",126,0)
 ;
"RTN","A1AEPHS",127,0)
 D  Q:'$D(X)
"RTN","A1AEPHS",128,0)
 . I $D(^A1AE(11007,A1AEPKIF,"PB",DUZ,0)),$P(^(0),U,2)="V" Q
"RTN","A1AEPHS",129,0)
 . W !?3,"You are not authorized to release patches of this package."
"RTN","A1AEPHS",130,0)
 . K X
"RTN","A1AEPHS",131,0)
 ;
"RTN","A1AEPHS",132,0)
 D  Q:'$D(X)
"RTN","A1AEPHS",133,0)
 . N A1AEUENT S A1AEUENT=$P(A1AE0,U,9) ; field User Entering (9)
"RTN","A1AEPHS",134,0)
 . N A1AEUCOM S A1AEUCOM=$P(A1AE0,U,13) ; field User Completion (13)
"RTN","A1AEPHS",135,0)
 . I A1AEUENT'=DUZ,A1AEUCOM'=DUZ Q  ; if different user, we're good
"RTN","A1AEPHS",136,0)
 . W !?3,"Please have an authorized releaser, other than the developer"
"RTN","A1AEPHS",137,0)
 . W !?3,"who entered the patch or completed the patch, release the"
"RTN","A1AEPHS",138,0)
 . W !?3,"patch."
"RTN","A1AEPHS",139,0)
 . K X
"RTN","A1AEPHS",140,0)
 ;
"RTN","A1AEPHS",141,0)
 N A1AEVR S A1AEVR=$P(A1AE0,U,3) ; field Version (3)
"RTN","A1AEPHS",142,0)
 N A1AEHOLD S A1AEHOLD=$P(A1AE0,U,17) ; field Holding Date (17)
"RTN","A1AEPHS",143,0)
 I A1AEHOLD>DT D
"RTN","A1AEPHS",144,0)
 . W !?3,"This patch cannot be Verified/Released (v) until: "
"RTN","A1AEPHS",145,0)
 . W $$FMTE^XLFDT(A1AEHOLD)
"RTN","A1AEPHS",146,0)
 . K X
"RTN","A1AEPHS",147,0)
 ;
"RTN","A1AEPHS",148,0)
 ;naked ref to same entry above
"RTN","A1AEPHS",149,0)
 I $D(^("Q","B")) D
"RTN","A1AEPHS",150,0)
 . N CHECK S CHECK=""
"RTN","A1AEPHS",151,0)
 . N AZ ; return array from PCHK
"RTN","A1AEPHS",152,0)
 . D PCHK^A1AEUTL1
"RTN","A1AEPHS",153,0)
 . Q:'$D(AZ("STOP"))
"RTN","A1AEPHS",154,0)
 . W !?3,"This patch cannot be Verified/released (v) before patch(s):"
"RTN","A1AEPHS",155,0)
 . S AZ=0
"RTN","A1AEPHS",156,0)
 . F  S AZ=$O(AZ("STOP",AZ)) Q:'AZ  D
"RTN","A1AEPHS",157,0)
 . . W:$X>60 !,?62
"RTN","A1AEPHS",158,0)
 . . W ?62,$P(AZ("STOP",AZ),U)
"RTN","A1AEPHS",159,0)
 . K X
"RTN","A1AEPHS",160,0)
 I '$D(X) D  Q
"RTN","A1AEPHS",161,0)
 . W $C(7)
"RTN","A1AEPHS",162,0)
 ;
"RTN","A1AEPHS",163,0)
 ;check for Patch message sent/but disconnect blew away 'v'status
"RTN","A1AEPHS",164,0)
 I $P($G(^A1AE(11005.1,DA,0)),U,6),$P($G(^(0)),U,7),A1AENEW="v" D  Q
"RTN","A1AEPHS",165,0)
 . D NOMESS^A1AEMAL1
"RTN","A1AEPHS",166,0)
 ;
"RTN","A1AEPHS",167,0)
 D ASKCHG
"RTN","A1AEPHS",168,0)
 Q:X'=A1AEX
"RTN","A1AEPHS",169,0)
 ;
"RTN","A1AEPHS",170,0)
 I '$D(A1AEPKV) D
"RTN","A1AEPHS",171,0)
 . D SEQ^A1AEUTL
"RTN","A1AEPHS",172,0)
 ;
"RTN","A1AEPHS",173,0)
 ;See if we can get a Mail Message
"RTN","A1AEPHS",174,0)
 K XMZ
"RTN","A1AEPHS",175,0)
 D GET^A1AEMAL
"RTN","A1AEPHS",176,0)
 I '$D(XMZ) D
"RTN","A1AEPHS",177,0)
 . D DELSEQ^A1AEUTL
"RTN","A1AEPHS",178,0)
 . K X
"RTN","A1AEPHS",179,0)
 Q:'$D(X)
"RTN","A1AEPHS",180,0)
 ;
"RTN","A1AEPHS",181,0)
 ;Build Mail Message
"RTN","A1AEPHS",182,0)
 D MES^A1AEMAL
"RTN","A1AEPHS",183,0)
 ;
"RTN","A1AEPHS",184,0)
 ;After building message, update version #
"RTN","A1AEPHS",185,0)
 D NEWVER^A1AEUTL(A1AEPKIF,DA)
"RTN","A1AEPHS",186,0)
 D BOTH
"RTN","A1AEPHS",187,0)
 ;
"RTN","A1AEPHS",188,0)
 QUIT  ; end of C
"RTN","A1AEPHS",189,0)
 ;
"RTN","A1AEPHS",190,0)
 ;
"RTN","A1AEPHS",191,0)
BOTH ;Send Bulletin, Called from C and V. Setup address list
"RTN","A1AEPHS",192,0)
 K A1AEVR,SEQ,XMY
"RTN","A1AEPHS",193,0)
 N A1AETO,XMBTMP
"RTN","A1AEPHS",194,0)
 D INIT^XMXADDR
"RTN","A1AEPHS",195,0)
 S A1AETO=0
"RTN","A1AEPHS",196,0)
 I '$D(A1AEPKV) D
"RTN","A1AEPHS",197,0)
 . F  S A1AETO=$O(^A1AE(11007,A1AEPKIF,1,A1AETO)) Q:'A1AETO  D
"RTN","A1AEPHS",198,0)
 . . D ADDRESS^XMXADDR(DUZ,A1AETO)
"RTN","A1AEPHS",199,0)
 I $D(A1AEPKV) D
"RTN","A1AEPHS",200,0)
 . D ADDRESS^XMXADDR(DUZ,"G.A1AE PACKAGE RELEASE")
"RTN","A1AEPHS",201,0)
 S XMBTMP=1
"RTN","A1AEPHS",202,0)
 S XMY(DUZ)=""
"RTN","A1AEPHS",203,0)
 D BUL
"RTN","A1AEPHS",204,0)
 ;
"RTN","A1AEPHS",205,0)
 QUIT  ; end of BOTH
"RTN","A1AEPHS",206,0)
 ;
"RTN","A1AEPHS",207,0)
 ;
"RTN","A1AEPHS",208,0)
V ; v = VERIFIED
"RTN","A1AEPHS",209,0)
 ;
"RTN","A1AEPHS",210,0)
 I A1AENEW'="e",A1AENEW'="r"!($P(A1AE0,U,3)'=999) D  Q
"RTN","A1AEPHS",211,0)
 . W !?3,"The status may only be changed to Entered in Error (E),"
"RTN","A1AEPHS",212,0)
 . W !?3,"or if it is a DBA type patch it can be Retired (r)!"
"RTN","A1AEPHS",213,0)
 . K X
"RTN","A1AEPHS",214,0)
 I '$D(^A1AE(11007,A1AEPKIF,"PH",DUZ,0)) D  Q
"RTN","A1AEPHS",215,0)
 . W !?3,"You are not an authorized developer of this package."
"RTN","A1AEPHS",216,0)
 . K X
"RTN","A1AEPHS",217,0)
 D ASKCHG
"RTN","A1AEPHS",218,0)
 Q:X'=A1AEX
"RTN","A1AEPHS",219,0)
 I A1AENEW'="e" D  Q
"RTN","A1AEPHS",220,0)
 . D BOTH
"RTN","A1AEPHS",221,0)
 N X
"RTN","A1AEPHS",222,0)
 ; The bulletin for "entered in error" will be sent in 3^A1AEPH1,
"RTN","A1AEPHS",223,0)
 ; after the developer has entered the error description.
"RTN","A1AEPHS",224,0)
 W !!,"Next, you will be asked for the 'Entered in Error Description'."
"RTN","A1AEPHS",225,0)
 W !,"Whatever you write will be included in the bulletin which will be sent"
"RTN","A1AEPHS",226,0)
 W !,"to all patch recipients, so make sure your description is complete.",!
"RTN","A1AEPHS",227,0)
 D WAIT^XMXUTIL
"RTN","A1AEPHS",228,0)
 ;
"RTN","A1AEPHS",229,0)
 QUIT  ; end of V
"RTN","A1AEPHS",230,0)
 ;
"RTN","A1AEPHS",231,0)
 ;
"RTN","A1AEPHS",232,0)
I2 ; i2 = IN REVIEW
"RTN","A1AEPHS",233,0)
 ;
"RTN","A1AEPHS",234,0)
 ; ensure this is a legal code change
"RTN","A1AEPHS",235,0)
 I 'TESTMES,"^d2^s2^n2^"'[A1AENEWC D  Q
"RTN","A1AEPHS",236,0)
 . W !?3,"The status may only be changed to Secondary Development (d2),"
"RTN","A1AEPHS",237,0)
 . W "Secondary Completion (s2), or Not for Secondary Release (n2)!"
"RTN","A1AEPHS",238,0)
 . K X
"RTN","A1AEPHS",239,0)
 ;
"RTN","A1AEPHS",240,0)
 ; ensure this is a legal user
"RTN","A1AEPHS",241,0)
 I '$D(^A1AE(11007,A1AEPKIF,"PH",DUZ,0)) D  Q
"RTN","A1AEPHS",242,0)
 . W !?3,"You are not an authorized developer of this package."
"RTN","A1AEPHS",243,0)
 . K X
"RTN","A1AEPHS",244,0)
 ; (the reviewer can also play another role, so no restriction here)
"RTN","A1AEPHS",245,0)
 ;
"RTN","A1AEPHS",246,0)
 N SAVX,TVER,TXVER,XMY ; scope variables used in A1AEMAL*
"RTN","A1AEPHS",247,0)
 I 'TESTMES D  Q:X'=A1AEX  ; if no test msg, confirm code change
"RTN","A1AEPHS",248,0)
 . D ASKCHG
"RTN","A1AEPHS",249,0)
 I TESTMES D  Q:$D(DUOUT)!$D(DTOUT)!'Y  ; if test msg, get details
"RTN","A1AEPHS",250,0)
 . D ASKTST
"RTN","A1AEPHS",251,0)
 N SEQ S SEQ=""
"RTN","A1AEPHS",252,0)
 D GET^A1AEMAL ; get msg #
"RTN","A1AEPHS",253,0)
 I '$D(XMZ) D  Q  ; if fail to get msg #, change to Status fails
"RTN","A1AEPHS",254,0)
 . K X
"RTN","A1AEPHS",255,0)
 D MES^A1AEMAL ; build msg
"RTN","A1AEPHS",256,0)
 ;
"RTN","A1AEPHS",257,0)
 I TESTMES D  Q  ; if it was a test msg, change input to i2 & done
"RTN","A1AEPHS",258,0)
 . S X="i2"
"RTN","A1AEPHS",259,0)
 ;
"RTN","A1AEPHS",260,0)
 ; notify package verifiers of change in status:
"RTN","A1AEPHS",261,0)
 ;
"RTN","A1AEPHS",262,0)
 K XMY ; clear recipient list
"RTN","A1AEPHS",263,0)
 F I=0:0 S I=$O(^A1AE(11007,A1AEPKIF,"PB",I)) Q:'I  D
"RTN","A1AEPHS",264,0)
 . I $D(^(I,0)),$P(^(0),U,2)="V" S XMY(I)="" ; add verifiers
"RTN","A1AEPHS",265,0)
 S XMY(DUZ)="" ; add current user
"RTN","A1AEPHS",266,0)
 D BUL ; send bulletin
"RTN","A1AEPHS",267,0)
 ;
"RTN","A1AEPHS",268,0)
 QUIT  ; end of I2
"RTN","A1AEPHS",269,0)
 ;
"RTN","A1AEPHS",270,0)
 ;
"RTN","A1AEPHS",271,0)
RENEW ; renew patch
"RTN","A1AEPHS",272,0)
 ;
"RTN","A1AEPHS",273,0)
 I A1AENEW'="d2" D  Q
"RTN","A1AEPHS",274,0)
 . W !?3,"The status of a renewed patch may only be entered as Secondary Development (d2)!"
"RTN","A1AEPHS",275,0)
 . K X
"RTN","A1AEPHS",276,0)
 ;
"RTN","A1AEPHS",277,0)
 I '$D(^A1AE(11007,A1AEPKIF,"PH",DUZ,0)) D
"RTN","A1AEPHS",278,0)
 . W !?3,"You are not an authorized developer of this package."
"RTN","A1AEPHS",279,0)
 . K X
"RTN","A1AEPHS",280,0)
 ;
"RTN","A1AEPHS",281,0)
 QUIT  ; end of RENEW
"RTN","A1AEPHS",282,0)
 ;
"RTN","A1AEPHS",283,0)
 ;
"RTN","A1AEPHS",284,0)
D2 ; d2 = SEC DEVELOPMENT
"RTN","A1AEPHS",285,0)
 ;
"RTN","A1AEPHS",286,0)
 I 'TESTMES,"^s2^i2^n2^"'[A1AENEWC D  Q
"RTN","A1AEPHS",287,0)
 . W !?3,"The status may only be changed to Secondary Completion (s2),"
"RTN","A1AEPHS",288,0)
 . W " In Review (I2),"
"RTN","A1AEPHS",289,0)
 . W !?3," or Not for Secondary Release (n2)!"
"RTN","A1AEPHS",290,0)
 . K X
"RTN","A1AEPHS",291,0)
 I '$D(^A1AE(11007,A1AEPKIF,"PH",DUZ,0)) D  Q
"RTN","A1AEPHS",292,0)
 . W !?3,"You are not an authorized developer of this package."
"RTN","A1AEPHS",293,0)
 . K X
"RTN","A1AEPHS",294,0)
 I 'TESTMES,A1AENEW="c",$P(^A1AE(11005,DA,0),U,9)=DUZ D  Q
"RTN","A1AEPHS",295,0)
 . W !?3,"Please have another developer of the package review the patch and change"
"RTN","A1AEPHS",296,0)
 . W !?3,"the status to 'C'ompleted/not released."
"RTN","A1AEPHS",297,0)
 . K X
"RTN","A1AEPHS",298,0)
 I 'TESTMES D  Q:X'=A1AEX
"RTN","A1AEPHS",299,0)
 . D ASKCHG
"RTN","A1AEPHS",300,0)
 I TESTMES D  Q:$D(DUOUT)!($D(DTOUT))!('Y)
"RTN","A1AEPHS",301,0)
 . D ASKTST
"RTN","A1AEPHS",302,0)
 N SEQ S SEQ=""
"RTN","A1AEPHS",303,0)
 N SAVX,SEQ,TVER,TXVER,XMY
"RTN","A1AEPHS",304,0)
 D GET^A1AEMAL
"RTN","A1AEPHS",305,0)
 I '$D(XMZ) D  Q
"RTN","A1AEPHS",306,0)
 . K X
"RTN","A1AEPHS",307,0)
 D MES^A1AEMAL
"RTN","A1AEPHS",308,0)
 ;
"RTN","A1AEPHS",309,0)
 I TESTMES D  Q
"RTN","A1AEPHS",310,0)
 . S X="d2"
"RTN","A1AEPHS",311,0)
 ;
"RTN","A1AEPHS",312,0)
 K XMY
"RTN","A1AEPHS",313,0)
 F I=0:0 S I=$O(^A1AE(11007,A1AEPKIF,"PB",I)) Q:'I  D
"RTN","A1AEPHS",314,0)
 . I $D(^(I,0)),$P(^(0),U,2)="V" D
"RTN","A1AEPHS",315,0)
 . . S XMY(I)=""
"RTN","A1AEPHS",316,0)
 S XMY(DUZ)=""
"RTN","A1AEPHS",317,0)
 D BUL
"RTN","A1AEPHS",318,0)
 ;
"RTN","A1AEPHS",319,0)
 QUIT  ; end of D2
"RTN","A1AEPHS",320,0)
 ;
"RTN","A1AEPHS",321,0)
 ;
"RTN","A1AEPHS",322,0)
S2 ; s2 = SEC COMPLETION
"RTN","A1AEPHS",323,0)
 ;
"RTN","A1AEPHS",324,0)
 I A1AENEW="d2" D  Q
"RTN","A1AEPHS",325,0)
 . D RENEW
"RTN","A1AEPHS",326,0)
 I "^r2^i2^n2^"'[A1AENEWC D  Q
"RTN","A1AEPHS",327,0)
 . W !?3,"The status may only be changed to Secondary Release (r2),"
"RTN","A1AEPHS",328,0)
 . W !?3," In Review (i2), or Not for Secondary Release (n2)!"
"RTN","A1AEPHS",329,0)
 . K X
"RTN","A1AEPHS",330,0)
 ;
"RTN","A1AEPHS",331,0)
 N A1AES2R2 S A1AES2R2=A1AENEW="r2" ; are we sec releasing this patch?
"RTN","A1AEPHS",332,0)
 N A1AEQUIT S A1AEQUIT=0 ; should we bail out?
"RTN","A1AEPHS",333,0)
 I A1AES2R2 D  Q  ; if we're changing to sec release
"RTN","A1AEPHS",334,0)
 . D S2R2 ; try to sec release it
"RTN","A1AEPHS",335,0)
 ;
"RTN","A1AEPHS",336,0)
 ; for the other changes from sec completion . . .
"RTN","A1AEPHS",337,0)
 D ASKCHG ; confirm change
"RTN","A1AEPHS",338,0)
 Q:X'=A1AEX  ; bail out if not confirmed
"RTN","A1AEPHS",339,0)
 ;
"RTN","A1AEPHS",340,0)
 K XMZ
"RTN","A1AEPHS",341,0)
 D GET^A1AEMAL ; See if we can get a Mail Message
"RTN","A1AEPHS",342,0)
 I '$D(XMZ) D  Q  ; bail out if not
"RTN","A1AEPHS",343,0)
 . K X
"RTN","A1AEPHS",344,0)
 ;
"RTN","A1AEPHS",345,0)
 D MES^A1AEMAL ; Build Mail Message
"RTN","A1AEPHS",346,0)
 D BOTH
"RTN","A1AEPHS",347,0)
 ;
"RTN","A1AEPHS",348,0)
 QUIT  ; end of S2
"RTN","A1AEPHS",349,0)
 ;
"RTN","A1AEPHS",350,0)
 ;
"RTN","A1AEPHS",351,0)
S2R2 ; s2 = SEC COMPLETION ==> r2 = SEC RELEASE
"RTN","A1AEPHS",352,0)
 ;
"RTN","A1AEPHS",353,0)
 D  Q:'$D(X)
"RTN","A1AEPHS",354,0)
 . I $D(^A1AE(11007,A1AEPKIF,"PB",DUZ,0)),$P(^(0),U,2)="V" Q
"RTN","A1AEPHS",355,0)
 . W !?3,"You are not authorized to release patches of this package."
"RTN","A1AEPHS",356,0)
 . K X
"RTN","A1AEPHS",357,0)
 ;
"RTN","A1AEPHS",358,0)
 D  Q:'$D(X)
"RTN","A1AEPHS",359,0)
 . N A1AEUENT S A1AEUENT=$P(A1AE0,U,9) ; field User Entering (9)
"RTN","A1AEPHS",360,0)
 . N A1AEUCOM S A1AEUCOM=$P(A1AE0,U,13) ; field User Completion (13)
"RTN","A1AEPHS",361,0)
 . I A1AEUENT'=DUZ,A1AEUCOM'=DUZ Q  ; if different user, we're good
"RTN","A1AEPHS",362,0)
 . W !?3,"Please have an authorized releaser, other than the developer"
"RTN","A1AEPHS",363,0)
 . W !?3,"who entered the patch or completed the patch, release the"
"RTN","A1AEPHS",364,0)
 . W !?3,"patch."
"RTN","A1AEPHS",365,0)
 . K X
"RTN","A1AEPHS",366,0)
 ;
"RTN","A1AEPHS",367,0)
 N A1AEVR S A1AEVR=$P(A1AE0,U,3) ; field Version (3)
"RTN","A1AEPHS",368,0)
 N A1AEHOLD S A1AEHOLD=$P(A1AE0,U,17) ; field Holding Date (17)
"RTN","A1AEPHS",369,0)
 I A1AEHOLD>DT D
"RTN","A1AEPHS",370,0)
 . W !?3,"This patch cannot be Verified/Released (r2) until: "
"RTN","A1AEPHS",371,0)
 . W $$FMTE^XLFDT(A1AEHOLD)
"RTN","A1AEPHS",372,0)
 . K X
"RTN","A1AEPHS",373,0)
 ;
"RTN","A1AEPHS",374,0)
 I $D(^("Q","B")) D
"RTN","A1AEPHS",375,0)
 . N CHECK S CHECK=""
"RTN","A1AEPHS",376,0)
 . N AZ ; return array from PCHK
"RTN","A1AEPHS",377,0)
 . D PCHK^A1AEUTL1
"RTN","A1AEPHS",378,0)
 . Q:'$D(AZ("STOP"))
"RTN","A1AEPHS",379,0)
 . W !?3,"This patch cannot be Sec Released (r2) before patch(s):"
"RTN","A1AEPHS",380,0)
 . S AZ=0
"RTN","A1AEPHS",381,0)
 . F  S AZ=$O(AZ("STOP",AZ)) Q:'AZ  D
"RTN","A1AEPHS",382,0)
 . . W:$X>60 !,?62
"RTN","A1AEPHS",383,0)
 . . W ?62,$P(AZ("STOP",AZ),U)
"RTN","A1AEPHS",384,0)
 . K X
"RTN","A1AEPHS",385,0)
 I '$D(X) D  Q
"RTN","A1AEPHS",386,0)
 . W $C(7)
"RTN","A1AEPHS",387,0)
 ;
"RTN","A1AEPHS",388,0)
 ;check for Patch message sent/but disconnect blew away 'r2'status
"RTN","A1AEPHS",389,0)
 I $P($G(^A1AE(11005.1,DA,0)),U,6),$P($G(^(0)),U,7),A1AENEW="r2" D  Q
"RTN","A1AEPHS",390,0)
 . D NOMESS^A1AEMAL1
"RTN","A1AEPHS",391,0)
 ;
"RTN","A1AEPHS",392,0)
 D ASKCHG ; confirm status change
"RTN","A1AEPHS",393,0)
 Q:X'=A1AEX  ; bail out if no confirmation
"RTN","A1AEPHS",394,0)
 ;
"RTN","A1AEPHS",395,0)
 I '$D(A1AEPKV) D
"RTN","A1AEPHS",396,0)
 . D SEQ^A1AEUTL
"RTN","A1AEPHS",397,0)
 ;See if we can get a Mail Message
"RTN","A1AEPHS",398,0)
 K XMZ
"RTN","A1AEPHS",399,0)
 D GET^A1AEMAL
"RTN","A1AEPHS",400,0)
 I '$D(XMZ) D
"RTN","A1AEPHS",401,0)
 . D DELSEQ^A1AEUTL
"RTN","A1AEPHS",402,0)
 . K X
"RTN","A1AEPHS",403,0)
 Q:'$D(X)
"RTN","A1AEPHS",404,0)
 ;
"RTN","A1AEPHS",405,0)
 ;Build Mail Message
"RTN","A1AEPHS",406,0)
 D MES^A1AEMAL
"RTN","A1AEPHS",407,0)
 ;
"RTN","A1AEPHS",408,0)
 ;After building message, update version #
"RTN","A1AEPHS",409,0)
 D NEWVER^A1AEUTL(A1AEPKIF,DA)
"RTN","A1AEPHS",410,0)
 D BOTH
"RTN","A1AEPHS",411,0)
 ;
"RTN","A1AEPHS",412,0)
 QUIT  ; end of S2R2
"RTN","A1AEPHS",413,0)
 ;
"RTN","A1AEPHS",414,0)
 ;
"RTN","A1AEPHS",415,0)
R2 ; r2 = SEC RELEASE
"RTN","A1AEPHS",416,0)
 ;
"RTN","A1AEPHS",417,0)
 W !,"Secondary released patches cannot be edited after release."
"RTN","A1AEPHS",418,0)
 K X
"RTN","A1AEPHS",419,0)
 ;
"RTN","A1AEPHS",420,0)
 QUIT  ; end of R2
"RTN","A1AEPHS",421,0)
 ;
"RTN","A1AEPHS",422,0)
 ;
"RTN","A1AEPHS",423,0)
N2 ; n2 = NOT FOR SEC RELEASE
"RTN","A1AEPHS",424,0)
 ;
"RTN","A1AEPHS",425,0)
 I A1AENEW'="i2" D  Q
"RTN","A1AEPHS",426,0)
 . W !?3,"The status may only be changed to In Review (i2)!"
"RTN","A1AEPHS",427,0)
 . K X
"RTN","A1AEPHS",428,0)
 D
"RTN","A1AEPHS",429,0)
 . Q:$D(^A1AE(11007,A1AEPKIF,"PB",DUZ,0))
"RTN","A1AEPHS",430,0)
 . Q:$D(^A1AE(11007,A1AEPKIF,"PH",DUZ,0))
"RTN","A1AEPHS",431,0)
 . W !?3,"You are not authorized to release patches of this package."
"RTN","A1AEPHS",432,0)
 . K X
"RTN","A1AEPHS",433,0)
 ;
"RTN","A1AEPHS",434,0)
 D ASKCHG
"RTN","A1AEPHS",435,0)
 Q:X'=A1AEX
"RTN","A1AEPHS",436,0)
 ;
"RTN","A1AEPHS",437,0)
 ;See if we can get a Mail Message
"RTN","A1AEPHS",438,0)
 K XMZ
"RTN","A1AEPHS",439,0)
 D GET^A1AEMAL
"RTN","A1AEPHS",440,0)
 Q:'$D(X)
"RTN","A1AEPHS",441,0)
 ;
"RTN","A1AEPHS",442,0)
 ;Build Mail Message
"RTN","A1AEPHS",443,0)
 D MES^A1AEMAL
"RTN","A1AEPHS",444,0)
 D BOTH
"RTN","A1AEPHS",445,0)
 ;
"RTN","A1AEPHS",446,0)
 QUIT  ; end of N2
"RTN","A1AEPHS",447,0)
 ;
"RTN","A1AEPHS",448,0)
 ;
"RTN","A1AEPHS",449,0)
E ; e = ENTERED IN ERROR
"RTN","A1AEPHS",450,0)
R ; r = RETIRED
"RTN","A1AEPHS",451,0)
 ;
"RTN","A1AEPHS",452,0)
 W !?3,"Once the status has been set to Entered in Error (e)"
"RTN","A1AEPHS",453,0)
 W " or Retired (r) it cannot be changed!"
"RTN","A1AEPHS",454,0)
 K X
"RTN","A1AEPHS",455,0)
 ;
"RTN","A1AEPHS",456,0)
 QUIT  ; end of E/R
"RTN","A1AEPHS",457,0)
 ;
"RTN","A1AEPHS",458,0)
 ;
"RTN","A1AEPHS",459,0)
ASKCHG ; confirm status change
"RTN","A1AEPHS",460,0)
 ;
"RTN","A1AEPHS",461,0)
 S A1AEX=X
"RTN","A1AEPHS",462,0)
 Q:$D(DIFM)  ; If we are inside the DBS, don't ask
"RTN","A1AEPHS",463,0)
 S A1AERD("A")="Are you sure you want to change status to "_A1AEOPT_"? "
"RTN","A1AEPHS",464,0)
 S A1AERD(0)="S"
"RTN","A1AEPHS",465,0)
 S A1AERD(1)="Yes^change status and send a message to users"
"RTN","A1AEPHS",466,0)
 S A1AERD(2)="No^leave the status the same"
"RTN","A1AEPHS",467,0)
 S A1AERD("B")=2
"RTN","A1AEPHS",468,0)
 D SET^A1AERD
"RTN","A1AEPHS",469,0)
 K A1AERD
"RTN","A1AEPHS",470,0)
 S X=$S("Y"[$E(X,1):A1AEX,1:$$LOW^XLFSTR(A1AEOLD))
"RTN","A1AEPHS",471,0)
 W !?3,"...status ",$S(A1AEX=X:"",1:"'not' "),"changed to ",A1AEOPT
"RTN","A1AEPHS",472,0)
 ;
"RTN","A1AEPHS",473,0)
 QUIT  ; end of ASKCHG
"RTN","A1AEPHS",474,0)
 ;
"RTN","A1AEPHS",475,0)
 ;
"RTN","A1AEPHS",476,0)
BUL ; send bulletin
"RTN","A1AEPHS",477,0)
 ;
"RTN","A1AEPHS",478,0)
 N X ; protect user input variable from Mailman
"RTN","A1AEPHS",479,0)
 N XMTEXT S XMTEXT="A1AETX("
"RTN","A1AEPHS",480,0)
 N XMB S XMB=A1AEBULL ; name of bulletin to send for this status
"RTN","A1AEPHS",481,0)
 N A1AEX S A1AEX=$P($G(^A1AE(11005,DA,4)),U)
"RTN","A1AEPHS",482,0)
 I $L(A1AEX)>2 D
"RTN","A1AEPHS",483,0)
 . S XMB=$P(XMB,"PATCH")_"PACKAGE" ;rwf
"RTN","A1AEPHS",484,0)
 S XMB(1)=$P(^DIC(9.4,+$P(A1AE0,U,2),0),U,1)
"RTN","A1AEPHS",485,0)
 S XMB(2)=$P(A1AE0,U,1)
"RTN","A1AEPHS",486,0)
 S XMB(3)=$P(A1AE0,U,5)
"RTN","A1AEPHS",487,0)
 ;
"RTN","A1AEPHS",488,0)
 I "^c^v^d2^s2^r2^n2^"[A1AENEWC D
"RTN","A1AEPHS",489,0)
 . S XMB(4)=$P($P(^DD(11005,7,0),$P(A1AE0,U,7)_":",2),";",1)
"RTN","A1AEPHS",490,0)
 ;
"RTN","A1AEPHS",491,0)
 I "^v^r2^"'=A1AENEWC D
"RTN","A1AEPHS",492,0)
 . S:$D(A1AEXMZ) XMB(5)=A1AEXMZ
"RTN","A1AEPHS",493,0)
 . S:$D(A1AESUB) XMB(6)=A1AESUB
"RTN","A1AEPHS",494,0)
 ;
"RTN","A1AEPHS",495,0)
 S $P(XMB(2),"*",2)=$S($P(XMB(2),"*",2)=999:"DBA",1:$P(XMB(2),"*",2))
"RTN","A1AEPHS",496,0)
 ;
"RTN","A1AEPHS",497,0)
 S XMB(7)=""
"RTN","A1AEPHS",498,0)
 I $D(^A1AE(11005,"AC",+$P(A1AE0,U,2),+$P(A1AE0,U,3),"pp",+$P(A1AE0,U,4))) D
"RTN","A1AEPHS",499,0)
 . S XMB(7)=" Category of Patch: PATCH FOR A PATCH"
"RTN","A1AEPHS",500,0)
 ;
"RTN","A1AEPHS",501,0)
 S (XMB(8),XMB(9))=""
"RTN","A1AEPHS",502,0)
 I "v"=A1AENEW D
"RTN","A1AEPHS",503,0)
 . S Y=$O(^A1AE(11005,"B",$P(A1AE0,U,1),0))
"RTN","A1AEPHS",504,0)
 . S Y=$P(^A1AE(11005,Y,0),U,18)
"RTN","A1AEPHS",505,0)
 . D DD^%DT
"RTN","A1AEPHS",506,0)
 . S XMB(8)="Unless otherwise indicated in the patch description, this patch should"
"RTN","A1AEPHS",507,0)
 . S XMB(9)="be installed by "_Y
"RTN","A1AEPHS",508,0)
 . I $G(DUZ("AG"))="V" S XMB(9)=XMB(9)_" in compliance with Directive 2001-23."
"RTN","A1AEPHS",509,0)
 . E  S XMB(9)=XMB(9)_"." ; for everyone else
"RTN","A1AEPHS",510,0)
 ;
"RTN","A1AEPHS",511,0)
 I $L(A1AEX)>2 D
"RTN","A1AEPHS",512,0)
 . S XMB(2)=$P(A1AEX,U) ;rwf
"RTN","A1AEPHS",513,0)
 ;
"RTN","A1AEPHS",514,0)
 D M^A1AEUTL1
"RTN","A1AEPHS",515,0)
 W !!,"NOTE: A bulletin has been sent to ",A1AESENT
"RTN","A1AEPHS",516,0)
 I "^c^v^i2^d2^s2^r2^"[A1AENEWC D
"RTN","A1AEPHS",517,0)
 . W " for this package"
"RTN","A1AEPHS",518,0)
 W !?6,"informing them of this ",A1AEOPT," patch.",!
"RTN","A1AEPHS",519,0)
 ;
"RTN","A1AEPHS",520,0)
 I "^e^v^r2^n2^"[A1AENEWC D
"RTN","A1AEPHS",521,0)
 . D ESSMSG
"RTN","A1AEPHS",522,0)
 ;
"RTN","A1AEPHS",523,0)
 QUIT  ; end of BUL
"RTN","A1AEPHS",524,0)
 ;
"RTN","A1AEPHS",525,0)
 ;
"RTN","A1AEPHS",526,0)
ESSMSG ; Send message to Remedy to let it know that a patch has been
"RTN","A1AEPHS",527,0)
 G ESSMSG^A1AEPHS1
"RTN","A1AEPHS",528,0)
 ;
"RTN","A1AEPHS",529,0)
ASKTST Q:'$D(^A1AE(11005.1,DA,0))
"RTN","A1AEPHS",530,0)
 W !!,?3,"Option to create a Patch message to send to test sites."
"RTN","A1AEPHS",531,0)
 S INXMZ=$P(^(0),U,2)
"RTN","A1AEPHS",532,0)
 ;S XMZ=$P(^(0),U,8)
"RTN","A1AEPHS",533,0)
 S TVER=$P(^(0),U,12)+1
"RTN","A1AEPHS",534,0)
 ;
"RTN","A1AEPHS",535,0)
 ;I XMZ DO  I $D(DUOUT)!($D(DTOUT))!('Y) Q
"RTN","A1AEPHS",536,0)
 ;.W ! S DIR(0)="Y",DIR("B")="No"
"RTN","A1AEPHS",537,0)
 ;.S DIR("A")="Add additional recipients "
"RTN","A1AEPHS",538,0)
 ;.D ^DIR K DIR
"RTN","A1AEPHS",539,0)
 ;
"RTN","A1AEPHS",540,0)
 ;develop/test
"RTN","A1AEPHS",541,0)
 I 'INXMZ DO  I $D(DUOUT)!($D(DTOUT))!('Y) Q
"RTN","A1AEPHS",542,0)
 .W ! S DIR(0)="Y",DIR("B")="No"
"RTN","A1AEPHS",543,0)
 .S DIR("A")="This Patch has no routines, do you wish to continue "
"RTN","A1AEPHS",544,0)
 .D ^DIR K DIR
"RTN","A1AEPHS",545,0)
 ;
"RTN","A1AEPHS",546,0)
 ;save ADTM for the timestamp in 11005.1
"RTN","A1AEPHS",547,0)
 D NOW^%DTC S (ADTM,Y)=% D TM^A1AEUTL1
"RTN","A1AEPHS",548,0)
 S TXVER="TEST v"_TVER
"RTN","A1AEPHS",549,0)
 W !?3,TXVER
"RTN","A1AEPHS",550,0)
 W ?$X+3,"will be added to the Patch message subject."
"RTN","A1AEPHS",551,0)
 S DIR(0)="NO^1:99"
"RTN","A1AEPHS",552,0)
 S DIR("B")=TVER
"RTN","A1AEPHS",553,0)
 S DIR("A")="You may change the TEST v[#] if necessary."
"RTN","A1AEPHS",554,0)
 W ! D ^DIR K DIR
"RTN","A1AEPHS",555,0)
 I $D(DUOUT)!($D(DTOUT))!('Y) Q
"RTN","A1AEPHS",556,0)
 ;
"RTN","A1AEPHS",557,0)
 I Y'=TVER DO  I $D(DUOUT)!($D(DTOUT))!('Y) Q
"RTN","A1AEPHS",558,0)
 .;only if they change it if not sure start over
"RTN","A1AEPHS",559,0)
 .S TVER=Y,TXVER="TEST v"_TVER_$P(TXVER," ",3)
"RTN","A1AEPHS",560,0)
 .S DIR(0)="Y",DIR("B")="NO"
"RTN","A1AEPHS",561,0)
 .S DIR("A")="Are you sure you want to change Test version to 'TEST V"_TVER_"' "
"RTN","A1AEPHS",562,0)
 .D ^DIR K DIR
"RTN","A1AEPHS",563,0)
 ;
"RTN","A1AEPHS",564,0)
 QUIT  ; end of ASKTST
"RTN","A1AEPHS",565,0)
 ;
"RTN","A1AEPHS",566,0)
 ;
"RTN","A1AEPHS",567,0)
XM I '$D(XMDUZ) D
"RTN","A1AEPHS",568,0)
 . S XMDUZ=DUZ
"RTN","A1AEPHS",569,0)
 S XMDUN=$P(^VA(200,XMDUZ,0),U)
"RTN","A1AEPHS",570,0)
 S (XMKN,XMLOCK)=""
"RTN","A1AEPHS",571,0)
 S XMK=0
"RTN","A1AEPHS",572,0)
 ;
"RTN","A1AEPHS",573,0)
 QUIT  ; end of XM
"RTN","A1AEPHS",574,0)
 ;
"RTN","A1AEPHS",575,0)
 ;
"RTN","A1AEPHS",576,0)
EOR ; end of routine A1AEPHS
"RTN","A1AEPHS1")
0^62^B2767511
"RTN","A1AEPHS1",1,0)
A1AEPHS1 ; VEN/TOAD - Continuation of A1AEPHS;2014-04-18  12:56 AM
"RTN","A1AEPHS1",2,0)
 ;;2.4;PATCH MODULE;;APR 17, 2007;Build 14
"RTN","A1AEPHS1",3,0)
 ;
"RTN","A1AEPHS1",4,0)
ESSMSG ;
"RTN","A1AEPHS1",5,0)
 ; released or entered-in-error
"RTN","A1AEPHS1",6,0)
 N XMTEXT,XMINSTR,STAT,PID,PRI,REL,COMP,I,CAT,%
"RTN","A1AEPHS1",7,0)
 S PID=$P(A1AE0,U,1)
"RTN","A1AEPHS1",8,0)
 I $P(PID,"*",2)=999 D
"RTN","A1AEPHS1",9,0)
 . S $P(PID,"*",2)="DBA" ; Patch ID
"RTN","A1AEPHS1",10,0)
 I $L($G(A1AEX))>2 D
"RTN","A1AEPHS1",11,0)
 . S PID=A1AEX ;rwf
"RTN","A1AEPHS1",12,0)
 S REL=$$FMTE^XLFDT(DT,"5Z") ; Release Date
"RTN","A1AEPHS1",13,0)
 I A1AENEW="e" D
"RTN","A1AEPHS1",14,0)
 . S STAT=2 ; Entered-in-Error
"RTN","A1AEPHS1",15,0)
 . S (PRI,COMP,CAT)=""
"RTN","A1AEPHS1",16,0)
 E  D
"RTN","A1AEPHS1",17,0)
 . S STAT=3 ; Released
"RTN","A1AEPHS1",18,0)
 . S COMP=$$FMTE^XLFDT($P(A1AE0,U,18),"5Z") ; Install by Date
"RTN","A1AEPHS1",19,0)
 . S PRI=$P(A1AE0,U,7) ; Priority
"RTN","A1AEPHS1",20,0)
 . S I=0
"RTN","A1AEPHS1",21,0)
 . S CAT=""
"RTN","A1AEPHS1",22,0)
 . F  S I=$O(^A1AE(11005,+$G(DA),"C",I)) Q:'I  D
"RTN","A1AEPHS1",23,0)
 . . S CAT=CAT_","_^(I,0) ; Category
"RTN","A1AEPHS1",24,0)
 . S CAT=$E(CAT,2,999)
"RTN","A1AEPHS1",25,0)
 S XMTEXT(1)=STAT_$$LJ^XLFSTR(PID,30)_$$LJ^XLFSTR("",30)_$$LJ^XLFSTR(REL,22)_$$LJ^XLFSTR(COMP,22)_PRI_$$LJ^XLFSTR(CAT,23)
"RTN","A1AEPHS1",26,0)
 S XMINSTR("FROM")="POSTMASTER"
"RTN","A1AEPHS1",27,0)
 D SENDMSG^XMXAPI(DUZ,"NPM/ESS Transaction","XMTEXT","G.A1AE PACKAGE RELEASE@FORUM.OSEHRA.ORG",.XMINSTR) ; VEN/SMH - changed.
"RTN","A1AEPHS1",28,0)
 ;
"RTN","A1AEPHS1",29,0)
 QUIT  ; end of ESSMSG
"RTN","A1AEPK")
0^34^B41374404
"RTN","A1AEPK",1,0)
A1AEPK ; ISF/RWF - Package Module ;2014-03-28  4:56 PM
"RTN","A1AEPK",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEPK",3,0)
 G:$D(^DOPT("A1AEPK",5)) A S ^DOPT("A1AEPK",0)="Entry/Edit Package Menu Option^1N^" F I=1:1 S X=$T(@I) Q:X=""  S ^DOPT("A1AEPK",I,0)=$P(X,";;",2,99)
"RTN","A1AEPK",4,0)
 S DIK="^DOPT(""A1AEPK""," D IXALL^DIK
"RTN","A1AEPK",5,0)
A W !! S DIC="^DOPT(""A1AEPK"",",DIC(0)="AEMQ" D ^DIC Q:Y<0  D @+Y G A
"RTN","A1AEPK",6,0)
 ;
"RTN","A1AEPK",7,0)
1 ;;Add a Package
"RTN","A1AEPK",8,0)
 N A1AEFL,A1AETY,A1AEPKIF,A1AEPK,A1AEVR
"RTN","A1AEPK",9,0)
 S A1AEFL=11005,A1AETY="PK",DIC("S")="I $D(^A1AE(11007,+Y,""PH"",DUZ,0))" D PKG^A1AEUTL G Q:'$D(A1AEPK)
"RTN","A1AEPK",10,0)
 D VER G Q:'$D(A1AEVR)
"RTN","A1AEPK",11,0)
 S A1AENB=0,X=A1AEPK_"*"_A1AEVR_"*0",DIC="^A1AE(11005,",DIC(0)="LE" D ^DIC Q:Y<1
"RTN","A1AEPK",12,0)
 S DA=+Y,A1AEPD=$P(Y,U,2),A1AEPD2=$TR($P(A1AEPD,"*",1,2),"*"," "),$P(^A1AE(11005,DA,0),U,2,4)=A1AEPKIF_U_A1AEVR_U_"0"
"RTN","A1AEPK",13,0)
 W !!,"Package Added: ",A1AEPD2,!
"RTN","A1AEPK",14,0)
 S $P(^A1AE(11005,DA,0),"^",8)="u",$P(^(0),"^",9)=DUZ,$P(^(0),"^",12)=DT,^A1AE(11005,"AS",A1AEPKIF,A1AEVR,"u",A1AENB,DA)=""
"RTN","A1AEPK",15,0)
 S DIE="^A1AE(11005,",DR="40///"_A1AEPD2 D ^DIE ;New Package Name
"RTN","A1AEPK",16,0)
 ;
"RTN","A1AEPK",17,0)
 S (X,DINUM)=DA,DIC="^A1AE(11005.1,",DIC("DR")="20///"_"No routines included" K DD,DO D FILE^DICN K DE,DQ,DR,DIC("DR")
"RTN","A1AEPK",18,0)
 S (X,DINUM)=DA,DIC="^A1AE(11005.5," K DD,D0 D FILE^DICN K DE,DQ,DR
"RTN","A1AEPK",19,0)
 ;
"RTN","A1AEPK",20,0)
 S DR="[A1AE ADD/EDIT PATCHES]" D ^DIE K DQ,DE,DIE
"RTN","A1AEPK",21,0)
 D Q G 1
"RTN","A1AEPK",22,0)
 ;
"RTN","A1AEPK",23,0)
2 ;;Delete an Unverified Package
"RTN","A1AEPK",24,0)
 N DIC,A1AEPD,A1AEPD2
"RTN","A1AEPK",25,0)
 S DIC("A")="Select Package: ",DIC("S")="I ($P(^(0),U,8)=""u""!($P(^(0),U,8)=""c"")),$D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0))",DIC="^A1AE(11005,",DIC(0)="AEMQZ" W ! D ^DIC K DIC("A"),DIC("S") G Q:Y<0 S DA=+Y,A1AEPD=$P(Y,U,2),A1AE0=Y(0)
"RTN","A1AEPK",26,0)
 S $P(A1AEPD,"*",2)=$S($P(A1AEPD,"*",2)=999:"DBA",1:$P(A1AEPD,"*",2))
"RTN","A1AEPK",27,0)
 S A1AEPD2=$P($G(^A1AE(11005,DA,4)),U,1)
"RTN","A1AEPK",28,0)
PMT2 W !!,"Are you sure you want to delete package "_A1AEPD2_"? N// " R X:DTIME G Q:'$T!(X="^")!("Nn"[$E(X,1)) G DEL2:"Yy"[$E(X,1) W:X'["?" *7 W !!,"Enter Y to delete the selected patch, or N to exit." G PMT2
"RTN","A1AEPK",29,0)
DEL2 S DIK="^A1AE(11005," D ^DIK W !!?3,"...deletion of "_A1AEPD_" from 'DHCP Patch File' completed"
"RTN","A1AEPK",30,0)
 L +^A1AE(11007,$P(A1AE0,"^",2),"V",$P(A1AE0,"^",3),"PH"):0 E  W $C(7),"Couldn't obtain lock at "_$ST($ST,"PLACE"),! QUIT
"RTN","A1AEPK",31,0)
        I $D(^A1AE(11007,$P(A1AE0,"^",2),"V",$P(A1AE0,"^",3),"PH")) S:$P(A1AE0,"^",4)<^("PH") ^("PH")=$P(A1AE0,"^",4)
"RTN","A1AEPK",32,0)
        L -^A1AE(11007,$P(A1AE0,"^",2),"V",$P(A1AE0,"^",3),"PH")
"RTN","A1AEPK",33,0)
 ;delete message entry
"RTN","A1AEPK",34,0)
 S DIK="^A1AE(11005.1," D ^DIK
"RTN","A1AEPK",35,0)
 G Q
"RTN","A1AEPK",36,0)
 ;
"RTN","A1AEPK",37,0)
3 ;;Edit a Package
"RTN","A1AEPK",38,0)
 N A1AESTOP
"RTN","A1AEPK",39,0)
 S A1AESTOP=0
"RTN","A1AEPK",40,0)
 F  D  D Q Q:A1AESTOP
"RTN","A1AEPK",41,0)
 . N DIC,X,Y,DA,A1AEPD
"RTN","A1AEPK",42,0)
 . S DIC("A")="Select Package: "
"RTN","A1AEPK",43,0)
 . S DIC("S")="I $D(^A1AE(11007,+$P(^(0),U,2),""PH"",DUZ,0))"
"RTN","A1AEPK",44,0)
 . S DIC="^A1AE(11005,",DIC(0)="AEMQ"
"RTN","A1AEPK",45,0)
 . W !
"RTN","A1AEPK",46,0)
 . D ^DIC I Y<0 S A1AESTOP=1 Q
"RTN","A1AEPK",47,0)
 . S DA=+Y,A1AEPD=$P(Y,U,2),A1AEPD2=$P($G(^A1AE(11005,DA,4)),U) K DIC Q:A1AEPD2=""
"RTN","A1AEPK",48,0)
 . L +^A1AE(11005,DA):5 E  D  Q
"RTN","A1AEPK",49,0)
 . . W !,$C(7),"This package is being edited by another user" H 3
"RTN","A1AEPK",50,0)
 . ;I $P(A1AEPD,"*",2)=999 S $P(A1AEPD,"*",2)="DBA"
"RTN","A1AEPK",51,0)
 . I '$D(^A1AE(11005.1,DA,0)) D
"RTN","A1AEPK",52,0)
 . . N DINUM,DD,DO,DIC
"RTN","A1AEPK",53,0)
 . . S (X,DINUM)=DA,DIC(0)="LE",DIC="^A1AE(11005.1,"
"RTN","A1AEPK",54,0)
 . . S DIC("DR")="20///No routines included"
"RTN","A1AEPK",55,0)
 . . D FILE^DICN
"RTN","A1AEPK",56,0)
 . W !!,"Editing Package: ",A1AEPD2,!
"RTN","A1AEPK",57,0)
 . N A1AEOLD
"RTN","A1AEPK",58,0)
 . S A1AEOLD=$P($G(^A1AE(11005,DA,0)),U,8)
"RTN","A1AEPK",59,0)
 . D
"RTN","A1AEPK",60,0)
 . . N A1AEOLD,DIE,DR ; Preserve A1AEOLD.  It's killed in Q^A1AEPHS
"RTN","A1AEPK",61,0)
 . . S DIE="^A1AE(11005,",DR="[A1AE ADD/EDIT PATCHES]"
"RTN","A1AEPK",62,0)
 . . D ^DIE
"RTN","A1AEPK",63,0)
 . N A1AE0,A1AENEW
"RTN","A1AEPK",64,0)
 . S A1AE0=$G(^A1AE(11005,DA,0))
"RTN","A1AEPK",65,0)
 . L -^A1AE(11005,DA)
"RTN","A1AEPK",66,0)
 . S A1AENEW=$P(A1AE0,U,8)
"RTN","A1AEPK",67,0)
 . I A1AEOLD'="v"!(A1AENEW'="e") Q
"RTN","A1AEPK",68,0)
 . ; Send the 'Entered in Error' bulletin
"RTN","A1AEPK",69,0)
 . N A1AETX,X,A1AEOPT
"RTN","A1AEPK",70,0)
 . S A1AEOPT="'Entered in Error'"
"RTN","A1AEPK",71,0)
 . S X=$$GET1^DIQ(11005,DA_",",8.5,"Z","A1AETX")
"RTN","A1AEPK",72,0)
 . S A1AETX(.1,0)=""
"RTN","A1AEPK",73,0)
 . S A1AETX(.2,0)="Entered in Error Description:"
"RTN","A1AEPK",74,0)
 . D BOTH^A1AEPHS
"RTN","A1AEPK",75,0)
 Q
"RTN","A1AEPK",76,0)
 ;
"RTN","A1AEPK",77,0)
4 ;;Verify a Package
"RTN","A1AEPK",78,0)
 N A1AEPKV
"RTN","A1AEPK",79,0)
 S A1AEPKV=1
"RTN","A1AEPK",80,0)
 S DIC("A")="Select Package: ",DIC("S")="I $P(^(0),U,8)=""c"",$D(^A1AE(11007,+$P(^(0),U,2),""PB"",DUZ,0)),$P(^(0),U,2)=""V""",DIC="^A1AE(11005,",DIC(0)="AEMQZ"
"RTN","A1AEPK",81,0)
 W ! D ^DIC K DIC G Q:Y<0 S (A1AEIFN,DA)=+Y,A1AEPD=$P(Y,U,2),A1AEPD2=$P($G(^A1AE(11005,DA,4)),U)
"RTN","A1AEPK",82,0)
 I A1AEPD2="" W !,"This is not a Package Entry." Q
"RTN","A1AEPK",83,0)
 ;S $P(A1AEPD,"*",2)=$S($P(A1AEPD,"*",2)=999:"DBA",1:$P(A1AEPD,"*",2))
"RTN","A1AEPK",84,0)
 ;
"RTN","A1AEPK",85,0)
 S Y=$P(Y(0),"^",17) I Y,Y>DT W !!,"Do not release until: ",$$FMTE^XLFDT(Y)
"RTN","A1AEPK",86,0)
 S A1AEST=$S($P(Y(0),U,7)="e":2,1:61) ;Package complience is 60 days.
"RTN","A1AEPK",87,0)
 ;
"RTN","A1AEPK",88,0)
 W !!,"Internal Comments to developers/releasers for: ",A1AEPD2,! K Y S DIE="^A1AE(11005,",DR="16;" D ^DIE K DQ,DE,DIE,DIC,DR,D0,DA
"RTN","A1AEPK",89,0)
 W ! S DIR(0)="Y",DIR("B")="No",DIR("A")="Continue and Display Patch " D ^DIR K DIR I 'Y D Q G 4
"RTN","A1AEPK",90,0)
 ;check routine patches
"RTN","A1AEPK",91,0)
 F AX=0:0 S AX=$O(^A1AE(11005,A1AEIFN,"P",AX)) Q:'AX  I $D(^(AX,0)) S X=^(0) D RCHK^A1AEM2
"RTN","A1AEPK",92,0)
 W ! S DIR(0)="E" D ^DIR K DIR I 'Y D Q G 4
"RTN","A1AEPK",93,0)
 ;
"RTN","A1AEPK",94,0)
 S D0=A1AEIFN,A1AEVPR="",A1AEHD="DHCP Completed/NotReleased Patch Display"
"RTN","A1AEPK",95,0)
 W ! S %ZIS="",A1AEPGE=0 D ^%ZIS G Q:POP K IOP,%ZIS U IO S ^UTILITY($J,1)="D HD^A1AEPH2",DIWF="B4|" K ^UTILITY($J,"W"),DXS D HD^A1AEPH2,^A1AEP
"RTN","A1AEPK",96,0)
 K DN,DXS,DIWF
"RTN","A1AEPK",97,0)
 K A1AEHD,A1AELNE,A1AEOUT,A1AEPGE,A1AEVPR D CLOSE^A1AEUTL1
"RTN","A1AEPK",98,0)
 S A1AEST=$$FMADD^XLFDT(DT,A1AEST)
"RTN","A1AEPK",99,0)
 W !!,"Releasing Package: ",A1AEPD2,! K Y
"RTN","A1AEPK",100,0)
 S DA=A1AEIFN,DIE="^A1AE(11005,",DR="18//^S X=A1AEST;8;S Y=$S(X=""e"":""@10"",1:"""");@10;8.5"
"RTN","A1AEPK",101,0)
 L +@(DIE_DA_")"):5
"RTN","A1AEPK",102,0)
 I '$T W !,$C(7),"This package is being released by another user" H 3
"RTN","A1AEPK",103,0)
 E  D ^DIE,UPVER K DQ,DE L -@(DIE_DA_")")
"RTN","A1AEPK",104,0)
 D Q G 4
"RTN","A1AEPK",105,0)
 ;
"RTN","A1AEPK",106,0)
6 ;;Create a packman message
"RTN","A1AEPK",107,0)
 G PACK^A1AEM
"RTN","A1AEPK",108,0)
 ;
"RTN","A1AEPK",109,0)
7 ;;Forward a Complete/unverified message
"RTN","A1AEPK",110,0)
 G FCOM^A1AEM2
"RTN","A1AEPK",111,0)
 ;
"RTN","A1AEPK",112,0)
8 ;;Forward a Verified patch message
"RTN","A1AEPK",113,0)
 G FVER^A1AEM2
"RTN","A1AEPK",114,0)
 ;
"RTN","A1AEPK",115,0)
Q K ^UTILITY($J,"A1AECOP"),A1AEOLPD,A1AE0,A1AEPKIF,A1AEPKNM,A1AEPD,A1AEPD2,A1AEPK,A1AEVR,A1AENB,A1AEFL,A1AETY
"RTN","A1AEPK",116,0)
 K DIK,A1AEHD,A1AEIFN,A1AELNE,A1AEOUT,A1AEPGE,A1AEVPR
"RTN","A1AEPK",117,0)
 K AEQ,A1AESUB,A1AETX,A1AEXMZ,A1NAM,A1NAM1,AX,AXMZ,A1AEST,A1AETVR
"RTN","A1AEPK",118,0)
 K JL2,SAVEX,C,D0,DA,DI,DIG,DIH,DIW,DIV,DR,XMB,XMDT,XMDUZ,XMM,XMSUB Q
"RTN","A1AEPK",119,0)
 ;
"RTN","A1AEPK",120,0)
VER ;Get a NEW Version #.
"RTN","A1AEPK",121,0)
 N VR,CV K A1AEVR
"RTN","A1AEPK",122,0)
 ;Start at 999 so se don't get the DBA version.
"RTN","A1AEPK",123,0)
 S CV=$O(^A1AE(11007,A1AEPKIF,"V",999),-1) I CV>0 S CV=$G(^A1AE(11007,A1AEPKIF,"V",CV,0))
"RTN","A1AEPK",124,0)
 I CV W !,"The current version number is ",+CV,"  Verified on ",$$FMTE^XLFDT($P(CV,U,2))
"RTN","A1AEPK",125,0)
 S CV=+CV
"RTN","A1AEPK",126,0)
 R !,"New Version Number: ",VR:DTIME Q:'VR
"RTN","A1AEPK",127,0)
 I VR'>CV W !,"The New Package Version must be greater than the current version of ",CV G VER
"RTN","A1AEPK",128,0)
 S A1AEVR=VR
"RTN","A1AEPK",129,0)
 Q
"RTN","A1AEPK",130,0)
 ;
"RTN","A1AEPK",131,0)
UPVER ;Update files 11007 and 120102.
"RTN","A1AEPK",132,0)
 N FDA,VR,IEN,X
"RTN","A1AEPK",133,0)
 S VR=$P(^A1AE(11005,A1AEIFN,4),U),VR=$P(VR," ",$L(VR," "))
"RTN","A1AEPK",134,0)
 S IEN=$P(^A1AE(11005,A1AEIFN,0),U,2)
"RTN","A1AEPK",135,0)
 S ^A1AE(11007,IEN,"V",VR,0)=VR_U_$$DT^XLFDT() ;DINUM entry
"RTN","A1AEPK",136,0)
 S ^A1AE(11007,IEN,"V",VR,"PB")=0,^("PH")=0,^("PR")=0
"RTN","A1AEPK",137,0)
 ;Now for file DHCP APPLICATION (#120102)
"RTN","A1AEPK",138,0)
 K FDA,IEN
"RTN","A1AEPK",139,0)
 S X=$P(^A1AE(11005,A1AEIFN,0),U),X=$P(X,"*")
"RTN","A1AEPK",140,0)
 S IEN=$$FIND1^DIC(120102,,"MX",X) Q:IEN'>0
"RTN","A1AEPK",141,0)
 S FDA(120102,IEN_",",1)=VR D FILE^DIE("K","FDA")
"RTN","A1AEPK",142,0)
 Q
"RTN","A1AEPSVR")
0^56^B231769506
"RTN","A1AEPSVR",1,0)
A1AEPSVR ; VEN/SMH - Mailman Patch Server;2014-04-15  9:27 PM
"RTN","A1AEPSVR",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEPSVR",3,0)
 ; This routine reads patches coming via email from VA Forum
"RTN","A1AEPSVR",4,0)
 ; and files them into this forum
"RTN","A1AEPSVR",5,0)
 ;
"RTN","A1AEPSVR",6,0)
 ; TODO: I created fields latterly that hold the file names and file
"RTN","A1AEPSVR",7,0)
 ;       paths to use. They are only used in the KIDs Version Control
"RTN","A1AEPSVR",8,0)
 ;       breakout. They can be used to track all the mail information
"RTN","A1AEPSVR",9,0)
 ;       rather than keep them in variables.
"RTN","A1AEPSVR",10,0)
 ;
"RTN","A1AEPSVR",11,0)
EN ; Main entry point
"RTN","A1AEPSVR",12,0)
 ; Mailman Server Variables
"RTN","A1AEPSVR",13,0)
 ; ZEXCEPT: XMER - Execution Status
"RTN","A1AEPSVR",14,0)
 ; ZEXCEPT: XMRG - Current line contents
"RTN","A1AEPSVR",15,0)
 ; ZEXCEPT: XMPOS - Current position (line number?)
"RTN","A1AEPSVR",16,0)
 ; ZEXCEPT: XMREC - M code to get next line. Execute this.
"RTN","A1AEPSVR",17,0)
 ; ZEXCEPT: XMZ - Message IEN in 3.9
"RTN","A1AEPSVR",18,0)
 I '$D(^XMB(3.9,XMZ)) QUIT  ; Just a failsafe... shouldn't happen in real life.
"RTN","A1AEPSVR",19,0)
 ;
"RTN","A1AEPSVR",20,0)
 ; Add the import key if we are the postmaster
"RTN","A1AEPSVR",21,0)
 I DUZ=.5,'$D(^XUSEC("A1AE IMPORT",DUZ)) D
"RTN","A1AEPSVR",22,0)
 . N FDA S FDA(200.051,"+1,.5,",.01)="`"_$O(^DIC(19.1,"B","A1AE IMPORT",""))
"RTN","A1AEPSVR",23,0)
 . N DIERR D UPDATE^DIE("E",$NA(FDA))
"RTN","A1AEPSVR",24,0)
 . I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEPSVR",25,0)
 ;
"RTN","A1AEPSVR",26,0)
 ; Initial variables
"RTN","A1AEPSVR",27,0)
 N CNT S CNT=1                      ; Internal counter
"RTN","A1AEPSVR",28,0)
 S XMER=0                           ; See above
"RTN","A1AEPSVR",29,0)
 K ^TMP($J,"TXT"),^("KID"),^("MSG") ; Globals where we load our messages
"RTN","A1AEPSVR",30,0)
 N STATE S STATE="START"            ; State machine variable
"RTN","A1AEPSVR",31,0)
 ;
"RTN","A1AEPSVR",32,0)
 F  X XMREC Q:XMER  D @STATE        ; Main reading loop. Constructs ^TMP($J,"TXT"),^("KID")
"RTN","A1AEPSVR",33,0)
 ;
"RTN","A1AEPSVR",34,0)
 I '$D(^TMP($J,"TXT")) D EN^DDIOL("Message "_XMZ_" ("_$P(^XMB(3.9,XMZ,0),U)_")"_" is Not a Patch Message") QUIT
"RTN","A1AEPSVR",35,0)
 ;
"RTN","A1AEPSVR",36,0)
 ; Next few lines to construct ^("MSG"). It's the ^("TXT") then the ^("KID")
"RTN","A1AEPSVR",37,0)
 M ^TMP($J,"MSG")=^TMP($J,"TXT")
"RTN","A1AEPSVR",38,0)
 N LS S LS=$O(^TMP($J,"MSG"," "),-1)
"RTN","A1AEPSVR",39,0)
 N NS S NS=LS+1
"RTN","A1AEPSVR",40,0)
 I $D(^TMP($J,"KID")) N I F I=1:1 Q:'$D(^TMP($J,"KID",I))  S ^TMP($J,"MSG",NS,0)=^TMP($J,"KID",I,0),NS=NS+1
"RTN","A1AEPSVR",41,0)
 ;
"RTN","A1AEPSVR",42,0)
 ; Now that we have the entire message, now process it.
"RTN","A1AEPSVR",43,0)
 D CLEANHF^A1AEK2M0($NA(^TMP($J,"TXT"))) ; add $TXT/$END TXT if necessary
"RTN","A1AEPSVR",44,0)
 N TXTINFO
"RTN","A1AEPSVR",45,0)
 N OLDTRAP S OLDTRAP=$ET
"RTN","A1AEPSVR",46,0)
 N $ET,$ES S $ET="D ANATRAP^A1AEK2M2("""_XMZ_" - "_$P(^XMB(3.9,XMZ,0),U)_""")"
"RTN","A1AEPSVR",47,0)
 D ANALYZE^A1AEK2M2(.TXTINFO,$NA(^TMP($J,"TXT")))
"RTN","A1AEPSVR",48,0)
 S $ET=OLDTRAP
"RTN","A1AEPSVR",49,0)
 N INFOONLY S INFOONLY=$$INFOONLY^A1AEK2M(.TXTINFO) ; Info Only patch?
"RTN","A1AEPSVR",50,0)
 ;
"RTN","A1AEPSVR",51,0)
 ; Populate the result variable for the mail message
"RTN","A1AEPSVR",52,0)
 ; TODO: Result variable populatation needs to be abstracted.
"RTN","A1AEPSVR",53,0)
 ; TODO: Latterly, we can load this from the file. See above.
"RTN","A1AEPSVR",54,0)
 ;       but we need to file it here first.
"RTN","A1AEPSVR",55,0)
 N RESULT
"RTN","A1AEPSVR",56,0)
 N CANTLOAD S CANTLOAD=0
"RTN","A1AEPSVR",57,0)
 S RESULT(TXTINFO("DESIGNATION"),"TXT")="Mailed Patch"
"RTN","A1AEPSVR",58,0)
 I INFOONLY S RESULT(TXTINFO("DESIGNATION"),"KID")="Info Only Patch"
"RTN","A1AEPSVR",59,0)
 E  D
"RTN","A1AEPSVR",60,0)
 . I $D(^TMP($J,"KID")) S RESULT(TXTINFO("DESIGNATION"),"KID")="KID patch loaded inline"
"RTN","A1AEPSVR",61,0)
 . E  D
"RTN","A1AEPSVR",62,0)
 . . S RESULT(TXTINFO("DESIGNATION"),"KID")=""
"RTN","A1AEPSVR",63,0)
 . . S RESULT(TXTINFO("DESIGNATION"),"CANTLOAD")="Mail Message"
"RTN","A1AEPSVR",64,0)
 . . S CANTLOAD=1
"RTN","A1AEPSVR",65,0)
 ;
"RTN","A1AEPSVR",66,0)
 ; Add dependencies in description (temporary or permanent... I don't know now).
"RTN","A1AEPSVR",67,0)
 D PREREQAD^A1AEK2M(.TXTINFO)
"RTN","A1AEPSVR",68,0)
 ;
"RTN","A1AEPSVR",69,0)
 ; Load whole thing and split
"RTN","A1AEPSVR",70,0)
 D ADD0^A1AEK2M(.TXTINFO,$NA(^TMP($J,"MSG")),CANTLOAD,INFOONLY,.RESULT)
"RTN","A1AEPSVR",71,0)
 ;
"RTN","A1AEPSVR",72,0)
 ; Mail bulletin
"RTN","A1AEPSVR",73,0)
 D MAIL^A1AEK2M(.RESULT)
"RTN","A1AEPSVR",74,0)
 ;
"RTN","A1AEPSVR",75,0)
 ; Remove Temp Globals
"RTN","A1AEPSVR",76,0)
 K ^TMP($J,"KID"),^("TXT"),^("MSG")
"RTN","A1AEPSVR",77,0)
 ;
"RTN","A1AEPSVR",78,0)
 ; Remove original message from Mailman. XMZ is currently present in the ST.
"RTN","A1AEPSVR",79,0)
 N XMSER S XMSER="S.A1AE LOAD RELEASED PATCH"
"RTN","A1AEPSVR",80,0)
 D REMSBMSG^XMA1C
"RTN","A1AEPSVR",81,0)
 QUIT
"RTN","A1AEPSVR",82,0)
 ;
"RTN","A1AEPSVR",83,0)
START ; Message start state
"RTN","A1AEPSVR",84,0)
 ; ZEXCEPT: XMRG,STATE,CNT
"RTN","A1AEPSVR",85,0)
 I XMRG'["$TXT" QUIT
"RTN","A1AEPSVR",86,0)
 S STATE="TXT"
"RTN","A1AEPSVR",87,0)
 S ^TMP($J,"TXT",CNT,0)=XMRG,CNT=CNT+1
"RTN","A1AEPSVR",88,0)
 QUIT
"RTN","A1AEPSVR",89,0)
 ;
"RTN","A1AEPSVR",90,0)
TXT ; $TXT (already found) to $END TXT
"RTN","A1AEPSVR",91,0)
 ; ZEXCEPT: XMRG,STATE,CNT
"RTN","A1AEPSVR",92,0)
 S ^TMP($J,"TXT",CNT,0)=XMRG,CNT=CNT+1
"RTN","A1AEPSVR",93,0)
 I XMRG["$END TXT" S STATE="SKID",CNT=1
"RTN","A1AEPSVR",94,0)
 QUIT
"RTN","A1AEPSVR",95,0)
 ;
"RTN","A1AEPSVR",96,0)
SKID ; Start $KID (if found)
"RTN","A1AEPSVR",97,0)
 ; ZEXCEPT: XMRG,STATE,CNT
"RTN","A1AEPSVR",98,0)
 I XMRG'["$KID" S STATE="END" QUIT
"RTN","A1AEPSVR",99,0)
 E  S ^TMP($J,"KID",CNT,0)=XMRG,CNT=CNT+1,STATE="KID"
"RTN","A1AEPSVR",100,0)
 QUIT
"RTN","A1AEPSVR",101,0)
 ;
"RTN","A1AEPSVR",102,0)
KID ; $KID (already found) to $END KID
"RTN","A1AEPSVR",103,0)
 ; ZEXCEPT: XMRG,STATE,CNT
"RTN","A1AEPSVR",104,0)
 S ^TMP($J,"KID",CNT,0)=XMRG,CNT=CNT+1
"RTN","A1AEPSVR",105,0)
 I XMRG["$END KID" S STATE="END"
"RTN","A1AEPSVR",106,0)
 QUIT
"RTN","A1AEPSVR",107,0)
 ;
"RTN","A1AEPSVR",108,0)
END ; Read in a infinite loop
"RTN","A1AEPSVR",109,0)
 ; ZEXCEPT: XMRG,STATE,CNT
"RTN","A1AEPSVR",110,0)
 QUIT
"RTN","A1AEPSVR",111,0)
 ;
"RTN","A1AEPSVR",112,0)
TEST ; Testing entry point by Wally
"RTN","A1AEPSVR",113,0)
 ; ZEXCEPT: DTIME
"RTN","A1AEPSVR",114,0)
 N XMRG,XMER,XMREC,XMZ
"RTN","A1AEPSVR",115,0)
 W !,"Message number: " R XMZ:$G(DTIME,300) Q:'XMZ
"RTN","A1AEPSVR",116,0)
 S XMREC="D REC^XMS3"
"RTN","A1AEPSVR",117,0)
 D EN
"RTN","A1AEPSVR",118,0)
 QUIT
"RTN","A1AEPSVR",119,0)
 ;
"RTN","A1AEPSVR",120,0)
UNITTEST D EN^XTMUNIT($T(+0),1) QUIT
"RTN","A1AEPSVR",121,0)
UT1 ; @TEST Send a Mailman KIDS message to S.A1AE LOAD RELEASED PATCH
"RTN","A1AEPSVR",122,0)
 ; TODO: Create the ZZZ package in 9.4
"RTN","A1AEPSVR",123,0)
 N DIK,DA ; fur Fileman
"RTN","A1AEPSVR",124,0)
 S DUZ=.5 ; Must be defined for auditing.
"RTN","A1AEPSVR",125,0)
 N PKGAB S PKGAB="ZZZ"
"RTN","A1AEPSVR",126,0)
 ; Get entry from package file if it exists.
"RTN","A1AEPSVR",127,0)
 N PKIEN S PKIEN=$O(^DIC(9.4,"C",PKGAB,0))
"RTN","A1AEPSVR",128,0)
 ; If package is there, delete everything that belongs to it
"RTN","A1AEPSVR",129,0)
 I PKIEN D 
"RTN","A1AEPSVR",130,0)
 . S DA="" F  S DA=$O(^A1AE(11005,"D",PKIEN,DA)) Q:'DA  D
"RTN","A1AEPSVR",131,0)
 . . F DIK="^A1AE(11005,","^A1AE(11005.1," D ^DIK  ; PM Patch and Message files
"RTN","A1AEPSVR",132,0)
 . S DIK="^A1AE(11007,",DA=PKIEN D ^DIK  ; PM Package File
"RTN","A1AEPSVR",133,0)
 ;
"RTN","A1AEPSVR",134,0)
 D CHKTF^XTMUNIT('$D(^A1AE(11005,"D",PKIEN)),"Package should be gone")
"RTN","A1AEPSVR",135,0)
 N MESS,LN0,LN
"RTN","A1AEPSVR",136,0)
 N I F I=1:1 S LN0=$T(MESSAGE+I),LN=$P(LN0,";;",2,99) S MESS(I,0)=LN Q:LN["$END KID"
"RTN","A1AEPSVR",137,0)
 N FLAGS S FLAGS("TYPE")="K" ; KIDS
"RTN","A1AEPSVR",138,0)
 S DUZ=.5
"RTN","A1AEPSVR",139,0)
 N PD S PD="ZZZ*2.0*1"
"RTN","A1AEPSVR",140,0)
 D SENDMSG^XMXAPI(DUZ,PD,$NA(MESS),"S.A1AE LOAD RELEASED PATCH",.FLAGS,.MESSAGEIEN)
"RTN","A1AEPSVR",141,0)
 D EN^DDIOL("Waiting 10 seconds for taskman to finish...")
"RTN","A1AEPSVR",142,0)
 HANG 10
"RTN","A1AEPSVR",143,0)
 D CHKTF^XTMUNIT($D(^A1AE(11005,"D",PKIEN)),"Package should be present")
"RTN","A1AEPSVR",144,0)
 QUIT
"RTN","A1AEPSVR",145,0)
 ;
"RTN","A1AEPSVR",146,0)
MESSAGE ;;
"RTN","A1AEPSVR",147,0)
 ;;$TXT Created by TESTMASTER,USER at VEN.SMH101.COM  (KIDS) on Thursday, 01/07/14 at 15:55
"RTN","A1AEPSVR",148,0)
 ;;=============================================================================
"RTN","A1AEPSVR",149,0)
 ;;Run Date: JAN 22, 2014                     Designation: ZZZ*2*1
"RTN","A1AEPSVR",150,0)
 ;;Package : ZZZ - TEST PACKAGE                  Priority: EMERGENCY
"RTN","A1AEPSVR",151,0)
 ;;Version : 2         SEQ #1                      Status: Released
"RTN","A1AEPSVR",152,0)
 ;;=============================================================================
"RTN","A1AEPSVR",153,0)
 ;;
"RTN","A1AEPSVR",154,0)
 ;;
"RTN","A1AEPSVR",155,0)
 ;;Subject: TEST IMPORT INTO PATCH MODULE VIA S.A1AE LOAD RELEASED PATCH
"RTN","A1AEPSVR",156,0)
 ;;
"RTN","A1AEPSVR",157,0)
 ;;Category: 
"RTN","A1AEPSVR",158,0)
 ;;  - Data Dictionary
"RTN","A1AEPSVR",159,0)
 ;;  - Input Template
"RTN","A1AEPSVR",160,0)
 ;;  - Print Template
"RTN","A1AEPSVR",161,0)
 ;;  - Routine
"RTN","A1AEPSVR",162,0)
 ;;
"RTN","A1AEPSVR",163,0)
 ;;Description:
"RTN","A1AEPSVR",164,0)
 ;;============
"RTN","A1AEPSVR",165,0)
 ;;
"RTN","A1AEPSVR",166,0)
 ;; 
"RTN","A1AEPSVR",167,0)
 ;;  This patch is the result of the Unit Test routine.
"RTN","A1AEPSVR",168,0)
 ;;  Please ignore it.
"RTN","A1AEPSVR",169,0)
 ;;  
"RTN","A1AEPSVR",170,0)
 ;;  Patch ID: ZZZ*2.0*1
"RTN","A1AEPSVR",171,0)
 ;;  
"RTN","A1AEPSVR",172,0)
 ;;
"RTN","A1AEPSVR",173,0)
 ;;Routine Information:
"RTN","A1AEPSVR",174,0)
 ;;====================
"RTN","A1AEPSVR",175,0)
 ;;The second line of each of these routines now looks like:
"RTN","A1AEPSVR",176,0)
 ;; ;;8.0;KERNEL;**[Patch List]**;Jul 10, 1995;Build 2
"RTN","A1AEPSVR",177,0)
 ;;
"RTN","A1AEPSVR",178,0)
 ;;The checksums below are new checksums, and
"RTN","A1AEPSVR",179,0)
 ;; can be checked with CHECK1^XTSUMBLD.
"RTN","A1AEPSVR",180,0)
 ;;
"RTN","A1AEPSVR",181,0)
 ;;Routine Name: ZOSV2GTM
"RTN","A1AEPSVR",182,0)
 ;;    Before:  B7008460   After:  B7008460  **275,425**
"RTN","A1AEPSVR",183,0)
 ;; 
"RTN","A1AEPSVR",184,0)
 ;;Routine list of preceding patches: 425
"RTN","A1AEPSVR",185,0)
 ;;
"RTN","A1AEPSVR",186,0)
 ;;=============================================================================
"RTN","A1AEPSVR",187,0)
 ;;User Information:
"RTN","A1AEPSVR",188,0)
 ;;Entered By  : PATCHMODULE,DEVELOPER         Date Entered  : JAN 22, 2014
"RTN","A1AEPSVR",189,0)
 ;;Completed By: PATCHMODULE,COMPLETER         Date Completed: JAN 22, 2014
"RTN","A1AEPSVR",190,0)
 ;;Released By : PATCHMODULE,VERIFER           Date Released : JAN 22, 2014
"RTN","A1AEPSVR",191,0)
 ;;=============================================================================
"RTN","A1AEPSVR",192,0)
 ;;
"RTN","A1AEPSVR",193,0)
 ;;
"RTN","A1AEPSVR",194,0)
 ;;Packman Mail Message:
"RTN","A1AEPSVR",195,0)
 ;;=====================
"RTN","A1AEPSVR",196,0)
 ;;
"RTN","A1AEPSVR",197,0)
 ;;$END TXT
"RTN","A1AEPSVR",198,0)
 ;;$KID ZZZ*1.0*1
"RTN","A1AEPSVR",199,0)
 ;;**INSTALL NAME**
"RTN","A1AEPSVR",200,0)
 ;;ZZZ*1.0*1
"RTN","A1AEPSVR",201,0)
 ;;"BLD",9277,0)
"RTN","A1AEPSVR",202,0)
 ;;ZZZ*1.0*1^TEST PACKAGE^0^3140102^y
"RTN","A1AEPSVR",203,0)
 ;;"BLD",9277,1,0)
"RTN","A1AEPSVR",204,0)
 ;;^^1^1^3140102^
"RTN","A1AEPSVR",205,0)
 ;;"BLD",9277,1,1,0)
"RTN","A1AEPSVR",206,0)
 ;;TEST TEST
"RTN","A1AEPSVR",207,0)
 ;;"BLD",9277,4,0)
"RTN","A1AEPSVR",208,0)
 ;;^9.64PA^^
"RTN","A1AEPSVR",209,0)
 ;;"BLD",9277,6.3)
"RTN","A1AEPSVR",210,0)
 ;;2
"RTN","A1AEPSVR",211,0)
 ;;"BLD",9277,"KRN",0)
"RTN","A1AEPSVR",212,0)
 ;;^9.67PA^779.2^20
"RTN","A1AEPSVR",213,0)
 ;;"BLD",9277,"KRN",.4,0)
"RTN","A1AEPSVR",214,0)
 ;;.4
"RTN","A1AEPSVR",215,0)
 ;;"BLD",9277,"KRN",.401,0)
"RTN","A1AEPSVR",216,0)
 ;;.401
"RTN","A1AEPSVR",217,0)
 ;;"BLD",9277,"KRN",.402,0)
"RTN","A1AEPSVR",218,0)
 ;;.402
"RTN","A1AEPSVR",219,0)
 ;;"BLD",9277,"KRN",.403,0)
"RTN","A1AEPSVR",220,0)
 ;;.403
"RTN","A1AEPSVR",221,0)
 ;;"BLD",9277,"KRN",.5,0)
"RTN","A1AEPSVR",222,0)
 ;;.5
"RTN","A1AEPSVR",223,0)
 ;;"BLD",9277,"KRN",.84,0)
"RTN","A1AEPSVR",224,0)
 ;;.84
"RTN","A1AEPSVR",225,0)
 ;;"BLD",9277,"KRN",3.6,0)
"RTN","A1AEPSVR",226,0)
 ;;3.6
"RTN","A1AEPSVR",227,0)
 ;;"BLD",9277,"KRN",3.8,0)
"RTN","A1AEPSVR",228,0)
 ;;3.8
"RTN","A1AEPSVR",229,0)
 ;;"BLD",9277,"KRN",9.2,0)
"RTN","A1AEPSVR",230,0)
 ;;9.2
"RTN","A1AEPSVR",231,0)
 ;;"BLD",9277,"KRN",9.8,0)
"RTN","A1AEPSVR",232,0)
 ;;9.8
"RTN","A1AEPSVR",233,0)
 ;;"BLD",9277,"KRN",9.8,"NM",0)
"RTN","A1AEPSVR",234,0)
 ;;^9.68A^1^1
"RTN","A1AEPSVR",235,0)
 ;;"BLD",9277,"KRN",9.8,"NM",1,0)
"RTN","A1AEPSVR",236,0)
 ;;ZOSV2GTM^^0^B7008460
"RTN","A1AEPSVR",237,0)
 ;;"BLD",9277,"KRN",9.8,"NM","B","ZOSV2GTM",1)
"RTN","A1AEPSVR",238,0)
 ;;
"RTN","A1AEPSVR",239,0)
 ;;"BLD",9277,"KRN",19,0)
"RTN","A1AEPSVR",240,0)
 ;;19
"RTN","A1AEPSVR",241,0)
 ;;"BLD",9277,"KRN",19.1,0)
"RTN","A1AEPSVR",242,0)
 ;;19.1
"RTN","A1AEPSVR",243,0)
 ;;"BLD",9277,"KRN",101,0)
"RTN","A1AEPSVR",244,0)
 ;;101
"RTN","A1AEPSVR",245,0)
 ;;"BLD",9277,"KRN",409.61,0)
"RTN","A1AEPSVR",246,0)
 ;;409.61
"RTN","A1AEPSVR",247,0)
 ;;"BLD",9277,"KRN",771,0)
"RTN","A1AEPSVR",248,0)
 ;;771
"RTN","A1AEPSVR",249,0)
 ;;"BLD",9277,"KRN",779.2,0)
"RTN","A1AEPSVR",250,0)
 ;;779.2
"RTN","A1AEPSVR",251,0)
 ;;"BLD",9277,"KRN",870,0)
"RTN","A1AEPSVR",252,0)
 ;;870
"RTN","A1AEPSVR",253,0)
 ;;"BLD",9277,"KRN",8989.51,0)
"RTN","A1AEPSVR",254,0)
 ;;8989.51
"RTN","A1AEPSVR",255,0)
 ;;"BLD",9277,"KRN",8989.52,0)
"RTN","A1AEPSVR",256,0)
 ;;8989.52
"RTN","A1AEPSVR",257,0)
 ;;"BLD",9277,"KRN",8994,0)
"RTN","A1AEPSVR",258,0)
 ;;8994
"RTN","A1AEPSVR",259,0)
 ;;"BLD",9277,"KRN","B",.4,.4)
"RTN","A1AEPSVR",260,0)
 ;;
"RTN","A1AEPSVR",261,0)
 ;;"BLD",9277,"KRN","B",.401,.401)
"RTN","A1AEPSVR",262,0)
 ;;
"RTN","A1AEPSVR",263,0)
 ;;"BLD",9277,"KRN","B",.402,.402)
"RTN","A1AEPSVR",264,0)
 ;;
"RTN","A1AEPSVR",265,0)
 ;;"BLD",9277,"KRN","B",.403,.403)
"RTN","A1AEPSVR",266,0)
 ;;
"RTN","A1AEPSVR",267,0)
 ;;"BLD",9277,"KRN","B",.5,.5)
"RTN","A1AEPSVR",268,0)
 ;;
"RTN","A1AEPSVR",269,0)
 ;;"BLD",9277,"KRN","B",.84,.84)
"RTN","A1AEPSVR",270,0)
 ;;
"RTN","A1AEPSVR",271,0)
 ;;"BLD",9277,"KRN","B",3.6,3.6)
"RTN","A1AEPSVR",272,0)
 ;;
"RTN","A1AEPSVR",273,0)
 ;;"BLD",9277,"KRN","B",3.8,3.8)
"RTN","A1AEPSVR",274,0)
 ;;
"RTN","A1AEPSVR",275,0)
 ;;"BLD",9277,"KRN","B",9.2,9.2)
"RTN","A1AEPSVR",276,0)
 ;;
"RTN","A1AEPSVR",277,0)
 ;;"BLD",9277,"KRN","B",9.8,9.8)
"RTN","A1AEPSVR",278,0)
 ;;
"RTN","A1AEPSVR",279,0)
 ;;"BLD",9277,"KRN","B",19,19)
"RTN","A1AEPSVR",280,0)
 ;;
"RTN","A1AEPSVR",281,0)
 ;;"BLD",9277,"KRN","B",19.1,19.1)
"RTN","A1AEPSVR",282,0)
 ;;
"RTN","A1AEPSVR",283,0)
 ;;"BLD",9277,"KRN","B",101,101)
"RTN","A1AEPSVR",284,0)
 ;;
"RTN","A1AEPSVR",285,0)
 ;;"BLD",9277,"KRN","B",409.61,409.61)
"RTN","A1AEPSVR",286,0)
 ;;
"RTN","A1AEPSVR",287,0)
 ;;"BLD",9277,"KRN","B",771,771)
"RTN","A1AEPSVR",288,0)
 ;;
"RTN","A1AEPSVR",289,0)
 ;;"BLD",9277,"KRN","B",779.2,779.2)
"RTN","A1AEPSVR",290,0)
 ;;
"RTN","A1AEPSVR",291,0)
 ;;"BLD",9277,"KRN","B",870,870)
"RTN","A1AEPSVR",292,0)
 ;;
"RTN","A1AEPSVR",293,0)
 ;;"BLD",9277,"KRN","B",8989.51,8989.51)
"RTN","A1AEPSVR",294,0)
 ;;
"RTN","A1AEPSVR",295,0)
 ;;"BLD",9277,"KRN","B",8989.52,8989.52)
"RTN","A1AEPSVR",296,0)
 ;;
"RTN","A1AEPSVR",297,0)
 ;;"BLD",9277,"KRN","B",8994,8994)
"RTN","A1AEPSVR",298,0)
 ;;
"RTN","A1AEPSVR",299,0)
 ;;"BLD",9277,"QUES",0)
"RTN","A1AEPSVR",300,0)
 ;;^9.62^^
"RTN","A1AEPSVR",301,0)
 ;;"MBREQ")
"RTN","A1AEPSVR",302,0)
 ;;0
"RTN","A1AEPSVR",303,0)
 ;;"PKG",223,-1)
"RTN","A1AEPSVR",304,0)
 ;;1^1
"RTN","A1AEPSVR",305,0)
 ;;"PKG",223,0)
"RTN","A1AEPSVR",306,0)
 ;;TEST PACKAGE^ZZZ^FOR FORUM
"RTN","A1AEPSVR",307,0)
 ;;"PKG",223,22,0)
"RTN","A1AEPSVR",308,0)
 ;;^9.49I^1^1
"RTN","A1AEPSVR",309,0)
 ;;"PKG",223,22,1,0)
"RTN","A1AEPSVR",310,0)
 ;;1.0
"RTN","A1AEPSVR",311,0)
 ;;"PKG",223,22,1,"PAH",1,0)
"RTN","A1AEPSVR",312,0)
 ;;1^3140102
"RTN","A1AEPSVR",313,0)
 ;;"PKG",223,22,1,"PAH",1,1,0)
"RTN","A1AEPSVR",314,0)
 ;;^^1^1^3140102
"RTN","A1AEPSVR",315,0)
 ;;"PKG",223,22,1,"PAH",1,1,1,0)
"RTN","A1AEPSVR",316,0)
 ;;TEST TEST
"RTN","A1AEPSVR",317,0)
 ;;"QUES","XPF1",0)
"RTN","A1AEPSVR",318,0)
 ;;Y
"RTN","A1AEPSVR",319,0)
 ;;"QUES","XPF1","??")
"RTN","A1AEPSVR",320,0)
 ;;^D REP^XPDH
"RTN","A1AEPSVR",321,0)
 ;;"QUES","XPF1","A")
"RTN","A1AEPSVR",322,0)
 ;;Shall I write over your |FLAG| File
"RTN","A1AEPSVR",323,0)
 ;;"QUES","XPF1","B")
"RTN","A1AEPSVR",324,0)
 ;;YES
"RTN","A1AEPSVR",325,0)
 ;;"QUES","XPF1","M")
"RTN","A1AEPSVR",326,0)
 ;;D XPF1^XPDIQ
"RTN","A1AEPSVR",327,0)
 ;;"QUES","XPF2",0)
"RTN","A1AEPSVR",328,0)
 ;;Y
"RTN","A1AEPSVR",329,0)
 ;;"QUES","XPF2","??")
"RTN","A1AEPSVR",330,0)
 ;;^D DTA^XPDH
"RTN","A1AEPSVR",331,0)
 ;;"QUES","XPF2","A")
"RTN","A1AEPSVR",332,0)
 ;;Want my data |FLAG| yours
"RTN","A1AEPSVR",333,0)
 ;;"QUES","XPF2","B")
"RTN","A1AEPSVR",334,0)
 ;;YES
"RTN","A1AEPSVR",335,0)
 ;;"QUES","XPF2","M")
"RTN","A1AEPSVR",336,0)
 ;;D XPF2^XPDIQ
"RTN","A1AEPSVR",337,0)
 ;;"QUES","XPI1",0)
"RTN","A1AEPSVR",338,0)
 ;;YO
"RTN","A1AEPSVR",339,0)
 ;;"QUES","XPI1","??")
"RTN","A1AEPSVR",340,0)
 ;;^D INHIBIT^XPDH
"RTN","A1AEPSVR",341,0)
 ;;"QUES","XPI1","A")
"RTN","A1AEPSVR",342,0)
 ;;Want KIDS to INHIBIT LOGONs during the install
"RTN","A1AEPSVR",343,0)
 ;;"QUES","XPI1","B")
"RTN","A1AEPSVR",344,0)
 ;;NO
"RTN","A1AEPSVR",345,0)
 ;;"QUES","XPI1","M")
"RTN","A1AEPSVR",346,0)
 ;;D XPI1^XPDIQ
"RTN","A1AEPSVR",347,0)
 ;;"QUES","XPM1",0)
"RTN","A1AEPSVR",348,0)
 ;;PO^VA(200,:EM
"RTN","A1AEPSVR",349,0)
 ;;"QUES","XPM1","??")
"RTN","A1AEPSVR",350,0)
 ;;^D MG^XPDH
"RTN","A1AEPSVR",351,0)
 ;;"QUES","XPM1","A")
"RTN","A1AEPSVR",352,0)
 ;;Enter the Coordinator for Mail Group '|FLAG|'
"RTN","A1AEPSVR",353,0)
 ;;"QUES","XPM1","B")
"RTN","A1AEPSVR",354,0)
 ;;
"RTN","A1AEPSVR",355,0)
 ;;"QUES","XPM1","M")
"RTN","A1AEPSVR",356,0)
 ;;D XPM1^XPDIQ
"RTN","A1AEPSVR",357,0)
 ;;"QUES","XPO1",0)
"RTN","A1AEPSVR",358,0)
 ;;Y
"RTN","A1AEPSVR",359,0)
 ;;"QUES","XPO1","??")
"RTN","A1AEPSVR",360,0)
 ;;^D MENU^XPDH
"RTN","A1AEPSVR",361,0)
 ;;"QUES","XPO1","A")
"RTN","A1AEPSVR",362,0)
 ;;Want KIDS to Rebuild Menu Trees Upon Completion of Install
"RTN","A1AEPSVR",363,0)
 ;;"QUES","XPO1","B")
"RTN","A1AEPSVR",364,0)
 ;;NO
"RTN","A1AEPSVR",365,0)
 ;;"QUES","XPO1","M")
"RTN","A1AEPSVR",366,0)
 ;;D XPO1^XPDIQ
"RTN","A1AEPSVR",367,0)
 ;;"QUES","XPZ1",0)
"RTN","A1AEPSVR",368,0)
 ;;Y
"RTN","A1AEPSVR",369,0)
 ;;"QUES","XPZ1","??")
"RTN","A1AEPSVR",370,0)
 ;;^D OPT^XPDH
"RTN","A1AEPSVR",371,0)
 ;;"QUES","XPZ1","A")
"RTN","A1AEPSVR",372,0)
 ;;Want to DISABLE Scheduled Options, Menu Options, and Protocols
"RTN","A1AEPSVR",373,0)
 ;;"QUES","XPZ1","B")
"RTN","A1AEPSVR",374,0)
 ;;NO
"RTN","A1AEPSVR",375,0)
 ;;"QUES","XPZ1","M")
"RTN","A1AEPSVR",376,0)
 ;;D XPZ1^XPDIQ
"RTN","A1AEPSVR",377,0)
 ;;"QUES","XPZ2",0)
"RTN","A1AEPSVR",378,0)
 ;;Y
"RTN","A1AEPSVR",379,0)
 ;;"QUES","XPZ2","??")
"RTN","A1AEPSVR",380,0)
 ;;^D RTN^XPDH
"RTN","A1AEPSVR",381,0)
 ;;"QUES","XPZ2","A")
"RTN","A1AEPSVR",382,0)
 ;;Want to MOVE routines to other CPUs
"RTN","A1AEPSVR",383,0)
 ;;"QUES","XPZ2","B")
"RTN","A1AEPSVR",384,0)
 ;;NO
"RTN","A1AEPSVR",385,0)
 ;;"QUES","XPZ2","M")
"RTN","A1AEPSVR",386,0)
 ;;D XPZ2^XPDIQ
"RTN","A1AEPSVR",387,0)
 ;;"RTN")
"RTN","A1AEPSVR",388,0)
 ;;1
"RTN","A1AEPSVR",389,0)
 ;;"RTN","ZOSV2GTM")
"RTN","A1AEPSVR",390,0)
 ;;0^1^B7008460^B7008460
"RTN","A1AEPSVR",391,0)
 ;;"RTN","ZOSV2GTM",1,0)
"RTN","A1AEPSVR",392,0)
 ;;%ZOSV2 ;ISF/RWF - More GT.M support routines ;10/18/06  14:29
"RTN","A1AEPSVR",393,0)
 ;;"RTN","ZOSV2GTM",2,0)
"RTN","A1AEPSVR",394,0)
 ;; ;;8.0;KERNEL;**275,425**;Jul 10, 1995;Build 2
"RTN","A1AEPSVR",395,0)
 ;;"RTN","ZOSV2GTM",3,0)
"RTN","A1AEPSVR",396,0)
 ;; Q
"RTN","A1AEPSVR",397,0)
 ;;"RTN","ZOSV2GTM",4,0)
"RTN","A1AEPSVR",398,0)
 ;; ;SAVE: DIE open array reference.
"RTN","A1AEPSVR",399,0)
 ;;"RTN","ZOSV2GTM",5,0)
"RTN","A1AEPSVR",400,0)
 ;; ;      XCN is the starting value to $O from.
"RTN","A1AEPSVR",401,0)
 ;;"RTN","ZOSV2GTM",6,0)
"RTN","A1AEPSVR",402,0)
 ;;SAVE(RN) ;Save a routine
"RTN","A1AEPSVR",403,0)
 ;;"RTN","ZOSV2GTM",7,0)
"RTN","A1AEPSVR",404,0)
 ;; N %,%F,%I,%N,SP,$ETRAP
"RTN","A1AEPSVR",405,0)
 ;;"RTN","ZOSV2GTM",8,0)
"RTN","A1AEPSVR",406,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEPSVR",407,0)
 ;;"RTN","ZOSV2GTM",9,0)
"RTN","A1AEPSVR",408,0)
 ;; S %I=$I,SP=" ",%F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","A1AEPSVR",409,0)
 ;;"RTN","ZOSV2GTM",10,0)
"RTN","A1AEPSVR",410,0)
 ;; O %F:(newversion:noreadonly:blocksize=2048:recordsize=2044) U %F
"RTN","A1AEPSVR",411,0)
 ;;"RTN","ZOSV2GTM",11,0)
"RTN","A1AEPSVR",412,0)
 ;; F  S XCN=$O(@(DIE_XCN_")")) Q:XCN'>0  S %=@(DIE_XCN_",0)") Q:$E(%,1)="$"  I $E(
"RTN","A1AEPSVR",413,0)
 ;;%)'=";" W $P(%,SP)_$C(9)_$P(%,SP,2,99999),!
"RTN","A1AEPSVR",414,0)
 ;;"RTN","ZOSV2GTM",12,0)
"RTN","A1AEPSVR",415,0)
 ;; C %F ;S %N=$$NULL
"RTN","A1AEPSVR",416,0)
 ;;"RTN","ZOSV2GTM",13,0)
"RTN","A1AEPSVR",417,0)
 ;; ZLINK RN
"RTN","A1AEPSVR",418,0)
 ;;"RTN","ZOSV2GTM",14,0)
"RTN","A1AEPSVR",419,0)
 ;; ;C %N
"RTN","A1AEPSVR",420,0)
 ;;"RTN","ZOSV2GTM",15,0)
"RTN","A1AEPSVR",421,0)
 ;; U %I
"RTN","A1AEPSVR",422,0)
 ;;"RTN","ZOSV2GTM",16,0)
"RTN","A1AEPSVR",423,0)
 ;; Q
"RTN","A1AEPSVR",424,0)
 ;;"RTN","ZOSV2GTM",17,0)
"RTN","A1AEPSVR",425,0)
 ;;NULL() ;Open and use null to hide talking.  Return open name
"RTN","A1AEPSVR",426,0)
 ;;"RTN","ZOSV2GTM",18,0)
"RTN","A1AEPSVR",427,0)
 ;; ;Doesn't work for compile errors
"RTN","A1AEPSVR",428,0)
 ;;"RTN","ZOSV2GTM",19,0)
"RTN","A1AEPSVR",429,0)
 ;; N %N S %N=$S($ZV["VMS":"NLA0:",1:"/dev/nul")
"RTN","A1AEPSVR",430,0)
 ;;"RTN","ZOSV2GTM",20,0)
"RTN","A1AEPSVR",431,0)
 ;; O %N U %N
"RTN","A1AEPSVR",432,0)
 ;;"RTN","ZOSV2GTM",21,0)
"RTN","A1AEPSVR",433,0)
 ;; Q %N
"RTN","A1AEPSVR",434,0)
 ;;"RTN","ZOSV2GTM",22,0)
"RTN","A1AEPSVR",435,0)
 ;; ;
"RTN","A1AEPSVR",436,0)
 ;;"RTN","ZOSV2GTM",23,0)
"RTN","A1AEPSVR",437,0)
 ;;DEL(RN) ;Delete a routine file, both source and object.
"RTN","A1AEPSVR",438,0)
 ;;"RTN","ZOSV2GTM",24,0)
"RTN","A1AEPSVR",439,0)
 ;; N %N,%DIR,%I,$ETRAP
"RTN","A1AEPSVR",440,0)
 ;;"RTN","ZOSV2GTM",25,0)
"RTN","A1AEPSVR",441,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEPSVR",442,0)
 ;;"RTN","ZOSV2GTM",26,0)
"RTN","A1AEPSVR",443,0)
 ;; S %I=$I,%DIR=$$RTNDIR^%ZOSV,RN=$TR(RN,"%","_")
"RTN","A1AEPSVR",444,0)
 ;;"RTN","ZOSV2GTM",27,0)
"RTN","A1AEPSVR",445,0)
 ;; I $L($ZSEARCH(%DIR_RN_".m",244)) ZSYSTEM "DEL "_%DIR_X_".m;*"
"RTN","A1AEPSVR",446,0)
 ;;"RTN","ZOSV2GTM",28,0)
"RTN","A1AEPSVR",447,0)
 ;; I $L($ZSEARCH(%DIR_RN_".obj",244)) ZSYSTEM "DEL "_%DIR_X_".obj;*"
"RTN","A1AEPSVR",448,0)
 ;;"RTN","ZOSV2GTM",29,0)
"RTN","A1AEPSVR",449,0)
 ;; I $L($ZSEARCH(%DIR_RN_".o",244)) ZSYSTEM "rm -f "_%DIR_X_".o"
"RTN","A1AEPSVR",450,0)
 ;;"RTN","ZOSV2GTM",30,0)
"RTN","A1AEPSVR",451,0)
 ;; Q
"RTN","A1AEPSVR",452,0)
 ;;"RTN","ZOSV2GTM",31,0)
"RTN","A1AEPSVR",453,0)
 ;; ;LOAD: DIF open array to receive the routine lines.
"RTN","A1AEPSVR",454,0)
 ;;"RTN","ZOSV2GTM",32,0)
"RTN","A1AEPSVR",455,0)
 ;; ;      XCNP The starting index -1.
"RTN","A1AEPSVR",456,0)
 ;;"RTN","ZOSV2GTM",33,0)
"RTN","A1AEPSVR",457,0)
 ;;LOAD(RN) ;Load a routine
"RTN","A1AEPSVR",458,0)
 ;;"RTN","ZOSV2GTM",34,0)
"RTN","A1AEPSVR",459,0)
 ;; N %
"RTN","A1AEPSVR",460,0)
 ;;"RTN","ZOSV2GTM",35,0)
"RTN","A1AEPSVR",461,0)
 ;; S %N=0 F XCNP=XCNP+1:1 S %N=%N+1,%=$T(+%N^@RN) Q:$L(%)=0  S @(DIF_XCNP_",0)")=%
"RTN","A1AEPSVR",462,0)
 ;;"RTN","ZOSV2GTM",36,0)
"RTN","A1AEPSVR",463,0)
 ;; Q
"RTN","A1AEPSVR",464,0)
 ;;"RTN","ZOSV2GTM",37,0)
"RTN","A1AEPSVR",465,0)
 ;; ;
"RTN","A1AEPSVR",466,0)
 ;;"RTN","ZOSV2GTM",38,0)
"RTN","A1AEPSVR",467,0)
 ;;LOAD2(RN) ;Load a routine
"RTN","A1AEPSVR",468,0)
 ;;"RTN","ZOSV2GTM",39,0)
"RTN","A1AEPSVR",469,0)
 ;; N %,%1,%F,%N,$ETRAP
"RTN","A1AEPSVR",470,0)
 ;;"RTN","ZOSV2GTM",40,0)
"RTN","A1AEPSVR",471,0)
 ;; S %I=$I,%F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","A1AEPSVR",472,0)
 ;;"RTN","ZOSV2GTM",41,0)
"RTN","A1AEPSVR",473,0)
 ;; O %F:(readonly):1 Q:'$T  U %F
"RTN","A1AEPSVR",474,0)
 ;;"RTN","ZOSV2GTM",42,0)
"RTN","A1AEPSVR",475,0)
 ;; F XCNP=XCNP+1:1 R %1:1 Q:'$T!$ZEOF  S @(DIF_XCNP_",0)")=$TR(%1,$C(9)," ")
"RTN","A1AEPSVR",476,0)
 ;;"RTN","ZOSV2GTM",43,0)
"RTN","A1AEPSVR",477,0)
 ;; C %F I $L(%I) U %I
"RTN","A1AEPSVR",478,0)
 ;;"RTN","ZOSV2GTM",44,0)
"RTN","A1AEPSVR",479,0)
 ;; Q
"RTN","A1AEPSVR",480,0)
 ;;"RTN","ZOSV2GTM",45,0)
"RTN","A1AEPSVR",481,0)
 ;; ;
"RTN","A1AEPSVR",482,0)
 ;;"RTN","ZOSV2GTM",46,0)
"RTN","A1AEPSVR",483,0)
 ;;RSUM(RN) ;Calculate a RSUM value
"RTN","A1AEPSVR",484,0)
 ;;"RTN","ZOSV2GTM",47,0)
"RTN","A1AEPSVR",485,0)
 ;; N %,DIF,XCNP,%N,Y,$ETRAP K ^TMP("RSUM",$J)
"RTN","A1AEPSVR",486,0)
 ;;"RTN","ZOSV2GTM",48,0)
"RTN","A1AEPSVR",487,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEPSVR",488,0)
 ;;"RTN","ZOSV2GTM",49,0)
"RTN","A1AEPSVR",489,0)
 ;; S Y=0,DIF="^TMP(""RSUM"",$J,",XCNP=0 D LOAD2(RN)
"RTN","A1AEPSVR",490,0)
 ;;"RTN","ZOSV2GTM",50,0)
"RTN","A1AEPSVR",491,0)
 ;; F %=1,3:1 S %1=$G(^TMP("RSUM",$J,%,0)),%3=$F(%1," ") Q:'%3  S %3=$S($E(%1,%3)'=
"RTN","A1AEPSVR",492,0)
 ;;";":$L(%1),$E(%1,%3+1)=";":$L(%1),1:%3-2) F %2=1:1:%3 S Y=$A(%1,%2)*%2+Y
"RTN","A1AEPSVR",493,0)
 ;;"RTN","ZOSV2GTM",51,0)
"RTN","A1AEPSVR",494,0)
 ;; K ^TMP("RSUM",$J)
"RTN","A1AEPSVR",495,0)
 ;;"RTN","ZOSV2GTM",52,0)
"RTN","A1AEPSVR",496,0)
 ;; Q Y
"RTN","A1AEPSVR",497,0)
 ;;"RTN","ZOSV2GTM",53,0)
"RTN","A1AEPSVR",498,0)
 ;; ;
"RTN","A1AEPSVR",499,0)
 ;;"RTN","ZOSV2GTM",54,0)
"RTN","A1AEPSVR",500,0)
 ;;RSUM2(RN) ;Calculate a RSUM2 value
"RTN","A1AEPSVR",501,0)
 ;;"RTN","ZOSV2GTM",55,0)
"RTN","A1AEPSVR",502,0)
 ;; N %,DIF,XCNP,%N,Y,$ETRAP K ^TMP("RSUM",$J)
"RTN","A1AEPSVR",503,0)
 ;;"RTN","ZOSV2GTM",56,0)
"RTN","A1AEPSVR",504,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEPSVR",505,0)
 ;;"RTN","ZOSV2GTM",57,0)
"RTN","A1AEPSVR",506,0)
 ;; S Y=0,DIF="^TMP(""RSUM"",$J,",XCNP=0 D LOAD2(RN)
"RTN","A1AEPSVR",507,0)
 ;;"RTN","ZOSV2GTM",58,0)
"RTN","A1AEPSVR",508,0)
 ;; F %=1,3:1 S %1=$G(^TMP("RSUM",$J,%,0)),%3=$F(%1," ") Q:'%3  S %3=$S($E(%1,%3)'=
"RTN","A1AEPSVR",509,0)
 ;;";":$L(%1),$E(%1,%3+1)=";":$L(%1),1:%3-2) F %2=1:1:%3 S Y=$A(%1,%2)*(%2+%)+Y
"RTN","A1AEPSVR",510,0)
 ;;"RTN","ZOSV2GTM",59,0)
"RTN","A1AEPSVR",511,0)
 ;; K ^TMP("RSUM",$J)
"RTN","A1AEPSVR",512,0)
 ;;"RTN","ZOSV2GTM",60,0)
"RTN","A1AEPSVR",513,0)
 ;; Q Y
"RTN","A1AEPSVR",514,0)
 ;;"RTN","ZOSV2GTM",61,0)
"RTN","A1AEPSVR",515,0)
 ;; ;
"RTN","A1AEPSVR",516,0)
 ;;"RTN","ZOSV2GTM",62,0)
"RTN","A1AEPSVR",517,0)
 ;;TEST(RN) ;Special GT.M Test to see if routine is here.
"RTN","A1AEPSVR",518,0)
 ;;"RTN","ZOSV2GTM",63,0)
"RTN","A1AEPSVR",519,0)
 ;; N %F,%X
"RTN","A1AEPSVR",520,0)
 ;;"RTN","ZOSV2GTM",64,0)
"RTN","A1AEPSVR",521,0)
 ;; S %F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","A1AEPSVR",522,0)
 ;;"RTN","ZOSV2GTM",65,0)
"RTN","A1AEPSVR",523,0)
 ;; S %X=$ZSEARCH("X.X",245),%X=$ZSEARCH(%F,245)
"RTN","A1AEPSVR",524,0)
 ;;"RTN","ZOSV2GTM",66,0)
"RTN","A1AEPSVR",525,0)
 ;; Q %X
"RTN","A1AEPSVR",526,0)
 ;;"VER")
"RTN","A1AEPSVR",527,0)
 ;;8.0^22.0
"RTN","A1AEPSVR",528,0)
 ;;"BLD",9277,6)
"RTN","A1AEPSVR",529,0)
 ;;^1
"RTN","A1AEPSVR",530,0)
 ;;$END KID ZZZ*1.0*1
"RTN","A1AERCON")
0^36^B5359981
"RTN","A1AERCON",1,0)
A1AERCON ;CJS/SLC - Check for routie overlap on unreleased patchs ;4/25/05  18:59
"RTN","A1AERCON",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AERCON",3,0)
EN K ^TMP($J) S LINE=0,DIC=11005,DIC(0)="AEMQ",DIC("S")="I ""cu""[$P(^(0),U,8)" D ^DIC S PATCH=+Y G:PATCH'>0 EXIT
"RTN","A1AERCON",4,0)
 S DIR(0)="NO^0:999:0",DIR("A")="Include patches released within how many months? (0 for only active overlaps)",DIR("B")=0 D ^DIR S MONTHS=Y
"RTN","A1AERCON",5,0)
 S VER=$P(^A1AE(11005,PATCH,0),"*",2),RLIST=0 F  S RLIST=$O(^A1AE(11005,PATCH,"P",RLIST)) Q:RLIST'>0  D
"RTN","A1AERCON",6,0)
 . S PROU=$P($G(^A1AE(11005,PATCH,"P",RLIST,0)),U)
"RTN","A1AERCON",7,0)
 . S OTHERP=0 F  S OTHERP=$O(^A1AE(11005,"R",PROU,OTHERP)) Q:OTHERP'>0  D
"RTN","A1AERCON",8,0)
 . . Q:OTHERP=PATCH
"RTN","A1AERCON",9,0)
 . . S LINE0=$G(^A1AE(11005,OTHERP,0)),PNAME=$P(LINE0,U),REL="            " Q:$P(PNAME,"*",2)'=VER
"RTN","A1AERCON",10,0)
 . . I MONTHS=0 Q:"cu"'[$P(LINE0,U,8)
"RTN","A1AERCON",11,0)
 . . I MONTHS Q:"cuv"'[$P(LINE0,U,8)  I $P(LINE0,U,8)="v" S X1=DT,(X2,REL)=$P($G(^A1AE(11005.1,OTHERP,0)),U,7)\1 D ^%DTC Q:%Y=0  Q:X/30>MONTHS  S Y=REL D DD^%DT S REL=Y
"RTN","A1AERCON",12,0)
 . . S LINE=LINE+1,^TMP($J,PROU,LINE)=PROU_$E("          ",$L(PROU),10)_PNAME_$E("              ",$L(PNAME),14)_REL_"  "_$P($G(^VA(200,+$P(LINE0,U,9),0)),U)
"RTN","A1AERCON",13,0)
 . . Q
"RTN","A1AERCON",14,0)
 . Q
"RTN","A1AERCON",15,0)
 W !,"Routines in entered or completed patches that overlap with ",$P(^A1AE(11005,PATCH,0),U)
"RTN","A1AERCON",16,0)
 W !,"Routine    Patch          Release Date  Patch Entered by"
"RTN","A1AERCON",17,0)
 S PROU="" F  S PROU=$O(^TMP($J,PROU)) Q:PROU=""  D
"RTN","A1AERCON",18,0)
 . S LINE=0 F  S LINE=$O(^TMP($J,PROU,LINE)) Q:LINE'>0  D
"RTN","A1AERCON",19,0)
 . . W !,^TMP($J,PROU,LINE)
"RTN","A1AERCON",20,0)
 . . Q
"RTN","A1AERCON",21,0)
 . Q
"RTN","A1AERCON",22,0)
EXIT K ^TMP($J),PATCH,RLIST,PROU,OTHERP,LINE,LINE0,PNAME,MONTHS,REL,VER
"RTN","A1AERCON",23,0)
 Q
"RTN","A1AERD")
0^37^B4000086
"RTN","A1AERD",1,0)
A1AERD ; RMO,MJK/ALBANY ; Read Processor ;24 NOV 87 11:00 am
"RTN","A1AERD",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AERD",3,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;12/02/92
"RTN","A1AERD",4,0)
SET S:'$D(A1AERD(0)) A1AERD(0)="" W:A1AERD(0)'["S" !?2,"Choose one of the following:"
"RTN","A1AERD",5,0)
 F I=0:0 S I=$O(A1AERD(I)) Q:'I  W:A1AERD(0)'["S" !?10,$P(A1AERD(I),"^",1) S V=$P(A1AERD(I),"^",1) D UPPER S $P(A1AERD(I),"^",3)=S
"RTN","A1AERD",6,0)
READ K S,I,J,T,L,I W !!,$S($D(A1AERD("A")):A1AERD("A"),1:"Enter Response: ")
"RTN","A1AERD",7,0)
 I $D(A1AERD("B")),$D(A1AERD(A1AERD("B"))) W $P(A1AERD(A1AERD("B")),"^",1),"// "
"RTN","A1AERD",8,0)
 R X:$S($D(A1AERD("DTIME")):+A1AERD("DTIME"),1:DTIME) S X1=X G HELP:X="?" S T=$T,DTOUT='T,L=$L(X) I X["^" S X="^" G Q
"RTN","A1AERD",9,0)
 I 'T,'$D(A1AERD("DTOUT")) S X="^" G Q
"RTN","A1AERD",10,0)
 I 'T,$D(A1AERD("DTOUT")),'$D(A1AERD(+A1AERD("DTOUT"))) S X="^" G Q
"RTN","A1AERD",11,0)
 I 'T S X=$P(A1AERD(+A1AERD("DTOUT")),"^",1) G Q
"RTN","A1AERD",12,0)
 I 'L,'$D(A1AERD("B")) S X="" G Q
"RTN","A1AERD",13,0)
 I 'L,'$D(A1AERD(+A1AERD("B"))) S X="" G Q
"RTN","A1AERD",14,0)
 I 'L S X=$P(A1AERD(+A1AERD("B")),"^",1) G Q
"RTN","A1AERD",15,0)
 S V=X D UPPER
"RTN","A1AERD",16,0)
 F I=0:0 S I=$O(A1AERD(I)) Q:'I  I S=$E($P(A1AERD(I),"^",3),1,L) S X=$P(A1AERD(I),"^",1) W $E(X,L+1,99) G Q
"RTN","A1AERD",17,0)
 W *7
"RTN","A1AERD",18,0)
HELP ;
"RTN","A1AERD",19,0)
 I $D(A1AERD("XQH")) S XQH=A1AERD("XQH") D EN^XQH W ! G SET
"RTN","A1AERD",20,0)
 W !!?2,"Enter one of the following:"
"RTN","A1AERD",21,0)
 F I=0:0 S I=$O(A1AERD(I)) Q:'I  W !?5,"'",$P(A1AERD(I),"^",1),"'",?25,"to ",$E($P(A1AERD(I),"^",2),1,79-$X)
"RTN","A1AERD",22,0)
 W !?5,"^",?25,"to stop." G READ
"RTN","A1AERD",23,0)
 ;
"RTN","A1AERD",24,0)
Q K DTOUT,S,C,I,L Q
"RTN","A1AERD",25,0)
 ;
"RTN","A1AERD",26,0)
UPPER ;
"RTN","A1AERD",27,0)
 S S="" F J=1:1 S C=$E($P(V,"^",1),J) Q:C=""  S:$A(C)>96&($A(C)<123) C=$C($A(C)-32) S S=S_C
"RTN","A1AERD",28,0)
 K C,V Q
"RTN","A1AESP")
0^38^B24364626
"RTN","A1AESP",1,0)
A1AESP ;ISF/RWF - Special load of package releases ;08/19/2010  5079.826506
"RTN","A1AESP",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AESP",3,0)
EN ;Read an HFS Package release.
"RTN","A1AESP",4,0)
 W !,"Use LDINS entry point" Q
"RTN","A1AESP",5,0)
 N PACKAGE,RTN,NOW,RR,X,Y,DONE
"RTN","A1AESP",6,0)
 S NOW=$$NOW^XLFDT
"RTN","A1AESP",7,0)
 S %ZIS="M",%ZIS("A")="Package Build file: " D ^%ZIS I POP W !,"No Device" Q
"RTN","A1AESP",8,0)
 U IO F  R X:1 Q:(X="**INSTALL NAME**")!(X="$$END")
"RTN","A1AESP",9,0)
 U $P I X["END" W !,"END OF FILE" Q
"RTN","A1AESP",10,0)
 U IO R PACKAGE:1
"RTN","A1AESP",11,0)
 U $P W !,"Loading Package: ",PACKAGE
"RTN","A1AESP",12,0)
 ;Now find routines
"RTN","A1AESP",13,0)
 U IO F  R X:2,Y:2 Q:($E(X,1,5)="""RTN""")!(X["**END**")
"RTN","A1AESP",14,0)
 ;Start real work
"RTN","A1AESP",15,0)
 S DONE=0,RR="""RTN""A)"
"RTN","A1AESP",16,0)
 F  D  Q:DONE
"RTN","A1AESP",17,0)
 . U IO R X:2,Y:2
"RTN","A1AESP",18,0)
 . I $E(X,2,4)'="RTN" U $P W !,"Stopping: ",X S DONE=1 Q
"RTN","A1AESP",19,0)
 . I $E(RR,1,$L(RR)-1)'=$E(X,1,$L(RR)-1) D
"RTN","A1AESP",20,0)
 . . S RR=X
"RTN","A1AESP",21,0)
 . . D RTNLOAD2(PACKAGE,RR,Y)
"RTN","A1AESP",22,0)
 . . Q
"RTN","A1AESP",23,0)
 . Q
"RTN","A1AESP",24,0)
 D ^%ZISC
"RTN","A1AESP",25,0)
 U $P W !,"DONE"
"RTN","A1AESP",26,0)
 Q
"RTN","A1AESP",27,0)
 ;
"RTN","A1AESP",28,0)
RTNLOAD2(PKG,REF,Y) ;
"RTN","A1AESP",29,0)
 N RN,CHK
"RTN","A1AESP",30,0)
 S RN=$P($RE(REF),",")
"RTN","A1AESP",31,0)
 S RN=$RE($E(RN,3,$L(RN)-1))
"RTN","A1AESP",32,0)
 S CHK=$P(Y,U,3)
"RTN","A1AESP",33,0)
 D RTNLOAD(PKG,RN,CHK)
"RTN","A1AESP",34,0)
 Q
"RTN","A1AESP",35,0)
 ;
"RTN","A1AESP",36,0)
RTNLOAD(RN,PCH,CHKSUM,PL) ;
"RTN","A1AESP",37,0)
 N FDA,IEN
"RTN","A1AESP",38,0)
 I '$D(NOW) S NOW=$$NOW^XLFDT
"RTN","A1AESP",39,0)
 S IEN=$O(^DIC(9.8,"B",RN,0))
"RTN","A1AESP",40,0)
 ;I IEN K ^DIC(9.8,IEN,8) ;Remove Patch History ???
"RTN","A1AESP",41,0)
 I IEN S IEN=IEN_","
"RTN","A1AESP",42,0)
 E  S IEN="?+1,",FDA(9.8,IEN,.01)=RN
"RTN","A1AESP",43,0)
 S FDA(9.8,IEN,1)="R",FDA(9.8,IEN,6)=2
"RTN","A1AESP",44,0)
 S FDA(9.8,IEN,7.1)=NOW,FDA(9.8,IEN,7.2)=CHKSUM,FDA(9.8,IEN,7.3)=$G(PL)
"RTN","A1AESP",45,0)
 S IEN="?+2,"_IEN
"RTN","A1AESP",46,0)
 S FDA(9.818,IEN,.01)=PCH,FDA(9.818,IEN,2)=CHKSUM S:$L($G(PL)) FDA(9.818,IEN,3)=PL
"RTN","A1AESP",47,0)
 D UPDATE^DIE("","FDA")
"RTN","A1AESP",48,0)
 U $P W !,"Routine ",RN," filed"
"RTN","A1AESP",49,0)
 Q
"RTN","A1AESP",50,0)
 ;
"RTN","A1AESP",51,0)
 ;
"RTN","A1AESP",52,0)
HFS ;Fix ~ in checksum
"RTN","A1AESP",53,0)
 N DA,A1,A2
"RTN","A1AESP",54,0)
 S DA=0
"RTN","A1AESP",55,0)
 F  S DA=$O(^A1AE(11005.5,DA)),A1=0 Q:'DA  D
"RTN","A1AESP",56,0)
 . F  S A1=$O(^A1AE(11005.5,DA,1,A1)) Q:'A1  S X=^(A1,0) D
"RTN","A1AESP",57,0)
 . . I X["~" S ^A1AE(11005.5,DA,1,A1,0)=$TR(X,"~","^")
"RTN","A1AESP",58,0)
 . . Q
"RTN","A1AESP",59,0)
 . Q
"RTN","A1AESP",60,0)
 Q
"RTN","A1AESP",61,0)
 ;
"RTN","A1AESP",62,0)
SEARCH    ;Search Patch file for routines
"RTN","A1AESP",63,0)
 N RN,FDA,IEN,X,A1,A2,DA
"RTN","A1AESP",64,0)
 S DA=0
"RTN","A1AESP",65,0)
 F  S DA=$O(^A1AE(11005,DA)) Q:'DA  I $P(^A1AE(11005,DA,0),U,8)="u" D
"RTN","A1AESP",66,0)
 . S A1=0
"RTN","A1AESP",67,0)
 . F  S A1=$O(^A1AE(11005,DA,"P",A1)) Q:'A1  S X=^(A1,0) D
"RTN","A1AESP",68,0)
 . . S RN=$P(X,U),OLD=$P(X,U,4) D:OLD["~"  ;Look for something
"RTN","A1AESP",69,0)
 . . . S $P(^A1AE(11005,DA,"P",A1,0),U,4)=$P(OLD,"~")
"RTN","A1AESP",70,0)
 . . Q
"RTN","A1AESP",71,0)
 . Q
"RTN","A1AESP",72,0)
 Q
"RTN","A1AESP",73,0)
 ;
"RTN","A1AESP",74,0)
 ;
"RTN","A1AESP",75,0)
 ;Check for DUP routines in patch.
"RTN","A1AESP",76,0)
DUP ;
"RTN","A1AESP",77,0)
 N A1,A2,A3,A4
"RTN","A1AESP",78,0)
 S A1=0
"RTN","A1AESP",79,0)
 F  S A1=$O(^A1AE(11005,A1)) Q:'A1  I "uc"[$P($G(^(A1,0)),U,8) D
"RTN","A1AESP",80,0)
 . S A2=""
"RTN","A1AESP",81,0)
 . F  S A2=$O(^A1AE(11005,A1,"P","B",A2)) Q:A2=""  D
"RTN","A1AESP",82,0)
 . . S A3=$O(^A1AE(11005,A1,"P","B",A2,0)),A4=$O(^(A3))
"RTN","A1AESP",83,0)
 . . I A4 W !,A1,?10,A2,?20,A3,?25,A4
"RTN","A1AESP",84,0)
 . . Q
"RTN","A1AESP",85,0)
 . Q
"RTN","A1AESP",86,0)
 Q
"RTN","A1AESP",87,0)
 ;
"RTN","A1AESP",88,0)
PCHDUP ;Check for dup patchs in routine file.
"RTN","A1AESP",89,0)
 N D0,D1,D2,X,Y,DIK,DA
"RTN","A1AESP",90,0)
 S D0=0
"RTN","A1AESP",91,0)
 F  S D0=$O(^DIC(9.8,D0)),D1="" Q:'D0  D
"RTN","A1AESP",92,0)
 . F  S D1=$O(^DIC(9.8,D0,8,"B",D1)),DA(1)=D0 Q:D1=""  D
"RTN","A1AESP",93,0)
 . . S X=$O(^DIC(9.8,D0,8,"B",D1,0)),Y=$O(^(X))
"RTN","A1AESP",94,0)
 . . I Y>X W !,$P(^DIC(9.8,D0,0),U),?10,D1 S DA=Y,DIK="^DIC(9.8,DA(1),8," D ^DIK
"RTN","A1AESP",95,0)
 . . Q
"RTN","A1AESP",96,0)
 . Q
"RTN","A1AESP",97,0)
 Q
"RTN","A1AESP",98,0)
 ;
"RTN","A1AESP",99,0)
RTNCHK(PCH) ;Check patch routines against Routine file
"RTN","A1AESP",100,0)
 N D0,D1,DA,R1,R2,RN,X,Y
"RTN","A1AESP",101,0)
 S D0=$O(^A1AE(11005,"B",PCH,0)) I 'D0 W !,"Patch not found" Q
"RTN","A1AESP",102,0)
 W !,"Patch ",PCH," ien: ",D0
"RTN","A1AESP",103,0)
 S D1=0
"RTN","A1AESP",104,0)
 F  S D1=$O(^A1AE(11005,D0,"P",D1)) Q:D1'>0  D
"RTN","A1AESP",105,0)
 . S R1=^A1AE(11005,D0,"P",D1,0),RN=$P(R1,U)
"RTN","A1AESP",106,0)
 . S DA=$O(^DIC(9.8,"B",RN,0)) I 'DA D  W ! Q
"RTN","A1AESP",107,0)
 . . W !,"Routine ",RN," not found",!,?5,R1
"RTN","A1AESP",108,0)
 . . R !,"Load? ",X:DTIME Q:$E(X)'="Y"
"RTN","A1AESP",109,0)
 . . D RTNLOAD(RN,PCH,$P(R1,U,2),$P(R1,U,3))
"RTN","A1AESP",110,0)
 . . Q
"RTN","A1AESP",111,0)
 . W !,RN,?10,^DIC(9.8,DA,4)
"RTN","A1AESP",112,0)
 . Q
"RTN","A1AESP",113,0)
 Q
"RTN","A1AESP",114,0)
 ;
"RTN","A1AESP",115,0)
LDINS ;File routines from Install file
"RTN","A1AESP",116,0)
 N DA,D0,D1,IX,X,Y,DIC,FDA,PCH,NOW
"RTN","A1AESP",117,0)
 S NOW=$$NOW^XLFDT()
"RTN","A1AESP",118,0)
 S DIC="^XPD(9.7,",DIC(0)="AEMQ" D ^DIC Q:Y<1
"RTN","A1AESP",119,0)
 S IX=+Y,RN="",PCH=$P(Y,U,2) S:PCH["*" $P(PCH,"*",2)=+$P(PCH,"*",2)
"RTN","A1AESP",120,0)
 F  S RN=$O(^XTMP("XPDI",IX,"RTN",RN)) Q:RN=""  D
"RTN","A1AESP",121,0)
 . S X=^XTMP("XPDI",IX,"RTN",RN),Y=$G(^(RN,2,0))
"RTN","A1AESP",122,0)
 . D RTNLOAD(RN,PCH,$P(X,U,3),$P(Y,";",5))
"RTN","A1AESP",123,0)
 . Q
"RTN","A1AESP",124,0)
 Q
"RTN","A1AESP",125,0)
 ;
"RTN","A1AESP",126,0)
MAKECUR ;Make a patch the current checksum for its routines
"RTN","A1AESP",127,0)
 N RN,PCH,DA,D0,D1,IX,X,Y
"RTN","A1AESP",128,0)
 R !,"Enter Patch Number: ",PCH:600
"RTN","A1AESP",129,0)
 S D0=0
"RTN","A1AESP",130,0)
 F  S D0=$O(^DIC(9.8,D0)),D1=0 Q:'D0  D
"RTN","A1AESP",131,0)
 . S RN=$P(^DIC(9.8,D0,0),U)
"RTN","A1AESP",132,0)
 . S D1=$O(^DIC(9.8,D0,8,"B"),-1) Q:'D1  S X=^DIC(9.8,D0,8,D1,0) Q:$P(X,U)'=PCH
"RTN","A1AESP",133,0)
 . S CHK=$P(X,U,2)
"RTN","A1AESP",134,0)
 . W !,RN,"  ",PCH,"  ",CHK
"RTN","A1AESP",135,0)
 . D RTNLOAD(RN,PCH,CHK,"")
"RTN","A1AESP",136,0)
 . Q
"RTN","A1AESP",137,0)
 Q
"RTN","A1AESP",138,0)
 ;
"RTN","A1AESP",139,0)
DIC ;Look up IEN of a patch.
"RTN","A1AESP",140,0)
 N DIC
"RTN","A1AESP",141,0)
 S DIC=11005,DIC(0)="AEMQ" D ^DIC W !,Y
"RTN","A1AESP",142,0)
 Q
"RTN","A1AESP",143,0)
 ;To load Routines from the Patch message
"RTN","A1AESP",144,0)
 ;DO RTNBLD^A1AEM1(IEN)
"RTN","A1AESP",145,0)
 ;
"RTN","A1AESP",146,0)
BACKOUT ;Backout a patch,  Entered in error
"RTN","A1AESP",147,0)
 N RN,PDA,PCH,DA,DO,D1,IX,OCS,X,Y
"RTN","A1AESP",148,0)
 W !,"Patch to Backout."
"RTN","A1AESP",149,0)
 S DIC=11005,DIC(0)="AEMQ" D ^DIC Q:Y<1
"RTN","A1AESP",150,0)
 S PDA=+Y,PCH=$P(Y,U,2)
"RTN","A1AESP",151,0)
 S IX=0
"RTN","A1AESP",152,0)
 F  S IX=$O(^A1AE(11005,PDA,"P",IX)) Q:'IX  S R1=^(IX,0) D
"RTN","A1AESP",153,0)
 . S RN=$P(R1,U,1),OCS=$P(R1,U,4)
"RTN","A1AESP",154,0)
 . W !,"Routine ",RN
"RTN","A1AESP",155,0)
 . D BKOT(RN,PCH,OCS)
"RTN","A1AESP",156,0)
 . Q
"RTN","A1AESP",157,0)
 W !,"DONE"
"RTN","A1AESP",158,0)
 Q
"RTN","A1AESP",159,0)
 ;
"RTN","A1AESP",160,0)
BKOT(RN,PCH,OCS) ;Backout Checksum from Routine file.
"RTN","A1AESP",161,0)
 N DA,DB,DC,FDA,IEN
"RTN","A1AESP",162,0)
 S DB=$$FIND1^DIC(9.8,,"X",RN) Q:'DB
"RTN","A1AESP",163,0)
 S DC=$$FIND1^DIC(9.818,","_DB_",","X",PCH) Q:'DC
"RTN","A1AESP",164,0)
 S IEN=DB_",",FDA(9.8,IEN,7.1)="@",FDA(9.8,IEN,7.2)=OCS,FDA(9.8,IEN,7.3)="@"
"RTN","A1AESP",165,0)
 S IEN=DC_","_IEN,FDA(9.818,IEN,.01)="@"
"RTN","A1AESP",166,0)
 D FILE^DIE("K","FDA")
"RTN","A1AESP",167,0)
 I $D(^TMP("DIERR",$J)) S %ZT($NA(^TMP("DIERR",$J)))="" D ^%ZTER Q
"RTN","A1AESP",168,0)
 Q
"RTN","A1AEUDD")
0^64^B7792804
"RTN","A1AEUDD",1,0)
A1AEUDD ;VEN/JLI - Unit tests for Data Dictionary Code ;2014-10-03  4:14 PM
"RTN","A1AEUDD",2,0)
 ;;2.4;PATCH MODULE;;;Build 14
"RTN","A1AEUDD",3,0)
 D EN^%ut($T(+0))
"RTN","A1AEUDD",4,0)
 Q
"RTN","A1AEUDD",5,0)
 ;
"RTN","A1AEUDD",6,0)
PLU949 ; @test prelookup transform for VERSION sub file in 9.4
"RTN","A1AEUDD",7,0)
 N X
"RTN","A1AEUDD",8,0)
 S X="15" D PLU949^A1AEDD1
"RTN","A1AEUDD",9,0)
 D CHKTF^%ut(X="15.0","failed to add decimal zero returned X="_X)
"RTN","A1AEUDD",10,0)
 S X="15." D PLU949^A1AEDD1
"RTN","A1AEUDD",11,0)
 D CHKTF^%ut(X="15.0","failed to identify . no digit returned X="_X)
"RTN","A1AEUDD",12,0)
 S X="15.01" D PLU949^A1AEDD1
"RTN","A1AEUDD",13,0)
 D CHKTF^%ut(X="15.01","failed on .01 as part of value returned X="_X)
"RTN","A1AEUDD",14,0)
 S X="15P2" D PLU949^A1AEDD1
"RTN","A1AEUDD",15,0)
 D CHKTF^%ut(X="15.0P2","failed on Numeric alpha numeric returned X="_X)
"RTN","A1AEUDD",16,0)
 Q
"RTN","A1AEUDD",17,0)
 ;
"RTN","A1AEUDD",18,0)
 ; CURRENTLY PLU96 and PLU97 run the same code, but they are
"RTN","A1AEUDD",19,0)
 ; included for both, since they might be moved at aome time
"RTN","A1AEUDD",20,0)
 ;
"RTN","A1AEUDD",21,0)
PLU96 ; @TEST prelookup transform for file 9.6
"RTN","A1AEUDD",22,0)
 N X
"RTN","A1AEUDD",23,0)
 S X="PACKAGE 1" D PLU96^A1AEDD1
"RTN","A1AEUDD",24,0)
 D CHKTF^%ut(X="PACKAGE 1.0","failed on adding .0 to package version returned X="_X)
"RTN","A1AEUDD",25,0)
 S X="PK*4*1" D PLU96^A1AEDD1
"RTN","A1AEUDD",26,0)
 D CHKTF^%ut(X="PK*4.0*1","failed on adding .0 to * setup returned X="_X)
"RTN","A1AEUDD",27,0)
 S X="PK*4.*1T2" D PLU96^A1AEDD1
"RTN","A1AEUDD",28,0)
 D CHKTF^%ut(X="PK*4.0*1T2","failed on adding zero after decimal returned X="_X)
"RTN","A1AEUDD",29,0)
 Q
"RTN","A1AEUDD",30,0)
 ;
"RTN","A1AEUDD",31,0)
PLU97 ; @TEST prelookup transform for file 9.7
"RTN","A1AEUDD",32,0)
 N X
"RTN","A1AEUDD",33,0)
 S X="PACKAGE 1" D PLU97^A1AEDD1
"RTN","A1AEUDD",34,0)
 D CHKTF^%ut(X="PACKAGE 1.0","failed on adding .0 to package version returned X="_X)
"RTN","A1AEUDD",35,0)
 S X="PK*4*1" D PLU97^A1AEDD1
"RTN","A1AEUDD",36,0)
 D CHKTF^%ut(X="PK*4.0*1","failed on adding .0 to * setup returned X="_X)
"RTN","A1AEUDD",37,0)
 S X="PK*4.*1T2" D PLU97^A1AEDD1
"RTN","A1AEUDD",38,0)
 D CHKTF^%ut(X="PK*4.0*1T2","failed on adding zero after decimal returned X="_X)
"RTN","A1AEUDD",39,0)
 S X="PK" D PLU97^A1AEDD1
"RTN","A1AEUDD",40,0)
 D CHKTF^%ut(X="PK","Didn't return original without any numbers")
"RTN","A1AEUDD",41,0)
 Q
"RTN","A1AEUDD",42,0)
 ;
"RTN","A1AEUDD",43,0)
PLU11005 ; @TEST prelookup transform for file 11005
"RTN","A1AEUDD",44,0)
 N X
"RTN","A1AEUDD",45,0)
 S X="PACKAGE 1.0" D PLU11005^A1AEDD1
"RTN","A1AEUDD",46,0)
 D CHKTF^%ut(X="PACKAGE 1","Didn't remove terminal .0 returned X="_X)
"RTN","A1AEUDD",47,0)
 S X="PK*1.0*2" D PLU11005^A1AEDD1
"RTN","A1AEUDD",48,0)
 D CHKTF^%ut(X="PK*1*2","Didn't remove .0 from * format, returned X="_X)
"RTN","A1AEUDD",49,0)
 S X="PK*1.02*2T3" D PLU11005^A1AEDD1
"RTN","A1AEUDD",50,0)
 D CHKTF^%ut(X="PK*1.02*2T3","Didn't handle multiple decimal places, returned X="_X)
"RTN","A1AEUDD",51,0)
 S X="PK*1.0*2T3" D PLU11005^A1AEDD1
"RTN","A1AEUDD",52,0)
 D CHKTF^%ut(X="PK*1*2T3","Didn't remove .0 from full * format, returned X="_X)
"RTN","A1AEUDD",53,0)
 Q
"RTN","A1AEUPS1")
0^65^B38575503
"RTN","A1AEUPS1",1,0)
A1AEUPS1 ;VEN-LGC/JLI - UNIT TESTS FOR THE PATCH MODULE;2014-10-17  10:21 PM; 8/20/14 11:07pm ; 10/20/14 5:52am
"RTN","A1AEUPS1",2,0)
 ;;2.4;PATCH MODULE;;AUG 20, 2014;Build 14
"RTN","A1AEUPS1",3,0)
 ;
"RTN","A1AEUPS1",4,0)
 ; CHANGE: (VEN/LGC) Corrected calls to Post Install
"RTN","A1AEUPS1",5,0)
 ;        The Post install was moved out of the A1AEUTL
"RTN","A1AEUPS1",6,0)
 ;        routine and placed in the A1AE2POS routine
"RTN","A1AEUPS1",7,0)
 ;        now designated as the post install repository
"RTN","A1AEUPS1",8,0)
 ; CHANGE: (VEN/LGC) 9/29/2014
"RTN","A1AEUPS1",9,0)
 ;        Added code at UTS0+7 to save entry temporarily
"RTN","A1AEUPS1",10,0)
 ;        stream set to subscription, to assure after
"RTN","A1AEUPS1",11,0)
 ;        testing this was returned to 0
"RTN","A1AEUPS1",12,0)
 ; CHANGE: (VEN/LGC) 10/16/2014
"RTN","A1AEUPS1",13,0)
 ;        Added code to check for exsitence and DD
"RTN","A1AEUPS1",14,0)
 ;        of files before continuing with testing
"RTN","A1AEUPS1",15,0)
 ;        Added A1AEFAIL to indicate when testing
"RTN","A1AEUPS1",16,0)
 ;        should not continue.
"RTN","A1AEUPS1",17,0)
 ;
"RTN","A1AEUPS1",18,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUPS1",19,0)
 ; N A1AEFAIL S A1AEFAIL=0 ; JLI 141017 moved to STARTUP
"RTN","A1AEUPS1",20,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUPS1",21,0)
 Q
"RTN","A1AEUPS1",22,0)
 ;
"RTN","A1AEUPS1",23,0)
STARTUP ;
"RTN","A1AEUPS1",24,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN ; JLI 141017
"RTN","A1AEUPS1",25,0)
 I '$D(^A1AE(11007.1)) D  Q
"RTN","A1AEUPS1",26,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS1",27,0)
 . W !,"DHCP PATCH STREAM [#11007.1] file missing"
"RTN","A1AEUPS1",28,0)
 . W !,"Unable to continue testing.  Try again later"
"RTN","A1AEUPS1",29,0)
 .;
"RTN","A1AEUPS1",30,0)
 L +^A1AE(11007.1):1 I '$T D  Q
"RTN","A1AEUPS1",31,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS1",32,0)
 . W !,"Unable to obtain lock on DHCP PATCH STREAM [#11007.1] file"
"RTN","A1AEUPS1",33,0)
 . W !,"Unable to continue testing.  Try again later"
"RTN","A1AEUPS1",34,0)
 ;
"RTN","A1AEUPS1",35,0)
 ; Check structure of 11007.1 correct
"RTN","A1AEUPS1",36,0)
 I $$GET1^DIQ(11007.1,1,.01)'="FOIA VISTA" D  Q
"RTN","A1AEUPS1",37,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS1",38,0)
 . W !,"DHCP PATCH STREAM [#11007.1] missing FOIA VISTA"
"RTN","A1AEUPS1",39,0)
 . W !,"Unable to continue testing.  Try again later"
"RTN","A1AEUPS1",40,0)
 ;
"RTN","A1AEUPS1",41,0)
 I $$GET1^DIQ(11007.1,10001,.01)'="OSEHRA VISTA" D  Q
"RTN","A1AEUPS1",42,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS1",43,0)
 . W !,"DHCP PATCH STREAM [#11007.1] missing OSEHRA VISTA"
"RTN","A1AEUPS1",44,0)
 . W !,"Unable to continue testing.  Try again later"
"RTN","A1AEUPS1",45,0)
 ;
"RTN","A1AEUPS1",46,0)
 I $$GET1^DIQ(11007.1,1,.001)'=1 D  Q
"RTN","A1AEUPS1",47,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS1",48,0)
 . W !,"File #11007.1 FOIA VISTA .001 field corrupt. "
"RTN","A1AEUPS1",49,0)
 . W !,"Unable to continue testing.  Try again later"
"RTN","A1AEUPS1",50,0)
 ;
"RTN","A1AEUPS1",51,0)
 I $$GET1^DIQ(11007.1,10001,.001)'=10001 D  Q
"RTN","A1AEUPS1",52,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS1",53,0)
 . W !,"File #11007.1] OSEHRA .001 field corrupt"
"RTN","A1AEUPS1",54,0)
 . W !,"Unable to continue testing.  Try again later"
"RTN","A1AEUPS1",55,0)
 Q
"RTN","A1AEUPS1",56,0)
 ;
"RTN","A1AEUPS1",57,0)
SHUTDOWN L -^A1AE(11007.1)
"RTN","A1AEUPS1",58,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUPS1",59,0)
 K A1AEFAIL
"RTN","A1AEUPS1",60,0)
 Q
"RTN","A1AEUPS1",61,0)
 ;
"RTN","A1AEUPS1",62,0)
 ; Unit Test setting all PRIMARY to 0
"RTN","A1AEUPS1",63,0)
 ;   1. Save the IEN of entry now set as PRIMARY
"RTN","A1AEUPS1",64,0)
 ;   2. Run A1AEP0
"RTN","A1AEUPS1",65,0)
 ;   3. Find IEN set to 1 (shouldn't be any)
"RTN","A1AEUPS1",66,0)
 ;   4. Return original PRIMARY setting
"RTN","A1AEUPS1",67,0)
 ;   5. Run Unit Test
"RTN","A1AEUPS1",68,0)
 ;
"RTN","A1AEUPS1",69,0)
 ;
"RTN","A1AEUPS1",70,0)
UTP1 ;
"RTN","A1AEUPS1",71,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP, killed in SHUTDOWN
"RTN","A1AEUPS1",72,0)
 I A1AEFAIL=1 D  Q
"RTN","A1AEUPS1",73,0)
 . ;D FAIL^%ut("Unable to perform testing") ;commented out JLI 141017
"RTN","A1AEUPS1",74,0)
 ;
"RTN","A1AEUPS1",75,0)
 N A1AEI,UTOIEN,UTPOST
"RTN","A1AEUPS1",76,0)
 ; Save IEN of entry now set as PRIMARY?
"RTN","A1AEUPS1",77,0)
 S UTOIEN=$$UTPRIEN
"RTN","A1AEUPS1",78,0)
 ; If no Stream was set to PRIMARY, we must set one 
"RTN","A1AEUPS1",79,0)
 ;  or we are unable to check that clearing all PRIMARY works
"RTN","A1AEUPS1",80,0)
 S:'UTOIEN $P(^A1AE(11007.1,1,0),U,2)=1
"RTN","A1AEUPS1",81,0)
 ; Call should set all PRIMARY to 0
"RTN","A1AEUPS1",82,0)
 D A1AEP1A^A1AE2POS
"RTN","A1AEUPS1",83,0)
 ; See if all PRIMARY are 0
"RTN","A1AEUPS1",84,0)
 S UTPOST=$$UTPRIEN
"RTN","A1AEUPS1",85,0)
 ;
"RTN","A1AEUPS1",86,0)
 ; Return PRIMARY to original value
"RTN","A1AEUPS1",87,0)
 S:UTOIEN $P(^A1AE(11007.1,UTOIEN,0),U,2)=1
"RTN","A1AEUPS1",88,0)
 D CHKEQ^%ut(0,UTPOST,"Set all PRIMARY to 0 FAILED")
"RTN","A1AEUPS1",89,0)
 ;
"RTN","A1AEUPS1",90,0)
 ; Now that we have returned PRIMARY to original setting
"RTN","A1AEUPS1",91,0)
 ;   clean up everything by rebuilding all cross-references
"RTN","A1AEUPS1",92,0)
 N DIK,DA
"RTN","A1AEUPS1",93,0)
 S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AEUPS1",94,0)
 D ENALL2^DIK
"RTN","A1AEUPS1",95,0)
 D ENALL^DIK
"RTN","A1AEUPS1",96,0)
 Q
"RTN","A1AEUPS1",97,0)
 ;
"RTN","A1AEUPS1",98,0)
 ;
"RTN","A1AEUPS1",99,0)
 ; Note in Unit Testing of setting PRIMARY? to match that
"RTN","A1AEUPS1",100,0)
 ;   assigned for specific FORUM Domains, that a non-FORUM
"RTN","A1AEUPS1",101,0)
 ;   site will test only that an incorrect PRIMARY? will
"RTN","A1AEUPS1",102,0)
 ;   not be set.
"RTN","A1AEUPS1",103,0)
 ;   The test in a FORUM Domain site will test whether
"RTN","A1AEUPS1",104,0)
 ;   the PRIMARY? is set, AND set correctly
"RTN","A1AEUPS1",105,0)
 ; Logic for Post Install setting or PRIMARY worked correctly
"RTN","A1AEUPS1",106,0)
 ;   UTDOM = MAIL PARAMETERS not have FORUM domain = NO PRIMARY
"RTN","A1AEUPS1",107,0)
 ;   UTDOM = NOT A FORUM domain = NO PRIMARY
"RTN","A1AEUPS1",108,0)
 ;   UTDOM = FORUM.XXX.YYY
"RTN","A1AEUPS1",109,0)
 ;       A FORUM DOMAIN entry = MAIL PARAMETER DOMAIN = is PRIMARY
"RTN","A1AEUPS1",110,0)
 ;       No FORUM DOMAIN entry = MAIL PARAMETER DOMAIN = NO PRIMARY
"RTN","A1AEUPS1",111,0)
 ;
"RTN","A1AEUPS1",112,0)
UTP2 ;
"RTN","A1AEUPS1",113,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP, killed in SHUTDONW
"RTN","A1AEUPS1",114,0)
 I A1AEFAIL=1 D  Q
"RTN","A1AEUPS1",115,0)
 . ;D FAIL^%ut("Unable to perform testing") ; JLI 141017 COMMENTED OUT
"RTN","A1AEUPS1",116,0)
 ;
"RTN","A1AEUPS1",117,0)
 N A1AEI,UTDOM,UTOIEN,UTPOST,X
"RTN","A1AEUPS1",118,0)
 S UTDOM=$$GET1^DIQ(4.3,"1,",.01)
"RTN","A1AEUPS1",119,0)
 ; Save present PRIMARY patch stream IEN - if one set
"RTN","A1AEUPS1",120,0)
 S UTOIEN=$$UTPRIEN
"RTN","A1AEUPS1",121,0)
 ; If a Patch Stream PRIMARY? is set to YES, set to NO
"RTN","A1AEUPS1",122,0)
 S:UTOIEN $P(^A1AE(11007.1,UTOIEN,0),U,2)=0
"RTN","A1AEUPS1",123,0)
 ; Run code to set PRIMARY? according to FORUM DOMAIN entry
"RTN","A1AEUPS1",124,0)
 D A1AEP1B^A1AE2POS
"RTN","A1AEUPS1",125,0)
 ; Get the IEN of the entry having PRIMARY? set to yes now
"RTN","A1AEUPS1",126,0)
 ; Note that if no FORUM DOMAIN entry is filled into
"RTN","A1AEUPS1",127,0)
 ;   an entry in DHCP PATCH STREAM then all entries
"RTN","A1AEUPS1",128,0)
 ;   remain CORRECTLY at PRIMARY=0
"RTN","A1AEUPS1",129,0)
 S UTPOST=$$UTPRIEN
"RTN","A1AEUPS1",130,0)
 S X=1
"RTN","A1AEUPS1",131,0)
 ; If all PRIMARY are 0, and
"RTN","A1AEUPS1",132,0)
 ;    a) and MAIL DOMAIN not contain "FORUM" --- correct 
"RTN","A1AEUPS1",133,0)
 ;    b) and no FORUM DOMAIN fields set in 11007.1 --- correct
"RTN","A1AEUPS1",134,0)
 ; If there is a PRIMARY set then correct if,
"RTN","A1AEUPS1",135,0)
 ;    a) the mail domain (UTDOM) contains "FORUM"
"RTN","A1AEUPS1",136,0)
 ;    b) and, the FORUM DOMAIN for this entry set to PRIMARY
"RTN","A1AEUPS1",137,0)
 ;            matches the mail domain
"RTN","A1AEUPS1",138,0)
 I 'UTPOST,$P($G(UTDOM),".")'["FORUM" S X=0
"RTN","A1AEUPS1",139,0)
 I 'UTPOST,'$D(^A1AE(11007.1,"AFORUM")) S X=0
"RTN","A1AEUPS1",140,0)
 I $P(UTDOM,".")["FORUM",UTDOM=$$GET1^DIQ(11007.1,UTPOST_",",.07) D
"RTN","A1AEUPS1",141,0)
 . S X=0
"RTN","A1AEUPS1",142,0)
 D CHKEQ^%ut(0,X,"Set FORUM SITE PRIMARY to 1 FAILED")
"RTN","A1AEUPS1",143,0)
 ; Put settings back as they were, even if incorrect
"RTN","A1AEUPS1",144,0)
 I UTOIEN'=UTPOST D
"RTN","A1AEUPS1",145,0)
 .  S $P(^A1AE(11007.1,UTPOST,0),U,2)=0
"RTN","A1AEUPS1",146,0)
 .  S $P(^A1AE(11007.1,UTOIEN,0),U,2)=1
"RTN","A1AEUPS1",147,0)
 N DIK,DA
"RTN","A1AEUPS1",148,0)
 S DIK(1)=".02",DIK="^A1AE(11007.1,"
"RTN","A1AEUPS1",149,0)
 D ENALL2^DIK
"RTN","A1AEUPS1",150,0)
 D ENALL^DIK
"RTN","A1AEUPS1",151,0)
 Q
"RTN","A1AEUPS1",152,0)
 ;
"RTN","A1AEUPS1",153,0)
 ;
"RTN","A1AEUPS1",154,0)
 ; Unit Testing for subroutine that sets all SUBSCRIPTION [#.06]
"RTN","A1AEUPS1",155,0)
 ;   to 0 [NO], then sets SUBSCRIPTION to YES for the FOIA VISTA
"RTN","A1AEUPS1",156,0)
 ;   Stream.
"RTN","A1AEUPS1",157,0)
 ; Rather than correct a site's entries if they are set wrong
"RTN","A1AEUPS1",158,0)
 ;   we will first save off their present SUBSCRIPTION entry
"RTN","A1AEUPS1",159,0)
 ;   in the DHCP PATCH STREAM [#11007.1] file so we might 
"RTN","A1AEUPS1",160,0)
 ;   set it back after our test.
"RTN","A1AEUPS1",161,0)
 ; Logic for test
"RTN","A1AEUPS1",162,0)
 ;   1. Save off IEN for entry in DHCP PATCH STREAM [#11007.1]
"RTN","A1AEUPS1",163,0)
 ;       SUBSCRIPTION presently set to 1 [YES]
"RTN","A1AEUPS1",164,0)
 ;   2. Run A1AEP1C^A1AE2POS in the Post Install routine
"RTN","A1AEUPS1",165,0)
 ;      which should set SUBSCRIPTION to 0, then set
"RTN","A1AEUPS1",166,0)
 ;      the FOIA VISTA site to SUBSCRIPTION
"RTN","A1AEUPS1",167,0)
 ;   3. Set the IEN for Stream SUBSCRIPTION back to original
"RTN","A1AEUPS1",168,0)
 ;   4. Run Unit Test code 
"RTN","A1AEUPS1",169,0)
 ;
"RTN","A1AEUPS1",170,0)
UTP3 ;
"RTN","A1AEUPS1",171,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP, killed in SHUTDOWN
"RTN","A1AEUPS1",172,0)
 I A1AEFAIL=1 D  Q
"RTN","A1AEUPS1",173,0)
 . ;D FAIL^%ut("Unable to perform testing") ; JLI 141017 commented out
"RTN","A1AEUPS1",174,0)
 ;
"RTN","A1AEUPS1",175,0)
 N A1AEI,UTOIEN,UTPOST,UTMPOST
"RTN","A1AEUPS1",176,0)
 ; Save off stream now set to SUBSCRIPTION
"RTN","A1AEUPS1",177,0)
 S UTOIEN=$$UTSUBS
"RTN","A1AEUPS1",178,0)
 ; If no Stream was set to SUBSCRIPTION, we must set one
"RTN","A1AEUPS1",179,0)
 ;  or we are unable to check that clearing all SUBSCRIPTION works
"RTN","A1AEUPS1",180,0)
 I 'UTOIEN S A1AEI=$O(^A1AE(11007.1,"A"),-1) D
"RTN","A1AEUPS1",181,0)
 .  S $P(^A1AE(11007.1,A1AEI,0),U,6)=1
"RTN","A1AEUPS1",182,0)
 .  S UTMPOST=A1AEI ; Temporariy set
"RTN","A1AEUPS1",183,0)
 ; Call subroutine in Post Install routine that sets
"RTN","A1AEUPS1",184,0)
 ;   SUBSCRIPTION to the FOIA VISTA entry
"RTN","A1AEUPS1",185,0)
 D A1AEP1C^A1AE2POS
"RTN","A1AEUPS1",186,0)
 ; See what entry in 11007.1 file is now set to SUBSCRIPTION
"RTN","A1AEUPS1",187,0)
 S UTPOST=$$UTSUBS
"RTN","A1AEUPS1",188,0)
 ; Return SUBSCRIPTION to original value
"RTN","A1AEUPS1",189,0)
 I 'UTOIEN,$G(UTMPOST) S $P(^A1AE(11007.1,UTMPOST,0),U,6)=0
"RTN","A1AEUPS1",190,0)
 I UTOIEN,UTOIEN'=UTPOST D
"RTN","A1AEUPS1",191,0)
 . S $P(^A1AE(11007.1,UTPOST,0),U,6)=0
"RTN","A1AEUPS1",192,0)
 . S $P(^A1AE(11007.1,UTOIEN,0),U,6)=1
"RTN","A1AEUPS1",193,0)
 S X=1
"RTN","A1AEUPS1",194,0)
 I UTPOST,$P(^A1AE(11007.1,UTPOST,0),U)="FOIA VISTA" S X=0
"RTN","A1AEUPS1",195,0)
 D CHKEQ^%ut(0,X,"Set SEQUENCE appropriate for FORUM DOMAIN FAILED")
"RTN","A1AEUPS1",196,0)
 N DIK,DA
"RTN","A1AEUPS1",197,0)
 S DIK(1)=".06",DIK="^A1AE(11007.1,"
"RTN","A1AEUPS1",198,0)
 D ENALL2^DIK
"RTN","A1AEUPS1",199,0)
 D ENALL^DIK
"RTN","A1AEUPS1",200,0)
 Q
"RTN","A1AEUPS1",201,0)
 ;
"RTN","A1AEUPS1",202,0)
 ;
"RTN","A1AEUPS1",203,0)
 ;
"RTN","A1AEUPS1",204,0)
 ; Function to return IEN in DHCP PATCH STREAM [#11007.1]
"RTN","A1AEUPS1",205,0)
 ;   entry having PRIMARY? [#.02] field set
"RTN","A1AEUPS1",206,0)
UTPRIEN() N A1AEI,UTPRIM S (A1AEI,UTPRIM)=0
"RTN","A1AEUPS1",207,0)
 F  S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AEUPS1",208,0)
 .  I $P(^A1AE(11007.1,A1AEI,0),U,2) S UTPRIM=A1AEI
"RTN","A1AEUPS1",209,0)
 Q UTPRIM
"RTN","A1AEUPS1",210,0)
 ;
"RTN","A1AEUPS1",211,0)
 ; Function to return IEN in DHCP PATCH STREAM [#11007.1]
"RTN","A1AEUPS1",212,0)
 ;   entry having SUBSCRIPTION [#.03] field set
"RTN","A1AEUPS1",213,0)
UTSUBS() N UTSUBS S (A1AEI,UTSUBS)=0
"RTN","A1AEUPS1",214,0)
 F  S A1AEI=$O(^A1AE(11007.1,A1AEI)) Q:'A1AEI  D
"RTN","A1AEUPS1",215,0)
 .  I $P(^A1AE(11007.1,A1AEI,0),U,6) S UTSUBS=A1AEI
"RTN","A1AEUPS1",216,0)
 Q UTSUBS
"RTN","A1AEUPS1",217,0)
 ;
"RTN","A1AEUPS1",218,0)
CHKPLUS  ; @TEST check setting of Pre-LookUp Transforms
"RTN","A1AEUPS1",219,0)
 ; remove existing nodes that will be set
"RTN","A1AEUPS1",220,0)
 K ^DD(9.49,.01,7.5),^DD(9.6,.01,7.5),^DD(9.7,.01,7.5)
"RTN","A1AEUPS1",221,0)
 ; now run code to set them
"RTN","A1AEUPS1",222,0)
 D SETPLUS^A1AE2POS
"RTN","A1AEUPS1",223,0)
 ; and check that they are set
"RTN","A1AEUPS1",224,0)
 D CHKTF^%ut($D(^DD(9.49,.01,7.5)),"Failed to set Pre-Lookup Transform (node 7.5) for subfile 9.49")
"RTN","A1AEUPS1",225,0)
 D CHKTF^%ut($D(^DD(9.6,.01,7.5)),"Failed to set Pre-Lookup Transform (node 7.5) for file 9.6")
"RTN","A1AEUPS1",226,0)
 D CHKTF^%ut($D(^DD(9.7,.01,7.5)),"Failed to set Pre-Lookup Transform (node 7.5) for file 9.7")
"RTN","A1AEUPS1",227,0)
 Q
"RTN","A1AEUPS1",228,0)
 ;
"RTN","A1AEUPS1",229,0)
XTENT ;
"RTN","A1AEUPS1",230,0)
 ;;UTP1;Testing setting of all PRIMARY? to NO in 11007.1
"RTN","A1AEUPS1",231,0)
 ;;UTP2;Testing setting PRIMARY? to yes if FORUM site
"RTN","A1AEUPS1",232,0)
 ;;UTP3;Testing setting of SUBSCRIPTION to FOIA VISTA
"RTN","A1AEUPS1",233,0)
 Q
"RTN","A1AEUPS1",234,0)
 ;
"RTN","A1AEUPS1",235,0)
 ;
"RTN","A1AEUPS1",236,0)
EOR ; end of routine A1AEUPS1
"RTN","A1AEUPS2")
0^66^B98966818
"RTN","A1AEUPS2",1,0)
A1AEUPS2 ;VEN-LGC/JLI - UNIT TESTS FOR THE PATCH MODULE ; 10/23/14 8:08am
"RTN","A1AEUPS2",2,0)
 ;;2.4;PATCH MODULE;;AUG 26, 2014;Build 14
"RTN","A1AEUPS2",3,0)
 ;
"RTN","A1AEUPS2",4,0)
 ; CHANGE: (VEN/LGC) 10/14/2014
"RTN","A1AEUPS2",5,0)
 ;     Added code to check for correct PATCH field
"RTN","A1AEUPS2",6,0)
 ;     DD in file 9.6 and 9.7
"RTN","A1AEUPS2",7,0)
 ;
"RTN","A1AEUPS2",8,0)
 ; Unit Test for Post Install which loads all BUILD [#9.6]
"RTN","A1AEUPS2",9,0)
 ;   and INSTALL [#9.7] entries with pointers to 
"RTN","A1AEUPS2",10,0)
 ;   DHCP PATCHES [#11005] file in the PAT multiple
"RTN","A1AEUPS2",11,0)
 ;   
"RTN","A1AEUPS2",12,0)
 ;   1. Lock DHCP PATCHES,BUILD,INSTALL files
"RTN","A1AEUPS2",13,0)
 ;   2. Select 10 patches from DHCP PATCHES [#11005]
"RTN","A1AEUPS2",14,0)
 ;   3. Install test entries
"RTN","A1AEUPS2",15,0)
 ;   5. Check new entries match expected
"RTN","A1AEUPS2",16,0)
 ;   6. Run section of Post Install to be tested
"RTN","A1AEUPS2",17,0)
 ;   7. Run Unit Test to ensure PAT entries correct
"RTN","A1AEUPS2",18,0)
 ;   8. Delete builds (1),(2) and (3)
"RTN","A1AEUPS2",19,0)
 ;   9. Release Locks
"RTN","A1AEUPS2",20,0)
 ;
"RTN","A1AEUPS2",21,0)
 ;
"RTN","A1AEUPS2",22,0)
START I $T(^%ut)="" W !,"*** UNIT TEST NOT INSTALLED ***" Q
"RTN","A1AEUPS2",23,0)
 ; N A1AEFAIL S A1AEFAIL=0 ; moved to STARTUP
"RTN","A1AEUPS2",24,0)
 D EN^%ut($T(+0),1)
"RTN","A1AEUPS2",25,0)
 Q
"RTN","A1AEUPS2",26,0)
 ;
"RTN","A1AEUPS2",27,0)
STARTUP ;
"RTN","A1AEUPS2",28,0)
 S A1AEFAIL=0 ; KILLED IN SHUTDOWN
"RTN","A1AEUPS2",29,0)
 I '$D(^XPD(9.6)) D  Q
"RTN","A1AEUPS2",30,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",31,0)
 . W !,"BUILD [#9.6] file not in environment"
"RTN","A1AEUPS2",32,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",33,0)
 ;
"RTN","A1AEUPS2",34,0)
 I '$D(^XPD(9.7)) D  Q
"RTN","A1AEUPS2",35,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",36,0)
 . W !,"INSTALL [#9.7] file not in environment"
"RTN","A1AEUPS2",37,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",38,0)
 ;
"RTN","A1AEUPS2",39,0)
 L +^XPD(9.6):1 I '$T D  Q
"RTN","A1AEUPS2",40,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",41,0)
 . W !,"Unable to obtain lock on BUILD [#9.6] file"
"RTN","A1AEUPS2",42,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",43,0)
 ;
"RTN","A1AEUPS2",44,0)
 L +^XPD(9.7):1 I '$T D  Q
"RTN","A1AEUPS2",45,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",46,0)
 . W !,"Unable to obtain lock on INSTALL [#9.6] file"
"RTN","A1AEUPS2",47,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",48,0)
 ;
"RTN","A1AEUPS2",49,0)
 I '$D(^A1AE(11005)) D  Q
"RTN","A1AEUPS2",50,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",51,0)
 . W !,"DHCP PATCHES [#11005] not in environment"
"RTN","A1AEUPS2",52,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",53,0)
 ;
"RTN","A1AEUPS2",54,0)
 I $G(^DD(9.6,19,0))'["PATCH^9.619PA^^PAT;0" D  Q
"RTN","A1AEUPS2",55,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",56,0)
 . W !,"PATCH multiple [#19] not found in BUILD file"
"RTN","A1AEUPS2",57,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",58,0)
 ;
"RTN","A1AEUPS2",59,0)
 I $G(^DD(9.7,19,0))'["PATCH^9.719PA^^PAT;0" D  Q
"RTN","A1AEUPS2",60,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",61,0)
 . W !,"PATCH multiple [#19] not found in INSTALL file"
"RTN","A1AEUPS2",62,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",63,0)
 ;
"RTN","A1AEUPS2",64,0)
 D ENTDEL I ERRMSG'["OK" D  Q
"RTN","A1AEUPS2",65,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",66,0)
 . W !,"Unable to clear special 9.6,9.7 entries before test"
"RTN","A1AEUPS2",67,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",68,0)
 ;
"RTN","A1AEUPS2",69,0)
 S X=$$DELPAT I 'X D  Q
"RTN","A1AEUPS2",70,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",71,0)
 . W !,"Unable to clear test patches from DHCP PATCHES [#11005]"
"RTN","A1AEUPS2",72,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",73,0)
 ;
"RTN","A1AEUPS2",74,0)
 S X=$$NEWPAT I 'X D  Q
"RTN","A1AEUPS2",75,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",76,0)
 . W !,"Unable to add test patches to DHCP PATCHES [#11005]"
"RTN","A1AEUPS2",77,0)
 . W !," Unable to perform testing."
"RTN","A1AEUPS2",78,0)
 Q
"RTN","A1AEUPS2",79,0)
 ;
"RTN","A1AEUPS2",80,0)
 ;
"RTN","A1AEUPS2",81,0)
 ;
"RTN","A1AEUPS2",82,0)
SHUTDOWN L -^XPD(9.6)
"RTN","A1AEUPS2",83,0)
 L -^XPD(9.7)
"RTN","A1AEUPS2",84,0)
 ; ZEXCEPT: A1AEFAIL - defined in STARTUP
"RTN","A1AEUPS2",85,0)
 K A1AEFAIL
"RTN","A1AEUPS2",86,0)
 S X=$$DELPAT I 'X D  Q
"RTN","A1AEUPS2",87,0)
 . S A1AEFAIL=1
"RTN","A1AEUPS2",88,0)
 . W !,"Unable to clear test patches from DHCP PATCHES [#11005]"
"RTN","A1AEUPS2",89,0)
 . W !," A1AE*2.4*900 through A1AE*2.4*915 and."
"RTN","A1AEUPS2",90,0)
 . W !," A1AE*2.4*19900 through A1AE*2.4*19915"
"RTN","A1AEUPS2",91,0)
 . W !," may need to be deleted manually"
"RTN","A1AEUPS2",92,0)
 ;
"RTN","A1AEUPS2",93,0)
 D ENTDEL I ERRMSG'["OK" D  Q
"RTN","A1AEUPS2",94,0)
 . W !,"***** WARNING *****"
"RTN","A1AEUPS2",95,0)
 . W !,"Unable to clear special 9.6,9.7 entries after test"
"RTN","A1AEUPS2",96,0)
 . W !,"  BUILDS with names beginning with  A1AEXTST*1*"
"RTN","A1AEUPS2",97,0)
 . W !,"  may need to be deleted manually."
"RTN","A1AEUPS2",98,0)
 Q
"RTN","A1AEUPS2",99,0)
 ;
"RTN","A1AEUPS2",100,0)
UTP4 I $G(A1AEFAIL) D  Q
"RTN","A1AEUPS2",101,0)
 . D FAIL^%ut("Unable to perform test.")
"RTN","A1AEUPS2",102,0)
 ;
"RTN","A1AEUPS2",103,0)
 N ERRMSG S ERRMSG="OK"
"RTN","A1AEUPS2",104,0)
 I '$$SEL10(.A1AEP) D  Q
"RTN","A1AEUPS2",105,0)
 .  D FAIL^%ut("Unable to select 10 test patches")
"RTN","A1AEUPS2",106,0)
 D LOADBLDS I ERRMSG'["OK" D  Q
"RTN","A1AEUPS2",107,0)
 .  D FAIL^%ut(ERRMSG)
"RTN","A1AEUPS2",108,0)
 D LOADINST I ERRMSG'["OK" D  Q
"RTN","A1AEUPS2",109,0)
 .  D FAIL^%ut(ERRMSG)
"RTN","A1AEUPS2",110,0)
 S OK=$$CHKIBENT I OK D  Q
"RTN","A1AEUPS2",111,0)
 . D FAIL^%ut("Loading BUILDS and INSTALLS for testing FAILED!")
"RTN","A1AEUPS2",112,0)
 ; Run post install to add PAT multiple to new 9.6 and 9.7 entries
"RTN","A1AEUPS2",113,0)
 D RUNPOST
"RTN","A1AEUPS2",114,0)
 ;  Test whether the post install worked correctly.
"RTN","A1AEUPS2",115,0)
 S OK=$$CHKIBPAT
"RTN","A1AEUPS2",116,0)
 D CHKEQ^%ut(0,OK,"Setting PAT multiple in 9.6 and 9.7 FAILED")
"RTN","A1AEUPS2",117,0)
 Q
"RTN","A1AEUPS2",118,0)
 ;
"RTN","A1AEUPS2",119,0)
 ; Build an array of TEST entries in DHCP PATCHES [#11005]
"RTN","A1AEUPS2",120,0)
 ; ENTER
"RTN","A1AEUPS2",121,0)
 ;   A1AEP  passed by reference
"RTN","A1AEUPS2",122,0)
 ; RETURN
"RTN","A1AEUPS2",123,0)
 ;   A1AEP(n) array of entries in 11005
"RTN","A1AEUPS2",124,0)
 ;   0 = error ,  1 = selection complete
"RTN","A1AEUPS2",125,0)
SEL10(A1AEP) K A1AEP
"RTN","A1AEUPS2",126,0)
 N X S X=1
"RTN","A1AEUPS2",127,0)
 N I F I=1:1:9 S A1AEP(I)="A1AE*2.4*"_(900+I) D  Q:'X
"RTN","A1AEUPS2",128,0)
 . S X=$O(^A1AE(11005,"B",A1AEP(I),0))
"RTN","A1AEUPS2",129,0)
 Q:'X X
"RTN","A1AEUPS2",130,0)
 S A1AEP(10)="A1AE*999.1*12345"
"RTN","A1AEUPS2",131,0)
 Q 1
"RTN","A1AEUPS2",132,0)
 ;
"RTN","A1AEUPS2",133,0)
 ;
"RTN","A1AEUPS2",134,0)
 ;
"RTN","A1AEUPS2",135,0)
ENTDEL N PM
"RTN","A1AEUPS2",136,0)
 D RMVENT(9.6,"A1AE*1.0*9999980",.ERRMSG) Q:$G(ERRMSG)'["OK"
"RTN","A1AEUPS2",137,0)
 D RMVENT(9.6,"A1AE MUNITPOO 1.0",.ERRMSG) Q:$G(ERRMSG)'["OK"
"RTN","A1AEUPS2",138,0)
 D RMVENT(9.6,"A1AE*1.0*9999981",.ERRMSG) Q:$G(ERRMSG)'["OK"
"RTN","A1AEUPS2",139,0)
 D RMVENT(9.7,"A1AE*1.0*9999980",.ERRMSG) Q:$G(ERRMSG)'["OK"
"RTN","A1AEUPS2",140,0)
 N I F I=1:1:10 D  Q:$G(ERRMSG)'["OK"
"RTN","A1AEUPS2",141,0)
 . Q:$G(A1AEP(I))=""
"RTN","A1AEUPS2",142,0)
 . I $O(^XPD(9.6,"B",A1AEP(I),0)) D
"RTN","A1AEUPS2",143,0)
 .. D RMVENT(9.6,$G(A1AEP(I)),.ERRMSG)
"RTN","A1AEUPS2",144,0)
 Q
"RTN","A1AEUPS2",145,0)
 ;
"RTN","A1AEUPS2",146,0)
 ; Remove all entries with this PATCH DESIGNATION
"RTN","A1AEUPS2",147,0)
RMVENT(KFILE,PM,ERRMSG) ;
"RTN","A1AEUPS2",148,0)
 N DA,DIERR,DIK K ERRMSG S ERRMSG="OK"
"RTN","A1AEUPS2",149,0)
 F  S DA=$O(^XPD(KFILE,"B",PM,0)) Q:'DA  D  Q:ERRMSG["DIERR"
"RTN","A1AEUPS2",150,0)
 .  S DIK="^XPD("_KFILE_","
"RTN","A1AEUPS2",151,0)
 .  D ^DIK
"RTN","A1AEUPS2",152,0)
 .  S:$D(DIERR) ERRMSG="DIERR"
"RTN","A1AEUPS2",153,0)
 Q
"RTN","A1AEUPS2",154,0)
 ;
"RTN","A1AEUPS2",155,0)
 ; Load the necessary BUILDS
"RTN","A1AEUPS2",156,0)
 ;
"RTN","A1AEUPS2",157,0)
LOADBLDS N PTCHARR,PM
"RTN","A1AEUPS2",158,0)
 S PM="A1AE*1.0*9999980"
"RTN","A1AEUPS2",159,0)
 S PTCHARR(1)=$P(A1AEP(1),"^")
"RTN","A1AEUPS2",160,0)
 S PTCHARR(2)="A1AE MUNITPOO 1.0"
"RTN","A1AEUPS2",161,0)
 D LDBLDS(9.6,PM,.PTCHARR) Q:ERRMSG'["OK"
"RTN","A1AEUPS2",162,0)
 ;
"RTN","A1AEUPS2",163,0)
 K PTCHARR
"RTN","A1AEUPS2",164,0)
 S PM="A1AE MUNITPOO 1.0"
"RTN","A1AEUPS2",165,0)
 F I=2:1:8 S PTCHARR(I)=$P(A1AEP(I),"^")
"RTN","A1AEUPS2",166,0)
 D LDBLDS(9.6,PM,.PTCHARR) Q:ERRMSG'["OK"
"RTN","A1AEUPS2",167,0)
 ;
"RTN","A1AEUPS2",168,0)
 K PTCHARR
"RTN","A1AEUPS2",169,0)
 S PM="A1AE*1.0*9999981"
"RTN","A1AEUPS2",170,0)
 F I=9:1:10 S PTCHARR(I)=$P(A1AEP(I),"^")
"RTN","A1AEUPS2",171,0)
 D LDBLDS(9.6,PM,.PTCHARR) Q:ERRMSG'["OK"
"RTN","A1AEUPS2",172,0)
 ;
"RTN","A1AEUPS2",173,0)
 ; Load patches selected from 11005 into 9.6
"RTN","A1AEUPS2",174,0)
 ;   as builds
"RTN","A1AEUPS2",175,0)
 K PTCHARR
"RTN","A1AEUPS2",176,0)
 F I=1:1:10 S PM=A1AEP(I) D LDBLDS(9.6,PM,.PTCHARR)
"RTN","A1AEUPS2",177,0)
 Q
"RTN","A1AEUPS2",178,0)
 ;
"RTN","A1AEUPS2",179,0)
 ;
"RTN","A1AEUPS2",180,0)
LOADINST N PM
"RTN","A1AEUPS2",181,0)
 S PM="A1AE*1.0*9999980"
"RTN","A1AEUPS2",182,0)
 D LDINST(9.7,PM) Q:ERRMSG'["OK"
"RTN","A1AEUPS2",183,0)
 D LDINST(9.7,PM) Q:ERRMSG'["OK"
"RTN","A1AEUPS2",184,0)
 Q
"RTN","A1AEUPS2",185,0)
 ;
"RTN","A1AEUPS2",186,0)
 ;
"RTN","A1AEUPS2",187,0)
 ;
"RTN","A1AEUPS2",188,0)
LDBLDS(KFILE,PM,PTCHARR) ;
"RTN","A1AEUPS2",189,0)
 N A1AEKI,A1AEPM,DIERR,FDA,FIEN
"RTN","A1AEUPS2",190,0)
 ;W !,"PM=",PM
"RTN","A1AEUPS2",191,0)
 S FDA(3,KFILE,"?+1,",.01)=PM
"RTN","A1AEUPS2",192,0)
 S FDA(3,KFILE,"?+1,",2)=0
"RTN","A1AEUPS2",193,0)
 S FDA(3,KFILE,"?+1,",.02)=$$HTFM^XLFDT($H,1)
"RTN","A1AEUPS2",194,0)
 S FDA(3,KFILE,"?+1,",5)="n"
"RTN","A1AEUPS2",195,0)
 D UPDATE^DIE("","FDA(3)","FIEN")
"RTN","A1AEUPS2",196,0)
 I $D(DIERR) D  Q
"RTN","A1AEUPS2",197,0)
 . S ERRMSG="*** DIERR encountered while attempting to enter BUILDS!"
"RTN","A1AEUPS2",198,0)
 S A1AEKI=+FIEN(1)
"RTN","A1AEUPS2",199,0)
 I A1AEKI D  Q:$G(ERRMSG)'["OK"
"RTN","A1AEUPS2",200,0)
 . N PTCHS S PTCHS=0
"RTN","A1AEUPS2",201,0)
 . F  S PTCHS=$O(PTCHARR(PTCHS)) Q:'PTCHS  D  Q:$G(ERRMSG)'["OK"
"RTN","A1AEUPS2",202,0)
 .. S A1AEPM=PTCHARR(PTCHS)
"RTN","A1AEUPS2",203,0)
 .. D LDBLDS1(A1AEKI,A1AEPM,9.63)
"RTN","A1AEUPS2",204,0)
 Q
"RTN","A1AEUPS2",205,0)
 ;
"RTN","A1AEUPS2",206,0)
LDBLDS1(A1AEKI,A1AEPM,KSFILE) ;
"RTN","A1AEUPS2",207,0)
 N FDA,DIERR
"RTN","A1AEUPS2",208,0)
 S FDA(3,KSFILE,"?+1,"_A1AEKI_",",.01)=A1AEPM
"RTN","A1AEUPS2",209,0)
 D UPDATE^DIE("","FDA(3)","")
"RTN","A1AEUPS2",210,0)
 I $D(DIERR) D  Q
"RTN","A1AEUPS2",211,0)
 . S ERRMSG="*** DIERR encountered while entering MULTIPLE BUILDS!"
"RTN","A1AEUPS2",212,0)
 Q
"RTN","A1AEUPS2",213,0)
 ;
"RTN","A1AEUPS2",214,0)
 ;
"RTN","A1AEUPS2",215,0)
 ;
"RTN","A1AEUPS2",216,0)
LDINST(KFILE,PM) ;
"RTN","A1AEUPS2",217,0)
 N FDA,DIERR
"RTN","A1AEUPS2",218,0)
 S FDA(3,KFILE,"+1,",.01)=PM
"RTN","A1AEUPS2",219,0)
 S FDA(3,KFILE,"+1,",.02)=3
"RTN","A1AEUPS2",220,0)
 S FDA(3,KFILE,"+1,",2)=$$HTFM^XLFDT($H)
"RTN","A1AEUPS2",221,0)
 D UPDATE^DIE("","FDA(3)","")
"RTN","A1AEUPS2",222,0)
 I $D(DIERR) D  Q
"RTN","A1AEUPS2",223,0)
 . S ERRMSG="*** DIERR encountered while entering MULTIPLE INSTALLS!"
"RTN","A1AEUPS2",224,0)
 Q
"RTN","A1AEUPS2",225,0)
 ;
"RTN","A1AEUPS2",226,0)
 ; Run post install subroutine which builds
"RTN","A1AEUPS2",227,0)
 ;  the BUILD [#9.6] and INSTALL [#9.7] PAT [#19] multiple
"RTN","A1AEUPS2",228,0)
RUNPOST ;
"RTN","A1AEUPS2",229,0)
 N BN,KIEN S KIEN=$O(^XPD(9.6,"B","A1AE*1.0*9999980",0))
"RTN","A1AEUPS2",230,0)
 S BN="A1AE*1.0*9999980"
"RTN","A1AEUPS2",231,0)
 N BMARR D A1AEP2A^A1AE2POS(BN,.BMARR,KIEN)
"RTN","A1AEUPS2",232,0)
 Q
"RTN","A1AEUPS2",233,0)
 ;
"RTN","A1AEUPS2",234,0)
 ; **************** CHK BLD/INS INIT ENTRIES START
"RTN","A1AEUPS2",235,0)
 ; Check BUILD's and INSTALL's entries Multiple Builds
"RTN","A1AEUPS2",236,0)
 ; BUILDS (1st piece of A1AEP(n)=PM)
"RTN","A1AEUPS2",237,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUPS2",238,0)
 ;     A1AEP(1)
"RTN","A1AEUPS2",239,0)
 ;     A1AE MUNITPOO 1.0
"RTN","A1AEUPS2",240,0)
CHKIBENT() N BLDNM,MB,OK
"RTN","A1AEUPS2",241,0)
 S BLDNM="A1AE*1.0*9999980"
"RTN","A1AEUPS2",242,0)
 S MB(1)=$P(A1AEP(1),"^")
"RTN","A1AEUPS2",243,0)
 S MB(2)="A1AE MUNITPOO 1.0"
"RTN","A1AEUPS2",244,0)
 S OK=$$CHKB0(BLDNM,.MB)
"RTN","A1AEUPS2",245,0)
 ;W !,"A1AE*1.0*9999980"," OK=",OK
"RTN","A1AEUPS2",246,0)
 Q:OK
"RTN","A1AEUPS2",247,0)
 ;
"RTN","A1AEUPS2",248,0)
 ;   A1AE MUNITPOO 1.0
"RTN","A1AEUPS2",249,0)
 ;     A1AE(2)-A1AE(8)
"RTN","A1AEUPS2",250,0)
 S BLDNM="A1AE MUNITPOO 1.0"
"RTN","A1AEUPS2",251,0)
 K MB N I F I=2:1:8 S MB(I)=$P(A1AEP(I),"^")
"RTN","A1AEUPS2",252,0)
 S OK=$$CHKB0(BLDNM,.MB)
"RTN","A1AEUPS2",253,0)
 ;W !,"A1AE MUNITPOO 1.0"," OK=",OK
"RTN","A1AEUPS2",254,0)
 Q:OK OK
"RTN","A1AEUPS2",255,0)
 ;
"RTN","A1AEUPS2",256,0)
 ;   A1AE*1.0*9999981
"RTN","A1AEUPS2",257,0)
 ;     A1AE(9)-A1AE(10)
"RTN","A1AEUPS2",258,0)
 S BLDNM="A1AE*1.0*9999981"
"RTN","A1AEUPS2",259,0)
 K MB N I F I=9:1:10 S MB(I)=$P(A1AEP(I),"^")
"RTN","A1AEUPS2",260,0)
 S OK=$$CHKB0(BLDNM,.MB)
"RTN","A1AEUPS2",261,0)
 ;W !,"A1AE*1.0*9999981"," OK=",OK
"RTN","A1AEUPS2",262,0)
 Q:OK OK
"RTN","A1AEUPS2",263,0)
 ;
"RTN","A1AEUPS2",264,0)
 ; INSTALLS (1st piece of A1AEP(n)=PM)
"RTN","A1AEUPS2",265,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUPS2",266,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUPS2",267,0)
 S OK=$$CHKI0("A1AE*1.0*9999980")
"RTN","A1AEUPS2",268,0)
 ;W !,"A1AE*1.0*9999980 INSTALLS"," OK=",OK
"RTN","A1AEUPS2",269,0)
 Q:'OK OK
"RTN","A1AEUPS2",270,0)
 Q 1
"RTN","A1AEUPS2",271,0)
 ;
"RTN","A1AEUPS2",272,0)
 ; Check BUILD entry and Multiple Build entries OK
"RTN","A1AEUPS2",273,0)
 ; ENTER
"RTN","A1AEUPS2",274,0)
 ;   BLDNM  = BUILD name
"RTN","A1AEUPS2",275,0)
 ;   MB   = Array of Multiple Builds associated
"RTN","A1AEUPS2",276,0)
 ; EXIT
"RTN","A1AEUPS2",277,0)
 ;   0 = all OK
"RTN","A1AEUPS2",278,0)
 ;   1 = fail
"RTN","A1AEUPS2",279,0)
CHKB0(BLDNM,MB) N A1AEI,BIEN,OK S OK=0
"RTN","A1AEUPS2",280,0)
 S A1AEI=$O(^XPD(9.6,"B",BLDNM,0)) Q:'A1AEI A1AEI
"RTN","A1AEUPS2",281,0)
 S BIEN=0 F  S BIEN=$O(MB(BIEN)) Q:'BIEN  D  Q:'OK
"RTN","A1AEUPS2",282,0)
 . S OK=$O(^XPD(9.6,A1AEI,10,"B",MB(BIEN),0))
"RTN","A1AEUPS2",283,0)
 Q:'OK 1  Q:'BIEN 0
"RTN","A1AEUPS2",284,0)
 ;
"RTN","A1AEUPS2",285,0)
 ; Check INSTALL entry OK
"RTN","A1AEUPS2",286,0)
 ; ENTER
"RTN","A1AEUPS2",287,0)
 ;   INSTNM  = INSTALL name
"RTN","A1AEUPS2",288,0)
 ; EXIT
"RTN","A1AEUPS2",289,0)
 ;   0 = all OK
"RTN","A1AEUPS2",290,0)
 ;   1 = fail
"RTN","A1AEUPS2",291,0)
CHKI0(INSTNM) ;
"RTN","A1AEUPS2",292,0)
 Q:$O(^XPD(9.7,"B",INSTNM,0)) 0
"RTN","A1AEUPS2",293,0)
 Q 1
"RTN","A1AEUPS2",294,0)
 ; **************** CHK BLD/INS INIT ENTRIES END
"RTN","A1AEUPS2",295,0)
 ;
"RTN","A1AEUPS2",296,0)
 ;
"RTN","A1AEUPS2",297,0)
 ; **************** CHK BLD/INS FOR PAT START
"RTN","A1AEUPS2",298,0)
CHKIBPAT() ;
"RTN","A1AEUPS2",299,0)
 ; Check BUILD's and INSTALL's entries for PAT
"RTN","A1AEUPS2",300,0)
 ; BUILDS (1st piece of A1AEP(n)=PM)
"RTN","A1AEUPS2",301,0)
 ; INSTALLS (2nd piece of A1AEP(n)=A1AEPI (IEN 11005)
"RTN","A1AEUPS2",302,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUPS2",303,0)
 ;     A1AEP(1)
"RTN","A1AEUPS2",304,0)
 ;     A1AE MUNITPOO 1.0
"RTN","A1AEUPS2",305,0)
 N FILENBR,BINAME,PTCHS
"RTN","A1AEUPS2",306,0)
 S FILENBR=9.6
"RTN","A1AEUPS2",307,0)
 S BINAME="A1AE*1.0*9999980"
"RTN","A1AEUPS2",308,0)
 N I F I=1:1:8 S PTCHS(I)=+$P(A1AEP(1),"^",2)
"RTN","A1AEUPS2",309,0)
 S OK=$$CHKIBP(FILENBR,BINAME,.PTCHS)
"RTN","A1AEUPS2",310,0)
 ;W !,"A1AE*1.0*9999980 PAT BLD","OK=",OK
"RTN","A1AEUPS2",311,0)
 Q:ERRMSG'["OK" 1
"RTN","A1AEUPS2",312,0)
 ;
"RTN","A1AEUPS2",313,0)
 ;   A1AE*1.0*9999980
"RTN","A1AEUPS2",314,0)
 ;     A1AEP(1)
"RTN","A1AEUPS2",315,0)
 ;     A1AE MUNITPOO 1.0
"RTN","A1AEUPS2",316,0)
 S FILENBR=9.7
"RTN","A1AEUPS2",317,0)
 S BINAME="A1AE*1.0*9999980"
"RTN","A1AEUPS2",318,0)
 K PTCHS F I=1:1:8 S PTCHS(I)=+$P(A1AEP(1),"^",2)
"RTN","A1AEUPS2",319,0)
 S OK=$$CHKIBP(FILENBR,BINAME,.PTCHS)
"RTN","A1AEUPS2",320,0)
 ;W !,"A1AE*1.0*9999980 PAT INSTS","OK=",OK
"RTN","A1AEUPS2",321,0)
 Q:ERRMSG'["OK" 1
"RTN","A1AEUPS2",322,0)
 ;
"RTN","A1AEUPS2",323,0)
 ;   A1AE MUNITPOO 1.0
"RTN","A1AEUPS2",324,0)
 ;     A1AE(2)-A1AE(8)
"RTN","A1AEUPS2",325,0)
 S FILENBR=9.6
"RTN","A1AEUPS2",326,0)
 S BINAME="A1AE MUNITPOO 1.0"
"RTN","A1AEUPS2",327,0)
 K PTCHS F I=2:1:8 S PTCHS(I)=+$P(A1AEP(1),"^",2)
"RTN","A1AEUPS2",328,0)
 S OK=$$CHKIBP(FILENBR,BINAME,.PTCHS)
"RTN","A1AEUPS2",329,0)
 ;W !,"A1AE MUNITPOO 1.0 PAT BLD","OK=",OK
"RTN","A1AEUPS2",330,0)
 Q:ERRMSG'["OK" 1
"RTN","A1AEUPS2",331,0)
 ;
"RTN","A1AEUPS2",332,0)
 ;   A1AE*1.0*9999981
"RTN","A1AEUPS2",333,0)
 ;     A1AE(9)-A1AE(10)
"RTN","A1AEUPS2",334,0)
 S FILENBR=9.6
"RTN","A1AEUPS2",335,0)
 S BINAME="A1AE*1.0*9999981"
"RTN","A1AEUPS2",336,0)
 S PTCHS(9)=$P(A1AEP(9),"^")
"RTN","A1AEUPS2",337,0)
 S OK=$$CHKIBP(FILENBR,BINAME,.PTCHS)
"RTN","A1AEUPS2",338,0)
 ;W !,"A1AE*1.0*9999981 PAT BLD","OK=",OK
"RTN","A1AEUPS2",339,0)
 Q:ERRMSG'["OK" 1
"RTN","A1AEUPS2",340,0)
 Q 0
"RTN","A1AEUPS2",341,0)
 ;
"RTN","A1AEUPS2",342,0)
 ; Check INSTALL/BUILD entry PAT multiples OK
"RTN","A1AEUPS2",343,0)
 ; ENTER
"RTN","A1AEUPS2",344,0)
 ;   BINAME = BUILD/INSTALL name
"RTN","A1AEUPS2",345,0)
 ;   PTCHS  = Array of Patches IEN's associated
"RTN","A1AEUPS2",346,0)
 ;   FILENB = 9.6 for BUILD, 9.7 for INSTALL
"RTN","A1AEUPS2",347,0)
 ; EXIT
"RTN","A1AEUPS2",348,0)
 ;   0 = all OK
"RTN","A1AEUPS2",349,0)
 ;   1 = fail
"RTN","A1AEUPS2",350,0)
CHKIBP(FILENBR,BINAME,PTCHS) N A1AEI,BIEN,OK S OK=0
"RTN","A1AEUPS2",351,0)
 S A1AEI=$O(^XPD(FILENBR,"B",BINAME,0)) Q:'A1AEI A1AEI
"RTN","A1AEUPS2",352,0)
 S BIEN=0 F  S BIEN=$O(PTCHS(BIEN)) Q:'BIEN  D  Q:'OK
"RTN","A1AEUPS2",353,0)
 . S OK=$O(^XPD(FILENBR,A1AEI,"PAT","B",PTCHS(BIEN),0))
"RTN","A1AEUPS2",354,0)
 Q:'OK 1  Q:'BIEN 0
"RTN","A1AEUPS2",355,0)
 ; **************** CHK BLD/INS FOR PAT END
"RTN","A1AEUPS2",356,0)
 ;
"RTN","A1AEUPS2",357,0)
 ; Load new test patches into DHCP PATCHES [#11005]
"RTN","A1AEUPS2",358,0)
 ; Enter 15 for stream 1 and 15 for stream 10001
"RTN","A1AEUPS2",359,0)
NEWPAT() N I,PAT,DERFRM
"RTN","A1AEUPS2",360,0)
 S DERFRM=0
"RTN","A1AEUPS2",361,0)
 F I=900:1:915 S PAT="A1AE*2.4*"_I_"^1^"_DERFRM D  Q:'X
"RTN","A1AEUPS2",362,0)
  . S X=$$LDPAT(PAT) Q:'X
"RTN","A1AEUPS2",363,0)
 . S DERFRM=X
"RTN","A1AEUPS2",364,0)
 . S PAT="A1AE*2.4*19"_I_"^10001^"_DERFRM D  Q:'X
"RTN","A1AEUPS2",365,0)
 .. S X=$$LDPAT(PAT) Q:'X
"RTN","A1AEUPS2",366,0)
 .. S DERFRM=X
"RTN","A1AEUPS2",367,0)
 Q:'X X  Q 1
"RTN","A1AEUPS2",368,0)
 ;
"RTN","A1AEUPS2",369,0)
 ; Loads a new patch into 11005.
"RTN","A1AEUPS2",370,0)
 ; ENTER
"RTN","A1AEUPS2",371,0)
 ;   PAT           =  Patch name^Patch Stream^Derived from
"RTN","A1AEUPS2",372,0)
 ;   Patch Name    =  A1AE*2.4*nnnn
"RTN","A1AEUPS2",373,0)
 ;   Patch Stream  =  1 or 10001 (get from 11007.1)
"RTN","A1AEUPS2",374,0)
 ;   Derived from  =  IEN of entry in 11005 from which
"RTN","A1AEUPS2",375,0)
 ;                    this patch derived
"RTN","A1AEUPS2",376,0)
 ; RETURN
"RTN","A1AEUPS2",377,0)
 ;   0  = error,  +n = IEN of new entry
"RTN","A1AEUPS2",378,0)
LDPAT(PAT) ;
"RTN","A1AEUPS2",379,0)
 N PN S PN=$P(PAT,"^") I $L(PAT,"*")'=3 Q 0
"RTN","A1AEUPS2",380,0)
 N PTCHSTRM S PTCHSTRM=+$P(PAT,"^",2)
"RTN","A1AEUPS2",381,0)
 Q:'$D(^A1AE(11007.1,PTCHSTRM,0)) 0
"RTN","A1AEUPS2",382,0)
 N DERFRM S DERFRM=+$P(PAT,"^",3)
"RTN","A1AEUPS2",383,0)
 N PKGIEN S PKGIEN=$O(^DIC(9.4,"B","PATCH MODULE",0))
"RTN","A1AEUPS2",384,0)
 N DIERR,FDA,FDAIEN
"RTN","A1AEUPS2",385,0)
 S FDA(3,11005,"?+1,",.01)=PN
"RTN","A1AEUPS2",386,0)
 S FDA(3,11005,"?+1,",.2)=PTCHSTRM
"RTN","A1AEUPS2",387,0)
 S FDA(3,11005,"?+1,",2)=PKGIEN
"RTN","A1AEUPS2",388,0)
 S FDA(3,11005,"?+1,",3)=2.4
"RTN","A1AEUPS2",389,0)
 S FDA(3,11005,"?+1,",4)=$P(PN,"*",3)
"RTN","A1AEUPS2",390,0)
 S FDA(3,11005,"?+1,",5)="A1AE TEST ZZZFOR UNIT TESTS"
"RTN","A1AEUPS2",391,0)
 I $G(DERFRM),$D(^A1AE(11005,DERFRM)) D
"RTN","A1AEUPS2",392,0)
 . S FDA(3,11005,"?+1,",5.2)=DERFRM
"RTN","A1AEUPS2",393,0)
 D UPDATE^DIE("","FDA(3)","FDAIEN")
"RTN","A1AEUPS2",394,0)
 Q:+FDAIEN(1) +FDAIEN(1)
"RTN","A1AEUPS2",395,0)
 Q 0
"RTN","A1AEUPS2",396,0)
 ;
"RTN","A1AEUPS2",397,0)
 ; RETURNS
"RTN","A1AEUPS2",398,0)
 ;   0  = error, 1 = deletions completed
"RTN","A1AEUPS2",399,0)
DELPAT() N DA,DIK,PAT S PAT=0
"RTN","A1AEUPS2",400,0)
 F  S PAT=$O(^A1AE(11005,PAT)) Q:'PAT  D
"RTN","A1AEUPS2",401,0)
 . I $P(^A1AE(11005,PAT,0),"^",5)["A1AE TEST ZZZFOR UNIT TESTS" D
"RTN","A1AEUPS2",402,0)
 .. S DIK="^A1AE(11005," S DA=+PAT D ^DIK
"RTN","A1AEUPS2",403,0)
 Q:$O(^A1AE(11005,"B","A1AE*2.4*899"))["A1AE*2.4" 0
"RTN","A1AEUPS2",404,0)
 Q 1
"RTN","A1AEUPS2",405,0)
 ;
"RTN","A1AEUPS2",406,0)
XTENT ;
"RTN","A1AEUPS2",407,0)
 ;;UTP4;Testing post install setting 9.6, 9.7 PAT multiple
"RTN","A1AEUPS2",408,0)
 Q
"RTN","A1AEUPS2",409,0)
 ;
"RTN","A1AEUPS2",410,0)
EOR ; end of routine A1AEUPS2
"RTN","A1AEUT1")
0^54^B188694393
"RTN","A1AEUT1",1,0)
A1AEUT1 ; VEN/SMH - Unit Tests for the Patch Module ;2014-04-17  6:39 PM
"RTN","A1AEUT1",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEUT1",3,0)
 ;
"RTN","A1AEUT1",4,0)
 ; Change History:
"RTN","A1AEUT1",5,0)
 ;
"RTN","A1AEUT1",6,0)
 ; 2014 01 22: Sam Habiel of the VISTA Expertise Network (VEN/SMH)
"RTN","A1AEUT1",7,0)
 ; developed this routine throughout January 2014, with this date
"RTN","A1AEUT1",8,0)
 ; being his most recent edit.
"RTN","A1AEUT1",9,0)
 ;
"RTN","A1AEUT1",10,0)
 ; 2014 02 25: Rick Marshall of the VISTA Expertise Network (VEN/TOAD)
"RTN","A1AEUT1",11,0)
 ; edited MKSTREAM to use the new standardized name for patch stream
"RTN","A1AEUT1",12,0)
 ; OSEHRA VISTA, set field Abbreviation (.05) to OV, to change
"RTN","A1AEUT1",13,0)
 ; field 2 with field .02, comment with field names, and change from
"RTN","A1AEUT1",14,0)
 ; index PRIM to APRIM. In PATCHVER, fix bug by replacing hardcoded 1
"RTN","A1AEUT1",15,0)
 ; with DA.
"RTN","A1AEUT1",16,0)
 ;
"RTN","A1AEUT1",17,0)
 ; NB: Order matters here. Each test depends on the one before it.
"RTN","A1AEUT1",18,0)
 ; TODO:
"RTN","A1AEUT1",19,0)
 ; 1. Write a Unit Test to check for the presence of the checksums
"RTN","A1AEUT1",20,0)
 ;    after a patch is verified in the stream file routine multiple.
"RTN","A1AEUT1",21,0)
 D EN^XTMUNIT($T(+0),1,1) QUIT
"RTN","A1AEUT1",22,0)
 ;
"RTN","A1AEUT1",23,0)
STARTUP ; Delete all test data
"RTN","A1AEUT1",24,0)
 N DIK,DA ; fur Fileman
"RTN","A1AEUT1",25,0)
 S DUZ=.5 ; Must be defined for auditing.
"RTN","A1AEUT1",26,0)
 N PKGAB S PKGAB="ZZZ"
"RTN","A1AEUT1",27,0)
 ; Get entry from package file if it exists.
"RTN","A1AEUT1",28,0)
 N PKIEN S PKIEN=$O(^DIC(9.4,"C",PKGAB,0))
"RTN","A1AEUT1",29,0)
 ; If package is there, delete everything that belongs to it
"RTN","A1AEUT1",30,0)
 I PKIEN D 
"RTN","A1AEUT1",31,0)
 . S DA="" F  S DA=$O(^A1AE(11005,"D",PKIEN,DA)) Q:'DA  D
"RTN","A1AEUT1",32,0)
 . . F DIK="^A1AE(11005,","^A1AE(11005.1," D ^DIK  ; PM Patch and Message files
"RTN","A1AEUT1",33,0)
 . S DIK="^A1AE(11007,",DA=PKIEN D ^DIK  ; PM Package File
"RTN","A1AEUT1",34,0)
 . S DIK="^DIC(9.4,",DA=PKIEN D ^DIK  ; Package file
"RTN","A1AEUT1",35,0)
 ;
"RTN","A1AEUT1",36,0)
 ; Delete the Stream Entries.
"RTN","A1AEUT1",37,0)
 S DIK="^A1AE(11007.1," S DA=0 F  S DA=$O(^A1AE(11007.1,DA)) Q:'DA  D ^DIK
"RTN","A1AEUT1",38,0)
 ;
"RTN","A1AEUT1",39,0)
 QUIT
"RTN","A1AEUT1",40,0)
 ;
"RTN","A1AEUT1",41,0)
SHUTDOWN ; but don't delete test data here. I want to see it.
"RTN","A1AEUT1",42,0)
 ; ZEXCEPT: XTMUNIT,XTMULIST - belong to M-Unit and are scoped there.
"RTN","A1AEUT1",43,0)
        D
"RTN","A1AEUT1",44,0)
        . N XTMUNIT,XTMULIST
"RTN","A1AEUT1",45,0)
        . D KILL^XUSCLEAN
"RTN","A1AEUT1",46,0)
 QUIT
"RTN","A1AEUT1",47,0)
 ;
"RTN","A1AEUT1",48,0)
SETUP ;
"RTN","A1AEUT1",49,0)
 QUIT
"RTN","A1AEUT1",50,0)
 ;
"RTN","A1AEUT1",51,0)
TEARDOWN ;
"RTN","A1AEUT1",52,0)
 QUIT
"RTN","A1AEUT1",53,0)
 ;
"RTN","A1AEUT1",54,0)
MKSTREAM ; @TEST Make OSEHRA Stream
"RTN","A1AEUT1",55,0)
 N % S %=$$PRIMSTRM^A1AEUTL()
"RTN","A1AEUT1",56,0)
 D CHKEQ(%,10**6+1,"No primary stream should give us 1m+1")
"RTN","A1AEUT1",57,0)
 D ASSERT($D(^A1AE(11007.1,1,0)),"VA Stream should be created by default")
"RTN","A1AEUT1",58,0)
 ;
"RTN","A1AEUT1",59,0)
 ; Create OSEHRA Patch Stream
"RTN","A1AEUT1",60,0)
 N FDA,IENS,IEN
"RTN","A1AEUT1",61,0)
 S IENS="+1,"
"RTN","A1AEUT1",62,0)
 S IEN(1)=10001 ; field Patch Number Start (.001)
"RTN","A1AEUT1",63,0)
 S FDA(11007.1,IENS,.01)="OSEHRA VISTA" ; Name
"RTN","A1AEUT1",64,0)
 S FDA(11007.1,IENS,.02)="YES" ; Primary?
"RTN","A1AEUT1",65,0)
 S FDA(11007.1,IENS,.05)="OV" ; Abbreviation
"RTN","A1AEUT1",66,0)
 N DIERR,ERR
"RTN","A1AEUT1",67,0)
 D UPDATE^DIE("E",$NA(FDA),$NA(IEN),$NA(ERR))
"RTN","A1AEUT1",68,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",69,0)
 ;
"RTN","A1AEUT1",70,0)
 ; OSEHRA Patch stream is now primary
"RTN","A1AEUT1",71,0)
 N % S %=$$PRIMSTRM^A1AEUTL()
"RTN","A1AEUT1",72,0)
 D CHKEQ(%,10001)
"RTN","A1AEUT1",73,0)
 ;
"RTN","A1AEUT1",74,0)
 ; Get the old primary stream
"RTN","A1AEUT1",75,0)
 N OLDPRIM S OLDPRIM=$O(^A1AE(11007.1,"APRIM",1,""))
"RTN","A1AEUT1",76,0)
 I 'OLDPRIM S OLDPRIM=1
"RTN","A1AEUT1",77,0)
 ;
"RTN","A1AEUT1",78,0)
 ; Make VA patch stream primary then switch back. Test APRIM1 xref logic.
"RTN","A1AEUT1",79,0)
 N DA,DIE,DR S DA=1,DIE="^A1AE(11007.1,",DR=".02///1" D ^DIE
"RTN","A1AEUT1",80,0)
 D CHKEQ($$PRIMSTRM^A1AEUTL(),1)
"RTN","A1AEUT1",81,0)
 ;
"RTN","A1AEUT1",82,0)
 N DA,DIE,DR S DA=OLDPRIM,DIE="^A1AE(11007.1,",DR=".02///1" D ^DIE
"RTN","A1AEUT1",83,0)
 D CHKEQ($$PRIMSTRM^A1AEUTL(),10001)
"RTN","A1AEUT1",84,0)
 QUIT
"RTN","A1AEUT1",85,0)
 ;
"RTN","A1AEUT1",86,0)
MKPKGTST ; @TEST Make Package in Package (#9.4) File
"RTN","A1AEUT1",87,0)
 ; ZEXCEPT: PKIEN - leak to the symbol table
"RTN","A1AEUT1",88,0)
 S PKIEN=$$MKPKG()
"RTN","A1AEUT1",89,0)
 D ASSERT(PKIEN)
"RTN","A1AEUT1",90,0)
 QUIT
"RTN","A1AEUT1",91,0)
 ;
"RTN","A1AEUT1",92,0)
MKPKG() ; Create a new package
"RTN","A1AEUT1",93,0)
 N FDA,IEN,DIERR
"RTN","A1AEUT1",94,0)
 S FDA(9.4,"+1,",.01)="TEST PACKAGE"
"RTN","A1AEUT1",95,0)
 S FDA(9.4,"+1,",1)="ZZZ"
"RTN","A1AEUT1",96,0)
 S FDA(9.4,"+1,",2)="Used for testing the Patch Module"
"RTN","A1AEUT1",97,0)
 D UPDATE^DIE("E","FDA","IEN")
"RTN","A1AEUT1",98,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",99,0)
 QUIT IEN(1)
"RTN","A1AEUT1",100,0)
 ;
"RTN","A1AEUT1",101,0)
MKUSRTST ; @TEST Make Users in NEW PERSON (#200) File
"RTN","A1AEUT1",102,0)
 ; ZEXCEPT: DEV,COM,VER,USR - Create these here and leak to the ST
"RTN","A1AEUT1",103,0)
 S DUZ(0)="@" ; Necessary for the keys multiple which checks this in the Input Transform
"RTN","A1AEUT1",104,0)
 D DELUSR("PATCHMODULE,DEVELOPER")
"RTN","A1AEUT1",105,0)
 D DELUSR("PATCHMODULE,COMPLETER")
"RTN","A1AEUT1",106,0)
 D DELUSR("PATCHMODULE,VERIFER")
"RTN","A1AEUT1",107,0)
 D DELUSR("PATCHMODULE,USER")
"RTN","A1AEUT1",108,0)
 ;
"RTN","A1AEUT1",109,0)
 S DEV=$$MKUSR("PATCHMODULE,DEVELOPER","A1AE DEVELOPER")
"RTN","A1AEUT1",110,0)
 S COM=$$MKUSR("PATCHMODULE,COMPLETER","A1AE DEVELOPER")
"RTN","A1AEUT1",111,0)
 S VER=$$MKUSR("PATCHMODULE,VERIFER","A1AE PHVER")
"RTN","A1AEUT1",112,0)
 S USR=$$MKUSR("PATCHMODULE,USER")
"RTN","A1AEUT1",113,0)
 S DUZ(0)=""
"RTN","A1AEUT1",114,0)
 ;
"RTN","A1AEUT1",115,0)
 ; Assert the user IEN, the presence of an access code, the presence of a mail box
"RTN","A1AEUT1",116,0)
 D ASSERT(DEV),ASSERT($L($P(^VA(200,DEV,0),U,3))),ASSERT($D(^XMB(3.7,DEV,0)))
"RTN","A1AEUT1",117,0)
 D ASSERT(COM),ASSERT($L($P(^VA(200,COM,0),U,3))),ASSERT($D(^XMB(3.7,COM,0)))
"RTN","A1AEUT1",118,0)
 D ASSERT(VER),ASSERT($L($P(^VA(200,VER,0),U,3))),ASSERT($D(^XMB(3.7,VER,0)))
"RTN","A1AEUT1",119,0)
 D ASSERT(USR),ASSERT($L($P(^VA(200,USR,0),U,3))),ASSERT($D(^XMB(3.7,USR,0)))
"RTN","A1AEUT1",120,0)
 ;
"RTN","A1AEUT1",121,0)
 QUIT
"RTN","A1AEUT1",122,0)
 ;
"RTN","A1AEUT1",123,0)
DELUSR(NAME) ; Remove user and their mailbox
"RTN","A1AEUT1",124,0)
 N DA S DA=$O(^VA(200,"B",NAME,0)) Q:'DA
"RTN","A1AEUT1",125,0)
 S DUZ=.5 D TERMMBOX^XMXAPIB(DA) ; DUZ must be .5 for this to work
"RTN","A1AEUT1",126,0)
 N DIK S DIK="^VA(200," D ^DIK
"RTN","A1AEUT1",127,0)
 QUIT
"RTN","A1AEUT1",128,0)
 ;
"RTN","A1AEUT1",129,0)
MKUSR(NAME,KEY) ; Make Users for the Package
"RTN","A1AEUT1",130,0)
 Q:$O(^VA(200,"B",NAME,0)) $O(^(0)) ; Quit if the entry exists with entry
"RTN","A1AEUT1",131,0)
 ;
"RTN","A1AEUT1",132,0)
 N C0XFDA,C0XIEN,C0XERR,DIERR
"RTN","A1AEUT1",133,0)
 S C0XFDA(200,"?+1,",.01)=NAME ; Name
"RTN","A1AEUT1",134,0)
 S C0XFDA(200,"?+1,",1)="USP" ; Initials
"RTN","A1AEUT1",135,0)
 S C0XFDA(200,"?+1,",28)="SMART" ; Mail Code
"RTN","A1AEUT1",136,0)
 S C0XFDA(200.05,"?+2,?+1,",.01)="`144" ; Person Class - Allopathic docs.
"RTN","A1AEUT1",137,0)
 S C0XFDA(200.05,"?+2,?+1,",2)=2700101 ; Date active
"RTN","A1AEUT1",138,0)
 S:$L($G(KEY)) C0XFDA(200.051,"?+3,?+1,",.01)="`"_$O(^DIC(19.1,"B",KEY,""))
"RTN","A1AEUT1",139,0)
 ;
"RTN","A1AEUT1",140,0)
 N DIC S DIC(0)="" ; An XREF in File 200 requires this.
"RTN","A1AEUT1",141,0)
 D UPDATE^DIE("E",$NA(C0XFDA),$NA(C0XIEN),$NA(C0XERR)) ; Typical UPDATE
"RTN","A1AEUT1",142,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",143,0)
 ;
"RTN","A1AEUT1",144,0)
 K C0XFDA
"RTN","A1AEUT1",145,0)
 S C0XFDA(200,C0XIEN(1)_",",2)=$TR(NAME,",",".") ; Access Code
"RTN","A1AEUT1",146,0)
 D FILE^DIE("",$NA(C0XFDA),$NA(C0XERR))
"RTN","A1AEUT1",147,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",148,0)
 ;
"RTN","A1AEUT1",149,0)
 I $D(^XMB(3.7,C0XIEN(1),0))[0 N Y S Y=C0XIEN(1) D NEW^XM ;Make sure has a Mailbox
"RTN","A1AEUT1",150,0)
 ;
"RTN","A1AEUT1",151,0)
 Q C0XIEN(1) ;Provider IEN ;
"RTN","A1AEUT1",152,0)
 ;
"RTN","A1AEUT1",153,0)
PKGADD ; @TEST - Add package to Patch Module
"RTN","A1AEUT1",154,0)
 ; ZEXCEPT: A1AEPK,A1AEPKIF,A1AEPKNM - Created by PKG^A1AEUTL
"RTN","A1AEUT1",155,0)
 N A1AE S A1AE(0)="ML" ; Multiple indexes/Laygo
"RTN","A1AEUT1",156,0)
 N X S X="ZZZ" ; Input to ^DIC
"RTN","A1AEUT1",157,0)
 D PKG^A1AEUTL
"RTN","A1AEUT1",158,0)
 D CHKEQ(A1AEPK,"ZZZ") ; PK abbr is ZZZ
"RTN","A1AEUT1",159,0)
 D ASSERT(A1AEPKIF) ; Must be positive
"RTN","A1AEUT1",160,0)
 QUIT
"RTN","A1AEUT1",161,0)
 ;
"RTN","A1AEUT1",162,0)
PKGSETUP ; @TEST Setup package in Patch module
"RTN","A1AEUT1",163,0)
 ; ZEXCEPT: A1AEPKIF - Created by PKGADD
"RTN","A1AEUT1",164,0)
 ; ZEXCEPT: VER,DEV,COM,USR - Created by MKUSRTST
"RTN","A1AEUT1",165,0)
 N IENS S IENS=A1AEPKIF_","
"RTN","A1AEUT1",166,0)
 N FDA,DIERR
"RTN","A1AEUT1",167,0)
 S FDA(11007,IENS,2)="NO" ; USER SELECTION PERMITTED//^S X="NO"
"RTN","A1AEUT1",168,0)
 S FDA(11007,IENS,4)="NO" ; FOR TEST SITE ONLY?//^S X="NO"
"RTN","A1AEUT1",169,0)
 S FDA(11007,IENS,5)="YES" ; ASK PATCH DESCRIPTION COPY
"RTN","A1AEUT1",170,0)
 D FILE^DIE("EKT",$NA(FDA))
"RTN","A1AEUT1",171,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",172,0)
 ;
"RTN","A1AEUT1",173,0)
 S FDA(11007.02,"+1,"_IENS,.01)="`"_VER  ; SUPPORT PERSONNEL
"RTN","A1AEUT1",174,0)
 S FDA(11007.02,"+1,"_IENS,2)="V"  ; VERIFY PERSONNEL
"RTN","A1AEUT1",175,0)
 S FDA(11007.03,"+2,"_IENS,.01)="`"_DEV ; DEVELOPMENT PERSONNEL
"RTN","A1AEUT1",176,0)
 S FDA(11007.03,"+3,"_IENS,.01)="`"_COM ; DITTO
"RTN","A1AEUT1",177,0)
 S FDA(11007.05,"+4,"_IENS,.01)="`"_USR ; USERS
"RTN","A1AEUT1",178,0)
 S FDA(11007.05,"+4,"_IENS,2)="T" ; Today
"RTN","A1AEUT1",179,0)
 D UPDATE^DIE("E",$NA(FDA))
"RTN","A1AEUT1",180,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",181,0)
 D ASSERT($D(^A1AE(11007,A1AEPKIF,"PB")))  ; Verifier Nodes
"RTN","A1AEUT1",182,0)
 D ASSERT($D(^A1AE(11007,A1AEPKIF,"PH")))  ; Developer Nodes
"RTN","A1AEUT1",183,0)
 QUIT
"RTN","A1AEUT1",184,0)
 ;
"RTN","A1AEUT1",185,0)
VERSETUP ; @TEST Setup version
"RTN","A1AEUT1",186,0)
 ; ZEXCEPT: A1AEPKIF - Created by PKGADD
"RTN","A1AEUT1",187,0)
 ; ZEXCEPT: A1AEVR - Created here by VER^A1AEUTL
"RTN","A1AEUT1",188,0)
 N X,A1AE S A1AE(0)="L",X=2 ; X is version number; input to ^DIC
"RTN","A1AEUT1",189,0)
 D VER^A1AEUTL
"RTN","A1AEUT1",190,0)
 D CHKEQ(A1AEVR,2)
"RTN","A1AEUT1",191,0)
 D ASSERT($D(^A1AE(11007,A1AEPKIF,"V",2,0)))
"RTN","A1AEUT1",192,0)
 QUIT
"RTN","A1AEUT1",193,0)
 ;
"RTN","A1AEUT1",194,0)
DELMSGS ; @TEST Delete all Messages in Q-PATCH basket.
"RTN","A1AEUT1",195,0)
 N XMDUZ,XMK,XMZ
"RTN","A1AEUT1",196,0)
 S XMDUZ=.5
"RTN","A1AEUT1",197,0)
 N % S %=$O(^XMB(3.7,.5,2,"B","Q-PATCH"))
"RTN","A1AEUT1",198,0)
 S XMK=$O(^XMB(3.7,.5,2,"B",%,0))
"RTN","A1AEUT1",199,0)
 S XMZ=0 F  S XMZ=$O(^XMB(3.7,.5,2,XMK,1,XMZ)) Q:'XMZ  D KL^XMA1B
"RTN","A1AEUT1",200,0)
 D ASSERT($O(^XMB(3.7,.5,2,XMK,1,0))="")
"RTN","A1AEUT1",201,0)
 QUIT
"RTN","A1AEUT1",202,0)
 ;
"RTN","A1AEUT1",203,0)
MAILKIDS ; @TEST Mail a KIDS build to XXX@Q-PATCH.OSEHRA.ORG
"RTN","A1AEUT1",204,0)
 ; ZEXCEPT: MESSAGEIEN - Leak to symbol table
"RTN","A1AEUT1",205,0)
 ; ZEXCEPT: A1AEUT1PD - Used by this routine. Overrides default patch name for UT checks.
"RTN","A1AEUT1",206,0)
 N MESS,LN0,LN
"RTN","A1AEUT1",207,0)
 N I F I=1:1 S LN0=$T(KIDS+I^A1AEUT2),LN=$P(LN0,";;",2,99) S MESS(I,0)=LN Q:LN["$END KID"
"RTN","A1AEUT1",208,0)
 N FLAGS S FLAGS("TYPE")="K" ; KIDS
"RTN","A1AEUT1",209,0)
 S DUZ=.5
"RTN","A1AEUT1",210,0)
 N PD S PD=$G(A1AEUT1PD,"ZZZ*2.0*1")
"RTN","A1AEUT1",211,0)
 D SENDMSG^XMXAPI(DUZ,PD,$NA(MESS),"XXX@Q-PATCH.OSEHRA.ORG",.FLAGS,.MESSAGEIEN)
"RTN","A1AEUT1",212,0)
 D ASSERT(MESSAGEIEN)
"RTN","A1AEUT1",213,0)
 QUIT
"RTN","A1AEUT1",214,0)
 ;
"RTN","A1AEUT1",215,0)
QUE ; @TEST Get Postmaster Basket for Q-PATCH in variable QUE.
"RTN","A1AEUT1",216,0)
 ; ZEXCEPT: QUE
"RTN","A1AEUT1",217,0)
 D QUE^A1AEM
"RTN","A1AEUT1",218,0)
 D ASSERT(QUE>1000) ; Assert that it is a forwarding que in the Postmaster basket.
"RTN","A1AEUT1",219,0)
 QUIT
"RTN","A1AEUT1",220,0)
 ;
"RTN","A1AEUT1",221,0)
PATCHNO ; @TEST Obtain next patch number
"RTN","A1AEUT1",222,0)
 ; Next two lines required by API.
"RTN","A1AEUT1",223,0)
 ; ZEXCEPT: A1AENB - Created by NUM^A1AEUTL
"RTN","A1AEUT1",224,0)
 ; ZEXCEPT: A1AEUT1PN - Used by this Unit Testing routine to override default patch no
"RTN","A1AEUT1",225,0)
 ; ZEXCEPT: DEV,COM,VER,USR
"RTN","A1AEUT1",226,0)
 ; ZEXCEPT: A1AEPD - Created by PKGADD
"RTN","A1AEUT1",227,0)
 ; ZEXCEPT: A1AESTREAM - Gets the stream used in NUM^A1AEUTL.
"RTN","A1AEUT1",228,0)
 N A1AEFL,A1AETY
"RTN","A1AEUT1",229,0)
 S A1AEFL=11005,A1AETY="PH"
"RTN","A1AEUT1",230,0)
 S A1AESTREAM=$$PRIMSTRM^A1AEUTL()
"RTN","A1AEUT1",231,0)
 S DUZ=DEV
"RTN","A1AEUT1",232,0)
 N DIC,DINUM
"RTN","A1AEUT1",233,0)
 S DIC("S")="I $D(^A1AE(11007,+Y,A1AETY,DUZ,0))"
"RTN","A1AEUT1",234,0)
 S DINUM=$O(^A1AE(A1AEFL," "),-1)+1
"RTN","A1AEUT1",235,0)
 S DIC("DR")="5///TEST"
"RTN","A1AEUT1",236,0)
 S DIC(0)="L"
"RTN","A1AEUT1",237,0)
 D NUM^A1AEUTL
"RTN","A1AEUT1",238,0)
 D CHKEQ(A1AENB,$G(A1AEUT1PN,A1AESTREAM))
"RTN","A1AEUT1",239,0)
 D ASSERT(A1AEPD["ZZZ*2")
"RTN","A1AEUT1",240,0)
 D ASSERT($D(^A1AE(11005,"D",A1AEPKIF)))
"RTN","A1AEUT1",241,0)
 QUIT
"RTN","A1AEUT1",242,0)
 ;
"RTN","A1AEUT1",243,0)
PATCHSET ; @TEST Set-Up patch a la 1+3^A1AEPH1
"RTN","A1AEUT1",244,0)
 ; ZEXCEPT: DA - leaked by NUM^A1AEUTL
"RTN","A1AEUT1",245,0)
 ; ZEXCEPT: A1AEPKIF,A1AEVR,A1AENB
"RTN","A1AEUT1",246,0)
 S $P(^A1AE(11005,DA,0),"^",8)="u"
"RTN","A1AEUT1",247,0)
 S $P(^(0),"^",9)=DUZ
"RTN","A1AEUT1",248,0)
 S $P(^(0),"^",12)=DT
"RTN","A1AEUT1",249,0)
 S ^A1AE(11005,"AS",A1AEPKIF,A1AEVR,"u",A1AENB,DA)=""
"RTN","A1AEUT1",250,0)
 N FDA,DIERR S FDA(11005,DA_",",.2)=$$GETSTRM^A1AEK2M0(A1AEPD)
"RTN","A1AEUT1",251,0)
 D FILE^DIE("",$NA(FDA)) I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",252,0)
 D CHKEQ($$GET1^DIQ(11005,DA,8),"UNDER DEVELOPMENT")
"RTN","A1AEUT1",253,0)
 QUIT
"RTN","A1AEUT1",254,0)
 ;
"RTN","A1AEUT1",255,0)
PATCHROU ; @TEST Add routine set in Message file a la 1+5^A1AEPH1
"RTN","A1AEUT1",256,0)
 ; NB: There is an error here. You MUST LEAK the DIC(0) variable as it is reused from a previous call.
"RTN","A1AEUT1",257,0)
 ; ZEXCEPT: DA - leaked by NUM^A1AEUTL
"RTN","A1AEUT1",258,0)
 NEW DIC,X,DINUM,DD,DO,DE,DQ,DR
"RTN","A1AEUT1",259,0)
 S DIC(0)="L"
"RTN","A1AEUT1",260,0)
 S (X,DINUM)=DA,DIC="^A1AE(11005.1,",DIC("DR")="20///"_"No routines included" K DD,DO D FILE^DICN K DE,DQ,DR,DIC("DR")
"RTN","A1AEUT1",261,0)
 D CHKEQ(^A1AE(11005.1,DA,2,1,0),"No routines included")
"RTN","A1AEUT1",262,0)
 QUIT
"RTN","A1AEUT1",263,0)
 ;
"RTN","A1AEUT1",264,0)
 ;
"RTN","A1AEUT1",265,0)
LOC ; @TEST Get messages matching A1AEPD in Q-PATCH queue in variable A1AERD
"RTN","A1AEUT1",266,0)
 ; ZEXCEPT: A1AEPD,A1AERD,A1AEUT1PD - patch description, return variable
"RTN","A1AEUT1",267,0)
 D LOC^A1AEM
"RTN","A1AEUT1",268,0)
 D ASSERT(A1AERD(1)[$G(A1AEUT1PD,"ZZZ*2.0*1"))
"RTN","A1AEUT1",269,0)
 QUIT
"RTN","A1AEUT1",270,0)
 ;
"RTN","A1AEUT1",271,0)
PATCHCR ; @TEST Create a Patch
"RTN","A1AEUT1",272,0)
 ; ZEXCEPT: DA - leaked by NUM^A1AEUTL
"RTN","A1AEUT1",273,0)
 ; ZEXCEPT: MESSAGEIEN - leaked by MAILKIDS
"RTN","A1AEUT1",274,0)
 N FDA,IENS
"RTN","A1AEUT1",275,0)
 N DIERR
"RTN","A1AEUT1",276,0)
 S IENS=DA_","
"RTN","A1AEUT1",277,0)
 S FDA(11005,IENS,"PATCH SUBJECT")="TEST"
"RTN","A1AEUT1",278,0)
 S FDA(11005,IENS,"PRIORITY")="e" ; emergency
"RTN","A1AEUT1",279,0)
 D FILE^DIE("E",$NA(FDA))
"RTN","A1AEUT1",280,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",281,0)
 K FDA
"RTN","A1AEUT1",282,0)
 ;
"RTN","A1AEUT1",283,0)
 ; Category of patch
"RTN","A1AEUT1",284,0)
 S FDA(11005.05,"+1,"_IENS,.01)="d"
"RTN","A1AEUT1",285,0)
 S FDA(11005.05,"+2,"_IENS,.01)="i"
"RTN","A1AEUT1",286,0)
 S FDA(11005.05,"+3,"_IENS,.01)="p"
"RTN","A1AEUT1",287,0)
 S FDA(11005.05,"+4,"_IENS,.01)="r"
"RTN","A1AEUT1",288,0)
 D UPDATE^DIE("",$NA(FDA)) ; NB: Internal format b/c some codes won't parse with external as e.g there is d and dd.
"RTN","A1AEUT1",289,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",290,0)
 K FDA
"RTN","A1AEUT1",291,0)
 ;
"RTN","A1AEUT1",292,0)
 ; This loads the message text into field PATCH DESCRIPTION in 11005
"RTN","A1AEUT1",293,0)
 N A1AELINE ; returned by LINE^A1AECOPD
"RTN","A1AEUT1",294,0)
 N X,AXMZ ; X - User Input; AXMZ = Patch Message IEN
"RTN","A1AEUT1",295,0)
 S AXMZ=MESSAGEIEN,X="ALL" D LINESIL^A1AECOPD ; Returns A1AELINE: # of lines.
"RTN","A1AEUT1",296,0)
 ;
"RTN","A1AEUT1",297,0)
 N A1AEFRLN,A1AETOLN S A1AEFRLN=1,A1AETOLN=A1AELINE ; from to 
"RTN","A1AEUT1",298,0)
 D SETUTI^A1AECOPD ; Set util global
"RTN","A1AEUT1",299,0)
 D ASSERT($O(^UTILITY($J,"A1AECP",0))>0)
"RTN","A1AEUT1",300,0)
 N A1AELNIN,A1AEBOT S A1AELNIN=0,A1AEBOT=0 ; necessary for below
"RTN","A1AEUT1",301,0)
 D COPY^A1AECOPD ; copy into patch description
"RTN","A1AEUT1",302,0)
 D ASSERT($O(^A1AE(11005,DA,"D",0))>0) ; Assert that it was copied into PATCH DESCRIPTION
"RTN","A1AEUT1",303,0)
 ;
"RTN","A1AEUT1",304,0)
 ; This loads the KIDS build from either the Mail Message or the File System.
"RTN","A1AEUT1",305,0)
 ; Stores it in MESSAGE TEXT in file 11005.1. Template does a Backwards Jump.
"RTN","A1AEUT1",306,0)
 ; ZEXCEPT: A1AEKIDS - ASKS^A1AEM1 leaks that when it detects the the Mail message type is a KIDS message.
"RTN","A1AEUT1",307,0)
 D ASKS^A1AEM1
"RTN","A1AEUT1",308,0)
 D ASSERT($O(^A1AE(11005.1,DA,2,0))>0)
"RTN","A1AEUT1",309,0)
 D ASSERT(^A1AE(11005,DA,"P",1,0)="ZOSV2GTM^B7008460^**275,425**")
"RTN","A1AEUT1",310,0)
 ;
"RTN","A1AEUT1",311,0)
 ; Because ^A1AECOPY and ^A1AECOPR both reference Packman
"RTN","A1AEUT1",312,0)
 ; formats in SETUTI, it's most likely that Wally intended for us to skip this.
"RTN","A1AEUT1",313,0)
 ; ^A1AECOPY uses Cache's ZLOAD.
"RTN","A1AEUT1",314,0)
 ; 
"RTN","A1AEUT1",315,0)
 ; ROUTINE NAME
"RTN","A1AEUT1",316,0)
 ;    ROUTINE NAME
"RTN","A1AEUT1",317,0)
 ;    W !?20,"editing DESCRIPTION OF ROUTINE CHANGES"
"RTN","A1AEUT1",318,0)
 ;    D ^A1AECOPY
"RTN","A1AEUT1",319,0)
 ;    D ^A1AECOPR
"RTN","A1AEUT1",320,0)
 ;    DESCRIPTION OF ROUTINE CHANGES
"RTN","A1AEUT1",321,0)
 ;    ROUTINE CHECKSUM
"RTN","A1AEUT1",322,0)
 ; @8
"RTN","A1AEUT1",323,0)
 S FDA(11005,IENS,"DISPLAY ROUTINE PATCH LIST")="Yes"
"RTN","A1AEUT1",324,0)
 N DIERR
"RTN","A1AEUT1",325,0)
 D FILE^DIE("E",$NA(FDA))
"RTN","A1AEUT1",326,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",327,0)
 ;
"RTN","A1AEUT1",328,0)
 N WP
"RTN","A1AEUT1",329,0)
 S WP(1,0)="Test Comments"
"RTN","A1AEUT1",330,0)
 N DIERR
"RTN","A1AEUT1",331,0)
 D WP^DIE(11005,IENS,16,"K",$NA(WP))
"RTN","A1AEUT1",332,0)
 I $D(DIERR) S $EC=",U-FILEMAN-ERROR,"
"RTN","A1AEUT1",333,0)
 ; PATCH RELEASE CHECK
"RTN","A1AEUT1",334,0)
 ;    ALL
"RTN","A1AEUT1",335,0)
 ; W !
"RTN","A1AEUT1",336,0)
 ; @10
"RTN","A1AEUT1",337,0)
 ; ZEXCEPT: A1AETVR,A1AEST - Copied from Input Template. I don't have a clue what these do now.
"RTN","A1AEUT1",338,0)
 K A1AETVR,A1AEST,A1AEKIDS
"RTN","A1AEUT1",339,0)
 D CHKEQ(^A1AE(11005,DA,"X",1,0),"Test Comments")
"RTN","A1AEUT1",340,0)
 D CHKEQ(^A1AE(11005,DA,5),1)
"RTN","A1AEUT1",341,0)
 QUIT
"RTN","A1AEUT1",342,0)
 ; STATUS OF PATCH
"RTN","A1AEUT1",343,0)
 ; S Y=$S(X="e":"@20",X="r":"@30",1:"@99")
"RTN","A1AEUT1",344,0)
 ; @20
"RTN","A1AEUT1",345,0)
 ; ENTERED IN ERROR DESCRIPTION
"RTN","A1AEUT1",346,0)
 ; S Y="@99"
"RTN","A1AEUT1",347,0)
 ; @30
"RTN","A1AEUT1",348,0)
 ; RETIRED AFTER VERSION
"RTN","A1AEUT1",349,0)
 ; RETIREMENT COMMENTS
"RTN","A1AEUT1",350,0)
 ; @99
"RTN","A1AEUT1",351,0)
 ;
"RTN","A1AEUT1",352,0)
PATCHCOM ; @TEST Complete a Patch
"RTN","A1AEUT1",353,0)
 ; ZEXCEPT: COM - Created by MKUSRTST
"RTN","A1AEUT1",354,0)
 ; ZEXCEPT: A1AEPD - Created by PKGADD
"RTN","A1AEUT1",355,0)
 ; ZEXCEPT: DA - leaked by NUM^A1AEUTL
"RTN","A1AEUT1",356,0)
 S DUZ=COM ; Now I am the completer
"RTN","A1AEUT1",357,0)
 N A1AEPDSAV S A1AEPDSAV=A1AEPD
"RTN","A1AEUT1",358,0)
 N FDA
"RTN","A1AEUT1",359,0)
 S FDA(11005,DA_",",8)="c" D FILE^DIE("E",$NA(FDA))
"RTN","A1AEUT1",360,0)
 D CHKEQ($P(^A1AE(11005,DA,0),U,8),"c")
"RTN","A1AEUT1",361,0)
 S A1AEPD=A1AEPDSAV
"RTN","A1AEUT1",362,0)
 QUIT
"RTN","A1AEUT1",363,0)
 ;
"RTN","A1AEUT1",364,0)
PATCHVER ; @TEST Verify a Patch
"RTN","A1AEUT1",365,0)
 ; ZEXCEPT: DA - leaked by NUM^A1AEUTL
"RTN","A1AEUT1",366,0)
 ; ZEXCEPT: VER - Created by MKUSRTST
"RTN","A1AEUT1",367,0)
 S DUZ=VER ; Now I am the verifier
"RTN","A1AEUT1",368,0)
 N FDA
"RTN","A1AEUT1",369,0)
 S FDA(11005,DA_",",8)="v" D FILE^DIE("E",$NA(FDA))
"RTN","A1AEUT1",370,0)
 D CHKEQ($P(^A1AE(11005,DA,0),U,8),"v")
"RTN","A1AEUT1",371,0)
 QUIT
"RTN","A1AEUT1",372,0)
 ;
"RTN","A1AEUT1",373,0)
PATCHEX ; @TEST Export Verified patch to KIDS build on file system
"RTN","A1AEUT1",374,0)
 N A1AEUT1IEN S A1AEUT1IEN=DA
"RTN","A1AEUT1",375,0)
 D ^A1AEM2K
"RTN","A1AEUT1",376,0)
 D OPEN^%ZISH("KIDFIL",$$DEFDIR^%ZISH(),"ZZZ-2_SEQ-10001_PAT-10001.KID","R")
"RTN","A1AEUT1",377,0)
 U IO
"RTN","A1AEUT1",378,0)
 N %1,%2,%3
"RTN","A1AEUT1",379,0)
 R %1:1,%2:1,%3:1
"RTN","A1AEUT1",380,0)
 D CLOSE^%ZISH("KIDFIL")
"RTN","A1AEUT1",381,0)
 D ASSERT(%3["**KIDS**")
"RTN","A1AEUT1",382,0)
 QUIT
"RTN","A1AEUT1",383,0)
 ;
"RTN","A1AEUT1",384,0)
PATCH2 ; @TEST Create a second patch - complete this one
"RTN","A1AEUT1",385,0)
 N DIC
"RTN","A1AEUT1",386,0)
 D PKGADD,VERSETUP
"RTN","A1AEUT1",387,0)
 N A1AEUT1PD S A1AEUT1PD="ZZZ*2.0*2" ; override patch in mail kids
"RTN","A1AEUT1",388,0)
 D MAILKIDS
"RTN","A1AEUT1",389,0)
 D QUE
"RTN","A1AEUT1",390,0)
 N A1AEUT1PN S A1AEUT1PN=$$PRIMSTRM^A1AEUTL()+1 ; override patch number
"RTN","A1AEUT1",391,0)
 D PATCHNO,PATCHSET,PATCHROU
"RTN","A1AEUT1",392,0)
 D LOC
"RTN","A1AEUT1",393,0)
 D PATCHCR
"RTN","A1AEUT1",394,0)
 D PATCHCOM
"RTN","A1AEUT1",395,0)
 QUIT
"RTN","A1AEUT1",396,0)
 ;
"RTN","A1AEUT1",397,0)
PATCH3 ; @TEST Create a third patch - don't complete or verify
"RTN","A1AEUT1",398,0)
 N DIC
"RTN","A1AEUT1",399,0)
 D PKGADD,VERSETUP
"RTN","A1AEUT1",400,0)
 N A1AEUT1PD S A1AEUT1PD="ZZZ*2.0*3" ; override patch in mail kids
"RTN","A1AEUT1",401,0)
 D MAILKIDS
"RTN","A1AEUT1",402,0)
 D QUE
"RTN","A1AEUT1",403,0)
 N A1AEUT1PN S A1AEUT1PN=$$PRIMSTRM^A1AEUTL()+2 ; override patch number
"RTN","A1AEUT1",404,0)
 D PATCHNO,PATCHSET,PATCHROU
"RTN","A1AEUT1",405,0)
 D LOC
"RTN","A1AEUT1",406,0)
 D PATCHCR
"RTN","A1AEUT1",407,0)
 QUIT
"RTN","A1AEUT1",408,0)
 ;
"RTN","A1AEUT1",409,0)
WRITEID ; @TEST Test write identifier on the Patch Module
"RTN","A1AEUT1",410,0)
 D FIND^DIC(11005,,"@;WID","PQ","ZZZ","B") ; Find ZZZ patches in B index
"RTN","A1AEUT1",411,0)
 D ASSERT(^TMP("DILIST",$J,1,0)["|")  ; This format is introduced with patch module 2.4 if DIQUIET is turned on.
"RTN","A1AEUT1",412,0)
 N P1IEN S P1IEN=+^TMP("DILIST",$J,1,0) ; 1st IEN
"RTN","A1AEUT1",413,0)
 N P2IEN S P2IEN=+^TMP("DILIST",$J,2,0) ; 2nd IEN
"RTN","A1AEUT1",414,0)
 N FDA S FDA(11005,P2IEN_",","DERIVED FROM PATCH")=P1IEN ; populate this
"RTN","A1AEUT1",415,0)
 D FILE^DIE("",$NA(FDA)) ; ditto
"RTN","A1AEUT1",416,0)
 D FIND^DIC(11005,,"@;WID","A",P2IEN) ; A = Use IEN for lookup
"RTN","A1AEUT1",417,0)
 D ASSERT(^TMP("DILIST",$J,"ID","WRITE",1,2)["erived from") ; Contains derived from...
"RTN","A1AEUT1",418,0)
 QUIT
"RTN","A1AEUT1",419,0)
 ;
"RTN","A1AEUT1",420,0)
A1AEPH25 ; @TEST Test Report 5^A1AEPH2
"RTN","A1AEUT1",421,0)
 ; ZEXCEPT: DEV - Created by MKUSRTST
"RTN","A1AEUT1",422,0)
 S DUZ=DEV
"RTN","A1AEUT1",423,0)
 N %ZIS
"RTN","A1AEUT1",424,0)
 N DIC
"RTN","A1AEUT1",425,0)
 D PKGADD,VERSETUP
"RTN","A1AEUT1",426,0)
 N A1AEREV S A1AEREV=1
"RTN","A1AEUT1",427,0)
 N A1AEDEV S A1AEDEV="HFS;80;99999"
"RTN","A1AEUT1",428,0)
 S %ZIS("HFSMODE")="W"
"RTN","A1AEUT1",429,0)
 S %ZIS("HFSNAME")="A1AEPH25.TXT"
"RTN","A1AEUT1",430,0)
 D DQ5^A1AEPH2
"RTN","A1AEUT1",431,0)
 ;
"RTN","A1AEUT1",432,0)
 ; Read it back now
"RTN","A1AEUT1",433,0)
 N POP
"RTN","A1AEUT1",434,0)
 D OPEN^%ZISH("FILE1",$$DEFDIR^%ZISH(),"A1AEPH25.TXT","R")
"RTN","A1AEUT1",435,0)
 I POP D FAIL^XTMUNIT("IO problems") QUIT
"RTN","A1AEUT1",436,0)
 U IO
"RTN","A1AEUT1",437,0)
 N ARR,CNT
"RTN","A1AEUT1",438,0)
 S CNT=1
"RTN","A1AEUT1",439,0)
 N X
"RTN","A1AEUT1",440,0)
 F  R X:1 Q:$$STATUS^%ZISH()  I $E(X,1,3)="ZZZ" S ARR(CNT)=X,CNT=CNT+1
"RTN","A1AEUT1",441,0)
 U $P D CLOSE^%ZISH("FILE1")
"RTN","A1AEUT1",442,0)
 D ASSERT($D(ARR))
"RTN","A1AEUT1",443,0)
 N % S %("A1AEPH25.TXT")=""
"RTN","A1AEUT1",444,0)
 S %=$$DEL^%ZISH($$DEFDIR^%ZISH(),$NA(%))
"RTN","A1AEUT1",445,0)
 QUIT
"RTN","A1AEUT1",446,0)
 ;
"RTN","A1AEUT1",447,0)
A1AEPH21 ; @TEST Test Report 1^A1AEPH2
"RTN","A1AEUT1",448,0)
 ; ZEXCEPT: DEV - Created by MKUSRTST
"RTN","A1AEUT1",449,0)
 ; Index: AB - By designation
"RTN","A1AEUT1",450,0)
 ; Index: AC - By category
"RTN","A1AEUT1",451,0)
 ; Index: AP - By priority
"RTN","A1AEUT1",452,0)
 ; Index: AS - By Status
"RTN","A1AEUT1",453,0)
 N A1AEHD ; Header - used below
"RTN","A1AEUT1",454,0)
 N A1AEIX F A1AEIX="AB","AC","AP","AS" D
"RTN","A1AEUT1",455,0)
 . S DUZ=DEV
"RTN","A1AEUT1",456,0)
 . N DIC,DIS
"RTN","A1AEUT1",457,0)
 . D PKGADD,VERSETUP
"RTN","A1AEUT1",458,0)
 . N A1AES ; Suppress asking for sorting by status
"RTN","A1AEUT1",459,0)
 . S DIS(0)="I $P(^A1AE(11005,D0,0),U,8)=""c""",A1AEHD="Completed/NotReleased DHCP Patches Report",A1AES=""
"RTN","A1AEUT1",460,0)
 . N A1AEHDSAV S A1AEHDSAV=A1AEHD ; HD is killed off
"RTN","A1AEUT1",461,0)
 . S DIC("S")="I $S($D(^A1AE(11007,+Y,""PH"",DUZ,0)):1,'$D(^A1AE(11007,+Y,""PB"",DUZ,0)):0,$P(^(0),U,2)=""V"":1,1:0)"
"RTN","A1AEUT1",462,0)
 . N FN S FN="A1AEPH21-"_A1AEIX_".TXT"
"RTN","A1AEUT1",463,0)
 . N POP
"RTN","A1AEUT1",464,0)
 . D OPEN^%ZISH("FILE1",$$DEFDIR^%ZISH(),FN,"W")
"RTN","A1AEUT1",465,0)
 . I POP D FAIL^XTMUNIT("IO problems") QUIT
"RTN","A1AEUT1",466,0)
 . D START^A1AEPH3
"RTN","A1AEUT1",467,0)
 . D CLOSE^%ZISH("FILE1")
"RTN","A1AEUT1",468,0)
 . D OPEN^%ZISH("FILE1",$$DEFDIR^%ZISH(),FN,"R")
"RTN","A1AEUT1",469,0)
 . I POP D FAIL^XTMUNIT("IO problems") QUIT
"RTN","A1AEUT1",470,0)
 . U IO
"RTN","A1AEUT1",471,0)
 . N X F  R X:0 Q:$$STATUS^%ZISH()  Q:X[A1AEHDSAV
"RTN","A1AEUT1",472,0)
 . U $P D CLOSE^%ZISH("FILE1")
"RTN","A1AEUT1",473,0)
 . D ASSERT(X[A1AEHDSAV)
"RTN","A1AEUT1",474,0)
 . N % S %(FN)="",%=$$DEL^%ZISH($$DEFDIR^%ZISH(),$NA(%))
"RTN","A1AEUT1",475,0)
 QUIT
"RTN","A1AEUT1",476,0)
 ;
"RTN","A1AEUT1",477,0)
 ; Convenience Methods for M-Unit
"RTN","A1AEUT1",478,0)
CHKEQ(X,Y,Z) S Z=$G(Z) D CHKEQ^XTMUNIT(X,Y,Z) QUIT
"RTN","A1AEUT1",479,0)
ASSERT(X,Y) S Y=$G(Y) D CHKTF^XTMUNIT(X,Y) QUIT
"RTN","A1AEUT1",480,0)
 ;
"RTN","A1AEUT2")
0^55^B101446265
"RTN","A1AEUT2",1,0)
A1AEUT2 ; VEN/SMH - KIDS test file;2014-01-22  1:40 PM
"RTN","A1AEUT2",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEUT2",3,0)
KIDS ;;
"RTN","A1AEUT2",4,0)
 ;;$TXT Created by TESTMASTER,USER at VEN.SMH101.COM  (KIDS) on Thursday, 01/07/14 at 15:55
"RTN","A1AEUT2",5,0)
 ;;
"RTN","A1AEUT2",6,0)
 ;; This patch is the result of the Unit Test routine.
"RTN","A1AEUT2",7,0)
 ;; Please ignore it.
"RTN","A1AEUT2",8,0)
 ;; 
"RTN","A1AEUT2",9,0)
 ;; Patch ID: ZZZ*2.0*1
"RTN","A1AEUT2",10,0)
 ;; 
"RTN","A1AEUT2",11,0)
 ;;$END TXT
"RTN","A1AEUT2",12,0)
 ;;$KID ZZZ*1.0*1
"RTN","A1AEUT2",13,0)
 ;;**INSTALL NAME**
"RTN","A1AEUT2",14,0)
 ;;ZZZ*1.0*1
"RTN","A1AEUT2",15,0)
 ;;"BLD",9277,0)
"RTN","A1AEUT2",16,0)
 ;;ZZZ*1.0*1^TEST PACKAGE^0^3140102^y
"RTN","A1AEUT2",17,0)
 ;;"BLD",9277,1,0)
"RTN","A1AEUT2",18,0)
 ;;^^1^1^3140102^
"RTN","A1AEUT2",19,0)
 ;;"BLD",9277,1,1,0)
"RTN","A1AEUT2",20,0)
 ;;TEST TEST
"RTN","A1AEUT2",21,0)
 ;;"BLD",9277,4,0)
"RTN","A1AEUT2",22,0)
 ;;^9.64PA^^
"RTN","A1AEUT2",23,0)
 ;;"BLD",9277,6.3)
"RTN","A1AEUT2",24,0)
 ;;2
"RTN","A1AEUT2",25,0)
 ;;"BLD",9277,"KRN",0)
"RTN","A1AEUT2",26,0)
 ;;^9.67PA^779.2^20
"RTN","A1AEUT2",27,0)
 ;;"BLD",9277,"KRN",.4,0)
"RTN","A1AEUT2",28,0)
 ;;.4
"RTN","A1AEUT2",29,0)
 ;;"BLD",9277,"KRN",.401,0)
"RTN","A1AEUT2",30,0)
 ;;.401
"RTN","A1AEUT2",31,0)
 ;;"BLD",9277,"KRN",.402,0)
"RTN","A1AEUT2",32,0)
 ;;.402
"RTN","A1AEUT2",33,0)
 ;;"BLD",9277,"KRN",.403,0)
"RTN","A1AEUT2",34,0)
 ;;.403
"RTN","A1AEUT2",35,0)
 ;;"BLD",9277,"KRN",.5,0)
"RTN","A1AEUT2",36,0)
 ;;.5
"RTN","A1AEUT2",37,0)
 ;;"BLD",9277,"KRN",.84,0)
"RTN","A1AEUT2",38,0)
 ;;.84
"RTN","A1AEUT2",39,0)
 ;;"BLD",9277,"KRN",3.6,0)
"RTN","A1AEUT2",40,0)
 ;;3.6
"RTN","A1AEUT2",41,0)
 ;;"BLD",9277,"KRN",3.8,0)
"RTN","A1AEUT2",42,0)
 ;;3.8
"RTN","A1AEUT2",43,0)
 ;;"BLD",9277,"KRN",9.2,0)
"RTN","A1AEUT2",44,0)
 ;;9.2
"RTN","A1AEUT2",45,0)
 ;;"BLD",9277,"KRN",9.8,0)
"RTN","A1AEUT2",46,0)
 ;;9.8
"RTN","A1AEUT2",47,0)
 ;;"BLD",9277,"KRN",9.8,"NM",0)
"RTN","A1AEUT2",48,0)
 ;;^9.68A^1^1
"RTN","A1AEUT2",49,0)
 ;;"BLD",9277,"KRN",9.8,"NM",1,0)
"RTN","A1AEUT2",50,0)
 ;;ZOSV2GTM^^0^B7008460
"RTN","A1AEUT2",51,0)
 ;;"BLD",9277,"KRN",9.8,"NM","B","ZOSV2GTM",1)
"RTN","A1AEUT2",52,0)
 ;;
"RTN","A1AEUT2",53,0)
 ;;"BLD",9277,"KRN",19,0)
"RTN","A1AEUT2",54,0)
 ;;19
"RTN","A1AEUT2",55,0)
 ;;"BLD",9277,"KRN",19.1,0)
"RTN","A1AEUT2",56,0)
 ;;19.1
"RTN","A1AEUT2",57,0)
 ;;"BLD",9277,"KRN",101,0)
"RTN","A1AEUT2",58,0)
 ;;101
"RTN","A1AEUT2",59,0)
 ;;"BLD",9277,"KRN",409.61,0)
"RTN","A1AEUT2",60,0)
 ;;409.61
"RTN","A1AEUT2",61,0)
 ;;"BLD",9277,"KRN",771,0)
"RTN","A1AEUT2",62,0)
 ;;771
"RTN","A1AEUT2",63,0)
 ;;"BLD",9277,"KRN",779.2,0)
"RTN","A1AEUT2",64,0)
 ;;779.2
"RTN","A1AEUT2",65,0)
 ;;"BLD",9277,"KRN",870,0)
"RTN","A1AEUT2",66,0)
 ;;870
"RTN","A1AEUT2",67,0)
 ;;"BLD",9277,"KRN",8989.51,0)
"RTN","A1AEUT2",68,0)
 ;;8989.51
"RTN","A1AEUT2",69,0)
 ;;"BLD",9277,"KRN",8989.52,0)
"RTN","A1AEUT2",70,0)
 ;;8989.52
"RTN","A1AEUT2",71,0)
 ;;"BLD",9277,"KRN",8994,0)
"RTN","A1AEUT2",72,0)
 ;;8994
"RTN","A1AEUT2",73,0)
 ;;"BLD",9277,"KRN","B",.4,.4)
"RTN","A1AEUT2",74,0)
 ;;
"RTN","A1AEUT2",75,0)
 ;;"BLD",9277,"KRN","B",.401,.401)
"RTN","A1AEUT2",76,0)
 ;;
"RTN","A1AEUT2",77,0)
 ;;"BLD",9277,"KRN","B",.402,.402)
"RTN","A1AEUT2",78,0)
 ;;
"RTN","A1AEUT2",79,0)
 ;;"BLD",9277,"KRN","B",.403,.403)
"RTN","A1AEUT2",80,0)
 ;;
"RTN","A1AEUT2",81,0)
 ;;"BLD",9277,"KRN","B",.5,.5)
"RTN","A1AEUT2",82,0)
 ;;
"RTN","A1AEUT2",83,0)
 ;;"BLD",9277,"KRN","B",.84,.84)
"RTN","A1AEUT2",84,0)
 ;;
"RTN","A1AEUT2",85,0)
 ;;"BLD",9277,"KRN","B",3.6,3.6)
"RTN","A1AEUT2",86,0)
 ;;
"RTN","A1AEUT2",87,0)
 ;;"BLD",9277,"KRN","B",3.8,3.8)
"RTN","A1AEUT2",88,0)
 ;;
"RTN","A1AEUT2",89,0)
 ;;"BLD",9277,"KRN","B",9.2,9.2)
"RTN","A1AEUT2",90,0)
 ;;
"RTN","A1AEUT2",91,0)
 ;;"BLD",9277,"KRN","B",9.8,9.8)
"RTN","A1AEUT2",92,0)
 ;;
"RTN","A1AEUT2",93,0)
 ;;"BLD",9277,"KRN","B",19,19)
"RTN","A1AEUT2",94,0)
 ;;
"RTN","A1AEUT2",95,0)
 ;;"BLD",9277,"KRN","B",19.1,19.1)
"RTN","A1AEUT2",96,0)
 ;;
"RTN","A1AEUT2",97,0)
 ;;"BLD",9277,"KRN","B",101,101)
"RTN","A1AEUT2",98,0)
 ;;
"RTN","A1AEUT2",99,0)
 ;;"BLD",9277,"KRN","B",409.61,409.61)
"RTN","A1AEUT2",100,0)
 ;;
"RTN","A1AEUT2",101,0)
 ;;"BLD",9277,"KRN","B",771,771)
"RTN","A1AEUT2",102,0)
 ;;
"RTN","A1AEUT2",103,0)
 ;;"BLD",9277,"KRN","B",779.2,779.2)
"RTN","A1AEUT2",104,0)
 ;;
"RTN","A1AEUT2",105,0)
 ;;"BLD",9277,"KRN","B",870,870)
"RTN","A1AEUT2",106,0)
 ;;
"RTN","A1AEUT2",107,0)
 ;;"BLD",9277,"KRN","B",8989.51,8989.51)
"RTN","A1AEUT2",108,0)
 ;;
"RTN","A1AEUT2",109,0)
 ;;"BLD",9277,"KRN","B",8989.52,8989.52)
"RTN","A1AEUT2",110,0)
 ;;
"RTN","A1AEUT2",111,0)
 ;;"BLD",9277,"KRN","B",8994,8994)
"RTN","A1AEUT2",112,0)
 ;;
"RTN","A1AEUT2",113,0)
 ;;"BLD",9277,"QUES",0)
"RTN","A1AEUT2",114,0)
 ;;^9.62^^
"RTN","A1AEUT2",115,0)
 ;;"MBREQ")
"RTN","A1AEUT2",116,0)
 ;;0
"RTN","A1AEUT2",117,0)
 ;;"PKG",223,-1)
"RTN","A1AEUT2",118,0)
 ;;1^1
"RTN","A1AEUT2",119,0)
 ;;"PKG",223,0)
"RTN","A1AEUT2",120,0)
 ;;TEST PACKAGE^ZZZ^FOR FORUM
"RTN","A1AEUT2",121,0)
 ;;"PKG",223,22,0)
"RTN","A1AEUT2",122,0)
 ;;^9.49I^1^1
"RTN","A1AEUT2",123,0)
 ;;"PKG",223,22,1,0)
"RTN","A1AEUT2",124,0)
 ;;1.0
"RTN","A1AEUT2",125,0)
 ;;"PKG",223,22,1,"PAH",1,0)
"RTN","A1AEUT2",126,0)
 ;;1^3140102
"RTN","A1AEUT2",127,0)
 ;;"PKG",223,22,1,"PAH",1,1,0)
"RTN","A1AEUT2",128,0)
 ;;^^1^1^3140102
"RTN","A1AEUT2",129,0)
 ;;"PKG",223,22,1,"PAH",1,1,1,0)
"RTN","A1AEUT2",130,0)
 ;;TEST TEST
"RTN","A1AEUT2",131,0)
 ;;"QUES","XPF1",0)
"RTN","A1AEUT2",132,0)
 ;;Y
"RTN","A1AEUT2",133,0)
 ;;"QUES","XPF1","??")
"RTN","A1AEUT2",134,0)
 ;;^D REP^XPDH
"RTN","A1AEUT2",135,0)
 ;;"QUES","XPF1","A")
"RTN","A1AEUT2",136,0)
 ;;Shall I write over your |FLAG| File
"RTN","A1AEUT2",137,0)
 ;;"QUES","XPF1","B")
"RTN","A1AEUT2",138,0)
 ;;YES
"RTN","A1AEUT2",139,0)
 ;;"QUES","XPF1","M")
"RTN","A1AEUT2",140,0)
 ;;D XPF1^XPDIQ
"RTN","A1AEUT2",141,0)
 ;;"QUES","XPF2",0)
"RTN","A1AEUT2",142,0)
 ;;Y
"RTN","A1AEUT2",143,0)
 ;;"QUES","XPF2","??")
"RTN","A1AEUT2",144,0)
 ;;^D DTA^XPDH
"RTN","A1AEUT2",145,0)
 ;;"QUES","XPF2","A")
"RTN","A1AEUT2",146,0)
 ;;Want my data |FLAG| yours
"RTN","A1AEUT2",147,0)
 ;;"QUES","XPF2","B")
"RTN","A1AEUT2",148,0)
 ;;YES
"RTN","A1AEUT2",149,0)
 ;;"QUES","XPF2","M")
"RTN","A1AEUT2",150,0)
 ;;D XPF2^XPDIQ
"RTN","A1AEUT2",151,0)
 ;;"QUES","XPI1",0)
"RTN","A1AEUT2",152,0)
 ;;YO
"RTN","A1AEUT2",153,0)
 ;;"QUES","XPI1","??")
"RTN","A1AEUT2",154,0)
 ;;^D INHIBIT^XPDH
"RTN","A1AEUT2",155,0)
 ;;"QUES","XPI1","A")
"RTN","A1AEUT2",156,0)
 ;;Want KIDS to INHIBIT LOGONs during the install
"RTN","A1AEUT2",157,0)
 ;;"QUES","XPI1","B")
"RTN","A1AEUT2",158,0)
 ;;NO
"RTN","A1AEUT2",159,0)
 ;;"QUES","XPI1","M")
"RTN","A1AEUT2",160,0)
 ;;D XPI1^XPDIQ
"RTN","A1AEUT2",161,0)
 ;;"QUES","XPM1",0)
"RTN","A1AEUT2",162,0)
 ;;PO^VA(200,:EM
"RTN","A1AEUT2",163,0)
 ;;"QUES","XPM1","??")
"RTN","A1AEUT2",164,0)
 ;;^D MG^XPDH
"RTN","A1AEUT2",165,0)
 ;;"QUES","XPM1","A")
"RTN","A1AEUT2",166,0)
 ;;Enter the Coordinator for Mail Group '|FLAG|'
"RTN","A1AEUT2",167,0)
 ;;"QUES","XPM1","B")
"RTN","A1AEUT2",168,0)
 ;;
"RTN","A1AEUT2",169,0)
 ;;"QUES","XPM1","M")
"RTN","A1AEUT2",170,0)
 ;;D XPM1^XPDIQ
"RTN","A1AEUT2",171,0)
 ;;"QUES","XPO1",0)
"RTN","A1AEUT2",172,0)
 ;;Y
"RTN","A1AEUT2",173,0)
 ;;"QUES","XPO1","??")
"RTN","A1AEUT2",174,0)
 ;;^D MENU^XPDH
"RTN","A1AEUT2",175,0)
 ;;"QUES","XPO1","A")
"RTN","A1AEUT2",176,0)
 ;;Want KIDS to Rebuild Menu Trees Upon Completion of Install
"RTN","A1AEUT2",177,0)
 ;;"QUES","XPO1","B")
"RTN","A1AEUT2",178,0)
 ;;NO
"RTN","A1AEUT2",179,0)
 ;;"QUES","XPO1","M")
"RTN","A1AEUT2",180,0)
 ;;D XPO1^XPDIQ
"RTN","A1AEUT2",181,0)
 ;;"QUES","XPZ1",0)
"RTN","A1AEUT2",182,0)
 ;;Y
"RTN","A1AEUT2",183,0)
 ;;"QUES","XPZ1","??")
"RTN","A1AEUT2",184,0)
 ;;^D OPT^XPDH
"RTN","A1AEUT2",185,0)
 ;;"QUES","XPZ1","A")
"RTN","A1AEUT2",186,0)
 ;;Want to DISABLE Scheduled Options, Menu Options, and Protocols
"RTN","A1AEUT2",187,0)
 ;;"QUES","XPZ1","B")
"RTN","A1AEUT2",188,0)
 ;;NO
"RTN","A1AEUT2",189,0)
 ;;"QUES","XPZ1","M")
"RTN","A1AEUT2",190,0)
 ;;D XPZ1^XPDIQ
"RTN","A1AEUT2",191,0)
 ;;"QUES","XPZ2",0)
"RTN","A1AEUT2",192,0)
 ;;Y
"RTN","A1AEUT2",193,0)
 ;;"QUES","XPZ2","??")
"RTN","A1AEUT2",194,0)
 ;;^D RTN^XPDH
"RTN","A1AEUT2",195,0)
 ;;"QUES","XPZ2","A")
"RTN","A1AEUT2",196,0)
 ;;Want to MOVE routines to other CPUs
"RTN","A1AEUT2",197,0)
 ;;"QUES","XPZ2","B")
"RTN","A1AEUT2",198,0)
 ;;NO
"RTN","A1AEUT2",199,0)
 ;;"QUES","XPZ2","M")
"RTN","A1AEUT2",200,0)
 ;;D XPZ2^XPDIQ
"RTN","A1AEUT2",201,0)
 ;;"RTN")
"RTN","A1AEUT2",202,0)
 ;;1
"RTN","A1AEUT2",203,0)
 ;;"RTN","ZOSV2GTM")
"RTN","A1AEUT2",204,0)
 ;;0^1^B7008460
"RTN","A1AEUT2",205,0)
 ;;"RTN","ZOSV2GTM",1,0)
"RTN","A1AEUT2",206,0)
 ;;%ZOSV2 ;ISF/RWF - More GT.M support routines ;10/18/06  14:29
"RTN","A1AEUT2",207,0)
 ;;"RTN","ZOSV2GTM",2,0)
"RTN","A1AEUT2",208,0)
 ;; ;;8.0;KERNEL;**275,425**;Jul 10, 1995;Build 2
"RTN","A1AEUT2",209,0)
 ;;"RTN","ZOSV2GTM",3,0)
"RTN","A1AEUT2",210,0)
 ;; Q
"RTN","A1AEUT2",211,0)
 ;;"RTN","ZOSV2GTM",4,0)
"RTN","A1AEUT2",212,0)
 ;; ;SAVE: DIE open array reference.
"RTN","A1AEUT2",213,0)
 ;;"RTN","ZOSV2GTM",5,0)
"RTN","A1AEUT2",214,0)
 ;; ;      XCN is the starting value to $O from.
"RTN","A1AEUT2",215,0)
 ;;"RTN","ZOSV2GTM",6,0)
"RTN","A1AEUT2",216,0)
 ;;SAVE(RN) ;Save a routine
"RTN","A1AEUT2",217,0)
 ;;"RTN","ZOSV2GTM",7,0)
"RTN","A1AEUT2",218,0)
 ;; N %,%F,%I,%N,SP,$ETRAP
"RTN","A1AEUT2",219,0)
 ;;"RTN","ZOSV2GTM",8,0)
"RTN","A1AEUT2",220,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEUT2",221,0)
 ;;"RTN","ZOSV2GTM",9,0)
"RTN","A1AEUT2",222,0)
 ;; S %I=$I,SP=" ",%F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","A1AEUT2",223,0)
 ;;"RTN","ZOSV2GTM",10,0)
"RTN","A1AEUT2",224,0)
 ;; O %F:(newversion:noreadonly:blocksize=2048:recordsize=2044) U %F
"RTN","A1AEUT2",225,0)
 ;;"RTN","ZOSV2GTM",11,0)
"RTN","A1AEUT2",226,0)
 ;; F  S XCN=$O(@(DIE_XCN_")")) Q:XCN'>0  S %=@(DIE_XCN_",0)") Q:$E(%,1)="$"  I $E(
"RTN","A1AEUT2",227,0)
 ;;%)'=";" W $P(%,SP)_$C(9)_$P(%,SP,2,99999),!
"RTN","A1AEUT2",228,0)
 ;;"RTN","ZOSV2GTM",12,0)
"RTN","A1AEUT2",229,0)
 ;; C %F ;S %N=$$NULL
"RTN","A1AEUT2",230,0)
 ;;"RTN","ZOSV2GTM",13,0)
"RTN","A1AEUT2",231,0)
 ;; ZLINK RN
"RTN","A1AEUT2",232,0)
 ;;"RTN","ZOSV2GTM",14,0)
"RTN","A1AEUT2",233,0)
 ;; ;C %N
"RTN","A1AEUT2",234,0)
 ;;"RTN","ZOSV2GTM",15,0)
"RTN","A1AEUT2",235,0)
 ;; U %I
"RTN","A1AEUT2",236,0)
 ;;"RTN","ZOSV2GTM",16,0)
"RTN","A1AEUT2",237,0)
 ;; Q
"RTN","A1AEUT2",238,0)
 ;;"RTN","ZOSV2GTM",17,0)
"RTN","A1AEUT2",239,0)
 ;;NULL() ;Open and use null to hide talking.  Return open name
"RTN","A1AEUT2",240,0)
 ;;"RTN","ZOSV2GTM",18,0)
"RTN","A1AEUT2",241,0)
 ;; ;Doesn't work for compile errors
"RTN","A1AEUT2",242,0)
 ;;"RTN","ZOSV2GTM",19,0)
"RTN","A1AEUT2",243,0)
 ;; N %N S %N=$S($ZV["VMS":"NLA0:",1:"/dev/nul")
"RTN","A1AEUT2",244,0)
 ;;"RTN","ZOSV2GTM",20,0)
"RTN","A1AEUT2",245,0)
 ;; O %N U %N
"RTN","A1AEUT2",246,0)
 ;;"RTN","ZOSV2GTM",21,0)
"RTN","A1AEUT2",247,0)
 ;; Q %N
"RTN","A1AEUT2",248,0)
 ;;"RTN","ZOSV2GTM",22,0)
"RTN","A1AEUT2",249,0)
 ;; ;
"RTN","A1AEUT2",250,0)
 ;;"RTN","ZOSV2GTM",23,0)
"RTN","A1AEUT2",251,0)
 ;;DEL(RN) ;Delete a routine file, both source and object.
"RTN","A1AEUT2",252,0)
 ;;"RTN","ZOSV2GTM",24,0)
"RTN","A1AEUT2",253,0)
 ;; N %N,%DIR,%I,$ETRAP
"RTN","A1AEUT2",254,0)
 ;;"RTN","ZOSV2GTM",25,0)
"RTN","A1AEUT2",255,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEUT2",256,0)
 ;;"RTN","ZOSV2GTM",26,0)
"RTN","A1AEUT2",257,0)
 ;; S %I=$I,%DIR=$$RTNDIR^%ZOSV,RN=$TR(RN,"%","_")
"RTN","A1AEUT2",258,0)
 ;;"RTN","ZOSV2GTM",27,0)
"RTN","A1AEUT2",259,0)
 ;; I $L($ZSEARCH(%DIR_RN_".m",244)) ZSYSTEM "DEL "_%DIR_X_".m;*"
"RTN","A1AEUT2",260,0)
 ;;"RTN","ZOSV2GTM",28,0)
"RTN","A1AEUT2",261,0)
 ;; I $L($ZSEARCH(%DIR_RN_".obj",244)) ZSYSTEM "DEL "_%DIR_X_".obj;*"
"RTN","A1AEUT2",262,0)
 ;;"RTN","ZOSV2GTM",29,0)
"RTN","A1AEUT2",263,0)
 ;; I $L($ZSEARCH(%DIR_RN_".o",244)) ZSYSTEM "rm -f "_%DIR_X_".o"
"RTN","A1AEUT2",264,0)
 ;;"RTN","ZOSV2GTM",30,0)
"RTN","A1AEUT2",265,0)
 ;; Q
"RTN","A1AEUT2",266,0)
 ;;"RTN","ZOSV2GTM",31,0)
"RTN","A1AEUT2",267,0)
 ;; ;LOAD: DIF open array to receive the routine lines.
"RTN","A1AEUT2",268,0)
 ;;"RTN","ZOSV2GTM",32,0)
"RTN","A1AEUT2",269,0)
 ;; ;      XCNP The starting index -1.
"RTN","A1AEUT2",270,0)
 ;;"RTN","ZOSV2GTM",33,0)
"RTN","A1AEUT2",271,0)
 ;;LOAD(RN) ;Load a routine
"RTN","A1AEUT2",272,0)
 ;;"RTN","ZOSV2GTM",34,0)
"RTN","A1AEUT2",273,0)
 ;; N %
"RTN","A1AEUT2",274,0)
 ;;"RTN","ZOSV2GTM",35,0)
"RTN","A1AEUT2",275,0)
 ;; S %N=0 F XCNP=XCNP+1:1 S %N=%N+1,%=$T(+%N^@RN) Q:$L(%)=0  S @(DIF_XCNP_",0)")=%
"RTN","A1AEUT2",276,0)
 ;;"RTN","ZOSV2GTM",36,0)
"RTN","A1AEUT2",277,0)
 ;; Q
"RTN","A1AEUT2",278,0)
 ;;"RTN","ZOSV2GTM",37,0)
"RTN","A1AEUT2",279,0)
 ;; ;
"RTN","A1AEUT2",280,0)
 ;;"RTN","ZOSV2GTM",38,0)
"RTN","A1AEUT2",281,0)
 ;;LOAD2(RN) ;Load a routine
"RTN","A1AEUT2",282,0)
 ;;"RTN","ZOSV2GTM",39,0)
"RTN","A1AEUT2",283,0)
 ;; N %,%1,%F,%N,$ETRAP
"RTN","A1AEUT2",284,0)
 ;;"RTN","ZOSV2GTM",40,0)
"RTN","A1AEUT2",285,0)
 ;; S %I=$I,%F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","A1AEUT2",286,0)
 ;;"RTN","ZOSV2GTM",41,0)
"RTN","A1AEUT2",287,0)
 ;; O %F:(readonly):1 Q:'$T  U %F
"RTN","A1AEUT2",288,0)
 ;;"RTN","ZOSV2GTM",42,0)
"RTN","A1AEUT2",289,0)
 ;; F XCNP=XCNP+1:1 R %1:1 Q:'$T!$ZEOF  S @(DIF_XCNP_",0)")=$TR(%1,$C(9)," ")
"RTN","A1AEUT2",290,0)
 ;;"RTN","ZOSV2GTM",43,0)
"RTN","A1AEUT2",291,0)
 ;; C %F I $L(%I) U %I
"RTN","A1AEUT2",292,0)
 ;;"RTN","ZOSV2GTM",44,0)
"RTN","A1AEUT2",293,0)
 ;; Q
"RTN","A1AEUT2",294,0)
 ;;"RTN","ZOSV2GTM",45,0)
"RTN","A1AEUT2",295,0)
 ;; ;
"RTN","A1AEUT2",296,0)
 ;;"RTN","ZOSV2GTM",46,0)
"RTN","A1AEUT2",297,0)
 ;;RSUM(RN) ;Calculate a RSUM value
"RTN","A1AEUT2",298,0)
 ;;"RTN","ZOSV2GTM",47,0)
"RTN","A1AEUT2",299,0)
 ;; N %,DIF,XCNP,%N,Y,$ETRAP K ^TMP("RSUM",$J)
"RTN","A1AEUT2",300,0)
 ;;"RTN","ZOSV2GTM",48,0)
"RTN","A1AEUT2",301,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEUT2",302,0)
 ;;"RTN","ZOSV2GTM",49,0)
"RTN","A1AEUT2",303,0)
 ;; S Y=0,DIF="^TMP(""RSUM"",$J,",XCNP=0 D LOAD2(RN)
"RTN","A1AEUT2",304,0)
 ;;"RTN","ZOSV2GTM",50,0)
"RTN","A1AEUT2",305,0)
 ;; F %=1,3:1 S %1=$G(^TMP("RSUM",$J,%,0)),%3=$F(%1," ") Q:'%3  S %3=$S($E(%1,%3)'=
"RTN","A1AEUT2",306,0)
 ;;";":$L(%1),$E(%1,%3+1)=";":$L(%1),1:%3-2) F %2=1:1:%3 S Y=$A(%1,%2)*%2+Y
"RTN","A1AEUT2",307,0)
 ;;"RTN","ZOSV2GTM",51,0)
"RTN","A1AEUT2",308,0)
 ;; K ^TMP("RSUM",$J)
"RTN","A1AEUT2",309,0)
 ;;"RTN","ZOSV2GTM",52,0)
"RTN","A1AEUT2",310,0)
 ;; Q Y
"RTN","A1AEUT2",311,0)
 ;;"RTN","ZOSV2GTM",53,0)
"RTN","A1AEUT2",312,0)
 ;; ;
"RTN","A1AEUT2",313,0)
 ;;"RTN","ZOSV2GTM",54,0)
"RTN","A1AEUT2",314,0)
 ;;RSUM2(RN) ;Calculate a RSUM2 value
"RTN","A1AEUT2",315,0)
 ;;"RTN","ZOSV2GTM",55,0)
"RTN","A1AEUT2",316,0)
 ;; N %,DIF,XCNP,%N,Y,$ETRAP K ^TMP("RSUM",$J)
"RTN","A1AEUT2",317,0)
 ;;"RTN","ZOSV2GTM",56,0)
"RTN","A1AEUT2",318,0)
 ;; S $ETRAP="S $ECODE="""" Q"
"RTN","A1AEUT2",319,0)
 ;;"RTN","ZOSV2GTM",57,0)
"RTN","A1AEUT2",320,0)
 ;; S Y=0,DIF="^TMP(""RSUM"",$J,",XCNP=0 D LOAD2(RN)
"RTN","A1AEUT2",321,0)
 ;;"RTN","ZOSV2GTM",58,0)
"RTN","A1AEUT2",322,0)
 ;; F %=1,3:1 S %1=$G(^TMP("RSUM",$J,%,0)),%3=$F(%1," ") Q:'%3  S %3=$S($E(%1,%3)'=
"RTN","A1AEUT2",323,0)
 ;;";":$L(%1),$E(%1,%3+1)=";":$L(%1),1:%3-2) F %2=1:1:%3 S Y=$A(%1,%2)*(%2+%)+Y
"RTN","A1AEUT2",324,0)
 ;;"RTN","ZOSV2GTM",59,0)
"RTN","A1AEUT2",325,0)
 ;; K ^TMP("RSUM",$J)
"RTN","A1AEUT2",326,0)
 ;;"RTN","ZOSV2GTM",60,0)
"RTN","A1AEUT2",327,0)
 ;; Q Y
"RTN","A1AEUT2",328,0)
 ;;"RTN","ZOSV2GTM",61,0)
"RTN","A1AEUT2",329,0)
 ;; ;
"RTN","A1AEUT2",330,0)
 ;;"RTN","ZOSV2GTM",62,0)
"RTN","A1AEUT2",331,0)
 ;;TEST(RN) ;Special GT.M Test to see if routine is here.
"RTN","A1AEUT2",332,0)
 ;;"RTN","ZOSV2GTM",63,0)
"RTN","A1AEUT2",333,0)
 ;; N %F,%X
"RTN","A1AEUT2",334,0)
 ;;"RTN","ZOSV2GTM",64,0)
"RTN","A1AEUT2",335,0)
 ;; S %F=$$RTNDIR^%ZOSV()_$TR(RN,"%","_")_".m"
"RTN","A1AEUT2",336,0)
 ;;"RTN","ZOSV2GTM",65,0)
"RTN","A1AEUT2",337,0)
 ;; S %X=$ZSEARCH("X.X",245),%X=$ZSEARCH(%F,245)
"RTN","A1AEUT2",338,0)
 ;;"RTN","ZOSV2GTM",66,0)
"RTN","A1AEUT2",339,0)
 ;; Q %X
"RTN","A1AEUT2",340,0)
 ;;"VER")
"RTN","A1AEUT2",341,0)
 ;;8.0^22.0
"RTN","A1AEUT2",342,0)
 ;;$END KID ZZZ*1.0*1
"RTN","A1AEUTL")
0^40^B149432462
"RTN","A1AEUTL",1,0)
A1AEUTL ;RMO,MJK/ALBANY,VEN/SMH&TOAD - Patch Utilities ; 10/22/14 10:20pm
"RTN","A1AEUTL",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEUTL",3,0)
 ;
"RTN","A1AEUTL",4,0)
 ; Change History:
"RTN","A1AEUTL",5,0)
 ;
"RTN","A1AEUTL",6,0)
 ; 2007 01 11: previous change; by Wally Fort of the Oakland VA Field
"RTN","A1AEUTL",7,0)
 ; Office (ISF/RWF).
"RTN","A1AEUTL",8,0)
 ;
"RTN","A1AEUTL",9,0)
 ; 2014 01 06: Sam Habiel of the VISTA Expertise Network (VEN/SMH):
"RTN","A1AEUTL",10,0)
 ; in SETNUM, DIC(0) will be taken from the symbol table if it is
"RTN","A1AEUTL",11,0)
 ; defined to make the output silent for Unit Testing. Otherwise, it
"RTN","A1AEUTL",12,0)
 ; will default to LE.
"RTN","A1AEUTL",13,0)
 ;
"RTN","A1AEUTL",14,0)
 ; 2014 01 10: (VEN/SMH) replace awkward logic in SETNUM based on
"RTN","A1AEUTL",15,0)
 ; traditional simple index AB on file DHCP Patches (11005) to be
"RTN","A1AEUTL",16,0)
 ; based on replacement new-style compound index AB. Old algorithm
"RTN","A1AEUTL",17,0)
 ; was hard-coded to a limit of 999 as the highest patch number.
"RTN","A1AEUTL",18,0)
 ; New algorithm uses reverse $order to get last patch number, with
"RTN","A1AEUTL",19,0)
 ; no hard-coded limit.
"RTN","A1AEUTL",20,0)
 ;
"RTN","A1AEUTL",21,0)
 ; 2014 01 22: (VEN/SMH) introduce new variable A1AESTRM and logic
"RTN","A1AEUTL",22,0)
 ; to set initial sequence number and patch number based on new file
"RTN","A1AEUTL",23,0)
 ; DHCP Patch Stream (11007.1)'s field Patch Number Start (.001).
"RTN","A1AEUTL",24,0)
 ; Changes in SEQ, NUM, SETNUM, & $$PRIMSTRM.
"RTN","A1AEUTL",25,0)
 ;
"RTN","A1AEUTL",26,0)
 ; 2014 02 10-11,25: Rick Marshall of the VISTA Expertise Network
"RTN","A1AEUTL",27,0)
 ; (VEN/TOAD): added change history, new subroutine ID11005 to
"RTN","A1AEUTL",28,0)
 ; replace file DHCP Patches (11005)'s WRITE identifier logic,
"RTN","A1AEUTL",29,0)
 ; changed $$PRIMSTRM to use new APRIM index instead of old PRIM
"RTN","A1AEUTL",30,0)
 ; index to avoid letting users select DHCP Patch Stream records
"RTN","A1AEUTL",31,0)
 ; by typing YES or NO. Changed name of default record from
"RTN","A1AEUTL",32,0)
 ; "VA PATCH STREAM" to "FOIA VISTA" and set its field Abbreviation
"RTN","A1AEUTL",33,0)
 ; (.05) to "FV". Fixed an intermediate-calculation bug in the WRITE
"RTN","A1AEUTL",34,0)
 ; ID logic - if patch had status of cancel, it calculated as
"RTN","A1AEUTL",35,0)
 ; "cancel^0" instead of "cancel" before extracting just the first
"RTN","A1AEUTL",36,0)
 ; three characters; the results were correct, but the intermediate
"RTN","A1AEUTL",37,0)
 ; value was wrong. Convert ID11005^A1AEUTL from write commands to
"RTN","A1AEUTL",38,0)
 ; use of EN^DDIOL; delimit components in silent mode.
"RTN","A1AEUTL",39,0)
 ;
"RTN","A1AEUTL",40,0)
 ; 2014 03 04: (VEN/SMH) Now there is an Entry point SETNUM1 to set the
"RTN","A1AEUTL",41,0)
 ; patch directly. SETNUM can now be invoked independently from NUM as
"RTN","A1AEUTL",42,0)
 ; it does its own locks.
"RTN","A1AEUTL",43,0)
 ;
"RTN","A1AEUTL",44,0)
 ; 2014 03 06: (VEN/SMH) Add check for security key A1AE IMPORT besides
"RTN","A1AEUTL",45,0)
 ; the user when importing, in IN.
"RTN","A1AEUTL",46,0)
 ;
"RTN","A1AEUTL",47,0)
 ; 2014 03 06: (VEN/TOAD) added new status abbreviations for
"RTN","A1AEUTL",48,0)
 ; secondary patches to ID11005. Add conditional line 2 of write ID
"RTN","A1AEUTL",49,0)
 ; for derived patches, to show "derived from [Stream]Subject".
"RTN","A1AEUTL",50,0)
 ; in ID11005 and split out new function $$STRMSUBJ.
"RTN","A1AEUTL",51,0)
 ;
"RTN","A1AEUTL",52,0)
 ; 2014 08 05: (VEN/LGC) added code for a new M cross-reference
"RTN","A1AEUTL",53,0)
 ;   (ASUBCNG) at linetag below by same name.  This cross automates
"RTN","A1AEUTL",54,0)
 ;   add a new SUBSCRIPTION DATE and RESPONSIBLE OFFICIAL to
"RTN","A1AEUTL",55,0)
 ;   the active PATCH STREAM entry when the SUBSCRIPTION field
"RTN","A1AEUTL",56,0)
 ;   is toggled to YES.
"RTN","A1AEUTL",57,0)
 ;   Added Post Install at A1AEPST to run after KIDS install.
"RTN","A1AEUTL",58,0)
 ;   sets PRIMARY? and SUBSCRIPTION with some input post install.
"RTN","A1AEUTL",59,0)
 ;
"RTN","A1AEUTL",60,0)
 ; 2014 08 19: (VEN/LGC) added Unit Testing Code for post install
"RTN","A1AEUTL",61,0)
 ;
"RTN","A1AEUTL",62,0)
 ; 2014 08 20: (VEN/LGC) moved Unit Testing into A1AEUT3
"RTN","A1AEUTL",63,0)
 ;
"RTN","A1AEUTL",64,0)
 ; 2014 08 27: (VEN/LGC) moved Post install to A1AE2POS
"RTN","A1AEUTL",65,0)
 ;
"RTN","A1AEUTL",66,0)
 ; 2014 10 22: (VEN/LGC) added code at FORUM linetag to
"RTN","A1AEUTL",67,0)
 ;   drop out of Input transform early if this is not
"RTN","A1AEUTL",68,0)
 ;   a FORUM site
"RTN","A1AEUTL",69,0)
 ;
"RTN","A1AEUTL",70,0)
 ;logic to get and set seq#
"RTN","A1AEUTL",71,0)
 ; VEN/SMH - Stream logic here -- done, second trail.
"RTN","A1AEUTL",72,0)
SEQ L +^A1AE(11007,A1AEPKIF,"V",A1AEVR,"PR"):60
"RTN","A1AEUTL",73,0)
 S A1AESTREAM=$$PRIMSTRM()
"RTN","A1AEUTL",74,0)
 ; S SEQ=$G(^A1AE(11007,A1AEPKIF,"V",A1AEVR,"PR"))+1,^("PR")=SEQ ; VEN/SMH - old
"RTN","A1AEUTL",75,0)
 S SEQ=$G(^A1AE(11007,A1AEPKIF,"V",A1AEVR,"PR"),A1AESTREAM-1)+1,^("PR")=SEQ  ; VEN/SMH - new. 1st seq # is stream number - 1.
"RTN","A1AEUTL",76,0)
 I A1AENEW="v" S $P(^A1AE(11005,DA,0),"^",6)=SEQ
"RTN","A1AEUTL",77,0)
 L -^A1AE(11007,A1AEPKIF,"V",A1AEVR,"PR") Q
"RTN","A1AEUTL",78,0)
 ;
"RTN","A1AEUTL",79,0)
 ;if mail message generate fails
"RTN","A1AEUTL",80,0)
DELSEQ L +^A1AE(11007,A1AEPKIF,"V",A1AEVR,"PR"):60
"RTN","A1AEUTL",81,0)
 I $D(^A1AE(11007,A1AEPKIF,"V",A1AEVR,"PR")),^("PR") S ^("PR")=^("PR")-1
"RTN","A1AEUTL",82,0)
 L -^A1AE(11007,A1AEPKIF,"V",A1AEVR,"PR") Q
"RTN","A1AEUTL",83,0)
 ;
"RTN","A1AEUTL",84,0)
IN ;Called from the Input transform file 11005, field .01
"RTN","A1AEUTL",85,0)
 N X1,X2
"RTN","A1AEUTL",86,0)
 S X1=$P(X,"*",1) I X1']""!'($P(X,"*",2)=+$P(X,"*",2)) K X Q
"RTN","A1AEUTL",87,0)
 S X2=$O(^DIC(9.4,"C",X1,0)) I 'X2 W !?3,"'",X1,"' is not a valid namespace" K X Q
"RTN","A1AEUTL",88,0)
 ;
"RTN","A1AEUTL",89,0)
 ; If this is not a FORUM site we do not need the rest of
"RTN","A1AEUTL",90,0)
 ;   this Input transform
"RTN","A1AEUTL",91,0)
FORUM N PRIM S PRIM=+$O(^A1AE(11007.1,"APRIM",1,0))
"RTN","A1AEUTL",92,0)
 N FMAIL S FMAIL=$$GET1^DIQ(4.3,"1,",.01)
"RTN","A1AEUTL",93,0)
 Q:FMAIL=""
"RTN","A1AEUTL",94,0)
 Q:'$D(^A1AE(11007.1,"AFORUM",FMAIL,PRIM))
"RTN","A1AEUTL",95,0)
 ;
"RTN","A1AEUTL",96,0)
 I '$D(^A1AE(11007,"B",X2)) W !?3,"'",X1,"' is not a package in the 'DHCP Patch/Problem' file" K X Q
"RTN","A1AEUTL",97,0)
 I '$D(A1AETY) W !?3,"Please use the Edit Template." K X Q
"RTN","A1AEUTL",98,0)
 I A1AETY="PH",'$D(^A1AE(11007,X2,"V",+$P(X,"*",2),0)) W !?3,"'",$P(X,"*",2),"' is not a valid version number for this package" K X Q
"RTN","A1AEUTL",99,0)
 I A1AETY="PK",$D(^A1AE(11007,X2,"V",+$P(X,"*",2))) W !,?3,"'",$P(X,"*",2),"' is not a new package version." K X Q
"RTN","A1AEUTL",100,0)
 ; VEN/SMH - Add check for A1AE IMPORT besides the user
"RTN","A1AEUTL",101,0)
 I '$D(^A1AE(11007,X2,$S(A1AEX=11005:"PH",1:"PB"),DUZ,0))&('$D(^XUSEC("A1AE IMPORT",DUZ))) W !?3,"You are not an authorized user" K X Q
"RTN","A1AEUTL",102,0)
 I $D(^A1AE(A1AEX,"B",X)) W !?3,"Another error designation with the '",X,"' specification already exists" K X Q
"RTN","A1AEUTL",103,0)
 Q
"RTN","A1AEUTL",104,0)
 ;
"RTN","A1AEUTL",105,0)
PKG K A1AEPKIF,A1AEPK S DIC("A")="Select PACKAGE: ",DIC="^A1AE(11007,",DIC(0)=$S($D(A1AE(0)):A1AE(0),1:"AEMQZ") W ! D ^DIC K DIC,A1AE(0) Q:Y<0  S A1AEPKIF=+Y
"RTN","A1AEUTL",106,0)
 I $D(^DIC(9.4,A1AEPKIF,0)) S A1AEPKNM=$P(^(0),"^",1),A1AEPK=$P(^(0),"^",2)
"RTN","A1AEUTL",107,0)
 Q
"RTN","A1AEUTL",108,0)
 ;
"RTN","A1AEUTL",109,0)
VER F A1AEVR=0:0 S A1AEVR=$O(^A1AE(11007,A1AEPKIF,"V",A1AEVR)) Q:'A1AEVR  S:A1AEVR'=999 DIC("B")=A1AEVR
"RTN","A1AEUTL",110,0)
 S:'$D(^A1AE(11007,A1AEPKIF,"V",0)) ^(0)="^11007.01I^^"
"RTN","A1AEUTL",111,0)
 K A1AEVR S DA=A1AEPKIF,DIC="^A1AE(11007,A1AEPKIF,""V"",",DIC(0)=$S($D(A1AE(0)):A1AE(0),1:"AEQ")
"RTN","A1AEUTL",112,0)
 D ^DIC S:Y>0 A1AEVR=+Y K DIC,A1AE(0)
"RTN","A1AEUTL",113,0)
 Q
"RTN","A1AEUTL",114,0)
 ;
"RTN","A1AEUTL",115,0)
 ;
"RTN","A1AEUTL",116,0)
 ;
"RTN","A1AEUTL",117,0)
NUM ; Entry point for obtaining the next patch number
"RTN","A1AEUTL",118,0)
 S A1AESTREAM=$$PRIMSTRM()                                           ; Obtain primary stream
"RTN","A1AEUTL",119,0)
 L +^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY):3 E  D  Q
"RTN","A1AEUTL",120,0)
 . W $C(7),!!,"Someone else is adding a patch at the moment."
"RTN","A1AEUTL",121,0)
 . W !,"Please try again later."
"RTN","A1AEUTL",122,0)
 S:'$D(^A1AE(11007,A1AEPKIF,"V",A1AEVR,"PB")) ^("PB")=A1AESTREAM     ; VEN/SMH - changed! Initial Problem number. Not used.
"RTN","A1AEUTL",123,0)
 S:'$D(^A1AE(11007,A1AEPKIF,"V",A1AEVR,"PH")) ^("PH")=A1AESTREAM     ; VEN/SMH - changed! Initial Patch number.
"RTN","A1AEUTL",124,0)
 S $P(^A1AE(11007,A1AEPKIF,"V",0),"^",3)=A1AEVR ; Why??              ; VEN/SMH - not my comment.
"RTN","A1AEUTL",125,0)
 S A1AENB=^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY)                    ; if first patch, we start at stream top (TY="PH")
"RTN","A1AEUTL",126,0)
 L -^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY)                          ; Unlock
"RTN","A1AEUTL",127,0)
 ;
"RTN","A1AEUTL",128,0)
SETNUM ; Private Proc; Get lastest number and set; New Logic - VEN/SMH for v2.4 - using new AB index
"RTN","A1AEUTL",129,0)
 I '$D(A1AESTREAM) S A1AESTREAM=$$PRIMSTRM()                         ; If called without fallthrough, re-init.
"RTN","A1AEUTL",130,0)
 S X=A1AEPK_"*"_A1AEVR_"*"_A1AENB                                    ; Start ZZZ*2*last number per package file.
"RTN","A1AEUTL",131,0)
 I $D(^A1AE(11005,"AB",A1AEPK,A1AEVR)) D                             ; If package/version has patches already
"RTN","A1AEUTL",132,0)
 . N XEND S XEND=$O(^A1AE(11005,"AB",A1AEPK,A1AEVR,A1AESTREAM+9999),-1) ; Get last patch in stream (greatest number)
"RTN","A1AEUTL",133,0)
 . I XEND<A1AENB                                                     ; If our number is greater or equal to the greatest, ok
"RTN","A1AEUTL",134,0)
 . E  S A1AENB=XEND+1,$P(X,"*",3)=A1AENB                             ; else our patch is one greater than greatest.
"RTN","A1AEUTL",135,0)
 D SETNUM1                                                           ; VEN/SMH - This got abstraced out for reuse
"RTN","A1AEUTL",136,0)
 I Y>0 D                                                             ; If we have a record, update the last used
"RTN","A1AEUTL",137,0)
 . L +^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY):1 ELSE  QUIT           ; Try to lock for 1 sec, otherwise, quit. Acuracy not that imp.
"RTN","A1AEUTL",138,0)
 . S ^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY)=A1AENB                  ; Set last patch number used
"RTN","A1AEUTL",139,0)
 . L -^A1AE(11007,A1AEPKIF,"V",A1AEVR,A1AETY)                        ; Unlock
"RTN","A1AEUTL",140,0)
 QUIT
"RTN","A1AEUTL",141,0)
 ;
"RTN","A1AEUTL",142,0)
SETNUM1 ;returns x for patch,a1aenb
"RTN","A1AEUTL",143,0)
 S DIC="^A1AE(A1AEFL,",DIC(0)=$G(DIC(0),"LE") ; VEN/SMH old : DIC(0)="LE"
"RTN","A1AEUTL",144,0)
 D ^DIC
"RTN","A1AEUTL",145,0)
 Q:Y<0
"RTN","A1AEUTL",146,0)
 S DA=+Y,A1AEPD=$P(Y,"^",2),$P(^A1AE(A1AEFL,DA,0),"^",2,4)=A1AEPKIF_"^"_A1AEVR_"^"_A1AENB,^A1AE(A1AEFL,"D",A1AEPKIF,DA)=""
"RTN","A1AEUTL",147,0)
 QUIT
"RTN","A1AEUTL",148,0)
 ;
"RTN","A1AEUTL",149,0)
 ; /END NUM
"RTN","A1AEUTL",150,0)
 ;
"RTN","A1AEUTL",151,0)
PRT ;Record Printed by : Note: Called from inside the A1AE STANDARD PRINT Print Template
"RTN","A1AEUTL",152,0)
 L +^A1AE(11005,D0,2):60
"RTN","A1AEUTL",153,0)
 S:'$D(^A1AE(11005,D0,2,0)) ^(0)="^11005.02P^^" S:'$D(^A1AE(11005,D0,2,DUZ,0)) $P(^(0),"^",1,2)=DUZ_"^"_DT,$P(^(0),"^",4)=$P(^A1AE(11005,D0,2,0),"^",4)+1
"RTN","A1AEUTL",154,0)
 S $P(^A1AE(11005,D0,2,DUZ,0),"^",3)=DT,$P(^A1AE(11005,D0,2,0),"^",3)=DUZ,^A1AE(11005,"AU",DUZ,+$P(^A1AE(11005,D0,0),"^",2),(9999999-DT))=""
"RTN","A1AEUTL",155,0)
 L -^A1AE(11005,D0,2)
"RTN","A1AEUTL",156,0)
 Q
"RTN","A1AEUTL",157,0)
 ;
"RTN","A1AEUTL",158,0)
ENVER ;This entry point is for permitting Verifiers to clean-up
"RTN","A1AEUTL",159,0)
 ;patches which had to be verified by the Postmaster for
"RTN","A1AEUTL",160,0)
 ;version 2.0 of the patch module.
"RTN","A1AEUTL",161,0)
 W !!?27,"*** NOTE ***",!!?3,*7,"This option will update the Verified information section of a patch",!?3,"to a valid verifier, yourself, rather than the Postmaster."
"RTN","A1AEUTL",162,0)
 W !!?3,"It will put your name in as the Verifier and assign the current date",!?3,"as the date the patch was verified."
"RTN","A1AEUTL",163,0)
 W !!?3,"Once you have verified the patch it will not appear as new again",!?3,"to the user and the 'New Patch Bulletin' will not be sent since these",!?3,"occurred when the patch was originally completed."
"RTN","A1AEUTL",164,0)
 ;
"RTN","A1AEUTL",165,0)
ASKPAT S DIC("A")="Select PATCH: ",DIC("S")="I $P(^(0),U,8)=""v"",$P(^(0),U,14)=.5,$P(^(0),U,9)'=DUZ,$P(^(0),U,13)'=DUZ,$D(^A1AE(11007,+$P(^(0),U,2),""PB"",DUZ,0)),$P(^(0),U,2)=""V""",DIC="^A1AE(11005,",DIC(0)="AEMQ"
"RTN","A1AEUTL",166,0)
 W ! D ^DIC K DIC("A"),DIC("S") G Q^A1AEPH1:Y<0 S DA=+Y,A1AEPD=$P(Y,U,2) S %DT="",X="T" D ^%DT S DT=Y
"RTN","A1AEUTL",167,0)
 S A1AERD("A")="Are you sure you want to verify patch "_A1AEPD_"? ",A1AERD(0)="S",A1AERD(1)="Yes^assign yourself as the Verifier",A1AERD(2)="No^leave the verifier as the Postmaster",A1AERD("B")=2
"RTN","A1AEUTL",168,0)
 D SET^A1AERD K A1AERD,Y G Q^A1AEPH1:X["^" I $E(X,1)["Y" W !!?3,"...please wait ",A1AEPD," is being verified..." S DIE="^A1AE(11005,",DR="8////v;11////"_DT_";14////"_DUZ D ^DIE K DE,DQ W "done"
"RTN","A1AEUTL",169,0)
 D Q^A1AEPH1
"RTN","A1AEUTL",170,0)
 G ASKPAT
"RTN","A1AEUTL",171,0)
 ;
"RTN","A1AEUTL",172,0)
NEWVER(PKIEN,PCHIEN) ;Setup a new version of package.  Called when a Package is released
"RTN","A1AEUTL",173,0)
 N FDA,IEN,X,Y,NAME,PV
"RTN","A1AEUTL",174,0)
 ;^A1AE(11007,A1AEPKIF,"V",A1AEVR)
"RTN","A1AEUTL",175,0)
 S X=$G(^A1AE(11005,PCHIEN,0))
"RTN","A1AEUTL",176,0)
 S NAME=$P($G(^A1AE(11005,PCHIEN,4)),U) Q:'$L(NAME)  ;Not a package release
"RTN","A1AEUTL",177,0)
 S PV=+$P(NAME," ",$L(NAME," ")),IEN="+1,"_PKIEN_",",IEN(1)=PV
"RTN","A1AEUTL",178,0)
 S FDA(11007.01,IEN,.01)=PV,FDA(11007.01,IEN,2)=$$DT^XLFDT
"RTN","A1AEUTL",179,0)
 K IEN D UPDATE^DIE("","FDA","IEN")
"RTN","A1AEUTL",180,0)
 Q
"RTN","A1AEUTL",181,0)
 ;
"RTN","A1AEUTL",182,0)
 ;
"RTN","A1AEUTL",183,0)
PRIMSTRM() ; Return the Primary Stream for this FORUM Patch Module config
"RTN","A1AEUTL",184,0)
 ;;private;function;clean;silent;SAC-compliant
"RTN","A1AEUTL",185,0)
 ; called by: SEQ, NUM
"RTN","A1AEUTL",186,0)
 ; calls: IX1^DIK
"RTN","A1AEUTL",187,0)
 ; input: index PRIM of file DHCP Patch Stream (11007.1)
"RTN","A1AEUTL",188,0)
 ; output = field Patch Number Start (.001/IEN) of primary stream
"RTN","A1AEUTL",189,0)
 ;   if file contains no records, initialize FOIA VISTA record
"RTN","A1AEUTL",190,0)
 ;
"RTN","A1AEUTL",191,0)
 ; if no records, add FOIA VISTA
"RTN","A1AEUTL",192,0)
 I '$D(^A1AE(11007.1,1,0)) D
"RTN","A1AEUTL",193,0)
 . S ^(0)="FOIA VISTA^0^^^FV" ; set Name, Primary?, & Abbreviation
"RTN","A1AEUTL",194,0)
 . N DA,DIK S DA=1,DIK="^A1AE(11007.1," D IX1^DIK ; cross-reference
"RTN","A1AEUTL",195,0)
 ;
"RTN","A1AEUTL",196,0)
 ; get primary stream number using APRIM index
"RTN","A1AEUTL",197,0)
 N PSN S PSN=$O(^A1AE(11007.1,"APRIM",1,"")) ; primary stream #
"RTN","A1AEUTL",198,0)
 ; if not found, site is unconfigured
"RTN","A1AEUTL",199,0)
 I 'PSN S PSN=10**6+1 ; default to 1,000,001
"RTN","A1AEUTL",200,0)
 ;
"RTN","A1AEUTL",201,0)
 QUIT PSN ; return primary stream #; end of $$PRIMSTRM
"RTN","A1AEUTL",202,0)
 ;
"RTN","A1AEUTL",203,0)
 ;
"RTN","A1AEUTL",204,0)
ID11005 ; WRITE Identifier on DHCP Patches file (11005)
"RTN","A1AEUTL",205,0)
 ;;private;procedure;clean;output;SAC-compliant
"RTN","A1AEUTL",206,0)
 ; called by: ^DD(11005,0,"ID","WRITE")
"RTN","A1AEUTL",207,0)
 ; calls: $$STREAM()
"RTN","A1AEUTL",208,0)
 ; input:
"RTN","A1AEUTL",209,0)
 ;   $X
"RTN","A1AEUTL",210,0)
 ;   file DHCP Patches (11005), current record:
"RTN","A1AEUTL",211,0)
 ;     field Patch Stream (.2)
"RTN","A1AEUTL",212,0)
 ;       :file DHCP Patch Stream (11007.1)
"RTN","A1AEUTL",213,0)
 ;       :field Abbreviation (.05)
"RTN","A1AEUTL",214,0)
 ;     field Patch Subject (5)
"RTN","A1AEUTL",215,0)
 ;     field Status of Patch (8)
"RTN","A1AEUTL",216,0)
 ;       :DD definition of set of codes
"RTN","A1AEUTL",217,0)
 ;     field User Entering (9)
"RTN","A1AEUTL",218,0)
 ;       :file New Person (200)
"RTN","A1AEUTL",219,0)
 ;       :field Initial (1)
"RTN","A1AEUTL",220,0)
 ; output to current device (definition):
"RTN","A1AEUTL",221,0)
 ;   IEN  Designation  Stream  Subject  Status  User
"RTN","A1AEUTL",222,0)
 ; output in silent mode:
"RTN","A1AEUTL",223,0)
 ;   [Stream]Subject|Status|User
"RTN","A1AEUTL",224,0)
 ;
"RTN","A1AEUTL",225,0)
 ; Fields IEN (.001) and Patch Designation (.01) are provided by File
"RTN","A1AEUTL",226,0)
 ; Manager and are not part of this identifier. Everything after that
"RTN","A1AEUTL",227,0)
 ; - the spaces, field Abbreviation (.05) of file DHCP Patch Stream
"RTN","A1AEUTL",228,0)
 ; (11007.1) record pointed to by field Patch Stream (.2), truncated
"RTN","A1AEUTL",229,0)
 ; field Patch Subject (5), abbreviated field Status of Patch (8), and
"RTN","A1AEUTL",230,0)
 ; abbreviated field Initial (1) of file New Person (200) record of
"RTN","A1AEUTL",231,0)
 ; field User Entering (9) - are output as part of this write
"RTN","A1AEUTL",232,0)
 ; identifier. If this Patch Module supports only a single patch stream
"RTN","A1AEUTL",233,0)
 ; then field .2 will be empty, so it will be omitted from this ID.
"RTN","A1AEUTL",234,0)
 ;
"RTN","A1AEUTL",235,0)
 ; output to current device (sample):
"RTN","A1AEUTL",236,0)
 ;
"RTN","A1AEUTL",237,0)
 ; Select DHCP PATCHES PATCH DESIGNATION: ??
"RTN","A1AEUTL",238,0)
 ;
"RTN","A1AEUTL",239,0)
 ;   Choose from:
"RTN","A1AEUTL",240,0)
 ;   12           TIU*1*246    [FV]TESTING TESTING               UND TOA
"RTN","A1AEUTL",241,0)
 ;   13           TIU*1*10002  [OV]TEST                          UND TOA
"RTN","A1AEUTL",242,0)
 ;   14           ZZZ*2*10001  [OV]TEST                          VER USP
"RTN","A1AEUTL",243,0)
 ;
"RTN","A1AEUTL",244,0)
 N ID S ID="" ; initialize identifier
"RTN","A1AEUTL",245,0)
 I '$G(DIQUIET),$X<33 W ?32 ; align subject column
"RTN","A1AEUTL",246,0)
 N X S X=$X ; current X position
"RTN","A1AEUTL",247,0)
 N IDLEN S IDLEN=80-X ; maximum room for identifier
"RTN","A1AEUTL",248,0)
 N DELIM S DELIM=" " ; write ID component delimiter, default to space
"RTN","A1AEUTL",249,0)
 I $G(DIQUIET) S DELIM="|" ; | delim in silent mode
"RTN","A1AEUTL",250,0)
 ;
"RTN","A1AEUTL",251,0)
 N PATCH S PATCH=^(0) ; DHCP Patches record's header
"RTN","A1AEUTL",252,0)
 N NODE5 S NODE5=$G(^(5)) ; DHCP Patches record's node 5
"RTN","A1AEUTL",253,0)
 ;
"RTN","A1AEUTL",254,0)
 ; [Stream]Subject
"RTN","A1AEUTL",255,0)
 S ID=$$STRMSUBJ(.IDLEN,PATCH,DELIM)
"RTN","A1AEUTL",256,0)
 ;
"RTN","A1AEUTL",257,0)
 ; padding:
"RTN","A1AEUTL",258,0)
 N PAD S $P(PAD," ",IDLEN-8)="" ; create pad
"RTN","A1AEUTL",259,0)
 I '$G(DIQUIET) S ID=ID_PAD ; add pad to ID
"RTN","A1AEUTL",260,0)
 ;
"RTN","A1AEUTL",261,0)
 ; Status:
"RTN","A1AEUTL",262,0)
 N STATUS S STATUS=$P(PATCH,U,8) ; field Status of Patch (8)
"RTN","A1AEUTL",263,0)
 N DDSTATUS S DDSTATUS=^DD(11005,8,0) ; definition of field 8, header
"RTN","A1AEUTL",264,0)
 N DDSET S DDSET=$P(DDSTATUS,U,3) ; definition of set of codes
"RTN","A1AEUTL",265,0)
 N STATCODE S STATCODE=$P($P(DDSET,STATUS_":",2),";") ; external val
"RTN","A1AEUTL",266,0)
 I $E(STATUS)=2 D  ; special abbreviations for sec statuses
"RTN","A1AEUTL",267,0)
 . I STATUS="i2" S STATCODE="2IR" Q  ; in review
"RTN","A1AEUTL",268,0)
 . I STATUS="d2" S STATCODE="2UN" Q  ; sec development
"RTN","A1AEUTL",269,0)
 . I STATUS="s2" S STATCODE="2CO" Q  ; sec completion
"RTN","A1AEUTL",270,0)
 . I STATUS="r2" S STATCODE="2VE" Q  ; sec release
"RTN","A1AEUTL",271,0)
 . I STATUS="n2" S STATCODE="2NO" Q  ; not for sec release
"RTN","A1AEUTL",272,0)
 S ID=ID_$E(STATCODE,1,3)_DELIM ; add Status to ID
"RTN","A1AEUTL",273,0)
 ;
"RTN","A1AEUTL",274,0)
 ; User:
"RTN","A1AEUTL",275,0)
 N USERENTR S USERENTR=+$P(PATCH,U,9) ; field User Entering (9)
"RTN","A1AEUTL",276,0)
 N USER S USER=$G(^VA(200,USERENTR,0)) ; New Person record's header
"RTN","A1AEUTL",277,0)
 N INITIAL S INITIAL=$P(USER,U,2) ; field Initial (1) of file 200
"RTN","A1AEUTL",278,0)
 I INITIAL="" S INITIAL="unknown" ; if no user or no initials
"RTN","A1AEUTL",279,0)
 S ID=ID_$E(INITIAL,1,3) ; add User to ID
"RTN","A1AEUTL",280,0)
 ;
"RTN","A1AEUTL",281,0)
 ; output write ID:
"RTN","A1AEUTL",282,0)
 N TAB S TAB=$S(X<33:32,1:X-1) ; tab for terminal
"RTN","A1AEUTL",283,0)
 I $G(DIQUIET) S TAB=0 ; don't tab for GUI
"RTN","A1AEUTL",284,0)
 D EN^DDIOL(ID,"","?"_TAB) ; output the write ID
"RTN","A1AEUTL",285,0)
 ;
"RTN","A1AEUTL",286,0)
 N DERIVED S DERIVED=$P(NODE5,U,2) ; field Derived from Patch
"RTN","A1AEUTL",287,0)
 Q:'DERIVED  ; line 2 of identifier is only for derived patches
"RTN","A1AEUTL",288,0)
 N ORIG S ORIG=$G(^A1AE(11005,DERIVED,0)) ; derived patch's header
"RTN","A1AEUTL",289,0)
 Q:ORIG=""  ; if no real patch, then no line 2
"RTN","A1AEUTL",290,0)
 ;
"RTN","A1AEUTL",291,0)
 ; derived from [Stream]Subject
"RTN","A1AEUTL",292,0)
 S IDLEN=45 ; plenty of room
"RTN","A1AEUTL",293,0)
 N IDLINE2 S IDLINE2="derived from "_$$STRMSUBJ(.IDLEN,ORIG,DELIM)
"RTN","A1AEUTL",294,0)
 S IDLINE2=$P(IDLINE2,"]")_"]"_$P(ORIG,U) ; **FIX THIS LATER**
"RTN","A1AEUTL",295,0)
 ;
"RTN","A1AEUTL",296,0)
 ; output write ID:
"RTN","A1AEUTL",297,0)
 S TAB=32 ; tab for terminal
"RTN","A1AEUTL",298,0)
 I $G(DIQUIET) S TAB=0 ; don't tab for GUI
"RTN","A1AEUTL",299,0)
 D EN^DDIOL(IDLINE2,"","!?"_TAB) ; output the write ID
"RTN","A1AEUTL",300,0)
 ;
"RTN","A1AEUTL",301,0)
 QUIT  ; end of ID11005
"RTN","A1AEUTL",302,0)
 ;
"RTN","A1AEUTL",303,0)
 ;
"RTN","A1AEUTL",304,0)
STRMSUBJ(IDLEN,PATCH,DELIM) ; [Stream]Subject
"RTN","A1AEUTL",305,0)
 ;;private;function;clean;silent;SAC-compliant
"RTN","A1AEUTL",306,0)
 ; called by: ID11005
"RTN","A1AEUTL",307,0)
 ; calls: none
"RTN","A1AEUTL",308,0)
 ; throughput:
"RTN","A1AEUTL",309,0)
 ;   IDLEN: length available left for identifier, updated
"RTN","A1AEUTL",310,0)
 ; input:
"RTN","A1AEUTL",311,0)
 ;   PATCH = patch's header node value
"RTN","A1AEUTL",312,0)
 ;   DELIM = ID-field delimiter
"RTN","A1AEUTL",313,0)
 ;   file DHCP Patches (11005), current record:
"RTN","A1AEUTL",314,0)
 ;     field Patch Stream (.2)
"RTN","A1AEUTL",315,0)
 ;       :file DHCP Patch Stream (11007.1)
"RTN","A1AEUTL",316,0)
 ;       :field Abbreviation (.05)
"RTN","A1AEUTL",317,0)
 ;     field Patch Subject (5)
"RTN","A1AEUTL",318,0)
 ;     field Status of Patch (8)
"RTN","A1AEUTL",319,0)
 ;       :DD definition of set of codes
"RTN","A1AEUTL",320,0)
 ; output = [Stream]Subject
"RTN","A1AEUTL",321,0)
 ;
"RTN","A1AEUTL",322,0)
 N ID S ID="" ; return value
"RTN","A1AEUTL",323,0)
 ;
"RTN","A1AEUTL",324,0)
 ; Stream:
"RTN","A1AEUTL",325,0)
 N STREAMDA S STREAMDA=$P(PATCH,U,20) ; field Patch Stream (.2)
"RTN","A1AEUTL",326,0)
 N STREAM S STREAM=$G(^A1AE(11007.1,+STREAMDA,0)) ; record hdr
"RTN","A1AEUTL",327,0)
 S STRABB=$P(STREAM,U,5) ; field Abbreviation (.05)
"RTN","A1AEUTL",328,0)
 I STRABB'="" D  ; skip stream if empty
"RTN","A1AEUTL",329,0)
 . S ID="["_STRABB_"]" ; add Stream to ID
"RTN","A1AEUTL",330,0)
 . S IDLEN=IDLEN-$L(ID) ; decrease room
"RTN","A1AEUTL",331,0)
 ;
"RTN","A1AEUTL",332,0)
 ; Subject:
"RTN","A1AEUTL",333,0)
 N SUBJECT S SUBJECT=$P(PATCH,U,5) ; field Patch Subject (5)
"RTN","A1AEUTL",334,0)
 N SUBJABB S SUBJABB=$E(SUBJECT,1,IDLEN-10) ; make it fit
"RTN","A1AEUTL",335,0)
 S ID=ID_SUBJABB_DELIM ; add Subject to ID
"RTN","A1AEUTL",336,0)
 S IDLEN=IDLEN-$L(SUBJABB) ; decrease room
"RTN","A1AEUTL",337,0)
 ;
"RTN","A1AEUTL",338,0)
 QUIT ID ; return [Stream]Subject ; end of $$STRMSUBJ()
"RTN","A1AEUTL",339,0)
 ;
"RTN","A1AEUTL",340,0)
 ;
"RTN","A1AEUTL",341,0)
 ; VEN/LGC
"RTN","A1AEUTL",342,0)
 ; Called by M cross ASUBCNG on 11007.1.  This code forces
"RTN","A1AEUTL",343,0)
 ;   new entries in the SUBSCRIPTION DATE and RESPONSIBLE OFFICIAL
"RTN","A1AEUTL",344,0)
 ;   fields when a new Patch Stream is toggled as the SUBSCRIPTION
"RTN","A1AEUTL",345,0)
 ;   stream.
"RTN","A1AEUTL",346,0)
 ; We may wish to add code to force an entry into COMMENTS field
"RTN","A1AEUTL",347,0)
 ;   associated with this change to fully document the rational for
"RTN","A1AEUTL",348,0)
 ;   changing a site's SUBSCRIPTION
"RTN","A1AEUTL",349,0)
 ; Enter
"RTN","A1AEUTL",350,0)
 ;   D0  = IEN of the PATCH STREAM entry being edited
"RTN","A1AEUTL",351,0)
 ;   DUZ = User changing the site's SUBSCRIPTION
"RTN","A1AEUTL",352,0)
ASUBCNG(D0) ;
"RTN","A1AEUTL",353,0)
 N DIERR,A1AEFDA,A1AEFDAI
"RTN","A1AEUTL",354,0)
 S A1AEFDA(3,11007.12,"+1,"_D0_",",.01)=$$HTFM^XLFDT($H)
"RTN","A1AEUTL",355,0)
 S A1AEFDA(3,11007.12,"+1,"_D0_",",1)=$G(DUZ)
"RTN","A1AEUTL",356,0)
 D UPDATE^DIE("","A1AEFDA(3)","A1AEFDAI")
"RTN","A1AEUTL",357,0)
 Q
"RTN","A1AEUTL",358,0)
 ;
"RTN","A1AEUTL",359,0)
 ;
"RTN","A1AEUTL",360,0)
EOR ; end of routine A1AEUTL
"RTN","A1AEUTL1")
0^41^B11371584
"RTN","A1AEUTL1",1,0)
A1AEUTL1 ; RMO,MJK/ALBANY ;2014-03-27  1:54 PM
"RTN","A1AEUTL1",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEUTL1",3,0)
 ;
"RTN","A1AEUTL1",4,0)
PCHK ;call if $d(^(d0,"q","b")), return az(), k az,print
"RTN","A1AEUTL1",5,0)
 S AZ=0 F  S AZ=$O(^A1AE(11005,D0,"Q",AZ)) Q:'AZ  I $D(^(AZ,0)) S AZ0=^(0),AZ(+AZ0)=$S($D(^A1AE(11005,+AZ0,0)):"("_$P(^(0),"^",8)_")"_$P(^(0),"^"),1:"patch not available") DO
"RTN","A1AEUTL1",6,0)
 .F  Q:AZ(+AZ0)'["*999*"  DO
"RTN","A1AEUTL1",7,0)
 . .S AZ(+AZ0)=$P(AZ(+AZ0),"*999*",1)_"*DBA*"_$P(AZ(+AZ0),"*999*",2,99) Q
"RTN","A1AEUTL1",8,0)
 .I $P(AZ0,"^",2)="y" S AZ("STOP",+AZ0)=AZ(+AZ0),AZ(+AZ0)=$E(AZ(+AZ0)_"     ",1,15)_"<<= must be installed BEFORE"_$S($D(A1AEPD):" `"_A1AEPD_"'",1:"") Q
"RTN","A1AEUTL1",9,0)
 .E  S AZ(+AZ0)=$E(AZ(+AZ0)_"          ",1,19)_"install with patch"_$S($D(A1AEPD):"       `"_A1AEPD_"'",1:"") Q
"RTN","A1AEUTL1",10,0)
 K AZ0
"RTN","A1AEUTL1",11,0)
 I $D(AZ)=11 S AZ("TX",1)="Associated patches: "
"RTN","A1AEUTL1",12,0)
 I $D(CHECK) DO
"RTN","A1AEUTL1",13,0)
 .S AZ=0 F  S AZ=$O(AZ("STOP",AZ)) Q:'AZ  I $D(^A1AE(11005,AZ,0)),$P(^(0),"^",8)="v" K AZ("STOP",AZ)
"RTN","A1AEUTL1",14,0)
 .K STP Q
"RTN","A1AEUTL1",15,0)
 Q:'$D(PRINT)  Q:'$O(AZ(0))
"RTN","A1AEUTL1",16,0)
 ;
"RTN","A1AEUTL1",17,0)
 W !,AZ("TX",1)
"RTN","A1AEUTL1",18,0)
 S AZ=0 F  S AZ=$O(AZ(AZ)) Q:'AZ  W:$X>25 !?20 I AZ(AZ)'["<<" W AZ(AZ),!?20
"RTN","A1AEUTL1",19,0)
 S AZ=0 F  S AZ=$O(AZ(AZ)) Q:'AZ  W:$X>25 !?20 I AZ(AZ)["<<" W AZ(AZ),!?20
"RTN","A1AEUTL1",20,0)
 Q
"RTN","A1AEUTL1",21,0)
 ;
"RTN","A1AEUTL1",22,0)
Q K IO("Q") R !,"REQUESTED TIME TO RUN JOB: NOW// ",X:DTIME Q:X["^"  S Y=$H I $P("NOW",X,1)]"" S:X'["@" X="T@"_X S %DT(0)=0,%DT="TXE" D ^%DT K %DT G Q:Y<1 S X=+Y D H^%DTC S Y=Y_"000",Y=%H_","_($E(Y,9,10)*60+$E(Y,11,12)*60)
"RTN","A1AEUTL1",23,0)
Q1 ;Entry point for background jobs
"RTN","A1AEUTL1",24,0)
 ;S X=Y L ^%ZTSK S (^%ZTSK(0),ZTSK)=^%ZTSK(0)+1 L  X ^%ZOSF("UCI")
"RTN","A1AEUTL1",25,0)
 S X=Y X ^%ZOSF("UCI") S ZTUCI=Y
"RTN","A1AEUTL1",26,0)
 ;S ^%ZTSK(ZTSK,0)="DQ^A1AEUTL1^"_$S($D(DUZ)#2:DUZ,1:"")_"^"_Y_"^"_$H,^("ZTSK")=ZTSK,^("VAR")=VAR,^("VAL")=VAL,^("PGM")=PGM S:$D(DIS(0)) ^("DIS(0)")=DIS(0)
"RTN","A1AEUTL1",27,0)
 F J="VAR","VAL","PGM","DIS(0)" S:$D(@J) ZTSAVE(J)=""
"RTN","A1AEUTL1",28,0)
 S ZTRTN="DQ^A1AEUTL1",ZTIO=ION,ZTDTH=X,ZTDESC="Patch Module Task"
"RTN","A1AEUTL1",29,0)
 ;S ^%ZTSCH(X,ZTSK)=ION_$S(ION]"":";"_IOST_";"_IOSL,1:"") K PGM,VAR,VAL,ZTSK W:ION]"" !,"REQUEST QUEUED!",! Q
"RTN","A1AEUTL1",30,0)
 D ^%ZTLOAD W:ION]"" !,"Request queued!",! K PGM,VAR,VAL,ZTSK Q
"RTN","A1AEUTL1",31,0)
 Q
"RTN","A1AEUTL1",32,0)
DQ ;S PGM=^%ZTSK(ZTSK,"PGM"),VAR=^("VAR"),VAL=^("VAL") S:$D(^("DIS(0)")) DIS(0)=^("DIS(0)") S IOP=IO D:IO]"" ^%ZIS K ^%ZTSK(ZTSK)
"RTN","A1AEUTL1",33,0)
 F A1AEI=1:1 Q:$P(VAR,"^",A1AEI)']""  S @($P(VAR,"^",A1AEI))=$P(VAL,"^",A1AEI)
"RTN","A1AEUTL1",34,0)
 S X="T",%DT="" D ^%DT S DT=Y G @PGM
"RTN","A1AEUTL1",35,0)
 ;
"RTN","A1AEUTL1",36,0)
ZIS S %ZIS="QFM" D ^%ZIS K %ZIS K:POP IO("Q") Q:POP  I $D(IO("Q")) X "S VAL="""" F A1AEI=1:1 Q:$P(VAR,""^"",A1AEI)']""""  S VAL=VAL_@($P(VAR,""^"",A1AEI))_""^""" D Q S POP=1 Q
"RTN","A1AEUTL1",37,0)
 ;I $D(IO("C")) W !!,"EXIT",! C IO(0) Q
"RTN","A1AEUTL1",38,0)
 Q
"RTN","A1AEUTL1",39,0)
 ;
"RTN","A1AEUTL1",40,0)
CLOSE ;G H^XUS:$D(IO("C"))
"RTN","A1AEUTL1",41,0)
 D ^%ZISC U IO(0) S IOP="HOME" D ^%ZIS K IOP Q
"RTN","A1AEUTL1",42,0)
 ;
"RTN","A1AEUTL1",43,0)
 ;S PGM="MDQ^A1AEUTL1",VAR="A1AEPKIF^XMB^DUZ" F I=1:1 Q:'$D(XMB(I))  S VAR=VAR_"^XMB("_I_")",ION=""
"RTN","A1AEUTL1",44,0)
 ;X "S VAL="""" F A1AEI=1:1 Q:$P(VAR,""^"",A1AEI)']""""  S VAL=VAL_@($P(VAR,""^"",A1AEI))_""^"""
"RTN","A1AEUTL1",45,0)
 ;S X="NOW",%DT(0)=0,%DT="TXE" D ^%DT K %DT G Q:Y<1 S X=+Y D H^%DTC S Y=Y_"000",Y=%H_","_($E(Y,9,10)*60+$E(Y,11,12)*60) D Q1 K A1AEI Q
"RTN","A1AEUTL1",46,0)
 ;
"RTN","A1AEUTL1",47,0)
M ;Send Bulletins to appropriate users stored in XMY
"RTN","A1AEUTL1",48,0)
 K:$P(^A1AE(11007,A1AEPKIF,0),"^",2)'="Y"&($P(^(0),"^",4)'="y") ^TMP("XMY",$J),XMY
"RTN","A1AEUTL1",49,0)
 Q:'$D(^TMP("XMY",$J))&('$D(XMY))!('$D(DUZ))
"RTN","A1AEUTL1",50,0)
 S XMDUZ=DUZ D EN^XMB K ^TMP("XMY",$J),XMY
"RTN","A1AEUTL1",51,0)
 Q
"RTN","A1AEUTL1",52,0)
 ;
"RTN","A1AEUTL1",53,0)
DATE ;Ask Date Range of Verified patches
"RTN","A1AEUTL1",54,0)
 S POP=0 K BEGDATE,ENDDATE W !!,"**** Date Range of Released Patches ****"
"RTN","A1AEUTL1",55,0)
 W ! S %DT="APEX",%DT("A")="   Beginning DATE : " D ^%DT S:Y<0 POP=1 Q:Y<0  S (%DT(0),BEGDATE)=Y
"RTN","A1AEUTL1",56,0)
 W ! S %DT="APEX",%DT("A")="   Ending    DATE : " D ^%DT K %DT S:Y<0 POP=1 Q:Y<0  W ! S ENDDATE=Y
"RTN","A1AEUTL1",57,0)
 Q
"RTN","A1AEUTL1",58,0)
XTM S Y=$E(Y,4,5)_"/"_$E(Y,6,7)_"/"_$E(Y,2,3)_$P("@"_$E(Y_0,9,10)_":"_$E(Y_"000",11,12),"^",Y[".") S:Y="//" Y="" Q
"RTN","A1AEUTL1",59,0)
TM X ^DD("DD") Q  ; Expect Y and output Y.
"RTN","A1AEUTL1",60,0)
 Q
"RTN","A1AEUTL2")
0^42^B14417128
"RTN","A1AEUTL2",1,0)
A1AEUTL2 ;ISF/RWF - Utility: Routine Info ;2014-03-07  7:51 PM
"RTN","A1AEUTL2",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEUTL2",3,0)
 Q
"RTN","A1AEUTL2",4,0)
 ;Called from the FM Print template [A1AE STANDARD PRINT]
"RTN","A1AEUTL2",5,0)
 ; and A1AEMAL to show the routine info
"RTN","A1AEUTL2",6,0)
RTNINFO(MAL) ;
"RTN","A1AEUTL2",7,0)
 N A1,A2,A3,AX,OLD,NEW,RN,PL,X,AEQ,DIR,DIRUT,DUOUT,PATCH,NC,L2
"RTN","A1AEUTL2",8,0)
 S MAL=$G(MAL)
"RTN","A1AEUTL2",9,0)
 I '$O(^A1AE(11005,D0,"P",0)) D OUT("No routines included.") Q
"RTN","A1AEUTL2",10,0)
 ;See if New Checksums
"RTN","A1AEUTL2",11,0)
 S D1=0,NC=0
"RTN","A1AEUTL2",12,0)
 F  S D1=$O(^A1AE(11005,D0,"P",D1)) Q:'D1  S AX=^(D1,0) I $L($P(AX,U,2)) S NC=1 Q
"RTN","A1AEUTL2",13,0)
 ;
"RTN","A1AEUTL2",14,0)
 S L2=$G(^A1AE(11005,D0,"P2"))
"RTN","A1AEUTL2",15,0)
 I $L(L2) D OUT("The second line of each of these routines now looks like:"),OUT(L2),OUT("")
"RTN","A1AEUTL2",16,0)
 I NC D OUT("The checksums below are new checksums, and"),OUT(" can be checked with CHECK1^XTSUMBLD."),OUT("")
"RTN","A1AEUTL2",17,0)
 K ^TMP("A1AEPL",$J)
"RTN","A1AEUTL2",18,0)
 S D1=0,$P(AEQ,"=",78)="",PATCH=+$P(^A1AE(11005,D0,0),U,4),RN=""
"RTN","A1AEUTL2",19,0)
 F  S RN=$O(^A1AE(11005,D0,"P","B",RN)) Q:RN=""  D
"RTN","A1AEUTL2",20,0)
 . S D1=$O(^A1AE(11005,D0,"P","B",RN,0)) Q:'D1  S AX=^A1AE(11005,D0,"P",D1,0) D
"RTN","A1AEUTL2",21,0)
 . I 'MAL,$E(IOST,1,2)="C-",$Y+3>IOSL S DIR(0)="E" D ^DIR W:Y @IOF I 'Y S RN="{"  Q
"RTN","A1AEUTL2",22,0)
 . ;See if we have a KIDS checksum
"RTN","A1AEUTL2",23,0)
 . S NEW="",NEW=$P(AX,U,2),PL=$P(AX,U,3),OLD=$P(AX,U,4)
"RTN","A1AEUTL2",24,0)
 . I PATCH D PTLBLD(PL,PATCH)
"RTN","A1AEUTL2",25,0)
 . I '$L(OLD) S OLD=$$BCS(D0,RN) I $G(A1AENEW)="v" S $P(^A1AE(11005,D0,"P",D1,0),U,4)=OLD ;Save the old at the time of release
"RTN","A1AEUTL2",26,0)
 . D OUT("Routine Name: "_RN)
"RTN","A1AEUTL2",27,0)
 . ;S:OLD=""!(OLD=NEW) OLD="n/a"
"RTN","A1AEUTL2",28,0)
 . S:OLD="" OLD="n/a"
"RTN","A1AEUTL2",29,0)
 . I $L(NEW) D
"RTN","A1AEUTL2",30,0)
 . . D WRAP("    Before:"_$J(OLD,10)_"   After:"_$J(NEW,10)_"  ",PL)
"RTN","A1AEUTL2",31,0)
 . S D2=0
"RTN","A1AEUTL2",32,0)
 . ;Display entered checksums if can't find KIDS checksum.
"RTN","A1AEUTL2",33,0)
 . I '$L(NEW),$O(^A1AE(11005,D0,"P",D1,"X",0))>0 D
"RTN","A1AEUTL2",34,0)
 . . D OUT("    Checksum:")
"RTN","A1AEUTL2",35,0)
 . . F  S D2=$O(^A1AE(11005,D0,"P",D1,"X",D2)) Q:'D2  S X=$G(^(D2,0)) D OUT("  "_X)
"RTN","A1AEUTL2",36,0)
 . . Q
"RTN","A1AEUTL2",37,0)
 . ;Show Description if entered.
"RTN","A1AEUTL2",38,0)
 . I $O(^A1AE(11005,D0,"P",D1,"D",0))>0 D
"RTN","A1AEUTL2",39,0)
 . . D OUT(" Description of Changes:")
"RTN","A1AEUTL2",40,0)
 . . S D2=0
"RTN","A1AEUTL2",41,0)
 . . F  S D2=$O(^A1AE(11005,D0,"P",D1,"D",D2)) Q:'D2  S X=$G(^(D2,0)) D OUT("  "_X)
"RTN","A1AEUTL2",42,0)
 . . D OUT("")
"RTN","A1AEUTL2",43,0)
 . Q
"RTN","A1AEUTL2",44,0)
 D DSP(PATCH)
"RTN","A1AEUTL2",45,0)
 K TMP("A1AEPL",$J)
"RTN","A1AEUTL2",46,0)
 Q
"RTN","A1AEUTL2",47,0)
 ;
"RTN","A1AEUTL2",48,0)
BCS(DA,RN) ;Get the Before CheckSum
"RTN","A1AEUTL2",49,0)
 N C,X
"RTN","A1AEUTL2",50,0)
 S C="",RN=$TR(RN,$C(34)) ;Remove any Quotes
"RTN","A1AEUTL2",51,0)
        N PD S PD=$$GET1^DIQ(11005,DA,.01)
"RTN","A1AEUTL2",52,0)
        N STREAM S STREAM=$$GETSTRM^A1AEK2M0(PD)
"RTN","A1AEUTL2",53,0)
        S X=$O(^A1AE(11007.1,STREAM,"RTN","B",RN,0))
"RTN","A1AEUTL2",54,0)
        I X>0 S C=$P(^A1AE(11007.1,10001,"RTN",X,0),U,2) QUIT C
"RTN","A1AEUTL2",55,0)
        ; Otherwise, try the routine file.
"RTN","A1AEUTL2",56,0)
 S X=$O(^DIC(9.8,"B",RN,0)) I X>0 S C=$P($G(^DIC(9.8,X,4)),U,2)
"RTN","A1AEUTL2",57,0)
 S:'$L(C) C="n/a"
"RTN","A1AEUTL2",58,0)
 Q C
"RTN","A1AEUTL2",59,0)
 ;
"RTN","A1AEUTL2",60,0)
OUT(S) ;Write or put in MSG
"RTN","A1AEUTL2",61,0)
 I MAL D ADD^A1AEMAL(S) Q
"RTN","A1AEUTL2",62,0)
 D N^DIO2 W S
"RTN","A1AEUTL2",63,0)
 Q
"RTN","A1AEUTL2",64,0)
 ;
"RTN","A1AEUTL2",65,0)
WRAP(P,S) ;Wrap S starting at length of P.
"RTN","A1AEUTL2",66,0)
 I $L(S)+$L(P)<80 D OUT(P_S) Q
"RTN","A1AEUTL2",67,0)
 N I,T,C,L S C=$L(P),$P(L," ",C+2)=""
"RTN","A1AEUTL2",68,0)
 S I=$F(S,",",70-C) D OUT(P_$E(S,1,I-1)) S S=$E(S,I,999)
"RTN","A1AEUTL2",69,0)
 F  S I=$F(S,",",70-C),I=$S(I>0:I,1:$L(S)+2) D OUT(L_$E(S,1,I-1)) S S=$E(S,I,999) Q:'$L(S)
"RTN","A1AEUTL2",70,0)
 Q
"RTN","A1AEUTL2",71,0)
 ;
"RTN","A1AEUTL2",72,0)
 ;
"RTN","A1AEUTL2",73,0)
DSP(PATCH) ;Display Patch List
"RTN","A1AEUTL2",74,0)
 N PL,I
"RTN","A1AEUTL2",75,0)
 D PTLDSP(.PL,PATCH)
"RTN","A1AEUTL2",76,0)
 F I=1:1 Q:'$D(PL(I))  D OUT(PL(I))
"RTN","A1AEUTL2",77,0)
 Q
"RTN","A1AEUTL2",78,0)
 ;
"RTN","A1AEUTL2",79,0)
 ;Build patch list
"RTN","A1AEUTL2",80,0)
PTLBLD(Z,PATCH) ;Build in ^TMP the patches used
"RTN","A1AEUTL2",81,0)
 ;Z is routine second line, PATCH is patch number
"RTN","A1AEUTL2",82,0)
 N I,J,K,P S Z=$P(Z,"**",2),K=""
"RTN","A1AEUTL2",83,0)
 F I=1:1 S J=+$P(Z,",",I) Q:(J=0)  I (J'=PATCH) S P=$G(^TMP("A1AEPL",$J,J)),^TMP("A1AEPL",$J,J)=P_K S K=K_J_","
"RTN","A1AEUTL2",84,0)
 Q
"RTN","A1AEUTL2",85,0)
PTLSRT ;Sort the list
"RTN","A1AEUTL2",86,0)
 N I,J,K,L S I=0
"RTN","A1AEUTL2",87,0)
 M PTL=^TMP("A1AEPL",$J)
"RTN","A1AEUTL2",88,0)
 F I=0:0 S I=$O(^TMP("A1AEPL",$J,I)) Q:I'>0  S K=^(I) D
"RTN","A1AEUTL2",89,0)
 . F J=1:1 S L=$P(K,",",J) Q:L=""  K PTL(L)
"RTN","A1AEUTL2",90,0)
 . Q
"RTN","A1AEUTL2",91,0)
 Q
"RTN","A1AEUTL2",92,0)
 ;
"RTN","A1AEUTL2",93,0)
PTLDSP(RET,PATCH) ;Display list of patches.
"RTN","A1AEUTL2",94,0)
 ;RET passed by Reference, PATCH is patch number.
"RTN","A1AEUTL2",95,0)
 I '$G(^A1AE(11005,D0,5)) Q  ;See if want to show list.
"RTN","A1AEUTL2",96,0)
 N PTL
"RTN","A1AEUTL2",97,0)
 D PTLSRT
"RTN","A1AEUTL2",98,0)
 N I,J,IX K PTL(PATCH)
"RTN","A1AEUTL2",99,0)
 Q:$O(PTL(0))=""
"RTN","A1AEUTL2",100,0)
 S RET(1)=" ",RET(2)="Routine list of preceding patches: "
"RTN","A1AEUTL2",101,0)
 S (I,J)="",IX=2
"RTN","A1AEUTL2",102,0)
 F  S I=$O(PTL(I)) Q:I=""  D
"RTN","A1AEUTL2",103,0)
 . I $L(RET(IX))>70 S IX=IX+1,J="",RET(IX)="                           "
"RTN","A1AEUTL2",104,0)
 . S RET(IX)=RET(IX)_J_I,J=", "
"RTN","A1AEUTL2",105,0)
 Q
"RTN","A1AEVP")
0^44^B30091569
"RTN","A1AEVP",1,0)
A1AEVP ; RMO,MJK/ALBANY ; Screen Display and Print of New Verified Patches ;24 NOV 87 11:00 am
"RTN","A1AEVP",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEVP",3,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;12/02/92
"RTN","A1AEVP",4,0)
DSPNEW D CHKNEW G Q:'Y
"RTN","A1AEVP",5,0)
 W !!,"..please wait checking number of new patches for your selected package(s).." S IOP="HOME" D ^%ZIS K IOP,^TMP("A1AE",$J,"SCN"),A1AEPKIF D GETPKG G Q:'$D(^TMP("A1AE",$J,"SCN")) S A1AEHD="Number of New DHCP Patches" D HD S A1AEPKNM=""
"RTN","A1AEVP",6,0)
 F A1AEI1=0:0 S A1AEPKNM=$O(^TMP("A1AE",$J,"SCN",A1AEPKNM)) Q:A1AEPKNM=""  I $P(^TMP("A1AE",$J,"SCN",A1AEPKNM),"^",1) S A1AENEW="" D SCNPRT
"RTN","A1AEVP",7,0)
 W:'$D(A1AENEW) !!?3,"...no new patches for your selected package(s)..." D CRCHK:($Y+8)>IOSL G Q
"RTN","A1AEVP",8,0)
 ;
"RTN","A1AEVP",9,0)
SCNPRT D HD:($Y+4)>IOSL W !,$P(A1AEPKNM,"-",1),?$X+(4-$L($P(A1AEPKNM,"-",1))),"-",$E($P(A1AEPKNM,"-",2),1,14),?25,$P(^TMP("A1AE",$J,"SCN",A1AEPKNM),"^",1) S Y=$P(^TMP("A1AE",$J,"SCN",A1AEPKNM),"^",2) W ?35 D DT^DIQ
"RTN","A1AEVP",10,0)
 Q
"RTN","A1AEVP",11,0)
 ;
"RTN","A1AEVP",12,0)
PRTNEW D CHKNEW
"RTN","A1AEVP",13,0)
 S A1AEVPR="" K ^TMP("A1AE",$J,"SCN"),A1AEPKIF D @($S($D(^A1AE(11007,"AU",DUZ)):"PKGPMT",1:"PKGSEL")) G Q:X="^"!($D(A1AENOSL)) S PGM="START^A1AEVP",VAR=$S($D(A1AEPKIF):"A1AEPKIF^DUZ^A1AEVPR",1:"DUZ^A1AEVPR") W ! D ZIS^A1AEUTL1 G Q:POP
"RTN","A1AEVP",14,0)
 ;
"RTN","A1AEVP",15,0)
START U IO D GETPKG G ENDPRT:'$D(^TMP("A1AE",$J,"SCN")) S A1AEHD="New DHCP Patches",(A1AEPKNM,A1AEOUT)="",^UTILITY($J,1)="D HD^A1AEPH2" F A1AEI=0:0 S A1AEPKNM=$O(^TMP("A1AE",$J,"SCN",A1AEPKNM)) Q:A1AEPKNM=""!(A1AEOUT["^")  D PRT
"RTN","A1AEVP",16,0)
ENDPRT W:'$D(^TMP("A1AE",$J,"SCN")) !?3,"...no new patches for your selected package(s)" G Q
"RTN","A1AEVP",17,0)
 ;
"RTN","A1AEVP",18,0)
PKGPMT R !!,"Do you want to Print Patches for a Specific Package? No// ",X:DTIME G Q:'$T!(X="^") S:X="" X="N" G PKGSEL:"Yy"[$E(X,1) Q:"Nn"[$E(X,1)  W:X'["?" *7 D PKGHLP G PKGPMT
"RTN","A1AEVP",19,0)
 ;
"RTN","A1AEVP",20,0)
PKGHLP W !!,"Enter Yes to print patches for any package in the Patch File.",!,"Enter No to print patches for all your selected packages."
"RTN","A1AEVP",21,0)
 Q
"RTN","A1AEVP",22,0)
 ;
"RTN","A1AEVP",23,0)
PKGSEL S DIC("S")="I $P(^(0),U,2)=""Y""!($P(^(0),U,4)=""y""&($D(^A1AE(11007,""AU"",DUZ,+Y))))" D PKG^A1AEUTL S:'$D(A1AEPK) A1AENOSL="" Q:$D(A1AENOSL)  D PKGADD:'$D(^A1AE(11007,"AU",DUZ,A1AEPKIF))
"RTN","A1AEVP",24,0)
 Q
"RTN","A1AEVP",25,0)
 ;
"RTN","A1AEVP",26,0)
PKGADD W !!,"Do you want to receive automatic notification and printing",!,"of ",A1AEPKNM,"? No// " R X:DTIME Q:'$T!(X="^")  S:X="" X="N" I "NYny"'[$E(X,1) W:X'["?" *7 W !!,"Enter Y to Add ",A1AEPKNM,", or N continue." G PKGADD
"RTN","A1AEVP",27,0)
 I "Yy"[$E(X,1) D SETNOD^A1AEAU
"RTN","A1AEVP",28,0)
 Q
"RTN","A1AEVP",29,0)
 ;
"RTN","A1AEVP",30,0)
PRT S A1AEPD="" F A1AEI1=0:0 S A1AEPD=$O(^TMP("A1AE",$J,"SCN",A1AEPKNM,A1AEPD)) Q:A1AEPD=""!(A1AEOUT["^")  D PRT1
"RTN","A1AEVP",31,0)
 Q
"RTN","A1AEVP",32,0)
 ;
"RTN","A1AEVP",33,0)
PRT1 F A1AEIFN=0:0 S A1AEIFN=+$O(^TMP("A1AE",$J,"SCN",A1AEPKNM,A1AEPD,A1AEIFN)) Q:'A1AEIFN!(A1AEOUT["^")  S DIWF="B4|",D0=A1AEIFN K ^UTILITY($J,"W"),DXS D HD^A1AEPH2,^A1AEP K DN,DXS,^UTILITY($J,"W")
"RTN","A1AEVP",34,0)
 Q
"RTN","A1AEVP",35,0)
 ;
"RTN","A1AEVP",36,0)
Q W ! K ^UTILITY($J),DN,DXS,A1AEPD,A1AEPK,A1AEOUT,A1AEIFN,^TMP("A1AE",$J,"SCN"),A1AELTP,A1AEDTV,A1AEPKIF,A1AEPKNM,A1AEPGE,A1AEVPR,A1AEHD,A1AEI,A1AEI1,A1AETOT,A1AENOSL,A1AENEW,A1AEPGE,POP,PGM,VAR D CLOSE^A1AEUTL1
"RTN","A1AEVP",37,0)
 Q
"RTN","A1AEVP",38,0)
 ;
"RTN","A1AEVP",39,0)
GETPKG I $D(A1AEPKIF) D GETDTV Q
"RTN","A1AEVP",40,0)
 F A1AEPKIF=0:0 S A1AEPKIF=+$O(^A1AE(11007,"AU",DUZ,A1AEPKIF)) Q:'A1AEPKIF  I $P(^A1AE(11007,A1AEPKIF,0),"^",2)="Y"!($P(^(0),"^",4)="y") W "." D GETDTV
"RTN","A1AEVP",41,0)
 Q
"RTN","A1AEVP",42,0)
 ;
"RTN","A1AEVP",43,0)
GETDTV Q:'$D(^DIC(9.4,A1AEPKIF,0))  S A1AELTP=+$O(^A1AE(11005,"AU",DUZ,A1AEPKIF,0)) S:'A1AELTP A1AELTP=9999999 S A1AEPKNM=$P(^DIC(9.4,A1AEPKIF,0),"^",2)_"-"_$P(^DIC(9.4,A1AEPKIF,0),"^",1) I '$D(A1AEVPR) S A1AETOT=0
"RTN","A1AEVP",44,0)
 F A1AEDTV=0:0 S A1AEDTV=+$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV)) Q:'A1AEDTV  D GETIFN
"RTN","A1AEVP",45,0)
 I '$D(A1AEVPR) S $P(^TMP("A1AE",$J,"SCN",A1AEPKNM),"^",1)=A1AETOT,$P(^TMP("A1AE",$J,"SCN",A1AEPKNM),"^",2)=$S(A1AELTP=9999999:"Never Printed",1:9999999-A1AELTP)
"RTN","A1AEVP",46,0)
 Q
"RTN","A1AEVP",47,0)
 ;
"RTN","A1AEVP",48,0)
GETIFN F A1AEIFN=0:0 S A1AEIFN=+$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV,A1AEIFN)) Q:'A1AEIFN  I '$D(^A1AE(11005,A1AEIFN,2,DUZ)) S:'$D(A1AEVPR) A1AETOT=A1AETOT+1 D SETLOC:$D(A1AEVPR)
"RTN","A1AEVP",49,0)
 Q
"RTN","A1AEVP",50,0)
 ;
"RTN","A1AEVP",51,0)
SETLOC S ^TMP("A1AE",$J,"SCN",A1AEPKNM,$S($D(^A1AE(11005,A1AEIFN,0)):$P(^(0),"^",1),1:"UNKNOWN"),A1AEIFN)=""
"RTN","A1AEVP",52,0)
 Q
"RTN","A1AEVP",53,0)
 ;
"RTN","A1AEVP",54,0)
HD S:'$D(A1AEPGE) A1AEPGE=0 D CRCHK W @IOF,!,A1AEHD S A1AEPGE=A1AEPGE+1,Y=DT W ?55 D DT^DIQ W ?70,"Page: ",A1AEPGE W ! F I=1:1:78 W "="
"RTN","A1AEVP",55,0)
 W !!,"Package",?25,"Number",?35,"Date Last Printed",!,"-------------------",?25,"------",?35,"-----------------"
"RTN","A1AEVP",56,0)
 Q
"RTN","A1AEVP",57,0)
 ;
"RTN","A1AEVP",58,0)
CRCHK I A1AEPGE,$E(IOST,1)="C" W !!,"Press RETURN to continue " R X:DTIME
"RTN","A1AEVP",59,0)
 Q
"RTN","A1AEVP",60,0)
 ;
"RTN","A1AEVP",61,0)
CHKNEW S %DT="",X="T" D ^%DT S DT=Y,Y=1 I '$D(^A1AE(11007,"AU",DUZ)) W !!?3,*7,"You have not selected any packages for automatic notification and",!?3,"printing of patches." S Y=0
"RTN","A1AEVP",62,0)
 Q
"RTN","A1AEVP1")
0^45^B7355089
"RTN","A1AEVP1",1,0)
A1AEVP1 ; RMO,pke/ALBANY-Update as printed ;2014-03-28  5:39 PM
"RTN","A1AEVP1",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEVP1",3,0)
 ;;Version 2.2;PROBLEM/PATCH REPORTING;;12/02/92
"RTN","A1AEVP1",4,0)
 ;
"RTN","A1AEVP1",5,0)
 S A1AEUSR=DUZ,A1AEUSNM=$P(^VA(200,DUZ,0),U)
"RTN","A1AEVP1",6,0)
 W !?2,"Are you sure you want to update the print status"
"RTN","A1AEVP1",7,0)
 S A1AERD("A")="     for ALL your selected packages ? "
"RTN","A1AEVP1",8,0)
 ;S A1AERD("A")="Are you sure you want to update the print status for ALL your selected packages ? "
"RTN","A1AEVP1",9,0)
 S A1AERD(1)="Yes^update your print status of released patches"
"RTN","A1AEVP1",10,0)
 S A1AERD(2)="No^do not update your print status"
"RTN","A1AEVP1",11,0)
 S A1AERD(0)="S",A1AERD("B")=2 D SET^A1AERD K A1AERD D UPDATE:"Y"[$E(X,1)
"RTN","A1AEVP1",12,0)
 ;
"RTN","A1AEVP1",13,0)
Q K A1AEUSNM,A1AEDTV,A1AEIFN,A1AEPKIF,A1AEUSR
"RTN","A1AEVP1",14,0)
 Q
"RTN","A1AEVP1",15,0)
 ;
"RTN","A1AEVP1",16,0)
UPDATE W !!,"Overriding patch print status for ",A1AEUSNM,"'s selected packages.",! S %DT="",X="T" D ^%DT S DT=Y
"RTN","A1AEVP1",17,0)
 F A1AEPKIF=0:0 S A1AEPKIF=$O(^A1AE(11007,"AU",A1AEUSR,A1AEPKIF)) Q:'A1AEPKIF  I $D(^A1AE(11007,A1AEPKIF,0)),$P(^(0),"^",2)="Y",$D(^DIC(9.4,A1AEPKIF,0)) W !?3,"Updating print status for ",$P(^(0),"^",2)," patches..." D CHKDTV
"RTN","A1AEVP1",18,0)
 Q
"RTN","A1AEVP1",19,0)
 ;
"RTN","A1AEVP1",20,0)
CHKDTV F A1AEDTV=0:0 S A1AEDTV=+$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV)) Q:'A1AEDTV  F A1AEIFN=0:0 S A1AEIFN=+$O(^A1AE(11005,"AV",A1AEPKIF,A1AEDTV,A1AEIFN)) Q:'A1AEIFN  I '$D(^A1AE(11005,A1AEIFN,2,A1AEUSR)) D SETPRT
"RTN","A1AEVP1",21,0)
 Q
"RTN","A1AEVP1",22,0)
 ;
"RTN","A1AEVP1",23,0)
SETPRT W !?6,$P(^A1AE(11005,A1AEIFN,0),"^")
"RTN","A1AEVP1",24,0)
 L +^A1AE(11005,A1AEIFN,2):0 E  W $C(7),"Couldn't obtain lock at SETPRT. Try again later." QUIT
"RTN","A1AEVP1",25,0)
 S:'$D(^A1AE(11005,A1AEIFN,2,0)) ^(0)="^11005.02P^^"
"RTN","A1AEVP1",26,0)
 S:'$D(^A1AE(11005,A1AEIFN,2,A1AEUSR,0)) $P(^(0),"^",1,2)=A1AEUSR_"^"_DT,$P(^(0),"^",4)=$P(^A1AE(11005,A1AEIFN,2,0),"^",4)+1
"RTN","A1AEVP1",27,0)
 S $P(^A1AE(11005,A1AEIFN,2,A1AEUSR,0),"^",3)=DT
"RTN","A1AEVP1",28,0)
 S $P(^A1AE(11005,A1AEIFN,2,0),"^",3)=A1AEUSR
"RTN","A1AEVP1",29,0)
 S ^A1AE(11005,"AU",A1AEUSR,+$P(^A1AE(11005,A1AEIFN,0),"^",2),(9999999-DT))=""
"RTN","A1AEVP1",30,0)
 L -^A1AE(11005,A1AEIFN,2)
"RTN","A1AEVP1",31,0)
 Q
"RTN","A1AEZCON")
0^46^B10420189
"RTN","A1AEZCON",1,0)
A1AEZCON ;RMO/ALBANY ;2014-03-28  5:00 PM;21 JAN 88 10:00 am
"RTN","A1AEZCON",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEZCON",3,0)
 ;Version 2.0 ; *** NOT FOR GENERAL DISTRIBUTION ***
"RTN","A1AEZCON",4,0)
CONPAT ;Package prefix conversion entry point.
"RTN","A1AEZCON",5,0)
 I '$D(^XUSEC("A1AE MGR",DUZ)) W !,*7,"You must hold the 'A1AE MGR' key to proceed with this option." G Q
"RTN","A1AEZCON",6,0)
 W !!,*7,"WARNING: This routine ASSUMES you are dealing with a prefix change within",!?9,"the same package in the patch module."
"RTN","A1AEZCON",7,0)
 W !!?9,"The routine also ASSUMES you have updated the prefix in the",!?9,"package file to the 'NEW' one for future patches."
"RTN","A1AEZCON",8,0)
 W !!?9,"Do NOT use this routine to transfer patches from one package",!?9,"name to another."
"RTN","A1AEZCON",9,0)
 S DIC("A")="Select PACKAGE: ",DIC="^A1AE(11007,",DIC(0)="AEMQ" W ! D ^DIC K DIC G Q:Y<0 S A1AEPKIF=+Y
"RTN","A1AEZCON",10,0)
 R !!,"'CURRENT' PACKAGE PREFIX IN PATCH FILE: ",X:DTIME G Q:'$T!(X="")!(X["^") S A1AECPRE=X,A1AEIFN=$O(^A1AE(11005,"D",A1AEPKIF,0))
"RTN","A1AEZCON",11,0)
 G Q:'$D(^A1AE(11005,+A1AEIFN,0)) I $P($P(^(0),"^"),"*",1)'=A1AECPRE W !?3,*7,"Invalid Namespace for selected package!" G Q
"RTN","A1AEZCON",12,0)
 R !,"'NEW'     PACKAGE PREFIX IN PACKAGE FILE: ",X:DTIME G Q:'$T!(X="")!(X["^") S A1AENPRE=X I '$D(^DIC(9.4,"C",X,A1AEPKIF)) W !?3,*7,"The 'NEW' prefix must be in the package file to continue!" G Q
"RTN","A1AEZCON",13,0)
 S A1AERD("A")="Are you sure you want to convert all '"_A1AECPRE_"' patches to '"_A1AENPRE_"'? ",A1AERD(0)="S",A1AERD(1)="Yes^convert.",A1AERD(2)="No^not convert.",A1AERD("B")=2 D SET^A1AERD K A1AERD G Q:X'["Yes"
"RTN","A1AEZCON",14,0)
 W !!,"...searching for patches prefixed by ",A1AECPRE,!
"RTN","A1AEZCON",15,0)
 S A1AEPD="" F A1AELP=0:0 S A1AEPD=$O(^A1AE(11005,"B",A1AEPD)) Q:A1AEPD=""  I $P(A1AEPD,"*")=A1AECPRE S A1AEIFN=$O(^(A1AEPD,0)) I A1AEIFN,$D(^A1AE(11005,A1AEIFN,0)) D CHGPAT
"RTN","A1AEZCON",16,0)
Q K A1AEIFN,A1AELP,A1AEPD,A1AEPKIF,A1AECPRE,A1AENPRE,A1AEPAT,X,Y
"RTN","A1AEZCON",17,0)
 Q
"RTN","A1AEZCON",18,0)
 ;
"RTN","A1AEZCON",19,0)
CHGPAT S A1AEPAT=A1AENPRE_"*"_$P(A1AEPD,"*",2)_"*"_$P(A1AEPD,"*",3) I $D(^A1AE(11005,"B",A1AEPAT)) W !,"...",A1AEPD," not changed ",A1AEPAT," already exists" Q
"RTN","A1AEZCON",20,0)
 S DA=A1AEIFN,DIE="^A1AE(11005,",DR=".01////"_A1AEPAT D ^DIE K DA,DE,DQ,DIE W !,"...",A1AEPD," changed to ",A1AEPAT
"RTN","A1AEZCON",21,0)
 Q
"RTN","A1AEZTST")
0^47^B2013390
"RTN","A1AEZTST",1,0)
A1AEZTST ; A1AE/PKE - check messages;2014-04-16  7:54 PM
"RTN","A1AEZTST",2,0)
 ;;2.4;PATCH MODULE;;Mar 28, 2014;Build 14
"RTN","A1AEZTST",3,0)
 ;pke
"RTN","A1AEZTST",4,0)
ENC S (Z,Z1)="Completed/Unverified",Z3="",TOT=0 D SIZE Q
"RTN","A1AEZTST",5,0)
ENV S (Z,Z1)="Verified ",Z3="SEQ #",TOT=0 D SIZE Q
"RTN","A1AEZTST",6,0)
 ;
"RTN","A1AEZTST",7,0)
ENIN W !!?10,"Q-PATCH input routines",!!
"RTN","A1AEZTST",8,0)
 S TOT=0
"RTN","A1AEZTST",9,0)
        S %1=$O(^XMB(3.7,.5,2,"B","Q-PATCH")),QUE=$O(^XMB(3.7,.5,2,"B",%1,0)) I 'QUE Q
"RTN","A1AEZTST",10,0)
 S XMZ=0 F  S XMZ=$O(^XMB(3.7,.5,2,QUE,1,XMZ)) Q:'XMZ  DO
"RTN","A1AEZTST",11,0)
 .I '$D(^XMB(3.9,XMZ,0)) Q
"RTN","A1AEZTST",12,0)
 .W !,$P(^(0),"^")
"RTN","A1AEZTST",13,0)
 .S (I,X,Y)=0
"RTN","A1AEZTST",14,0)
 .F  S X=$O(^XMB(3.9,XMZ,2,X)) Q:X=""  S I=I+1,Y=Y+$L(^(X,0)) I I#100=0 W "." I $X>70 W !
"RTN","A1AEZTST",15,0)
 .S TOT=TOT+Y
"RTN","A1AEZTST",16,0)
 .W !?40,Y,?60,"Total KB = ",$P(TOT/1024,"."),!!
"RTN","A1AEZTST",17,0)
 .R ZZZ:0 I  Q
"RTN","A1AEZTST",18,0)
 Q
"RTN","A1AEZTST",19,0)
 ;
"RTN","A1AEZTST",20,0)
SIZE F Z2=0:1 S Z=$O(^XMB(3.9,"B",Z)) Q:Z'[Z1  S XMZ=$O(^(Z,0)) I XMZ DO
"RTN","A1AEZTST",21,0)
 .I Z'[Z3 Q
"RTN","A1AEZTST",22,0)
 .S (I,X,Y)=0
"RTN","A1AEZTST",23,0)
 .F  S X=$O(^XMB(3.9,XMZ,2,X)) Q:X=""  S I=I+1,Y=Y+$L(^(X,0)) I I#100=0 W "." I $X>70 W !
"RTN","A1AEZTST",24,0)
 .S TOT=TOT+Y
"RTN","A1AEZTST",25,0)
 .W !?3,Y,?20,Z,?60,"Total KB = ",$P(TOT/1024,"."),!
"RTN","A1AEZTST",26,0)
 .R ZZZ:0 I  Q
"RTN","A1AEZTST",27,0)
 Q
"RTN","A1AEZTST",28,0)
 ;
"SEC","^DIC",11005,11005,0,"DD")
#
"SEC","^DIC",11005,11005,0,"DEL")
#
"SEC","^DIC",11005.2,11005.2,0,"AUDIT")
@
"SEC","^DIC",11005.2,11005.2,0,"DD")
@
"SEC","^DIC",11005.2,11005.2,0,"DEL")
@
"SEC","^DIC",11005.2,11005.2,0,"LAYGO")
@
"SEC","^DIC",11005.2,11005.2,0,"RD")

"SEC","^DIC",11005.2,11005.2,0,"WR")
@
"SEC","^DIC",11005.5,11005.5,0,"AUDIT")
@
"SEC","^DIC",11005.5,11005.5,0,"DD")
@
"SEC","^DIC",11005.5,11005.5,0,"DEL")
@
"SEC","^DIC",11006,11006,0,"DD")
#
"SEC","^DIC",11006,11006,0,"DEL")
#
"SEC","^DIC",11007,11007,0,"DD")
#
"SEC","^DIC",11007,11007,0,"DEL")
#
"SEC","^DIC",11007.1,11007.1,0,"AUDIT")

"SEC","^DIC",11007.1,11007.1,0,"DD")
#
"SEC","^DIC",11007.1,11007.1,0,"DEL")
#
"SEC","^DIC",11007.1,11007.1,0,"LAYGO")

"SEC","^DIC",11007.1,11007.1,0,"RD")

"SEC","^DIC",11007.1,11007.1,0,"WR")

"VER")
8.0^22.2
"^DD",11005,11005,0)
FIELD^^5.6^52
"^DD",11005,11005,0,"DT")
3140812
"^DD",11005,11005,0,"ID",5)
W ""
"^DD",11005,11005,0,"ID","WRITE")
D ID11005^A1AEUTL
"^DD",11005,11005,0,"IX","AC",11005.05,.01)

"^DD",11005,11005,0,"IX","AD",11005,11)

"^DD",11005,11005,0,"IX","AE",11005,8)

"^DD",11005,11005,0,"IX","AP",11005,7)

"^DD",11005,11005,0,"IX","AS",11005,8)

"^DD",11005,11005,0,"IX","AU",11005.02,3)

"^DD",11005,11005,0,"IX","AV",11005,11)

"^DD",11005,11005,0,"IX","AVERCONT",11005,8)

"^DD",11005,11005,0,"IX","BA",11005,.01)

"^DD",11005,11005,0,"IX","C",11005,5)

"^DD",11005,11005,0,"IX","CD",11005,18)

"^DD",11005,11005,0,"IX","D",11005,2)

"^DD",11005,11005,0,"IX","PK",11005,40)

"^DD",11005,11005,0,"IX","PS",11005,5)

"^DD",11005,11005,0,"IX","R",11005.03,.01)

"^DD",11005,11005,0,"NM","DHCP PATCHES")

"^DD",11005,11005,0,"PT",9.619,.01)

"^DD",11005,11005,0,"PT",9.719,.01)

"^DD",11005,11005,0,"PT",11005,5.2)

"^DD",11005,11005,0,"PT",11005,5.7)

"^DD",11005,11005,0,"PT",11005.09,.01)

"^DD",11005,11005,0,"PT",11005.1,.01)

"^DD",11005,11005,0,"PT",11005.5,.01)

"^DD",11005,11005,0,"PT",11006,13)

"^DD",11005,11005,0,"PT",11007.11,1.1)

"^DD",11005,11005,0,"VRPK")
A1AE
"^DD",11005,11005,.001,0)
NUMBER^NJ8,0^^ ^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11005,11005,.001,3)
Type a Number between 1 and 99999999, 0 Decimal Digits
"^DD",11005,11005,.001,"DT")
2990928
"^DD",11005,11005,.01,0)
PATCH DESIGNATION^RFJ20X^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<6)!'(X?1U.UN1"*".2N.1P.2N1"*"1N.N) X S A1AEX=11005 D IN^A1AEUTL:$D(X) K A1AEX
"^DD",11005,11005,.01,1,0)
^.1^^-1
"^DD",11005,11005,.01,1,3,0)
11005^BA^MUMPS
"^DD",11005,11005,.01,1,3,1)
S:$P(X,"*",2)=999 ^A1AE(11005,"B",$P(X,"*")_"*DBA*"_$P(X,"*",3),DA)=""
"^DD",11005,11005,.01,1,3,2)
K:$P(X,"*",2)=999 ^A1AE(11005,"B",$P(X,"*")_"*DBA*"_$P(X,"*",3),DA)
"^DD",11005,11005,.01,2)
S Y(0)=Y S:$P(Y,"*",2)=999 $P(Y,"*",2)="DBA"
"^DD",11005,11005,.01,2.1)
S:$P(Y,"*",2)=999 $P(Y,"*",2)="DBA"
"^DD",11005,11005,.01,3)
ANSWER MUST BE 6-20 CHARACTERS IN LENGTH
"^DD",11005,11005,.01,7.5)
D PLU11005^A1AEDD1
"^DD",11005,11005,.01,21,0)
^^1^1^3140110^^^^
"^DD",11005,11005,.01,21,1,0)
Patch Designation has the following format: Package Namespace*Version Number*System Assigned Patch Number.
"^DD",11005,11005,.01,"DT")
3140813
"^DD",11005,11005,.2,0)
PATCH STREAM^RP11007.1'^A1AE(11007.1,^0;20^Q
"^DD",11005,11005,.2,3)
Select a patch stream.
"^DD",11005,11005,.2,9)
^
"^DD",11005,11005,.2,21,0)
^^3^3^3140225^
"^DD",11005,11005,.2,21,1,0)
If this Patch Module supports more than one stream of patches (VA does 
"^DD",11005,11005,.2,21,2,0)
not, OSEHRA does), select the patch stream this patch is part of. 
"^DD",11005,11005,.2,21,3,0)
Otherwise, leave this field empty.
"^DD",11005,11005,.2,23,0)
^^24^24^3140225^
"^DD",11005,11005,.2,23,1,0)
This field is used by ID11005^A1AEUTL, which is called by 
"^DD",11005,11005,.2,23,2,0)
^DD(11005,0,"ID","WRITE"), the file's write identifier. The write 
"^DD",11005,11005,.2,23,3,0)
identifier will now include field Abbreviation (.05) of file DHCP Patch 
"^DD",11005,11005,.2,23,4,0)
Stream (11007.1) for the record pointed to by this field, if this field 
"^DD",11005,11005,.2,23,5,0)
is filled in. That is, if this Patch Module supports more than one patch 
"^DD",11005,11005,.2,23,6,0)
stream, an abbreviation of that stream will be included in the write 
"^DD",11005,11005,.2,23,7,0)
identifier to help keep developers and other VISTA hardhats from getting 
"^DD",11005,11005,.2,23,8,0)
confused when they hop from stream to stream. If this Patch Module only 
"^DD",11005,11005,.2,23,9,0)
supports one stream, then no such assistance is needed, so this field is 
"^DD",11005,11005,.2,23,10,0)
left blank to save space and excluded from the write identifier.
"^DD",11005,11005,.2,23,11,0)
 
"^DD",11005,11005,.2,23,12,0)
The field is not set by users. It is set automatically by the Patch 
"^DD",11005,11005,.2,23,13,0)
Module itself when importing patches for redistribution or secondary 
"^DD",11005,11005,.2,23,14,0)
development. During the import process, the patch stream is calculated 
"^DD",11005,11005,.2,23,15,0)
and this field is set.
"^DD",11005,11005,.2,23,16,0)
 
"^DD",11005,11005,.2,23,17,0)
Change History:
"^DD",11005,11005,.2,23,18,0)
 
"^DD",11005,11005,.2,23,19,0)
Monday, 10 February 2014: Frederick D. S. Marshall of the VISTA Expertise 
"^DD",11005,11005,.2,23,20,0)
Network (VEN/TOAD) created this field.
"^DD",11005,11005,.2,23,21,0)
 
"^DD",11005,11005,.2,23,22,0)
Tuesday, 25 February 2014: (VEN/TOAD) Revised Description, wrote 
"^DD",11005,11005,.2,23,23,0)
Technical Description, added Change History, and write-protected the 
"^DD",11005,11005,.2,23,24,0)
field to prevent user editing.
"^DD",11005,11005,.2,"DT")
3140813
"^DD",11005,11005,.21,0)
CURRENTLY IMPORTING^S^1:Yes;0:No;^0;21^Q
"^DD",11005,11005,.21,3)
Not user editable.
"^DD",11005,11005,.21,21,0)
^^2^2^3140307^
"^DD",11005,11005,.21,21,1,0)
This field is used by PATCH^A1AECL1 to decide whether to file checksums or not. If we are currently importing, don't update the current system's checksums to be the new "Old" checksums for next time we release a patch. We only want these
"^DD",11005,11005,.21,21,2,0)
populated when we actually release a patch out of the door. This is necessary, because the import process does a verify, which triggers PATCH^A1AECL1.
"^DD",11005,11005,.21,"DT")
3140307
"^DD",11005,11005,2,0)
PACKAGE^RP9.4'I^DIC(9.4,^0;2^Q
"^DD",11005,11005,2,1,0)
^.1
"^DD",11005,11005,2,1,1,0)
11005^D
"^DD",11005,11005,2,1,1,1)
S ^A1AE(11005,"D",$E(X,1,30),DA)=""
"^DD",11005,11005,2,1,1,2)
K ^A1AE(11005,"D",$E(X,1,30),DA)
"^DD",11005,11005,2,9)
^
"^DD",11005,11005,2,21,0)
^^2^2^2871110^^^^
"^DD",11005,11005,2,21,1,0)
The Package must reside in the Package File(#9.4) and in the
"^DD",11005,11005,2,21,2,0)
DHCP Patch/Problem File(#11007) to be used in the Patch Module.
"^DD",11005,11005,2,"DT")
3140324
"^DD",11005,11005,3,0)
VERSION^RFXOI^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>10!($L(X)<1) X
"^DD",11005,11005,3,1,0)
^.1^^0
"^DD",11005,11005,3,2)
S Y(0)=Y S Y=$S(Y=999:"DBA",1:Y)
"^DD",11005,11005,3,2.1)
S Y=$S(Y=999:"DBA",1:Y)
"^DD",11005,11005,3,3)
ANSWER MUST BE 1-10 CHARACTERS IN LENGTH
"^DD",11005,11005,3,9)
^
"^DD",11005,11005,3,21,0)
^^3^3^2891206^^^^
"^DD",11005,11005,3,21,1,0)
The most recent Version is used as the default, but other valid
"^DD",11005,11005,3,21,2,0)
Version Numbers may be entered. Version '999' is reserved for DBA
"^DD",11005,11005,3,21,3,0)
type patches.
"^DD",11005,11005,3,"DT")
3140812
"^DD",11005,11005,4,0)
PATCH NUMBER^RNJ5,0I^^0;4^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",11005,11005,4,1,0)
^.1^^0
"^DD",11005,11005,4,3)
TYPE A WHOLE NUMBER BETWEEN 0 AND 99999
"^DD",11005,11005,4,9)
^
"^DD",11005,11005,4,21,0)
^^2^2^2861020^^^
"^DD",11005,11005,4,21,1,0)
The patch number is assigned by the system, a number may be
"^DD",11005,11005,4,21,2,0)
re-assigned if an Unverified Patch is Deleted.
"^DD",11005,11005,4,"DT")
3140324
"^DD",11005,11005,5,0)
PATCH SUBJECT^RF^^0;5^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>80!($L(X)<3) X
"^DD",11005,11005,5,1,0)
^.1
"^DD",11005,11005,5,1,1,0)
11005^PS
"^DD",11005,11005,5,1,1,1)
S ^A1AE(11005,"PS",$E(X,1,30),DA)=""
"^DD",11005,11005,5,1,1,2)
K ^A1AE(11005,"PS",$E(X,1,30),DA)
"^DD",11005,11005,5,1,2,0)
11005^C^KWIC
"^DD",11005,11005,5,1,2,1)
F %=1:1 Q:$P(X," ",%,99)=""  S I=$P(X," ",%) I $L(I)>2,$L(I)<31,^DD("KWIC")'[I S ^A1AE(11005,"C",I,DA)=""
"^DD",11005,11005,5,1,2,2)
F %=1:1 Q:$P(X," ",%,99)=""  S I=$P(X," ",%) I $L(I)>2,$L(I)<31 K ^A1AE(11005,"C",I,DA)
"^DD",11005,11005,5,3)
Answer must be 3-80 characters in length.
"^DD",11005,11005,5,21,0)
^^1^1^2981007^^^^
"^DD",11005,11005,5,21,1,0)
Enter a brief description which will be used to identify the Patch Designation.
"^DD",11005,11005,5,"DT")
2981007
"^DD",11005,11005,5.2,0)
DERIVED FROM PATCH^P11005'^A1AE(11005,^5;2^Q
"^DD",11005,11005,5.2,1,0)
^.1^^0
"^DD",11005,11005,5.2,3)
Select an entry
"^DD",11005,11005,5.2,21,0)
^^4^4^3140303^
"^DD",11005,11005,5.2,21,1,0)
If this patch is a copy of another patch, this field will be filled in by 
"^DD",11005,11005,5.2,21,2,0)
the A1AEK2M importer routine. The purpose of this field is to identify 
"^DD",11005,11005,5.2,21,3,0)
the original patch that a derived patch came from. Such will help us to 
"^DD",11005,11005,5.2,21,4,0)
track the patch and correctly resolve dependencies.
"^DD",11005,11005,5.2,"DT")
3140306
"^DD",11005,11005,5.3,0)
TXT FILE NAME^FJ100^^5;3^K:$L(X)>100!($L(X)<1) X
"^DD",11005,11005,5.3,3)
Answer must be 1-100 characters in length.
"^DD",11005,11005,5.3,21,0)
^^1^1^3140317^
"^DD",11005,11005,5.3,21,1,0)
Imported patch's .TXT full file name.
"^DD",11005,11005,5.3,"DT")
3140317
"^DD",11005,11005,5.4,0)
KID FILE NAME^FJ100^^5;4^K:$L(X)>100!($L(X)<1) X
"^DD",11005,11005,5.4,3)
Answer must be 1-100 characters in length.
"^DD",11005,11005,5.4,21,0)
^^1^1^3140317^
"^DD",11005,11005,5.4,21,1,0)
Patch's KID file name, if there is a KID present.
"^DD",11005,11005,5.4,"DT")
3140317
"^DD",11005,11005,5.5,0)
PATCH DESCRIPTION^11005.01^^D;0
"^DD",11005,11005,5.5,21,0)
^^16^16^2971112^^^^
"^DD",11005,11005,5.5,21,1,0)
This field should contain a detailed description of the purpose of
"^DD",11005,11005,5.5,21,2,0)
the patch. If the category of the patch is for a data dictionary,
"^DD",11005,11005,5.5,21,3,0)
input template, print template, sort template or other it should
"^DD",11005,11005,5.5,21,4,0)
be described in this section. Routine type patches have their own
"^DD",11005,11005,5.5,21,5,0)
section under the Routine Name field for coding changes, however,
"^DD",11005,11005,5.5,21,6,0)
a description of the purpose and impacts of the patch should be
"^DD",11005,11005,5.5,21,7,0)
entered in this section for this type of patch as well.
"^DD",11005,11005,5.5,21,8,0)
 
"^DD",11005,11005,5.5,21,9,0)
The patch description should also contain a detailed description of
"^DD",11005,11005,5.5,21,10,0)
procedures or steps required as a result of entering this patch, ie.
"^DD",11005,11005,5.5,21,11,0)
recompiling templates or re-running reports etc...
"^DD",11005,11005,5.5,21,12,0)
 
"^DD",11005,11005,5.5,21,13,0)
If a patch is the result of an 'entered in error' patch it should
"^DD",11005,11005,5.5,21,14,0)
refer to the previous patch which was incorrect, just as the
"^DD",11005,11005,5.5,21,15,0)
incorrect patch should refer to the correct patch in the Entered in
"^DD",11005,11005,5.5,21,16,0)
Error Description field.
"^DD",11005,11005,5.6,0)
MISSING KID?^S^1:Yes;0:No;^5;6^Q
"^DD",11005,11005,5.6,3)
Don't edit this field by hand!
"^DD",11005,11005,5.6,9)
^
"^DD",11005,11005,5.6,21,0)
^^6^6^3140324^
"^DD",11005,11005,5.6,21,1,0)
This field is filled in by the Patch Import software as well as during 
"^DD",11005,11005,5.6,21,2,0)
Add/Edit Patch to signal if we are missing the KID patch that goes with 
"^DD",11005,11005,5.6,21,3,0)
the TXT part of the patch that was already imported or added to the 
"^DD",11005,11005,5.6,21,4,0)
software. We take provisions to make sure that any 'Informational' 
"^DD",11005,11005,5.6,21,5,0)
patches won't fill this field out, as these patches are not supposed to 
"^DD",11005,11005,5.6,21,6,0)
have a KID build inside of them.
"^DD",11005,11005,5.6,"DT")
3140324
"^DD",11005,11005,5.7,0)
UPDATE TO PATCH^P11005'^A1AE(11005,^5;7^Q
"^DD",11005,11005,5.7,"DT")
3140324
"^DD",11005,11005,6,0)
SEQUENTIAL RELEASE NUMBER^NJ5,0^^0;6^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11005,11005,6,3)
Type a Number between 1 and 99999, 0 Decimal Digits
"^DD",11005,11005,6,"DT")
2920917
"^DD",11005,11005,6.1,0)
IMPORTED PATCH PATH^FJ250^^6;1^K:$L(X)>250!($L(X)<1) X
"^DD",11005,11005,6.1,3)
Answer must be 1-250 characters in length.
"^DD",11005,11005,6.1,21,0)
^^1^1^3140317^^
"^DD",11005,11005,6.1,21,1,0)
Holds the system patch to the host file .TXT for the patch.
"^DD",11005,11005,6.1,"DT")
3140317
"^DD",11005,11005,6.5,0)
CATEGORY OF PATCH^11005.05SA^^C;0
"^DD",11005,11005,6.5,21,0)
^^7^7^2920606^^^^
"^DD",11005,11005,6.5,21,1,0)
Since a Patch may fall under more then one Category this
"^DD",11005,11005,6.5,21,2,0)
field has been made a multiple. Enter one or more Category
"^DD",11005,11005,6.5,21,3,0)
code to describe the type of Patch.
"^DD",11005,11005,6.5,21,4,0)
 
"^DD",11005,11005,6.5,21,5,0)
DBA type patches fall under only one type of Category, the
"^DD",11005,11005,6.5,21,6,0)
'database' category. This information is put in by the system
"^DD",11005,11005,6.5,21,7,0)
when a DBA type patch is entered.
"^DD",11005,11005,7,0)
PRIORITY^R*SX^p:PATCH FOR A PATCH;n:NOT URGENT;m:MANDATORY;i:INFORMATIONAL;e:EMERGENCY;^0;7^I "EeMm"'[$E(X_0) K X
"^DD",11005,11005,7,1,0)
^.1
"^DD",11005,11005,7,1,1,0)
11005^AP^MUMPS
"^DD",11005,11005,7,1,1,1)
S ^A1AE(11005,"AP",+$P(^A1AE(11005,DA,0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA)=""
"^DD",11005,11005,7,1,1,2)
K ^A1AE(11005,"AP",+$P(^A1AE(11005,DA,0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA)
"^DD",11005,11005,7,3)
Enter E for Emergency, M for Mandatory
"^DD",11005,11005,7,12)
Only Emergency or Mandatory Patches are allowed
"^DD",11005,11005,7,12.1)
I "eEmM"[X
"^DD",11005,11005,7,21,0)
^^8^8^2921201^^^^
"^DD",11005,11005,7,21,1,0)
This field indicates the seriousness of the bug that this patch corrects.
"^DD",11005,11005,7,21,2,0)
There are two priorities allowed:
"^DD",11005,11005,7,21,3,0)
 
"^DD",11005,11005,7,21,4,0)
    EMERGENCY         -- patch must be installed within 1 working day
"^DD",11005,11005,7,21,5,0)
                         of receipt.
"^DD",11005,11005,7,21,6,0)
 
"^DD",11005,11005,7,21,7,0)
    MANDATORY         -- patch must be installed within 5 days of receipt
"^DD",11005,11005,7,21,8,0)
                         because it solves what could be a major problem.
"^DD",11005,11005,7,21,9,0)
 
"^DD",11005,11005,7,21,10,0)
    NOT URGENT        -- patch includes cosmetic type changes that can
"^DD",11005,11005,7,21,11,0)
                         wait for the next release but are offered to
"^DD",11005,11005,7,21,12,0)
                         the site now if they desire it.
"^DD",11005,11005,7,21,13,0)
 
"^DD",11005,11005,7,21,14,0)
    INFORMATIONAL     -- patch provides general or pertinent information
"^DD",11005,11005,7,21,15,0)
                         about the package.
"^DD",11005,11005,7,"DT")
2920606
"^DD",11005,11005,8,0)
STATUS OF PATCH^RSaX^c:COMPLETED/UNVERIFIED;e:ENTERED IN ERROR;u:UNDER DEVELOPMENT;v:VERIFIED;r:RETIRED;x:cancel;i2:IN REVIEW;d2:SEC DEVELOPMENT;s2:SEC COMPLETION;r2:SEC RELEASE;n2:NOT FOR SEC RELEASE;^0;8^D ^A1AEPHS
"^DD",11005,11005,8,1,0)
^.1
"^DD",11005,11005,8,1,1,0)
^^TRIGGER^11005^11
"^DD",11005,11005,8,1,1,1)
Q
"^DD",11005,11005,8,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S(X="c"&($P(^A1AE(11005,DA,0),U,8)="v"):1,1:0) I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11005,8,1,1,2.4)
"^DD",11005,11005,8,1,1,2.4)
S DIH=$G(^A1AE(11005,DIV(0),0)),DIV=X S $P(^(0),U,11)=DIV,DIH=11005,DIG=11 D ^DICR
"^DD",11005,11005,8,1,1,"CREATE VALUE")
NO EFFECT
"^DD",11005,11005,8,1,1,"DELETE CONDITION")
S X=$S(X="c"&($P(^A1AE(11005,DA,0),U,8)="v"):1,1:0)
"^DD",11005,11005,8,1,1,"DELETE VALUE")
TODAY
"^DD",11005,11005,8,1,1,"DT")
3140328
"^DD",11005,11005,8,1,1,"FIELD")
DATE PATCH VERIFIED
"^DD",11005,11005,8,1,2,0)
^^TRIGGER^11005^10
"^DD",11005,11005,8,1,2,1)
Q
"^DD",11005,11005,8,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S(X="u"&($P(^A1AE(11005,DA,0),U,8)="c"):1,1:0) I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11005,8,1,2,2.4)
"^DD",11005,11005,8,1,2,2.4)
S DIH=$G(^A1AE(11005,DIV(0),0)),DIV=X S $P(^(0),U,10)=DIV,DIH=11005,DIG=10 D ^DICR
"^DD",11005,11005,8,1,2,"CREATE VALUE")
NO EFFECT
"^DD",11005,11005,8,1,2,"DELETE CONDITION")
S X=$S(X="u"&($P(^A1AE(11005,DA,0),U,8)="c"):1,1:0)
"^DD",11005,11005,8,1,2,"DELETE VALUE")
TODAY
"^DD",11005,11005,8,1,2,"DT")
3140328
"^DD",11005,11005,8,1,2,"FIELD")
DATE PATCH COMPLETED
"^DD",11005,11005,8,1,3,0)
11005^AE^MUMPS
"^DD",11005,11005,8,1,3,1)
I X="e",$D(^A1AE(11005,"AV",+$P(^A1AE(11005,DA,0),U,2),9999999-$P(^(0),U,11),DA)) K ^(DA) Q
"^DD",11005,11005,8,1,3,2)
Q
"^DD",11005,11005,8,1,4,0)
11005^AS^MUMPS
"^DD",11005,11005,8,1,4,1)
S ^A1AE(11005,"AS",+$P(^A1AE(11005,DA,0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA)=""
"^DD",11005,11005,8,1,4,2)
K ^A1AE(11005,"AS",+$P(^A1AE(11005,DA,0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA)
"^DD",11005,11005,8,1,5,0)
11005^AVERCONT^MUMPS
"^DD",11005,11005,8,1,5,1)
D IX^A1AEK2VC(X,DA)
"^DD",11005,11005,8,1,5,2)
Q
"^DD",11005,11005,8,1,5,3)
Used for Version Control of KIDS builds
"^DD",11005,11005,8,1,5,"%D",0)
^^3^3^3140323^
"^DD",11005,11005,8,1,5,"%D",1,0)
This cross reference breaks out a KIDS build and write out the components 
"^DD",11005,11005,8,1,5,"%D",2,0)
to the file system. The location is dictated by the field 'IMPORTED PATCH 
"^DD",11005,11005,8,1,5,"%D",3,0)
PATH'. If it's empty, we don't write anything out to the host file system.
"^DD",11005,11005,8,1,5,"DT")
3140323
"^DD",11005,11005,8,1,6,0)
^^TRIGGER^11005^8.09
"^DD",11005,11005,8,1,6,1)
Q
"^DD",11005,11005,8,1,6,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="v"&($P(^A1AE(11005,DA,0),U,8)="i2") I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11005,8,1,6,2.4)
"^DD",11005,11005,8,1,6,2.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,9)=DIV,DIH=11005,DIG=8.09 D ^DICR
"^DD",11005,11005,8,1,6,3)
Triggers Date Imported = TODAY when Status of Patch = i2
"^DD",11005,11005,8,1,6,"CREATE VALUE")
NO EFFECT
"^DD",11005,11005,8,1,6,"DELETE CONDITION")
S X=X="v"&($P(^A1AE(11005,DA,0),U,8)="i2")
"^DD",11005,11005,8,1,6,"DELETE VALUE")
TODAY
"^DD",11005,11005,8,1,6,"DT")
3140328
"^DD",11005,11005,8,1,6,"FIELD")
DATE IMPORTED
"^DD",11005,11005,8,1,7,0)
^^TRIGGER^11005^8.11
"^DD",11005,11005,8,1,7,1)
Q
"^DD",11005,11005,8,1,7,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="i2"&($P(^A1AE(11005,DA,0),U,8)="d2") I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11005,8,1,7,2.4)
"^DD",11005,11005,8,1,7,2.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,11)=DIV,DIH=11005,DIG=8.11 D ^DICR
"^DD",11005,11005,8,1,7,3)
Triggers Date of Sec Development = TODAY
"^DD",11005,11005,8,1,7,"CREATE VALUE")
NO EFFECT
"^DD",11005,11005,8,1,7,"DELETE CONDITION")
S X=X="i2"&($P(^A1AE(11005,DA,0),U,8)="d2")
"^DD",11005,11005,8,1,7,"DELETE VALUE")
TODAY
"^DD",11005,11005,8,1,7,"DT")
3140328
"^DD",11005,11005,8,1,7,"FIELD")
DATE OF SEC DEV
"^DD",11005,11005,8,1,8,0)
^^TRIGGER^11005^8.13
"^DD",11005,11005,8,1,8,1)
Q
"^DD",11005,11005,8,1,8,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="i2"!(X="d2")&($P(^A1AE(11005,DA,0),U,8)="s2") I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11005,8,1,8,2.4)
"^DD",11005,11005,8,1,8,2.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,13)=DIV,DIH=11005,DIG=8.13 D ^DICR
"^DD",11005,11005,8,1,8,3)
Trigger Date of Sec Completion = TODAY
"^DD",11005,11005,8,1,8,"CREATE VALUE")
NO EFFECT
"^DD",11005,11005,8,1,8,"DELETE CONDITION")
S X=X="i2"!(X="d2")&($P(^A1AE(11005,DA,0),U,8)="s2")
"^DD",11005,11005,8,1,8,"DELETE VALUE")
TODAY
"^DD",11005,11005,8,1,8,"DT")
3140328
"^DD",11005,11005,8,1,8,"FIELD")
DATE OF SEC COMPLETION
"^DD",11005,11005,8,1,9,0)
^^TRIGGER^11005^8.15
"^DD",11005,11005,8,1,9,1)
Q
"^DD",11005,11005,8,1,9,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="s2"&($P(^A1AE(11005,DA,0),U,8)="r2") I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11005,8,1,9,2.4)
"^DD",11005,11005,8,1,9,2.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,15)=DIV,DIH=11005,DIG=8.15 D ^DICR
"^DD",11005,11005,8,1,9,3)
Triggers Date of Sec Release = TODAY
"^DD",11005,11005,8,1,9,"CREATE VALUE")
NO EFFECT
"^DD",11005,11005,8,1,9,"DELETE CONDITION")
S X=X="s2"&($P(^A1AE(11005,DA,0),U,8)="r2")
"^DD",11005,11005,8,1,9,"DELETE VALUE")
TODAY
"^DD",11005,11005,8,1,9,"DT")
3140328
"^DD",11005,11005,8,1,9,"FIELD")
DATE OF SEC RELEASE
"^DD",11005,11005,8,1,10,0)
^^TRIGGER^11005^8.17
"^DD",11005,11005,8,1,10,1)
Q
"^DD",11005,11005,8,1,10,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="i2"!(X="d2")!(X="s2")&($P(^A1AE(11005,DA,0),U,8)="n2") I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11005,8,1,10,2.4)
"^DD",11005,11005,8,1,10,2.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,17)=DIV,DIH=11005,DIG=8.17 D ^DICR
"^DD",11005,11005,8,1,10,3)
Trigger Date Denied Sec Release = TODAY
"^DD",11005,11005,8,1,10,"CREATE VALUE")
NO EFFECT
"^DD",11005,11005,8,1,10,"DELETE CONDITION")
S X=X="i2"!(X="d2")!(X="s2")&($P(^A1AE(11005,DA,0),U,8)="n2")
"^DD",11005,11005,8,1,10,"DELETE VALUE")
TODAY
"^DD",11005,11005,8,1,10,"DT")
3140328
"^DD",11005,11005,8,1,10,"FIELD")
DATE DENIED SEC RELEASE
"^DD",11005,11005,8,21,0)
^^153^153^3140306^
"^DD",11005,11005,8,21,1,0)
I. PRIMARY DEVELOPMENT
"^DD",11005,11005,8,21,2,0)
 
"^DD",11005,11005,8,21,3,0)
The following describes how this field is used in primary development:
"^DD",11005,11005,8,21,4,0)
 
"^DD",11005,11005,8,21,5,0)
A status of 'under development' is assigned to the patch via the option 
"^DD",11005,11005,8,21,6,0)
to 'Add a Patch'. It is assigned by the system when the patch is first 
"^DD",11005,11005,8,21,7,0)
added.
"^DD",11005,11005,8,21,8,0)
 
"^DD",11005,11005,8,21,9,0)
Once the developer is ready to have the patch verified, s/he can change 
"^DD",11005,11005,8,21,10,0)
the status of the patch to 'completed/unverified'. When this status is 
"^DD",11005,11005,8,21,11,0)
assigned to the patch, a bulletin is sent to the verifiers of the package 
"^DD",11005,11005,8,21,12,0)
notifying them this patch is ready for verification. A patch message is 
"^DD",11005,11005,8,21,13,0)
also sent to the verifiers at this time.
"^DD",11005,11005,8,21,14,0)
 
"^DD",11005,11005,8,21,15,0)
NOTE: Developers are permitted to edit patches after they are submitted 
"^DD",11005,11005,8,21,16,0)
for Verification but the status will change back to 'U'nder developement.
"^DD",11005,11005,8,21,17,0)
 
"^DD",11005,11005,8,21,18,0)
Once the verifiers receive this bulletin they can begin the verification 
"^DD",11005,11005,8,21,19,0)
process of this patch. When the verifiers are ready to release the patch 
"^DD",11005,11005,8,21,20,0)
to the field, they can change the status of the patch to 'verified'. When 
"^DD",11005,11005,8,21,21,0)
this status is assigned to the patch, a bulletin is sent to those users 
"^DD",11005,11005,8,21,22,0)
who have elected to be notified of patches for the corresponding package. 
"^DD",11005,11005,8,21,23,0)
A patch message containing Packman routines is sent to support groups at 
"^DD",11005,11005,8,21,24,0)
the ISCs also.
"^DD",11005,11005,8,21,25,0)
 
"^DD",11005,11005,8,21,26,0)
The status of a patch determines what information in the patch may be 
"^DD",11005,11005,8,21,27,0)
edited, these are outlined as follows:
"^DD",11005,11005,8,21,28,0)
 
"^DD",11005,11005,8,21,29,0)
Value of Status field  Fields which can be edited  Can set Status to
"^DD",11005,11005,8,21,30,0)
---------------------  --------------------------  -----------------
"^DD",11005,11005,8,21,31,0)
under development      PATCH SUBJECT               completed/unverified
"^DD",11005,11005,8,21,32,0)
                       PRIORITY
"^DD",11005,11005,8,21,33,0)
                       CATEGORY OF PATCH
"^DD",11005,11005,8,21,34,0)
                       PATCH DESCRIPTION
"^DD",11005,11005,8,21,35,0)
                       ROUTINE NAME
"^DD",11005,11005,8,21,36,0)
                       DESCRIPTION OF ROUTINE CHANGES
"^DD",11005,11005,8,21,37,0)
                       STATUS OF PATCH
"^DD",11005,11005,8,21,38,0)
 
"^DD",11005,11005,8,21,39,0)
completed/unverified   PATCH SUBJECT               verified
"^DD",11005,11005,8,21,40,0)
                       PRIORITY
"^DD",11005,11005,8,21,41,0)
                       CATEGORY OF PATCH
"^DD",11005,11005,8,21,42,0)
                       PATCH DESCRIPTION
"^DD",11005,11005,8,21,43,0)
                       ROUTINE NAME
"^DD",11005,11005,8,21,44,0)
                       DESCRIPTION OF ROUTINE CHANGES
"^DD",11005,11005,8,21,45,0)
                       STATUS OF PATCH
"^DD",11005,11005,8,21,46,0)
 
"^DD",11005,11005,8,21,47,0)
verified               STATUS OF PATCH             entered in error
"^DD",11005,11005,8,21,48,0)
 
"^DD",11005,11005,8,21,49,0)
entered in error       ENTERED IN ERROR            Status can NOT be
"^DD",11005,11005,8,21,50,0)
                       DESCRIPTION                 changed
"^DD",11005,11005,8,21,51,0)
 
"^DD",11005,11005,8,21,52,0)
retired                RETIRED AFTER VERSION       Status can NOT be
"^DD",11005,11005,8,21,53,0)
                       RETIREMENT DESCRIPTION      changed
"^DD",11005,11005,8,21,54,0)
 
"^DD",11005,11005,8,21,55,0)
If an error is made, or a developer decides not to release an 'under 
"^DD",11005,11005,8,21,56,0)
development' or 'completed/unverified' patch, it may be deleted; since 
"^DD",11005,11005,8,21,57,0)
only the developer and verifier have viewed them. However, if an error is 
"^DD",11005,11005,8,21,58,0)
made in a 'verified' patch the status should be changed to 'entered in 
"^DD",11005,11005,8,21,59,0)
error', and an error description should be entered to indicate why the 
"^DD",11005,11005,8,21,60,0)
patch is in error, and where the correct patch can be found.
"^DD",11005,11005,8,21,61,0)
 
"^DD",11005,11005,8,21,62,0)
Certain patches may also be 'retired'; specifically the database or DBA 
"^DD",11005,11005,8,21,63,0)
type patches may be retired after a specific version. Additional comments 
"^DD",11005,11005,8,21,64,0)
about the retired patch can be put in the retirement comment field.
"^DD",11005,11005,8,21,65,0)
 
"^DD",11005,11005,8,21,66,0)
II. SECONDARY DEVELOPMENT
"^DD",11005,11005,8,21,67,0)
 
"^DD",11005,11005,8,21,68,0)
The following describes how this field is used in secondary development:
"^DD",11005,11005,8,21,69,0)
 
"^DD",11005,11005,8,21,70,0)
Only verified patches can be put under secondary development, and even 
"^DD",11005,11005,8,21,71,0)
then the verified entry in the Patch Module cannot be changed. Instead, 
"^DD",11005,11005,8,21,72,0)
an e-mail or host-file distribution of the verified patch is imported 
"^DD",11005,11005,8,21,73,0)
into the Patch Module, which results in the creation of one or more new 
"^DD",11005,11005,8,21,74,0)
entries in the Patch Module that are copies of the distributed patch. It 
"^DD",11005,11005,8,21,75,0)
is these new derived patches - copies of the original verified patch - 
"^DD",11005,11005,8,21,76,0)
that are subject to secondary development.
"^DD",11005,11005,8,21,77,0)
 
"^DD",11005,11005,8,21,78,0)
A status of 'in review' is assigned to each imported patch when it is 
"^DD",11005,11005,8,21,79,0)
imported. When this status is assigned to the patch, a bulletin is sent 
"^DD",11005,11005,8,21,80,0)
to the developers of the package notifying them this patch is ready for 
"^DD",11005,11005,8,21,81,0)
review.
"^DD",11005,11005,8,21,82,0)
 
"^DD",11005,11005,8,21,83,0)
If the reviewer decides the patch under review should not be released in 
"^DD",11005,11005,8,21,84,0)
the secondary patch stream, a status of 'not for secondary release' may 
"^DD",11005,11005,8,21,85,0)
be assigned to the patch. When this status is assigned to the patch, a 
"^DD",11005,11005,8,21,86,0)
bulletin is sent to the developers and verifiers of the package notifying 
"^DD",11005,11005,8,21,87,0)
them this patch will not be released. In the unlikely event that a 
"^DD",11005,11005,8,21,88,0)
rejected patch should be reevaluated for possible secondary release, its 
"^DD",11005,11005,8,21,89,0)
status may be changed back to 'in review.'
"^DD",11005,11005,8,21,90,0)
 
"^DD",11005,11005,8,21,91,0)
If the reviewer decides the patch under review may be released unchanged 
"^DD",11005,11005,8,21,92,0)
into the secondary patch stream, a status of 'secondary completion' may 
"^DD",11005,11005,8,21,93,0)
be assigned to it. When this status is assigned to the patch, a bulletin 
"^DD",11005,11005,8,21,94,0)
is sent to the verifiers of the package notifying them this patch is 
"^DD",11005,11005,8,21,95,0)
ready for secondary verification. A patch message is also sent to the 
"^DD",11005,11005,8,21,96,0)
verifiers at this time.
"^DD",11005,11005,8,21,97,0)
 
"^DD",11005,11005,8,21,98,0)
If the reviewer decides the patch under review needs secondary 
"^DD",11005,11005,8,21,99,0)
development prior to its release, a status of 'secondary development' may 
"^DD",11005,11005,8,21,100,0)
be assigned to it. When this status is assigned to the patch, a bulletin 
"^DD",11005,11005,8,21,101,0)
is sent to the developers of the package notifying them this patch is 
"^DD",11005,11005,8,21,102,0)
ready for secondary development. A patch message is also sent to the 
"^DD",11005,11005,8,21,103,0)
developers at this time.
"^DD",11005,11005,8,21,104,0)
 
"^DD",11005,11005,8,21,105,0)
Once the secondary completer is ready to have the patch verified, s/he 
"^DD",11005,11005,8,21,106,0)
can change the status of the patch to 'secondary completion.'
"^DD",11005,11005,8,21,107,0)
 
"^DD",11005,11005,8,21,108,0)
NOTE: Developers are permitted to edit patches after they are submitted 
"^DD",11005,11005,8,21,109,0)
for Secondary Verification but the status will change back to '2S' 
"^DD",11005,11005,8,21,110,0)
Secondary Developement.
"^DD",11005,11005,8,21,111,0)
 
"^DD",11005,11005,8,21,112,0)
Once the verifiers receive the bulletin they can begin the secondary 
"^DD",11005,11005,8,21,113,0)
verification process of this patch. When the verifiers are ready to 
"^DD",11005,11005,8,21,114,0)
secondarily release the patch to the field, they can change the status of 
"^DD",11005,11005,8,21,115,0)
the patch to 'secondary release.' When this status is assigned to the 
"^DD",11005,11005,8,21,116,0)
patch, a bulletin is sent to those users who have elected to be notified 
"^DD",11005,11005,8,21,117,0)
of patches for the corresponding package. A patch message containing 
"^DD",11005,11005,8,21,118,0)
Packman routines is sent to subscribing support groups.
"^DD",11005,11005,8,21,119,0)
 
"^DD",11005,11005,8,21,120,0)
As with primary patches, the status of a secondary patch determines what 
"^DD",11005,11005,8,21,121,0)
information in the patch may be edited, these are outlined as follows:
"^DD",11005,11005,8,21,122,0)
 
"^DD",11005,11005,8,21,123,0)
Value of Status field  Fields which can be edited  Can set Status to
"^DD",11005,11005,8,21,124,0)
---------------------  --------------------------  -------------------------
"^DD",11005,11005,8,21,125,0)
in review              REVIEW DESCRIPTION          not for secondary 
"^DD",11005,11005,8,21,126,0)
release
"^DD",11005,11005,8,21,127,0)
                       STATUS OF PATCH             secondary completion
"^DD",11005,11005,8,21,128,0)
                                                   secondary development
"^DD",11005,11005,8,21,129,0)
 
"^DD",11005,11005,8,21,130,0)
secondary development  PATCH SUBJECT               secondary completion
"^DD",11005,11005,8,21,131,0)
                       PRIORITY                    in review
"^DD",11005,11005,8,21,132,0)
                       CATEGORY OF PATCH
"^DD",11005,11005,8,21,133,0)
                       PATCH DESCRIPTION
"^DD",11005,11005,8,21,134,0)
                       ROUTINE NAME
"^DD",11005,11005,8,21,135,0)
                       DESCRIPTION OF ROUTINE CHANGES
"^DD",11005,11005,8,21,136,0)
                       STATUS OF PATCH
"^DD",11005,11005,8,21,137,0)
 
"^DD",11005,11005,8,21,138,0)
secondary completion   PATCH SUBJECT               secondary release
"^DD",11005,11005,8,21,139,0)
                       PRIORITY                    secondary development
"^DD",11005,11005,8,21,140,0)
                       CATEGORY OF PATCH           in review
"^DD",11005,11005,8,21,141,0)
                       PATCH DESCRIPTION
"^DD",11005,11005,8,21,142,0)
                       ROUTINE NAME
"^DD",11005,11005,8,21,143,0)
                       DESCRIPTION OF ROUTINE CHANGES
"^DD",11005,11005,8,21,144,0)
                       STATUS OF PATCH
"^DD",11005,11005,8,21,145,0)
 
"^DD",11005,11005,8,21,146,0)
secondary release                                  Status can NOT be
"^DD",11005,11005,8,21,147,0)
                                                   changed
"^DD",11005,11005,8,21,148,0)
 
"^DD",11005,11005,8,21,149,0)
not for secondary release  STATUS OF PATCH         in review
"^DD",11005,11005,8,21,150,0)
 
"^DD",11005,11005,8,21,151,0)
Until a secondary patch is released, its status can always be changed 
"^DD",11005,11005,8,21,152,0)
back to 'in review' to give the team a chance to reconsider the right 
"^DD",11005,11005,8,21,153,0)
disposition of this patch within the secondary patch stream.
"^DD",11005,11005,8,23,0)
^^15^15^3140306^
"^DD",11005,11005,8,23,1,0)
This is the single most important field in file DHCP Patches (11005). Its 
"^DD",11005,11005,8,23,2,0)
input transform drives VISTA's entire software lifecycle. It is used 
"^DD",11005,11005,8,23,3,0)
throughout the Patch Module.
"^DD",11005,11005,8,23,4,0)
 
"^DD",11005,11005,8,23,5,0)
Change History:
"^DD",11005,11005,8,23,6,0)
 
"^DD",11005,11005,8,23,7,0)
31 October 1995: last change (details unknown) to field before OSEHRA 
"^DD",11005,11005,8,23,8,0)
Forum project began
"^DD",11005,11005,8,23,9,0)
 
"^DD",11005,11005,8,23,10,0)
Friday, 28 February 2014: (VEN/TOAD) added codes 2r:IN REVIEW, 
"^DD",11005,11005,8,23,11,0)
2u:SECONDARY DEVELOPMENT, 2c:SECONDARY COMPLETION, 2v:SECONDARY RELEASE, 
"^DD",11005,11005,8,23,12,0)
and 2n: NOT FOR SECONDARY RELEASE
"^DD",11005,11005,8,23,13,0)
 
"^DD",11005,11005,8,23,14,0)
Thursday, 6 March 2014: (VEN/TOAD) added secondary development to 
"^DD",11005,11005,8,23,15,0)
Description, added Technical Description & Change History
"^DD",11005,11005,8,"AUDIT")
y
"^DD",11005,11005,8,"DT")
3140328
"^DD",11005,11005,8.09,0)
DATE IMPORTED^D^^8;9^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,8.09,1,0)
^.1
"^DD",11005,11005,8.09,1,1,0)
^^TRIGGER^11005^8.1
"^DD",11005,11005,8.09,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$P(^A1AE(11005,DA,8),U,10)="" I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(11005,8.09,1,1,1.4)
"^DD",11005,11005,8.09,1,1,1.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,10)=DIV,DIH=11005,DIG=8.1 D ^DICR
"^DD",11005,11005,8.09,1,1,2)
Q
"^DD",11005,11005,8.09,1,1,3)
Trigger current user into User Imported
"^DD",11005,11005,8.09,1,1,"CREATE CONDITION")
S X=$P(^A1AE(11005,DA,8),U,10)=""
"^DD",11005,11005,8.09,1,1,"CREATE VALUE")
S X=DUZ
"^DD",11005,11005,8.09,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11005,11005,8.09,1,1,"DT")
3140328
"^DD",11005,11005,8.09,1,1,"FIELD")
USER IMPORTED
"^DD",11005,11005,8.09,5,1,0)
11005^8^6
"^DD",11005,11005,8.09,9)
^
"^DD",11005,11005,8.09,"DT")
3140328
"^DD",11005,11005,8.1,0)
USER IMPORTED^P200'^VA(200,^8;10^Q
"^DD",11005,11005,8.1,5,1,0)
11005^8.09^1
"^DD",11005,11005,8.1,9)
^
"^DD",11005,11005,8.1,"DT")
3140328
"^DD",11005,11005,8.11,0)
DATE OF SEC DEVELOPMENT^D^^8;11^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,8.11,1,0)
^.1
"^DD",11005,11005,8.11,1,1,0)
^^TRIGGER^11005^8.12
"^DD",11005,11005,8.11,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$P(^A1AE(11005,DA,8),U,12)="" I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(11005,8.11,1,1,1.4)
"^DD",11005,11005,8.11,1,1,1.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,12)=DIV,DIH=11005,DIG=8.12 D ^DICR
"^DD",11005,11005,8.11,1,1,2)
Q
"^DD",11005,11005,8.11,1,1,"CREATE CONDITION")
S X=$P(^A1AE(11005,DA,8),U,12)=""
"^DD",11005,11005,8.11,1,1,"CREATE VALUE")
S X=DUZ
"^DD",11005,11005,8.11,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11005,11005,8.11,1,1,"FIELD")
USER SEC DEVELOPMENT
"^DD",11005,11005,8.11,5,1,0)
11005^8^7
"^DD",11005,11005,8.11,9)
^
"^DD",11005,11005,8.11,"DT")
3140328
"^DD",11005,11005,8.12,0)
USER SEC DEVELOPMENT^P200'^VA(200,^8;12^Q
"^DD",11005,11005,8.12,5,1,0)
11005^8.11^1
"^DD",11005,11005,8.12,9)
^
"^DD",11005,11005,8.12,"DT")
3140324
"^DD",11005,11005,8.13,0)
DATE OF SEC COMPLETION^D^^8;13^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,8.13,1,0)
^.1
"^DD",11005,11005,8.13,1,1,0)
^^TRIGGER^11005^8.14
"^DD",11005,11005,8.13,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$P(^A1AE(11005,DA,8),U,14)="" I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(11005,8.13,1,1,1.4)
"^DD",11005,11005,8.13,1,1,1.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,14)=DIV,DIH=11005,DIG=8.14 D ^DICR
"^DD",11005,11005,8.13,1,1,2)
Q
"^DD",11005,11005,8.13,1,1,"CREATE CONDITION")
S X=$P(^A1AE(11005,DA,8),U,14)=""
"^DD",11005,11005,8.13,1,1,"CREATE VALUE")
S X=DUZ
"^DD",11005,11005,8.13,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11005,11005,8.13,1,1,"FIELD")
USER SEC COMPLETION
"^DD",11005,11005,8.13,5,1,0)
11005^8^8
"^DD",11005,11005,8.13,9)
^
"^DD",11005,11005,8.13,"DT")
3140328
"^DD",11005,11005,8.14,0)
USER SEC COMPLETION^P200'^VA(200,^8;14^Q
"^DD",11005,11005,8.14,5,1,0)
11005^8.13^1
"^DD",11005,11005,8.14,9)
^
"^DD",11005,11005,8.14,"DT")
3140324
"^DD",11005,11005,8.15,0)
DATE OF SEC RELEASE^D^^8;15^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,8.15,1,0)
^.1
"^DD",11005,11005,8.15,1,1,0)
^^TRIGGER^11005^8.16
"^DD",11005,11005,8.15,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$P(^A1AE(11005,DA,8),U,16)="" I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,16),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(11005,8.15,1,1,1.4)
"^DD",11005,11005,8.15,1,1,1.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,16)=DIV,DIH=11005,DIG=8.16 D ^DICR
"^DD",11005,11005,8.15,1,1,2)
Q
"^DD",11005,11005,8.15,1,1,"CREATE CONDITION")
S X=$P(^A1AE(11005,DA,8),U,16)=""
"^DD",11005,11005,8.15,1,1,"CREATE VALUE")
S X=DUZ
"^DD",11005,11005,8.15,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11005,11005,8.15,1,1,"FIELD")
USER SEC RELEASE
"^DD",11005,11005,8.15,5,1,0)
11005^8^9
"^DD",11005,11005,8.15,9)
^
"^DD",11005,11005,8.15,"DT")
3140328
"^DD",11005,11005,8.16,0)
USER SEC RELEASE^P200'^VA(200,^8;16^Q
"^DD",11005,11005,8.16,5,1,0)
11005^8.15^1
"^DD",11005,11005,8.16,9)
^
"^DD",11005,11005,8.16,"DT")
3140324
"^DD",11005,11005,8.17,0)
DATE DENIED SEC RELEASE^D^^8;17^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,8.17,1,0)
^.1
"^DD",11005,11005,8.17,1,1,0)
^^TRIGGER^11005^8.18
"^DD",11005,11005,8.17,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$P(^A1AE(11005,DA,8),U,18)="" I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,8)):^(8),1:"") S X=$P(Y(1),U,18),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(11005,8.17,1,1,1.4)
"^DD",11005,11005,8.17,1,1,1.4)
S DIH=$G(^A1AE(11005,DIV(0),8)),DIV=X S $P(^(8),U,18)=DIV,DIH=11005,DIG=8.18 D ^DICR
"^DD",11005,11005,8.17,1,1,2)
Q
"^DD",11005,11005,8.17,1,1,"CREATE CONDITION")
S X=$P(^A1AE(11005,DA,8),U,18)=""
"^DD",11005,11005,8.17,1,1,"CREATE VALUE")
S X=DUZ
"^DD",11005,11005,8.17,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11005,11005,8.17,1,1,"FIELD")
USER DENIED SEC RELEASE
"^DD",11005,11005,8.17,5,1,0)
11005^8^10
"^DD",11005,11005,8.17,9)
^
"^DD",11005,11005,8.17,"DT")
3140328
"^DD",11005,11005,8.18,0)
USER DENIED SEC RELEASE^P200'^VA(200,^8;18^Q
"^DD",11005,11005,8.18,5,1,0)
11005^8.17^1
"^DD",11005,11005,8.18,9)
^
"^DD",11005,11005,8.18,"DT")
3140324
"^DD",11005,11005,8.5,0)
ENTERED IN ERROR DESCRIPTION^11005.07^^E;0
"^DD",11005,11005,8.5,21,0)
^^12^12^2871110^^^^
"^DD",11005,11005,8.5,21,1,0)
When the status of a patch is changed to 'entered in error' a bulletin
"^DD",11005,11005,8.5,21,2,0)
is sent to users who have viewed the patch. The bulletin then refers
"^DD",11005,11005,8.5,21,3,0)
them to the 'Display a Patch' option which prints out the entered in error
"^DD",11005,11005,8.5,21,4,0)
description field.
"^DD",11005,11005,8.5,21,5,0)
 
"^DD",11005,11005,8.5,21,6,0)
This description field should tell the user why the patch is in error,
"^DD",11005,11005,8.5,21,7,0)
and where the correct patch can be found.
"^DD",11005,11005,8.5,21,8,0)
 
"^DD",11005,11005,8.5,21,9,0)
If a patch is INCORRECT you should create a new one with the correct
"^DD",11005,11005,8.5,21,10,0)
information. The user can ONLY view the 'Entered in Error Description'
"^DD",11005,11005,8.5,21,11,0)
field via the 'Display a Patch' option for any patch which has a status of
"^DD",11005,11005,8.5,21,12,0)
'entered in error'.
"^DD",11005,11005,9,0)
USER ENTERING^P200'^VA(200,^0;9^Q
"^DD",11005,11005,9,21,0)
^^2^2^2871110^^^^
"^DD",11005,11005,9,21,1,0)
This field is set via the option to 'Add a Patch'. It is set by
"^DD",11005,11005,9,21,2,0)
the system when the patch is first added.
"^DD",11005,11005,9,"DT")
2921202
"^DD",11005,11005,10,0)
DATE PATCH COMPLETED^D^^0;10^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,10,1,0)
^.1
"^DD",11005,11005,10,1,1,0)
^^TRIGGER^11005^13
"^DD",11005,11005,10,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S('$P(^A1AE(11005,DA,0),U,13):1,1:1) I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(11005,10,1,1,1.4)
"^DD",11005,11005,10,1,1,1.4)
S DIH=$G(^A1AE(11005,DIV(0),0)),DIV=X S $P(^(0),U,13)=DIV,DIH=11005,DIG=13 D ^DICR
"^DD",11005,11005,10,1,1,2)
Q
"^DD",11005,11005,10,1,1,"CREATE CONDITION")
S X=$S('$P(^A1AE(11005,DA,0),U,13):1,1:1)
"^DD",11005,11005,10,1,1,"CREATE VALUE")
S X=DUZ
"^DD",11005,11005,10,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11005,11005,10,1,1,"DT")
3140328
"^DD",11005,11005,10,1,1,"FIELD")
USER COMPLETION
"^DD",11005,11005,10,5,1,0)
11005^8^2
"^DD",11005,11005,10,9)
^
"^DD",11005,11005,10,21,0)
3^^3^3^2880406^^^^
"^DD",11005,11005,10,21,1,0)
This field is triggered by the STATUS field, when the status
"^DD",11005,11005,10,21,2,0)
of the patch is set to 'complete/unverified' the DATE PATCH
"^DD",11005,11005,10,21,3,0)
COMPLETED is set. The patch is now available for Verification.
"^DD",11005,11005,10,"DT")
3140328
"^DD",11005,11005,11,0)
DATE PATCH VERIFIED^D^^0;11^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,11,1,0)
^.1
"^DD",11005,11005,11,1,1,0)
^^TRIGGER^11005^14
"^DD",11005,11005,11,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S('$P(^A1AE(11005,DA,0),U,14):1,1:0) I X S X=DIV S Y(1)=$S($D(^A1AE(11005,D0,0)):^(0),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(11005,11,1,1,1.4)
"^DD",11005,11005,11,1,1,1.4)
S DIH=$G(^A1AE(11005,DIV(0),0)),DIV=X S $P(^(0),U,14)=DIV,DIH=11005,DIG=14 D ^DICR
"^DD",11005,11005,11,1,1,2)
Q
"^DD",11005,11005,11,1,1,"CREATE CONDITION")
S X=$S('$P(^A1AE(11005,DA,0),U,14):1,1:0)
"^DD",11005,11005,11,1,1,"CREATE VALUE")
S X=DUZ
"^DD",11005,11005,11,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11005,11005,11,1,1,"DT")
3140328
"^DD",11005,11005,11,1,1,"FIELD")
USER VERIFY
"^DD",11005,11005,11,1,2,0)
11005^AV^MUMPS
"^DD",11005,11005,11,1,2,1)
S:$P(^A1AE(11005,DA,0),U,8)="v" ^A1AE(11005,"AV",+$P(^A1AE(11005,DA,0),U,2),9999999-X,DA)=""
"^DD",11005,11005,11,1,2,2)
K ^A1AE(11005,"AV",+$P(^A1AE(11005,DA,0),U,2),9999999-X,DA)
"^DD",11005,11005,11,1,3,0)
11005^AD^MUMPS
"^DD",11005,11005,11,1,3,1)
S %="D PATCH^A1AECL1(DA)" X %
"^DD",11005,11005,11,1,3,2)
Q
"^DD",11005,11005,11,1,3,"%D",0)
^^1^1^3041028^
"^DD",11005,11005,11,1,3,"%D",1,0)
Updates the checksums in the ROUTINE file 9.8.
"^DD",11005,11005,11,1,3,"DT")
3041028
"^DD",11005,11005,11,5,1,0)
11005^8^1
"^DD",11005,11005,11,9)
^
"^DD",11005,11005,11,21,0)
^^3^3^2970619^^^^
"^DD",11005,11005,11,21,1,0)
This field is triggered by the STATUS field, when the status is
"^DD",11005,11005,11,21,2,0)
of the patch is set to 'verified' the DATE PATCH VERIFIED is
"^DD",11005,11005,11,21,3,0)
set. The patch is now available to the field.
"^DD",11005,11005,11,"DT")
3140328
"^DD",11005,11005,11.5,0)
DATE PATCH RELEASED^D^^0;16^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,11.5,"DT")
3020430
"^DD",11005,11005,12,0)
DATE PATCH FIRST ENTERED^D^^0;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,12,9)
^
"^DD",11005,11005,12,21,0)
^^2^2^2871110^^^^
"^DD",11005,11005,12,21,1,0)
This field is set via the option to 'Add a Patch'. It is set by
"^DD",11005,11005,12,21,2,0)
the system when the patch is first entered.
"^DD",11005,11005,12,"DT")
2860108
"^DD",11005,11005,13,0)
USER COMPLETION^P200'^VA(200,^0;13^Q
"^DD",11005,11005,13,5,1,0)
11005^10^1
"^DD",11005,11005,13,9)
^
"^DD",11005,11005,13,21,0)
^^3^3^2860421^^^
"^DD",11005,11005,13,21,1,0)
This field is triggered by the Date Patch Completed, when the
"^DD",11005,11005,13,21,2,0)
Date is set the User Completing the Patch is entered. The User
"^DD",11005,11005,13,21,3,0)
Entering the Patch may or may not be the same User Completing the Patch.
"^DD",11005,11005,13,"DT")
2921202
"^DD",11005,11005,14,0)
USER VERIFY^P200'^VA(200,^0;14^Q
"^DD",11005,11005,14,1,0)
^.1^^0
"^DD",11005,11005,14,5,1,0)
11005^11^1
"^DD",11005,11005,14,9)
^
"^DD",11005,11005,14,21,0)
^^2^2^2860303^
"^DD",11005,11005,14,21,1,0)
This field is triggered by the Date Patch Verified, When the
"^DD",11005,11005,14,21,2,0)
Date is set the User Verifying the Patch is entered.
"^DD",11005,11005,14,"DT")
2921202
"^DD",11005,11005,15,0)
RETIRED AFTER VERSION^F^^0;15^K:$L(X)>10!($L(X)<1) X
"^DD",11005,11005,15,3)
Answer must be 1-10 characters in length.
"^DD",11005,11005,15,21,0)
^.001^6^6^3040614^^^
"^DD",11005,11005,15,21,1,0)
When a DBA patch is no longer applicable to a specific version
"^DD",11005,11005,15,21,2,0)
the status of the patch is changed to 'retired', and the
"^DD",11005,11005,15,21,3,0)
last version the patch does apply to should be put in this
"^DD",11005,11005,15,21,4,0)
field. Once a patch is retired it nolonger prints with the other
"^DD",11005,11005,15,21,5,0)
patches. Also when it is displayed it will show this field and
"^DD",11005,11005,15,21,6,0)
the retirement comments field.
"^DD",11005,11005,15,"DT")
2891106
"^DD",11005,11005,15.5,0)
RETIREMENT COMMENTS^11005.08^^R;0
"^DD",11005,11005,15.5,21,0)
^^2^2^2891206^^
"^DD",11005,11005,15.5,21,1,0)
When a DBA patch is 'retired' any additional information
"^DD",11005,11005,15.5,21,2,0)
about the retirement should be described in this field.
"^DD",11005,11005,16,0)
INTERNAL COMMENTS^11005.016^^X;0
"^DD",11005,11005,16,21,0)
^^3^3^2910212^^^
"^DD",11005,11005,16,21,1,0)
This field is for internal communication between developers 
"^DD",11005,11005,16,21,2,0)
and verifiers.  This field is never printed or displayed with
"^DD",11005,11005,16,21,3,0)
the patch.
"^DD",11005,11005,17,0)
HOLDING DATE^DX^^0;17^S %DT="EXF" D ^%DT S X=Y K:Y<1 X K:Y<DT X
"^DD",11005,11005,17,3)
This patch can not be 'V'erified before this date.
"^DD",11005,11005,17,21,0)
^^2^2^2920928^^
"^DD",11005,11005,17,21,1,0)
If this patch should not be verified/released before a specific
"^DD",11005,11005,17,21,2,0)
date, enter that date here.  Only dates in the future are allowed.
"^DD",11005,11005,17,"DT")
2920928
"^DD",11005,11005,18,0)
COMPLIANCE DATE^DaX^^0;18^S %DT="EF" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,18,1,0)
^.1
"^DD",11005,11005,18,1,1,0)
11005^CD^MUMPS
"^DD",11005,11005,18,1,1,1)
S ^A1AE(11005,"CD",+$P(^A1AE(11005,DA,0),U,2),9999999-X,DA)=""
"^DD",11005,11005,18,1,1,2)
K ^A1AE(11005,"CD",+$P(^A1AE(11005,DA,0),U,2),9999999-X,DA)
"^DD",11005,11005,18,1,1,"%D",0)
^^1^1^3030122^
"^DD",11005,11005,18,1,1,"%D",1,0)
This is the compliance date cross-reference sorted by package.
"^DD",11005,11005,18,1,1,"DT")
3030122
"^DD",11005,11005,18,21,0)
^.001^10^10^3040603^^^^
"^DD",11005,11005,18,21,1,0)
Each patch will now have a compliance date. The compliance date is  the 
"^DD",11005,11005,18,21,2,0)
deadline date for installation. The compliance date will entered at time 
"^DD",11005,11005,18,21,3,0)
of the patch release by the NVS staff releasing the patch. The software 
"^DD",11005,11005,18,21,4,0)
will present a default to the releaser based on the rules defined in 
"^DD",11005,11005,18,21,5,0)
directive 2001-023: 1 day for emergency patches and 30 days for mandatory 
"^DD",11005,11005,18,21,6,0)
(all other) patches. The default may be changed to a date agreed to by 
"^DD",11005,11005,18,21,7,0)
SD&D, NVS, and the stakeholders for the project. For example, a patch 
"^DD",11005,11005,18,21,8,0)
might have a directive that allows for 45 day window of installation or 
"^DD",11005,11005,18,21,9,0)
an emergency patch might be a 2 day install instead of 1 day installation 
"^DD",11005,11005,18,21,10,0)
deadline. 
"^DD",11005,11005,18,"AUDIT")
y
"^DD",11005,11005,18,"DT")
3030122
"^DD",11005,11005,19,0)
COMPLIANCE DATE COMMENT^11005.019^^3;0
"^DD",11005,11005,20,0)
LAST EDITED^D^^0;19^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005,20,21,0)
^^3^3^3081022^
"^DD",11005,11005,20,21,1,0)
This field will get set everytime someone uses the A1AE ADD/EDIT
"^DD",11005,11005,20,21,2,0)
template to edit the patch, it will record the date of the edit.
"^DD",11005,11005,20,21,3,0)

"^DD",11005,11005,20,"DT")
3081022
"^DD",11005,11005,26,0)
IN REVIEW DESCRIPTION^11005.026^^26;0
"^DD",11005,11005,27,0)
SEC DEVELOPMENT DESCRIPTION^11005.027^^27;0
"^DD",11005,11005,28,0)
NOT FOR SEC RELEASE DESC^11005.028^^28;0
"^DD",11005,11005,40,0)
NEW PACKAGE^F^^4;1^K:$L(X)>30!($L(X)<4)!'(X?1.AN1" "1.NP) X
"^DD",11005,11005,40,1,0)
^.1
"^DD",11005,11005,40,1,1,0)
11005^PK
"^DD",11005,11005,40,1,1,1)
S ^A1AE(11005,"PK",$E(X,1,30),DA)=""
"^DD",11005,11005,40,1,1,2)
K ^A1AE(11005,"PK",$E(X,1,30),DA)
"^DD",11005,11005,40,1,1,"DT")
3060524
"^DD",11005,11005,40,3)
Answer must be 4-30 characters in length.
"^DD",11005,11005,40,21,0)
^^2^2^3060524^
"^DD",11005,11005,40,21,1,0)
This field holds the new Package name when a patch entry is used to
"^DD",11005,11005,40,21,2,0)
control a new package version.
"^DD",11005,11005,40,"DT")
3060524
"^DD",11005,11005,50,0)
PROBLEMS SOLVED^11005.06PA^^1;0
"^DD",11005,11005,50,21,0)
^^2^2^2860224^^^^
"^DD",11005,11005,50,21,1,0)
This sub-file keeps track of what problems in the Problem File are
"^DD",11005,11005,50,21,2,0)
resolved by this patch.
"^DD",11005,11005,100,0)
ROUTINE NAME^11005.03A^^P;0
"^DD",11005,11005,100,21,0)
^^2^2^2921213^^^^
"^DD",11005,11005,100,21,1,0)
If a programming change has been made to a Routine, enter
"^DD",11005,11005,100,21,2,0)
the name of the Routine.
"^DD",11005,11005,102,0)
SECOND LINE^F^^P2;1^K:$L(X)>200!($L(X)<2) X
"^DD",11005,11005,102,3)
Answer must be 2-200 characters in length.
"^DD",11005,11005,102,21,0)
^^2^2^3070614^
"^DD",11005,11005,102,21,1,0)
This holds a sample of what the second line of each routine should look 
"^DD",11005,11005,102,21,2,0)
like.
"^DD",11005,11005,102,"DT")
3070614
"^DD",11005,11005,103,0)
DISPLAY ROUTINE PATCH LIST^S^0:No;1:Yes;^5;1^Q
"^DD",11005,11005,103,21,0)
^^2^2^3071105^
"^DD",11005,11005,103,21,1,0)
This field is used to control if the routine list of patches is 
"^DD",11005,11005,103,21,2,0)
displayed.
"^DD",11005,11005,103,"DT")
3071106
"^DD",11005,11005,150,0)
PATCH RELEASE CHECK^11005.09IP^^Q;0
"^DD",11005,11005,150,21,0)
^^4^4^2920918^^^
"^DD",11005,11005,150,21,1,0)
Enter a patch which must be verified and installed allong with this patch.
"^DD",11005,11005,150,21,2,0)
 
"^DD",11005,11005,150,21,3,0)
If you use the 'routine name' for lookup make sure the correct patch is
"^DD",11005,11005,150,21,4,0)
selected as routines may appear in more than one patch.
"^DD",11005,11005,200,0)
PRINTED BY^11005.02P^^2;0
"^DD",11005,11005,200,21,0)
^^3^3^2871110^^^^
"^DD",11005,11005,200,21,1,0)
To keep track of when a 'verified' patch is new for a specific  
"^DD",11005,11005,200,21,2,0)
user, the system keeps track of the first and last time  
"^DD",11005,11005,200,21,3,0)
a user printed the patch.
"^DD",11005,11005,200,21,4,0)
Verified Patches.
"^DD",11005,11005.01,0)
PATCH DESCRIPTION SUB-FIELD^NL^.01^1
"^DD",11005,11005.01,0,"DT")
2971112
"^DD",11005,11005.01,0,"NM","PATCH DESCRIPTION")

"^DD",11005,11005.01,0,"UP")
11005
"^DD",11005,11005.01,.01,0)
PATCH DESCRIPTION^WL^^0;1^Q
"^DD",11005,11005.01,.01,"DT")
3140317
"^DD",11005,11005.016,0)
INTERNAL COMMENTS SUB-FIELD^^.01^1
"^DD",11005,11005.016,0,"NM","INTERNAL COMMENTS")

"^DD",11005,11005.016,0,"UP")
11005
"^DD",11005,11005.016,.01,0)
INTERNAL COMMENTS^W^^0;1^Q
"^DD",11005,11005.016,.01,"DT")
2910212
"^DD",11005,11005.019,0)
COMPLIANCE DATE COMMENT SUB-FIELD^^.01^1
"^DD",11005,11005.019,0,"DT")
3030116
"^DD",11005,11005.019,0,"NM","COMPLIANCE DATE COMMENT")

"^DD",11005,11005.019,0,"UP")
11005
"^DD",11005,11005.019,.01,0)
COMPLIANCE DATE COMMENT^W^^0;1^Q
"^DD",11005,11005.019,.01,3)
Enter the reason for editing the Compliance Date
"^DD",11005,11005.019,.01,21,0)
^^1^1^3030116^
"^DD",11005,11005.019,.01,21,1,0)
This is the reason for editing the compliance date
"^DD",11005,11005.019,.01,"DT")
3030116
"^DD",11005,11005.02,0)
PRINTED BY SUB-FIELD^NL^3^3
"^DD",11005,11005.02,0,"DT")
2921202
"^DD",11005,11005.02,0,"NM","PRINTED BY")

"^DD",11005,11005.02,0,"UP")
11005
"^DD",11005,11005.02,.01,0)
USER^P200'X^VA(200,^0;1^S DINUM=X
"^DD",11005,11005.02,.01,1,0)
^.1^^0
"^DD",11005,11005.02,.01,21,0)
^^2^2^2860421^^^
"^DD",11005,11005.02,.01,21,1,0)
This field keeps track of each user who printed the Completed/
"^DD",11005,11005.02,.01,21,2,0)
unverified patch.
"^DD",11005,11005.02,.01,"DT")
2921202
"^DD",11005,11005.02,2,0)
INITIALLY PRINTED^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005.02,2,21,0)
^^1^1^2860303^^^
"^DD",11005,11005.02,2,21,1,0)
This field keeps track of the First Time a User Printed the Patch.
"^DD",11005,11005.02,2,"DT")
2860108
"^DD",11005,11005.02,3,0)
LAST TIME PRINTED^D^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11005,11005.02,3,1,0)
^.1
"^DD",11005,11005.02,3,1,1,0)
11005^AU^MUMPS
"^DD",11005,11005.02,3,1,1,1)
S ^A1AE(11005,"AU",+$P(^A1AE(11005,DA(1),2,DA,0),U,1),+$P(^A1AE(11005,DA(1),0),U,2),9999999-X)=""
"^DD",11005,11005.02,3,1,1,2)
K ^A1AE(11005,"AU",+$P(^A1AE(11005,DA(1),2,DA,0),U,1),+$P(^A1AE(11005,DA(1),0),U,2),9999999-X)
"^DD",11005,11005.02,3,21,0)
^^1^1^2860303^^^
"^DD",11005,11005.02,3,21,1,0)
This field keeps track of the Last Time a User Printed the Patch.
"^DD",11005,11005.02,3,"DT")
2860203
"^DD",11005,11005.026,0)
IN REVIEW DESCRIPTION SUB-FIELD^^.01^1
"^DD",11005,11005.026,0,"DT")
3140324
"^DD",11005,11005.026,0,"NM","IN REVIEW DESCRIPTION")

"^DD",11005,11005.026,0,"UP")
11005
"^DD",11005,11005.026,.01,0)
IN REVIEW DESCRIPTION^Wx^^0;1^Q
"^DD",11005,11005.026,.01,"DT")
3140324
"^DD",11005,11005.027,0)
SEC DEVELOPMENT DESCRIPTION SUB-FIELD^^.01^1
"^DD",11005,11005.027,0,"DT")
3140324
"^DD",11005,11005.027,0,"NM","SEC DEVELOPMENT DESCRIPTION")

"^DD",11005,11005.027,0,"UP")
11005
"^DD",11005,11005.027,.01,0)
SEC DEVELOPMENT DESCRIPTION^Wx^^0;1^Q
"^DD",11005,11005.027,.01,"DT")
3140324
"^DD",11005,11005.028,0)
NOT FOR SEC RELEASE DESC SUB-FIELD^^.01^1
"^DD",11005,11005.028,0,"DT")
3140324
"^DD",11005,11005.028,0,"NM","NOT FOR SEC RELEASE DESC")

"^DD",11005,11005.028,0,"UP")
11005
"^DD",11005,11005.028,.01,0)
NOT FOR SEC RELEASE DESC^Wx^^0;1^Q
"^DD",11005,11005.028,.01,"DT")
3140324
"^DD",11005,11005.03,0)
ROUTINE NAME SUB-FIELD^NL^5^6
"^DD",11005,11005.03,0,"DT")
3051012
"^DD",11005,11005.03,0,"IX","B",11005.03,.01)

"^DD",11005,11005.03,0,"NM","ROUTINE NAME")

"^DD",11005,11005.03,0,"UP")
11005
"^DD",11005,11005.03,.01,0)
ROUTINE NAME^MFX^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>8!($L(X)<2)!'((X?.UN)!(X?1"%".UN)) X I $D(X) S SAVX=X,X="A1AEM2" X ^%ZOSF("TEST") S X=SAVX I $T D RCHK^A1AEM2
"^DD",11005,11005.03,.01,1,0)
^.1
"^DD",11005,11005.03,.01,1,1,0)
11005^R
"^DD",11005,11005.03,.01,1,1,1)
S ^A1AE(11005,"R",$E(X,1,30),DA(1),DA)=""
"^DD",11005,11005.03,.01,1,1,2)
K ^A1AE(11005,"R",$E(X,1,30),DA(1),DA)
"^DD",11005,11005.03,.01,1,1,"DT")
3050927
"^DD",11005,11005.03,.01,1,2,0)
11005.03^B
"^DD",11005,11005.03,.01,1,2,1)
S ^A1AE(11005,DA(1),"P","B",$E(X,1,30),DA)=""
"^DD",11005,11005.03,.01,1,2,2)
K ^A1AE(11005,DA(1),"P","B",$E(X,1,30),DA)
"^DD",11005,11005.03,.01,1,2,"%D",0)
^^1^1^3050927^
"^DD",11005,11005.03,.01,1,2,"%D",1,0)
This is the normal "B" lookup index.
"^DD",11005,11005.03,.01,1,2,"DT")
3050927
"^DD",11005,11005.03,.01,3)
ANSWER MUST BE 2-8 CHARACTERS IN LENGTH
"^DD",11005,11005.03,.01,21,0)
^^10^10^2921213^^^^
"^DD",11005,11005.03,.01,21,1,0)
If a programming change has been made to a Routine, enter
"^DD",11005,11005.03,.01,21,2,0)
the name of the Routine.  Each patched routine should have 
"^DD",11005,11005.03,.01,21,3,0)
a separate entry.
"^DD",11005,11005.03,.01,21,4,0)
If the routine can be found in the routine directory you
"^DD",11005,11005.03,.01,21,5,0)
will have the option of extracting lines from the routine
"^DD",11005,11005.03,.01,21,6,0)
and stuffing them into the Description of Routine Changes
"^DD",11005,11005.03,.01,21,7,0)
field.
"^DD",11005,11005.03,.01,21,8,0)
If the routine is in an input PackMan message you will have
"^DD",11005,11005.03,.01,21,9,0)
the option of extracting lines from the routine and adding
"^DD",11005,11005.03,.01,21,10,0)
them to the Description of Routine Changes field.
"^DD",11005,11005.03,.01,22)

"^DD",11005,11005.03,.01,"DT")
3141006
"^DD",11005,11005.03,2,0)
ROUTINE CHECKSUM^11005.32^^X;0
"^DD",11005,11005.03,2.5,0)
DESCRIPTION OF ROUTINE CHANGES^11005.04^^D;0
"^DD",11005,11005.03,2.5,21,0)
^^21^21^2871110^^^^
"^DD",11005,11005.03,2.5,21,1,0)
When changes are made to routines the description should include
"^DD",11005,11005.03,2.5,21,2,0)
1)  the LINE  2)  the previous code  3)  the new code  and any
"^DD",11005,11005.03,2.5,21,3,0)
other information which would help to clearly explain the fix
"^DD",11005,11005.03,2.5,21,4,0)
that was done. Finally, show the lines of code that were changed
"^DD",11005,11005.03,2.5,21,5,0)
in their entirety.
"^DD",11005,11005.03,2.5,21,6,0)
 
"^DD",11005,11005.03,2.5,21,7,0)
 note: r  means 'replace' and
"^DD",11005,11005.03,2.5,21,8,0)
       w  means 'with'
"^DD",11005,11005.03,2.5,21,9,0)
 
"^DD",11005,11005.03,2.5,21,10,0)
The convention for entering code changes are as follows:
"^DD",11005,11005.03,2.5,21,11,0)
 
"^DD",11005,11005.03,2.5,21,12,0)
LINE: EN
"^DD",11005,11005.03,2.5,21,13,0)
    r  DPT
"^DD",11005,11005.03,2.5,21,14,0)
    w  ^DPT
"^DD",11005,11005.03,2.5,21,15,0)
 
"^DD",11005,11005.03,2.5,21,16,0)
THE LINE SHOULD LOOK LIKE THE FOLLOWING:
"^DD",11005,11005.03,2.5,21,17,0)
---------------------------------------
"^DD",11005,11005.03,2.5,21,18,0)
EN       S DA=DFN,DIE="^DPT(",DR=".01" D ^DIE
"^DD",11005,11005.03,2.5,21,19,0)
 
"^DD",11005,11005.03,2.5,21,20,0)
 
"^DD",11005,11005.03,2.5,21,21,0)
A1AEINTEG= -94
"^DD",11005,11005.03,3,0)
KIDS CHECKSUM^F^^0;2^K:$L(X)>15!($L(X)<3) X
"^DD",11005,11005.03,3,3)
Answer must be 3-15 characters in length.
"^DD",11005,11005.03,3,"DT")
3050912
"^DD",11005,11005.03,4,0)
PATCH LIST^F^^0;3^K:$L(X)>200!($L(X)<5)!'(X?2"*"1.NP2"*") X
"^DD",11005,11005.03,4,3)
Answer must be 5-200 characters in length.
"^DD",11005,11005.03,4,21,0)
^^2^2^3050926^
"^DD",11005,11005.03,4,21,1,0)
This field holds the routine patch list at the time the patch was loaded 
"^DD",11005,11005.03,4,21,2,0)
into FORUM.
"^DD",11005,11005.03,4,"DT")
3050926
"^DD",11005,11005.03,5,0)
OLD CHECKSUM^F^^0;4^K:$L(X)>15!($L(X)<3) X
"^DD",11005,11005.03,5,3)
Answer must be 3-15 characters in length.
"^DD",11005,11005.03,5,21,0)
^^3^3^3051012^
"^DD",11005,11005.03,5,21,1,0)
This field holds the before checksum at the time the patch is loaded into 
"^DD",11005,11005.03,5,21,2,0)
the patch module.  This old checksum value is pulled from the ROUTINE 
"^DD",11005,11005.03,5,21,3,0)
file.
"^DD",11005,11005.03,5,"DT")
3051012
"^DD",11005,11005.04,0)
DESCRIPTION OF ROUTINE CHANGES SUB-FIELD^NL^.01^1
"^DD",11005,11005.04,0,"NM","DESCRIPTION OF ROUTINE CHANGES")

"^DD",11005,11005.04,0,"UP")
11005.03
"^DD",11005,11005.04,.01,0)
DESCRIPTION OF ROUTINE CHANGES^WL^^0;1^Q
"^DD",11005,11005.04,.01,21,0)
^^4^4^2871009^^^^
"^DD",11005,11005.04,.01,21,1,0)
When Changes are made to Routines the Description should include
"^DD",11005,11005.04,.01,21,2,0)
1)  the TAG  2) the previous code  3)  the new code  and any
"^DD",11005,11005.04,.01,21,3,0)
other information which would help to clearly explain the fix
"^DD",11005,11005.04,.01,21,4,0)
that was done.
"^DD",11005,11005.04,.01,"DT")
2860717
"^DD",11005,11005.05,0)
CATEGORY OF PATCH SUB-FIELD^NL^.01^1
"^DD",11005,11005.05,0,"DT")
2921123
"^DD",11005,11005.05,0,"NM","CATEGORY OF PATCH")

"^DD",11005,11005.05,0,"UP")
11005
"^DD",11005,11005.05,.01,0)
CATEGORY OF PATCH^MRSX^d:DATA DICTIONARY;i:INPUT TEMPLATE;p:PRINT TEMPLATE;r:ROUTINE;s:SORT TEMPLATE;o:OTHER;db:DATABASE;e:ENHANCEMENT;pp:PATCH FOR A PATCH;inf:INFORMATIONAL;^0;1^I $T(^A1AEM)'="" D DD^A1AEM
"^DD",11005,11005.05,.01,1,0)
^.1
"^DD",11005,11005.05,.01,1,1,0)
11005^AC^MUMPS
"^DD",11005,11005.05,.01,1,1,1)
S ^A1AE(11005,"AC",+$P(^A1AE(11005,DA(1),0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA(1),DA)=""
"^DD",11005,11005.05,.01,1,1,2)
K ^A1AE(11005,"AC",+$P(^A1AE(11005,DA(1),0),U,2),+$P(^(0),U,3),X,+$P(^(0),U,4),DA(1),DA)
"^DD",11005,11005.05,.01,21,0)
^^6^6^2921123^^^^
"^DD",11005,11005.05,.01,21,1,0)
Since a Patch may fall under more than one Category this
"^DD",11005,11005.05,.01,21,2,0)
field has been made a multiple. Enter one or more Category
"^DD",11005,11005.05,.01,21,3,0)
code to describe the type of Patch.
"^DD",11005,11005.05,.01,21,4,0)
 
"^DD",11005,11005.05,.01,21,5,0)
The new category Enhancement indicates that the patch contains less than
"^DD",11005,11005.05,.01,21,6,0)
5% of the full package's routines, docuementation, install time, etc.
"^DD",11005,11005.05,.01,23,0)
^^3^3^2920928^
"^DD",11005,11005.05,.01,23,1,0)
 
"^DD",11005,11005.05,.01,23,2,0)
 
"^DD",11005,11005.05,.01,23,3,0)
 
"^DD",11005,11005.05,.01,"DT")
2921123
"^DD",11005,11005.06,0)
PROBLEMS SOLVED SUB-FIELD^NL^.01^1
"^DD",11005,11005.06,0,"NM","PROBLEMS SOLVED")

"^DD",11005,11005.06,0,"UP")
11005
"^DD",11005,11005.06,.01,0)
PROBLEM^M*P11006'^A1AE(11006,^0;1^S DIC("S")="I $P(^(0),U,10)=""c""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",11005,11005.06,.01,1,0)
^.1^^0
"^DD",11005,11005.06,.01,12)
Patches are only assigned to Completed problems.
"^DD",11005,11005.06,.01,12.1)
S DIC("S")="I $P(^(0),U,10)=""c"""
"^DD",11005,11005.06,.01,21,0)
^^2^2^2860224^^^^
"^DD",11005,11005.06,.01,21,1,0)
This field points to the Region 1 Problems File(#11006) to indicate
"^DD",11005,11005.06,.01,21,2,0)
the problems which are resolved, or associated, with this patch.
"^DD",11005,11005.06,.01,"DT")
2860224
"^DD",11005,11005.07,0)
ENTERED IN ERROR DESCRIPTION SUB-FIELD^^.01^1
"^DD",11005,11005.07,0,"NM","ENTERED IN ERROR DESCRIPTION")

"^DD",11005,11005.07,0,"UP")
11005
"^DD",11005,11005.07,.01,0)
ENTERED IN ERROR DESCRIPTION^W^^0;1^Q
"^DD",11005,11005.07,.01,21,0)
^^2^2^2860421^^^
"^DD",11005,11005.07,.01,21,1,0)
Enter a description of why this patch is in error, and where to
"^DD",11005,11005.07,.01,21,2,0)
go for the corrected patch.
"^DD",11005,11005.07,.01,"DT")
2860417
"^DD",11005,11005.08,0)
RETIREMENT COMMENTS SUB-FIELD^^.01^1
"^DD",11005,11005.08,0,"NM","RETIREMENT COMMENTS")

"^DD",11005,11005.08,0,"UP")
11005
"^DD",11005,11005.08,.01,0)
RETIREMENT COMMENTS^W^^0;1^Q
"^DD",11005,11005.08,.01,"DT")
2891106
"^DD",11005,11005.09,0)
PATCH RELEASE CHECK SUB-FIELD^^2^2
"^DD",11005,11005.09,0,"DT")
2920929
"^DD",11005,11005.09,0,"ID",2)
W "   ",@("$P($P($C(59)_$S($D(^DD(11005.09,2,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,2)_"":"",2),$C(59),1)")
"^DD",11005,11005.09,0,"IX","B",11005.09,.01)

"^DD",11005,11005.09,0,"NM","PATCH RELEASE CHECK")

"^DD",11005,11005.09,0,"UP")
11005
"^DD",11005,11005.09,.01,0)
PATCH RELEASE CHECK^M*P11005'^A1AE(11005,^0;1^S DIC("S")="I ""er""'[$E($P(^(0),""^"",8)_1)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",11005,11005.09,.01,1,0)
^.1
"^DD",11005,11005.09,.01,1,1,0)
11005.09^B
"^DD",11005,11005.09,.01,1,1,1)
S ^A1AE(11005,DA(1),"Q","B",$E(X,1,30),DA)=""
"^DD",11005,11005.09,.01,1,1,2)
K ^A1AE(11005,DA(1),"Q","B",$E(X,1,30),DA)
"^DD",11005,11005.09,.01,3)
Enter a patch which should be verified and installed with this patch.
"^DD",11005,11005.09,.01,12)
Entered in Error or Retired patches can not be selected
"^DD",11005,11005.09,.01,12.1)
S DIC("S")="I ""er""'[$E($P(^(0),""^"",8)_1)"
"^DD",11005,11005.09,.01,21,0)
^^4^4^2920929^^^^
"^DD",11005,11005.09,.01,21,1,0)
Enter a patch which must be verified and installed with this patch.
"^DD",11005,11005.09,.01,21,2,0)
 
"^DD",11005,11005.09,.01,21,3,0)
If you use the 'routine name' for lookup make sure the correct patch is
"^DD",11005,11005.09,.01,21,4,0)
selected as routines may appear in more than one patch.
"^DD",11005,11005.09,.01,"DT")
2920929
"^DD",11005,11005.09,2,0)
REQUIRED FOR VERIFICATION^S^y:YES;n:NO;^0;2^Q
"^DD",11005,11005.09,2,21,0)
^^7^7^2920929^^
"^DD",11005,11005.09,2,21,1,0)
Enter Yes if the Patch in the 'PATCH RELEASE CHECK' must be verified 
"^DD",11005,11005.09,2,21,2,0)
and installed prior to verification and installation of this Patch.
"^DD",11005,11005.09,2,21,3,0)
 
"^DD",11005,11005.09,2,21,4,0)
Enter No to allow concurrent verification and installation of this
"^DD",11005,11005.09,2,21,5,0)
patch and the patch in the 'PATCH RELEAE CHECK'.
"^DD",11005,11005.09,2,21,6,0)
 
"^DD",11005,11005.09,2,21,7,0)
In both cases the patches will be listed in the patch.
"^DD",11005,11005.09,2,"DT")
2920918
"^DD",11005,11005.32,0)
ROUTINE CHECKSUM SUB-FIELD^^.01^1
"^DD",11005,11005.32,0,"NM","ROUTINE CHECKSUM")

"^DD",11005,11005.32,0,"UP")
11005.03
"^DD",11005,11005.32,.01,0)
ROUTINE CHECKSUM^W^^0;1^Q
"^DD",11005,11005.32,.01,"DT")
2910319
"^DD",11005.1,11005.1,0)
FIELD^^12^10
"^DD",11005.1,11005.1,0,"DT")
3050609
"^DD",11005.1,11005.1,0,"IX","AC",11005.1,7)

"^DD",11005.1,11005.1,0,"IX","B",11005.1,.01)

"^DD",11005.1,11005.1,0,"NM","DHCP PATCH MESSAGE")

"^DD",11005.1,11005.1,0,"VRPK")
A1AE
"^DD",11005.1,11005.1,.01,0)
NAME^RP11005'X^A1AE(11005,^0;1^S DINUM=X
"^DD",11005.1,11005.1,.01,1,0)
^.1
"^DD",11005.1,11005.1,.01,1,1,0)
11005.1^B
"^DD",11005.1,11005.1,.01,1,1,1)
S ^A1AE(11005.1,"B",$E(X,1,30),DA)=""
"^DD",11005.1,11005.1,.01,1,1,2)
K ^A1AE(11005.1,"B",$E(X,1,30),DA)
"^DD",11005.1,11005.1,.01,3)

"^DD",11005.1,11005.1,.01,"DT")
2900429
"^DD",11005.1,11005.1,2,0)
INPUT MESSAGE NUMBER^NJ9,0^^0;2^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11005.1,11005.1,2,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",11005.1,11005.1,3,0)
INPUT DATE/TIME^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",11005.1,11005.1,4,0)
VERIFIER MESSAGE NUMBER^NJ9,0^^0;4^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11005.1,11005.1,4,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",11005.1,11005.1,5,0)
VERIFIER DATE/TIME^Da^^0;5^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",11005.1,11005.1,5,"AUDIT")
e
"^DD",11005.1,11005.1,5,"DT")
3020821
"^DD",11005.1,11005.1,6,0)
RELEASED MESSAGE NUMBER^NJ9,0^^0;6^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11005.1,11005.1,6,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",11005.1,11005.1,7,0)
RELEASED DATE/TIME^D^^0;7^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",11005.1,11005.1,7,1,0)
^.1^^-1
"^DD",11005.1,11005.1,7,1,1,0)
11005.1^AC^MUMPS
"^DD",11005.1,11005.1,7,1,1,1)
S $P(^A1AE(11005,DA,0),U,16)=X
"^DD",11005.1,11005.1,7,1,1,2)
Q
"^DD",11005.1,11005.1,7,1,1,"DT")
3020430
"^DD",11005.1,11005.1,7,"DT")
3041028
"^DD",11005.1,11005.1,11,0)
MESSAGE TYPE^S^K:KIDS;P:PACKMAN;X:DIFROM;^0;11^Q
"^DD",11005.1,11005.1,11,"DT")
2960222
"^DD",11005.1,11005.1,12,0)
TEST#^NJ3,0^^0;12^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11005.1,11005.1,12,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",11005.1,11005.1,12,21,0)
^^1^1^3050609^
"^DD",11005.1,11005.1,12,21,1,0)
This field holds the test version number.
"^DD",11005.1,11005.1,12,"DT")
3050609
"^DD",11005.1,11005.1,20,0)
MESSAGE TEXT^11005.11^^2;0
"^DD",11005.1,11005.11,0)
MESSAGE TEXT SUB-FIELD^^.01^1
"^DD",11005.1,11005.11,0,"NM","MESSAGE TEXT")

"^DD",11005.1,11005.11,0,"UP")
11005.1
"^DD",11005.1,11005.11,.01,0)
MESSAGE TEXT^WL^^0;1^Q
"^DD",11005.1,11005.11,.01,.1)
PATCH MESSAGE DESCRIPTION
"^DD",11005.1,11005.11,.01,21,0)
^^2^2^2900821^^^^
"^DD",11005.1,11005.11,.01,21,1,0)
This field contains text (generally Packman routines) which is copied
"^DD",11005.1,11005.11,.01,21,2,0)
exactly into a message for creation of a Patch mail message.
"^DD",11005.2,11005.2,0)
FIELD^^.08^8
"^DD",11005.2,11005.2,0,"DT")
3140326
"^DD",11005.2,11005.2,0,"NM","DHCP PATCH STATUS")

"^DD",11005.2,11005.2,.01,0)
CODE^RFJ2^^0;1^K:$L(X)>2!($L(X)<1)!'(X?1L.1LN!(X?1.2N)) X
"^DD",11005.2,11005.2,.01,1,0)
^.1^^0
"^DD",11005.2,11005.2,.01,3)
Answer must be 1-2 characters in length.
"^DD",11005.2,11005.2,.01,"DT")
3140326
"^DD",11005.2,11005.2,.02,0)
MEANING^RFJ30^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",11005.2,11005.2,.02,3)
Answer must be 3-30 characters in length.
"^DD",11005.2,11005.2,.02,"DT")
3140326
"^DD",11005.2,11005.2,.03,0)
DISPLAY^FJ30^^0;3^K:$L(X)>30!($L(X)<3) X
"^DD",11005.2,11005.2,.03,3)
Answer must be 3-30 characters in length.
"^DD",11005.2,11005.2,.03,"DT")
3140326
"^DD",11005.2,11005.2,.04,0)
BULLETIN NAME^FJ30^^0;4^K:$L(X)>30!($L(X)<12) X
"^DD",11005.2,11005.2,.04,3)
Answer must be 12-30 characters in length.
"^DD",11005.2,11005.2,.04,"DT")
3140326
"^DD",11005.2,11005.2,.05,0)
SENT TO^FJ32^^0;5^K:$L(X)>32!($L(X)<3) X
"^DD",11005.2,11005.2,.05,3)
Answer must be 3-32 characters in length.
"^DD",11005.2,11005.2,.05,"DT")
3140326
"^DD",11005.2,11005.2,.06,0)
ALTERNATE MEANING^FJ40^^0;6^K:$L(X)>40!($L(X)<3) X
"^DD",11005.2,11005.2,.06,3)
Answer must be 3-40 characters in length.
"^DD",11005.2,11005.2,.06,"DT")
3140326
"^DD",11005.2,11005.2,.07,0)
OPTION MENU TEXT^RFJ50^^0;7^K:$L(X)>50!($L(X)<3) X
"^DD",11005.2,11005.2,.07,3)
Answer must be 3-50 characters in length.
"^DD",11005.2,11005.2,.07,"DT")
3140326
"^DD",11005.2,11005.2,.08,0)
SAME STATUS GENERATES TEST MSG^S^1:YES;0:NO;^0;8^Q
"^DD",11005.2,11005.2,.08,"DT")
3140326
"^DD",11005.5,11005.5,0)
FIELD^^21^7
"^DD",11005.5,11005.5,0,"DDA")
N
"^DD",11005.5,11005.5,0,"DT")
3050926
"^DD",11005.5,11005.5,0,"IX","B",11005.5,.01)

"^DD",11005.5,11005.5,0,"NM","DHCP HFS MESSAGE")

"^DD",11005.5,11005.5,0,"VRPK")
A1AE
"^DD",11005.5,11005.5,.01,0)
NAME^RP11005'X^A1AE(11005,^0;1^S DINUM=X
"^DD",11005.5,11005.5,.01,1,0)
^.1
"^DD",11005.5,11005.5,.01,1,1,0)
11005.5^B
"^DD",11005.5,11005.5,.01,1,1,1)
S ^A1AE(11005.5,"B",$E(X,1,30),DA)=""
"^DD",11005.5,11005.5,.01,1,1,2)
K ^A1AE(11005.5,"B",$E(X,1,30),DA)
"^DD",11005.5,11005.5,.01,3)

"^DD",11005.5,11005.5,.01,"DT")
3050801
"^DD",11005.5,11005.5,2,0)
Input Message Number^NJ10,0^^0;2^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11005.5,11005.5,2,3)
Type a Number between 1 and 9999999999, 0 Decimal Digits
"^DD",11005.5,11005.5,2,"DT")
3050816
"^DD",11005.5,11005.5,3,0)
Input Date/Time^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",11005.5,11005.5,3,"DT")
3050816
"^DD",11005.5,11005.5,4,0)
Release Date/Time^D^^0;4^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",11005.5,11005.5,4,"DT")
3050816
"^DD",11005.5,11005.5,5,0)
From Domain^F^^0;5^K:$L(X)>200!($L(X)<2) X
"^DD",11005.5,11005.5,5,3)
Answer must be 2-200 characters in length.
"^DD",11005.5,11005.5,5,21,0)
^^2^2^3050816^
"^DD",11005.5,11005.5,5,21,1,0)
This field hold the name of the master patch when more that one patch is 
"^DD",11005.5,11005.5,5,21,2,0)
sent out in a HFS file.
"^DD",11005.5,11005.5,5,"DT")
3050822
"^DD",11005.5,11005.5,11,0)
ROUTINE^11005.511A^^1;0
"^DD",11005.5,11005.5,21,0)
Linked Patches^11005.521A^^2;0
"^DD",11005.5,11005.511,0)
ROUTINE SUB-FIELD^^5^5
"^DD",11005.5,11005.511,0,"DT")
3050926
"^DD",11005.5,11005.511,0,"IX","B",11005.511,.01)

"^DD",11005.5,11005.511,0,"NM","ROUTINE")

"^DD",11005.5,11005.511,0,"UP")
11005.5
"^DD",11005.5,11005.511,.01,0)
ROUTINE^MF^^0;1^K:$L(X)>16!($L(X)<2) X
"^DD",11005.5,11005.511,.01,1,0)
^.1
"^DD",11005.5,11005.511,.01,1,1,0)
11005.511^B
"^DD",11005.5,11005.511,.01,1,1,1)
S ^A1AE(11005.5,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",11005.5,11005.511,.01,1,1,2)
K ^A1AE(11005.5,DA(1),1,"B",$E(X,1,30),DA)
"^DD",11005.5,11005.511,.01,3)
Answer must be 2-16 characters in length.
"^DD",11005.5,11005.511,.01,21,0)
^^1^1^3050921^
"^DD",11005.5,11005.511,.01,21,1,0)
This is the routine name.
"^DD",11005.5,11005.511,.01,"DT")
3050801
"^DD",11005.5,11005.511,2,0)
ADD/DELETE^F^^0;2^K:$L(X)>3!($L(X)<1) X
"^DD",11005.5,11005.511,2,3)
Answer must be 1-3 characters in length.
"^DD",11005.5,11005.511,2,21,0)
^^2^2^3050921^
"^DD",11005.5,11005.511,2,21,1,0)
This is from the Build file and tell's if we are adding the routine (0)
"^DD",11005.5,11005.511,2,21,2,0)
or deleteing the routine (1).
"^DD",11005.5,11005.511,2,"DT")
3050921
"^DD",11005.5,11005.511,2.5,0)
NOP^NJ3,0^^0;3^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",11005.5,11005.511,2.5,3)
Type a Number between 0 and 999, 0 Decimal Digits
"^DD",11005.5,11005.511,2.5,21,0)
^^1^1^3050926^
"^DD",11005.5,11005.511,2.5,21,1,0)
Place holder.
"^DD",11005.5,11005.511,2.5,"DT")
3050926
"^DD",11005.5,11005.511,3,0)
CHECKSUM^F^^0;4^K:$L(X)>15!($L(X)<3) X
"^DD",11005.5,11005.511,3,3)
Answer must be 3-15 characters in length.
"^DD",11005.5,11005.511,3,21,0)
^^1^1^3050921^
"^DD",11005.5,11005.511,3,21,1,0)
This is the routine Checksum from the transport global.
"^DD",11005.5,11005.511,3,"DT")
3050921
"^DD",11005.5,11005.511,5,0)
PATCH LIST^F^^0;5^K:$L(X)>200!($L(X)<5) X
"^DD",11005.5,11005.511,5,3)
Answer must be 5-200 characters in length.
"^DD",11005.5,11005.511,5,21,0)
^^1^1^3050926^
"^DD",11005.5,11005.511,5,21,1,0)
Hold the patch list from the second line of the routine.
"^DD",11005.5,11005.511,5,"DT")
3050926
"^DD",11005.5,11005.521,0)
Linked Patches SUB-FIELD^^.01^1
"^DD",11005.5,11005.521,0,"DT")
3050816
"^DD",11005.5,11005.521,0,"IX","B",11005.521,.01)

"^DD",11005.5,11005.521,0,"NM","Linked Patches")

"^DD",11005.5,11005.521,0,"UP")
11005.5
"^DD",11005.5,11005.521,.01,0)
Linked Patches^MF^^0;1^K:$L(X)>30!($L(X)<2) X
"^DD",11005.5,11005.521,.01,1,0)
^.1
"^DD",11005.5,11005.521,.01,1,1,0)
11005.521^B
"^DD",11005.5,11005.521,.01,1,1,1)
S ^A1AE(11005.5,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",11005.5,11005.521,.01,1,1,2)
K ^A1AE(11005.5,DA(1),2,"B",$E(X,1,30),DA)
"^DD",11005.5,11005.521,.01,3)
Answer must be 2-30 characters in length.
"^DD",11005.5,11005.521,.01,21,0)
^^2^2^3050816^
"^DD",11005.5,11005.521,.01,21,1,0)
This field holds the linked patches when this patch is the master patch 
"^DD",11005.5,11005.521,.01,21,2,0)
of a set of patches in a HFS release.
"^DD",11005.5,11005.521,.01,"DT")
3050816
"^DD",11006,11006,0)
FIELD^^16^19
"^DD",11006,11006,0,"DT")
3140328
"^DD",11006,11006,0,"ID",5)
W ""
"^DD",11006,11006,0,"ID","WRITE")
S A1AEX1=^(0) W ?20,$E($P(A1AEX1,"^",5),1,30),?55,$E($P($P(^DD(11006,10,0),$P(A1AEX1,"^",10)_":",2),";",1),1,15),?75,$S($D(^DIC(3,+$P(A1AEX1,"^",8),0)):$E($P(^(0),"^",1),1,15),1:"NONE")
"^DD",11006,11006,0,"IX","B",11006,.01)

"^DD",11006,11006,0,"IX","PN",11006,4)

"^DD",11006,11006,0,"IX","PS",11006,5)

"^DD",11006,11006,0,"IX","S",11006,5)

"^DD",11006,11006,0,"NM","DHCP PROBLEMS")

"^DD",11006,11006,0,"PT",11005.06,.01)

"^DD",11006,11006,0,"VRPK")
A1AE
"^DD",11006,11006,.01,0)
PROBLEM NUMBER^RFX^^0;1^K:$L(X)>15!($L(X)<3)!'(X?1U.UN1"*"1N.PN1"*"1N.N) X S A1AEX=11006 D IN^A1AEUTL:$D(X) K A1AEX
"^DD",11006,11006,.01,1,0)
^.1^^-1
"^DD",11006,11006,.01,1,1,0)
11006^B
"^DD",11006,11006,.01,1,1,1)
S ^A1AE(11006,"B",$E(X,1,30),DA)=""
"^DD",11006,11006,.01,1,1,2)
K ^A1AE(11006,"B",$E(X,1,30),DA)
"^DD",11006,11006,.01,3)
ANSWER MUST BE 6-15 CHARACTERS IN LENGTH
"^DD",11006,11006,.01,21,0)
^^1^1^2860424^^^
"^DD",11006,11006,.01,21,1,0)
System assigned Problem Number
"^DD",11006,11006,.01,"DT")
2860311
"^DD",11006,11006,2,0)
PACKAGE^RP9.4'I^DIC(9.4,^0;2^Q
"^DD",11006,11006,2,9)
^
"^DD",11006,11006,2,21,0)
^^1^1^2860108^
"^DD",11006,11006,2,21,1,0)
Only the following packages are permitted: RA, DG, SD, A1AG, and A1AE.
"^DD",11006,11006,2,"DT")
2860205
"^DD",11006,11006,3,0)
VERSION^RFI^^0;3^K:$L(X)>10!($L(X)<1) X
"^DD",11006,11006,3,3)
ANSWER MUST BE 1-10 CHARACTERS IN LENGTH
"^DD",11006,11006,3,9)
^
"^DD",11006,11006,3,21,0)
^^2^2^2860108^
"^DD",11006,11006,3,21,1,0)
Enter the version number this problem applies to. The specified version number
"^DD",11006,11006,3,21,2,0)
must exist.
"^DD",11006,11006,3,"DT")
2860205
"^DD",11006,11006,4,0)
PROBLEM NUMBER^RNJ5,0I^^0;4^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
"^DD",11006,11006,4,1,0)
^.1
"^DD",11006,11006,4,1,1,0)
11006^PN
"^DD",11006,11006,4,1,1,1)
S ^A1AE(11006,"PN",$E(X,1,30),DA)=""
"^DD",11006,11006,4,1,1,2)
K ^A1AE(11006,"PN",$E(X,1,30),DA)
"^DD",11006,11006,4,3)
TYPE A WHOLE NUMBER BETWEEN 0 AND 99999
"^DD",11006,11006,4,9)
^
"^DD",11006,11006,4,21,0)
^^1^1^2860108^
"^DD",11006,11006,4,21,1,0)
The problem number is assigned by the system.
"^DD",11006,11006,4,"DT")
2860205
"^DD",11006,11006,5,0)
PROBLEM SUBJECT^RF^^0;5^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>40!($L(X)<3) X
"^DD",11006,11006,5,1,0)
^.1
"^DD",11006,11006,5,1,1,0)
11006^PS
"^DD",11006,11006,5,1,1,1)
S ^A1AE(11006,"PS",$E(X,1,30),DA)=""
"^DD",11006,11006,5,1,1,2)
K ^A1AE(11006,"PS",$E(X,1,30),DA)
"^DD",11006,11006,5,1,2,0)
11006^S
"^DD",11006,11006,5,1,2,1)
S ^A1AE(11006,"S",$E(X,1,30),DA)=""
"^DD",11006,11006,5,1,2,2)
K ^A1AE(11006,"S",$E(X,1,30),DA)
"^DD",11006,11006,5,3)
ANSWER MUST BE 3-40 CHARACTERS IN LENGTH
"^DD",11006,11006,5,21,0)
^^2^2^2860108^
"^DD",11006,11006,5,21,1,0)
Enter a brief description which will be used to identify the Problem
"^DD",11006,11006,5,21,2,0)
Designation.
"^DD",11006,11006,5,"DT")
2860116
"^DD",11006,11006,5.5,0)
PROBLEM DESCRIPTION^11006.01^^D;0
"^DD",11006,11006,5.5,21,0)
^^1^1^2860108^^
"^DD",11006,11006,5.5,21,1,0)
Enter a detailed description of the problem encountered.
"^DD",11006,11006,6,0)
REPORTING STATION/ISC^RP4'^DIC(4,^0;6^Q
"^DD",11006,11006,6,3)

"^DD",11006,11006,6,21,0)
^^1^1^2860108^^
"^DD",11006,11006,6,21,1,0)
Enter the station number or name of your facility.
"^DD",11006,11006,7,0)
REPORTED BY/PHONE^RF^^0;7^K:$L(X)>60!($L(X)<3) X
"^DD",11006,11006,7,3)
ANSWER MUST BE 3-60 CHARACTERS IN LENGTH
"^DD",11006,11006,7,21,0)
^^2^2^2860108^
"^DD",11006,11006,7,21,1,0)
Enter your Name/Phone Number in case the developer needs to contact you
"^DD",11006,11006,7,21,2,0)
concerning this problem.
"^DD",11006,11006,8,0)
USER ENTERING PROBLEM^RP200'^VA(200,^0;8^Q
"^DD",11006,11006,8,3)

"^DD",11006,11006,8,21,0)
^^1^1^2860108^^^
"^DD",11006,11006,8,21,1,0)
This field is a pointer to the User File(#3) and indicates the user who entered the problem.
"^DD",11006,11006,8,"DT")
3050816
"^DD",11006,11006,9,0)
DATE PROBLEM ENTERED^RD^^0;9^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11006,11006,9,3)

"^DD",11006,11006,9,21,0)
^^1^1^2860108^^
"^DD",11006,11006,9,21,1,0)
This field contains the date the problem was entered.
"^DD",11006,11006,10,0)
STATUS OF PROBLEM^RSX^u:UNDER REVIEW;r:RESOLVED;t:TABLED;n:NOT RELEASED FOR REVIEW;c:COMPLETE/RELEASE FOR REVIEW;^0;10^I $D(X),X="R"!(X="T")!(X="U"),'$D(^A1AE(11007,+$P(^A1AE(11006,DA,0),U,2),"PH",DUZ,0)) W !?3,"Only Authorized for 'C' or 'N'" K X
"^DD",11006,11006,10,1,0)
^.1
"^DD",11006,11006,10,1,1,0)
^^TRIGGER^11006^11
"^DD",11006,11006,10,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="t" I X S X=DIV S Y(1)=$S($D(^A1AE(11006,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11006,10,1,1,1.4)
"^DD",11006,11006,10,1,1,1.4)
S DIH=$G(^A1AE(11006,DIV(0),0)),DIV=X S $P(^(0),U,11)=DIV,DIH=11006,DIG=11 D ^DICR
"^DD",11006,11006,10,1,1,2)
Q
"^DD",11006,11006,10,1,1,"CREATE CONDITION")
S X=X="t"
"^DD",11006,11006,10,1,1,"CREATE VALUE")
TODAY
"^DD",11006,11006,10,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11006,11006,10,1,1,"DT")
3140328
"^DD",11006,11006,10,1,1,"FIELD")
TABLED DATE
"^DD",11006,11006,10,1,2,0)
^^TRIGGER^11006^12
"^DD",11006,11006,10,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="r" I X S X=DIV S Y(1)=$S($D(^A1AE(11006,D0,0)):^(0),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11006,10,1,2,1.4)
"^DD",11006,11006,10,1,2,1.4)
S DIH=$G(^A1AE(11006,DIV(0),0)),DIV=X S $P(^(0),U,12)=DIV,DIH=11006,DIG=12 D ^DICR
"^DD",11006,11006,10,1,2,2)
Q
"^DD",11006,11006,10,1,2,"CREATE CONDITION")
S X=X="r"
"^DD",11006,11006,10,1,2,"CREATE VALUE")
TODAY
"^DD",11006,11006,10,1,2,"DELETE VALUE")
NO EFFECT
"^DD",11006,11006,10,1,2,"DT")
3140328
"^DD",11006,11006,10,1,2,"FIELD")
DATE RESOLVED
"^DD",11006,11006,10,1,3,0)
^^TRIGGER^11006^14
"^DD",11006,11006,10,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=X="c" I X S X=DIV S Y(1)=$S($D(^A1AE(11006,D0,0)):^(0),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC X ^DD(11006,10,1,3,1.4)
"^DD",11006,11006,10,1,3,1.4)
S DIH=$G(^A1AE(11006,DIV(0),0)),DIV=X S $P(^(0),U,14)=DIV,DIH=11006,DIG=14 D ^DICR
"^DD",11006,11006,10,1,3,2)
Q
"^DD",11006,11006,10,1,3,"CREATE CONDITION")
S X=X="c"
"^DD",11006,11006,10,1,3,"CREATE VALUE")
TODAY
"^DD",11006,11006,10,1,3,"DELETE VALUE")
NO EFFECT
"^DD",11006,11006,10,1,3,"DT")
3140328
"^DD",11006,11006,10,1,3,"FIELD")
DATE RELEASED FOR REVIEW
"^DD",11006,11006,10,3)

"^DD",11006,11006,10,21,0)
^^2^2^2860127^^^^
"^DD",11006,11006,10,21,1,0)
Enter the current status of this problem. When the problem is first
"^DD",11006,11006,10,21,2,0)
entered the status is set to NOT RELEASED FOR REVIEW.
"^DD",11006,11006,10,"DT")
3140328
"^DD",11006,11006,11,0)
TABLED DATE^D^^0;11^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11006,11006,11,1,0)
^.1^^0
"^DD",11006,11006,11,5,1,0)
11006^10^1
"^DD",11006,11006,11,9)
^
"^DD",11006,11006,11,21,0)
^^2^2^2860108^^
"^DD",11006,11006,11,21,1,0)
If the Status indicates the problem has been tabled, or set aside,
"^DD",11006,11006,11,21,2,0)
the date tabled is entered.
"^DD",11006,11006,11,"DT")
2860117
"^DD",11006,11006,11.5,0)
TABLED COMMENTS^11006.02^^T;0
"^DD",11006,11006,11.5,21,0)
^^2^2^2860108^^
"^DD",11006,11006,11.5,21,1,0)
If the Status indicates the problem has been tabled, or set aside, the
"^DD",11006,11006,11.5,21,2,0)
reason for this action should be entered.
"^DD",11006,11006,12,0)
DATE RESOLVED^D^^0;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11006,11006,12,1,0)
^.1^^0
"^DD",11006,11006,12,3)

"^DD",11006,11006,12,5,1,0)
11006^10^2
"^DD",11006,11006,12,9)
^
"^DD",11006,11006,12,21,0)
^^1^1^2860108^
"^DD",11006,11006,12,21,1,0)
This field contains the date the problem was resolved.
"^DD",11006,11006,12,"DT")
2860117
"^DD",11006,11006,12.5,0)
RESOLVED COMMENTS^11006.03^^R;0
"^DD",11006,11006,13,0)
PATCH^P11005'^A1AE(11005,^0;13^Q
"^DD",11006,11006,13,21,0)
^^2^2^2860128^^
"^DD",11006,11006,13,21,1,0)
This field points to the Region 1 Patches File (#11005), and indicates
"^DD",11006,11006,13,21,2,0)
any patch related to resolving this problem.
"^DD",11006,11006,14,0)
DATE RELEASED FOR REVIEW^D^^0;14^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11006,11006,14,1,0)
^.1^^0
"^DD",11006,11006,14,5,1,0)
11006^10^3
"^DD",11006,11006,14,9)
^
"^DD",11006,11006,14,21,0)
^^1^1^2860108^
"^DD",11006,11006,14,21,1,0)
This field contains the date the problem was released for review.
"^DD",11006,11006,14,"DT")
2860117
"^DD",11006,11006,15,0)
USER TABLING PROBLEM^P200'^VA(200,^0;15^Q
"^DD",11006,11006,15,21,0)
^^2^2^2860108^^
"^DD",11006,11006,15,21,1,0)
If the problem has been tabled, or set aside, this field keeps track
"^DD",11006,11006,15,21,2,0)
of the Developer who tabled it.
"^DD",11006,11006,15,"DT")
3050816
"^DD",11006,11006,16,0)
USER RESOLVING PROBLEM^P200'^VA(200,^0;16^Q
"^DD",11006,11006,16,21,0)
^^2^2^2860108^^
"^DD",11006,11006,16,21,1,0)
If the problem has been resolved, this field keeps track of the
"^DD",11006,11006,16,21,2,0)
Developer who resolved the problem.
"^DD",11006,11006,16,"DT")
3050816
"^DD",11006,11006.01,0)
PROBLEM DESCRIPTION SUB-FIELD^NL^.01^1
"^DD",11006,11006.01,0,"NM","PROBLEM DESCRIPTION")

"^DD",11006,11006.01,0,"UP")
11006
"^DD",11006,11006.01,.01,0)
PROBLEM DESCRIPTION^W^^0;1^Q
"^DD",11006,11006.01,.01,21,0)
^^1^1^2860108^
"^DD",11006,11006.01,.01,21,1,0)
Enter a detailed description of the problem encountered.
"^DD",11006,11006.01,.01,"DT")
2860108
"^DD",11006,11006.02,0)
TABLED COMMENTS SUB-FIELD^NL^.01^1
"^DD",11006,11006.02,0,"NM","TABLED COMMENTS")

"^DD",11006,11006.02,0,"UP")
11006
"^DD",11006,11006.02,.01,0)
TABLED COMMENTS^W^^0;1^Q
"^DD",11006,11006.02,.01,21,0)
^^2^2^2860108^^
"^DD",11006,11006.02,.01,21,1,0)
If the Status indicates the problem has been tabled, or set aside, the
"^DD",11006,11006.02,.01,21,2,0)
reason for this action should be entered.
"^DD",11006,11006.03,0)
RESOLVED COMMENTS SUB-FIELD^NL^.01^1
"^DD",11006,11006.03,0,"NM","RESOLVED COMMENTS")

"^DD",11006,11006.03,0,"UP")
11006
"^DD",11006,11006.03,.01,0)
RESOLVED COMMENTS^W^^0;1^Q
"^DD",11006,11006.03,.01,"DT")
2860211
"^DD",11007,11007,0)
FIELD^^6^11
"^DD",11007,11007,0,"DT")
3030108
"^DD",11007,11007,0,"ID",2)
W ""
"^DD",11007,11007,0,"IX","AC",11007,6)

"^DD",11007,11007,0,"IX","AD",11007.03,.01)

"^DD",11007,11007,0,"IX","AS",11007.02,.01)

"^DD",11007,11007,0,"IX","AU",11007.05,.01)

"^DD",11007,11007,0,"IX","AV",11007.02,2)

"^DD",11007,11007,0,"IX","B",11007,.01)

"^DD",11007,11007,0,"NM","DHCP PATCH/PROBLEM PACKAGE")

"^DD",11007,11007,0,"VRPK")
A1AE
"^DD",11007,11007,.01,0)
PACKAGE^RP9.4'X^DIC(9.4,^0;1^S DINUM=X
"^DD",11007,11007,.01,1,0)
^.1
"^DD",11007,11007,.01,1,1,0)
11007^B
"^DD",11007,11007,.01,1,1,1)
S ^A1AE(11007,"B",$E(X,1,30),DA)=""
"^DD",11007,11007,.01,1,1,2)
K ^A1AE(11007,"B",$E(X,1,30),DA)
"^DD",11007,11007,.01,3)

"^DD",11007,11007,.01,21,0)
^.001^3^3^3070625^^^^
"^DD",11007,11007,.01,21,1,0)
Enter a Package which resides in the Package File(#9.4).
"^DD",11007,11007,.01,21,2,0)
This Package is now recognized by the DHCP PATCHES and
"^DD",11007,11007,.01,21,3,0)
DHCP PROBLEM files.
"^DD",11007,11007,2,0)
USER SELECTION PERMITTED^RSX^Y:YES;N:NO;^0;2^Q
"^DD",11007,11007,2,1,0)
^.1
"^DD",11007,11007,2,1,1,0)
^^BULLETIN MESSAGE
"^DD",11007,11007,2,1,1,1)
S Y(0)=X,D0=DA S Y(0)=X S X=$S('$D(A1AE2):0,A1AE2=X:0,X="Y":1,1:0) I X X ^DD(11007,2,1,1,1.1) S X=Y(0) S X=$S($D(^DIC(9.4,DA,0)):$P(^(0),U,2),1:"") S XMB(2)=X X ^DD(11007,2,1,1,1.3) K XMY S XMB="A1AE PKG" D EN^XMB:$D(^XMB(3.6,"B",XMB)) K Y,XMB
"^DD",11007,11007,2,1,1,1.1)
S X=Y(0) S Y(1)=$S($D(^A1AE(11007,D0,0)):^(0),1:"") S X=$S('$D(^DIC(9.4,+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1)) S XMB(1)=X
"^DD",11007,11007,2,1,1,1.3)
S X=Y(0) S X=$S($D(^DIC(9.4,DA,0)):$P(^(0),U,3),1:"") S XMB(3)=X
"^DD",11007,11007,2,1,1,2)
Q
"^DD",11007,11007,2,1,1,"CREATE CONDITION")
S X=$S('$D(A1AE2):0,A1AE2=X:0,X="Y":1,1:0)
"^DD",11007,11007,2,1,1,"CREATE PARAMETER #1")
PACKAGE
"^DD",11007,11007,2,1,1,"CREATE PARAMETER #2")
S X=$S($D(^DIC(9.4,DA,0)):$P(^(0),U,2),1:"")
"^DD",11007,11007,2,1,1,"CREATE PARAMETER #3")
S X=$S($D(^DIC(9.4,DA,0)):$P(^(0),U,3),1:"")
"^DD",11007,11007,2,1,1,"CREATE VALUE")
A1AE PKG
"^DD",11007,11007,2,1,1,"DELETE VALUE")
NO EFFECT
"^DD",11007,11007,2,21,0)
^^5^5^2871112^^^^
"^DD",11007,11007,2,21,1,0)
If this field is set to 'YES' user's will be permitted to
"^DD",11007,11007,2,21,2,0)
select to receive notification of patches for this package.
"^DD",11007,11007,2,21,3,0)
They will also be able to print patches for this package.
"^DD",11007,11007,2,21,4,0)
If this field is set to 'NO' then user's can not access the
"^DD",11007,11007,2,21,5,0)
package via any of the Patch Module options.
"^DD",11007,11007,2,"DT")
2880125
"^DD",11007,11007,3,0)
* PERMIT DEVELOPER TO COMPLETE^S^y:YES;n:NO;^0;3^Q
"^DD",11007,11007,3,21,0)
^^19^19^2871112^^^^
"^DD",11007,11007,3,21,1,0)
This field will be phased out with the next version of the patch
"^DD",11007,11007,3,21,2,0)
module, after version 2.0 which will be released fall of 1987.
"^DD",11007,11007,3,21,3,0)
With verison 2.0 of the Patch Module this field became obsolete.
"^DD",11007,11007,3,21,4,0)
It is nolonger an option to force a different developer to
"^DD",11007,11007,3,21,5,0)
complete a patch, it is mandatory. In other words, one developer
"^DD",11007,11007,3,21,6,0)
enters the patch, another developer completes the patch and a
"^DD",11007,11007,3,21,7,0)
verifier, other than the developers who entered and completed
"^DD",11007,11007,3,21,8,0)
the patch, must verifiy the patch. Any valid developer of the
"^DD",11007,11007,3,21,9,0)
package can still change the status of a patch to 'Entered in
"^DD",11007,11007,3,21,10,0)
Error', should the situation arise.
"^DD",11007,11007,3,21,11,0)
 
"^DD",11007,11007,3,21,12,0)
This field use to permit the following:
"^DD",11007,11007,3,21,13,0)
 
"^DD",11007,11007,3,21,14,0)
Enter 'No' to prohibit a package developer who enters an 'Under
"^DD",11007,11007,3,21,15,0)
development' patch to change the status to 'Completed/unverified'.
"^DD",11007,11007,3,21,16,0)
This forces two developers to be involved in signing off on a patch.
"^DD",11007,11007,3,21,17,0)
Enter 'Yes' to permit the same developer to enter and complete a patch.
"^DD",11007,11007,3,21,18,0)
Please contact your supervisor to determine if this flag should be
"^DD",11007,11007,3,21,19,0)
set to 'No'.
"^DD",11007,11007,3,"DT")
2861021
"^DD",11007,11007,4,0)
FOR TEST SITE ONLY?^S^y:YES;n:NO;^0;4^Q
"^DD",11007,11007,4,.1)

"^DD",11007,11007,4,3)
Enter 'YES' if patches for this package are ONLY for test sites, or 'NO' if they are for any site.
"^DD",11007,11007,4,"DT")
2890119
"^DD",11007,11007,5,0)
ASK PATCH DESCRIPTION COPY^S^y:YES;n:NO;^0;5^Q
"^DD",11007,11007,5,3)

"^DD",11007,11007,5,21,0)
^^4^4^2920610^^^^
"^DD",11007,11007,5,21,1,0)
If this is set to Yes the developer will be asked 'Do you wish to copy
"^DD",11007,11007,5,21,2,0)
message text into the Patch Description' when editing a patch.
"^DD",11007,11007,5,21,3,0)
 
"^DD",11007,11007,5,21,4,0)
If set to NO the question will not be asked.
"^DD",11007,11007,5,"DT")
2920610
"^DD",11007,11007,6,0)
PERFORMANCE MEASURE FLAG^S^Y:YES;^0;6^Q
"^DD",11007,11007,6,1,0)
^.1
"^DD",11007,11007,6,1,1,0)
11007^AC
"^DD",11007,11007,6,1,1,1)
S ^A1AE(11007,"AC",$E(X,1,30),DA)=""
"^DD",11007,11007,6,1,1,2)
K ^A1AE(11007,"AC",$E(X,1,30),DA)
"^DD",11007,11007,6,1,1,"%D",0)
^^2^2^3030108^
"^DD",11007,11007,6,1,1,"%D",1,0)
This cross reference is used to get quick selection of packages that are 
"^DD",11007,11007,6,1,1,"%D",2,0)
required for Performance Measures reports.
"^DD",11007,11007,6,1,1,"DT")
3030108
"^DD",11007,11007,6,3)
Enter 'Yes' to include package on Performance Measures reports
"^DD",11007,11007,6,21,0)
^.001^2^2^3030108^^^
"^DD",11007,11007,6,21,1,0)
The field is used to include the package on the Performance 
"^DD",11007,11007,6,21,2,0)
Measures/Compliance Date reports.
"^DD",11007,11007,6,"DT")
3030108
"^DD",11007,11007,50,0)
SELECTED USERS FOR PACKAGE^11007.05PA^^1;0
"^DD",11007,11007,50,21,0)
^^2^2^2900428^^^^
"^DD",11007,11007,50,21,1,0)
This field holds the names of users who have requested to
"^DD",11007,11007,50,21,2,0)
receive automatic notification of patches for this package.
"^DD",11007,11007,100,0)
SUPPORT PERSONNEL^11007.02PA^^PB;0
"^DD",11007,11007,100,21,0)
^^4^4^2910307^^^^
"^DD",11007,11007,100,21,1,0)
This field contains the names of ISC personnel which are
"^DD",11007,11007,100,21,2,0)
regional support personnel for the package. It also holds
"^DD",11007,11007,100,21,3,0)
the names of internal verifiers assigned to verifying patches
"^DD",11007,11007,100,21,4,0)
for this package in the Patch Module.
"^DD",11007,11007,200,0)
DEVELOPMENT PERSONNEL^11007.03PA^^PH;0
"^DD",11007,11007,200,21,0)
^^3^3^2871112^^
"^DD",11007,11007,200,21,1,0)
Development Personnel may add, edit, delete and complete patches
"^DD",11007,11007,200,21,2,0)
for this package in the Patch Module. They may also enter and edit
"^DD",11007,11007,200,21,3,0)
authorized users in the DHCP PATCH/PROBLEM PACKAGE file.
"^DD",11007,11007,200,21,4,0)
Resolve any Problem for which they are an assigned developer. 
"^DD",11007,11007,200,21,5,0)
They may also Print any Patch or Problem for any Package.
"^DD",11007,11007,300,0)
VERSION^11007.01I^^V;0
"^DD",11007,11007,300,21,0)
^^3^3^2921027^^^^
"^DD",11007,11007,300,21,1,0)
In Options which require a Version the System will
"^DD",11007,11007,300,21,2,0)
default to the most recent Version. The Version is
"^DD",11007,11007,300,21,3,0)
used to keep track of assigning Patch Numbers.
"^DD",11007,11007,300,21,4,0)
Numbers.
"^DD",11007,11007,400,0)
NETWORK MAIL GROUP^11007.04I^^NT;0
"^DD",11007,11007.01,0)
VERSION SUB-FIELD^NL^27^5
"^DD",11007,11007.01,0,"DT")
2920917
"^DD",11007,11007.01,0,"ID",2)
W:+^(0)=999 ?18,"for 'DBA'" W:+$P(^(0),U,2) ?30,"   Date Verified: ",$E($P(^(0),U,2),4,5)_"-"_$E($P(^(0),U,2),6,7)_"-"_$E($P(^(0),U,2),2,3)
"^DD",11007,11007.01,0,"NM","VERSION")

"^DD",11007,11007.01,0,"UP")
11007
"^DD",11007,11007.01,.01,0)
VERSION^NJ6,2XO^^0;1^K:+X'=X!(X>999)!(X'>0) X S:$D(X) DINUM=X
"^DD",11007,11007.01,.01,2)
S Y(0)=Y S Y=$S(Y=999:"DBA",1:Y)
"^DD",11007,11007.01,.01,2.1)
S Y=$S(Y=999:"DBA",1:Y)
"^DD",11007,11007.01,.01,3)
TYPE A NUMBER BETWEEN 1 AND 999
"^DD",11007,11007.01,.01,7.5)
S X=$S(X="DBA"!(X="dba"):999,1:X)
"^DD",11007,11007.01,.01,"DT")
2891101
"^DD",11007,11007.01,2,0)
DATE VERIFIED^RD^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11007,11007.01,2,21,0)
^^2^2^2871112^
"^DD",11007,11007.01,2,21,1,0)
This field should hold the date the specified version of the
"^DD",11007,11007.01,2,21,2,0)
package was verified.
"^DD",11007,11007.01,2,"DT")
2860311
"^DD",11007,11007.01,25,0)
NEXT PROBLEM NUMBER^NJ5,0I^^PB;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11007,11007.01,25,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 99999
"^DD",11007,11007.01,25,9)
^
"^DD",11007,11007.01,25,21,0)
^^3^3^2871112^^
"^DD",11007,11007.01,25,21,1,0)
The System assigns numbers to Problems. The number in
"^DD",11007,11007.01,25,21,2,0)
this field represents the Next Problem Number to be
"^DD",11007,11007.01,25,21,3,0)
assigned by the system to this Version of a Package.
"^DD",11007,11007.01,25,"DT")
2860108
"^DD",11007,11007.01,26,0)
NEXT PATCH NUMBER^NJ5,0I^^PH;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11007,11007.01,26,3)
TYPE A WHOLE NUMBER BETWEEN 1 AND 99999
"^DD",11007,11007.01,26,9)
^
"^DD",11007,11007.01,26,21,0)
^^3^3^2860306^
"^DD",11007,11007.01,26,21,1,0)
The System assigns numbers to Patches. The number in
"^DD",11007,11007.01,26,21,2,0)
this field represents the Next Patch Number to be
"^DD",11007,11007.01,26,21,3,0)
assigned by the system to this Version of a Package.
"^DD",11007,11007.01,26,"DT")
2880122
"^DD",11007,11007.01,27,0)
NEXT SEQUENCE NUMBER^NJ5,0^^PR;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
"^DD",11007,11007.01,27,3)
Type a Number between 1 and 99999, 0 Decimal Digits
"^DD",11007,11007.01,27,"DT")
2921027
"^DD",11007,11007.02,0)
SUPPORT PERSONNEL SUB-FIELD^NL^3^3
"^DD",11007,11007.02,0,"DT")
2980730
"^DD",11007,11007.02,0,"NM","SUPPORT PERSONNEL")

"^DD",11007,11007.02,0,"UP")
11007
"^DD",11007,11007.02,.01,0)
SUPPORT PERSONNEL^MP200'X^VA(200,^0;1^S DINUM=X
"^DD",11007,11007.02,.01,1,0)
^.1
"^DD",11007,11007.02,.01,1,1,0)
11007^AS
"^DD",11007,11007.02,.01,1,1,1)
S ^A1AE(11007,"AS",$E(X,1,30),DA(1),DA)=""
"^DD",11007,11007.02,.01,1,1,2)
K ^A1AE(11007,"AS",$E(X,1,30),DA(1),DA)
"^DD",11007,11007.02,.01,21,0)
^^1^1^2860314^^^
"^DD",11007,11007.02,.01,21,1,0)
ISC personnel that do the regional support of the package.
"^DD",11007,11007.02,.01,"DT")
2921202
"^DD",11007,11007.02,2,0)
VERIFY PERSONNEL^S^V:VERIFIER;N:NOT A VERIFIER;^0;2^Q
"^DD",11007,11007.02,2,1,0)
^.1
"^DD",11007,11007.02,2,1,1,0)
11007^AV^MUMPS
"^DD",11007,11007.02,2,1,1,1)
I X="V" S ^A1AE(11007,"AV",DA,DA(1),DA)=""
"^DD",11007,11007.02,2,1,1,2)
K ^A1AE(11007,"AV",DA,DA(1),DA)
"^DD",11007,11007.02,2,3)

"^DD",11007,11007.02,2,21,0)
^^5^5^2900817^^^
"^DD",11007,11007.02,2,21,1,0)
This field should be set to 'V' if the support person is
"^DD",11007,11007.02,2,21,2,0)
an internal verifier. If this field contains a 'V' this
"^DD",11007,11007.02,2,21,3,0)
individual will have access to the 'Verifier Menu' option
"^DD",11007,11007.02,2,21,4,0)
and be permitted to verify completed patches for this
"^DD",11007,11007.02,2,21,5,0)
package.
"^DD",11007,11007.02,2,"DT")
2860402
"^DD",11007,11007.02,3,0)
VERIFIER'S DOMAIN^FX^^0;3^K:$L(X)>30!($L(X)<3) X I $D(X) S SAVX=X,X="A1AEM" X ^%ZOSF("TEST") S X=SAVX K SAVX I $T D MMM^A1AEM K:X="" X I $D(X),$D(X9) S X=X9_"."_X I $E(X)="." S X=$E(X,2,99)
"^DD",11007,11007.02,3,3)
Answer must contain a valid domain
"^DD",11007,11007.02,3,21,0)
^^5^5^2980730^^^^
"^DD",11007,11007.02,3,21,1,0)
This identifies the Verifiers Network Mail Domain for sending Patch 
"^DD",11007,11007.02,3,21,2,0)
messages to the verifier @ domain.  The domain name must have the format:
"^DD",11007,11007.02,3,21,3,0)
               [subdomain.]DOMAIN
"^DD",11007,11007.02,3,21,4,0)
 ie
"^DD",11007,11007.02,3,21,5,0)
     [optional remote subdomain . ]local domain file entry
"^DD",11007,11007.02,3,"DT")
2980730
"^DD",11007,11007.03,0)
DEVELOPMENT PERSONNEL SUB-FIELD^NL^.01^1
"^DD",11007,11007.03,0,"DT")
2921202
"^DD",11007,11007.03,0,"NM","DEVELOPMENT PERSONNEL")

"^DD",11007,11007.03,0,"UP")
11007
"^DD",11007,11007.03,.01,0)
DEVELOPMENT PERSONNEL^MP200'X^VA(200,^0;1^S DINUM=X
"^DD",11007,11007.03,.01,1,0)
^.1
"^DD",11007,11007.03,.01,1,1,0)
11007^AD
"^DD",11007,11007.03,.01,1,1,1)
S ^A1AE(11007,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",11007,11007.03,.01,1,1,2)
K ^A1AE(11007,"AD",$E(X,1,30),DA(1),DA)
"^DD",11007,11007.03,.01,21,0)
^^5^5^2860306^
"^DD",11007,11007.03,.01,21,1,0)
Development Personnel may Enter/Edit Authorized Users in
"^DD",11007,11007.03,.01,21,2,0)
the DHCP AUTHORIZED USER file for Packages which they are
"^DD",11007,11007.03,.01,21,3,0)
assigned developers. They may also Enter/Edit any Patch or
"^DD",11007,11007.03,.01,21,4,0)
Resolve any Problem for which they are assigned developer.
"^DD",11007,11007.03,.01,21,5,0)
They may also Print any Patch or Problem fro any Package.
"^DD",11007,11007.03,.01,"DT")
2921202
"^DD",11007,11007.04,0)
NETWORK MAIL GROUP SUB-FIELD^^3^3
"^DD",11007,11007.04,0,"ID",2)
W "   ",$P(^(0),U,2)
"^DD",11007,11007.04,0,"IX","B",11007.04,.01)

"^DD",11007,11007.04,0,"NM","NETWORK MAIL GROUP")

"^DD",11007,11007.04,0,"UP")
11007
"^DD",11007,11007.04,.01,0)
NETWORK ROUTING^MF^^0;1^K:$L(X)>30!($L(X)<3) X
"^DD",11007,11007.04,.01,1,0)
^.1
"^DD",11007,11007.04,.01,1,1,0)
11007.04^B
"^DD",11007,11007.04,.01,1,1,1)
S ^A1AE(11007,DA(1),"NT","B",$E(X,1,30),DA)=""
"^DD",11007,11007.04,.01,1,1,2)
K ^A1AE(11007,DA(1),"NT","B",$E(X,1,30),DA)
"^DD",11007,11007.04,.01,3)
Answer must be 3-30 characters in length.
"^DD",11007,11007.04,.01,21,0)
^^6^6^2910612^^
"^DD",11007,11007.04,.01,21,1,0)
This field contains the recipient of verified Patch messages.
"^DD",11007,11007.04,.01,21,2,0)
It is combined with the domain for network addressing.  
"^DD",11007,11007.04,.01,21,3,0)
The value in this field for the A1AE entry in the file is 
"^DD",11007,11007.04,.01,21,4,0)
used for all packages for addressing verified patch messages.
"^DD",11007,11007.04,.01,21,5,0)
 
"^DD",11007,11007.04,.01,21,6,0)
Normally this field will be a 'G.group' mail group
"^DD",11007,11007.04,.01,"DT")
2900428
"^DD",11007,11007.04,2,0)
DOMAIN^FX^^0;2^K:$L(X)>30!($L(X)<3) X I $D(X) S SAVX=X,X="A1AEM" X ^%ZOSF("TEST") S X=SAVX K SAVX I $T D MMM^A1AEM K:X="" X I $D(X),$D(X9) S X=X9_"."_X I $E(X)="." S X=$E(X,2,99)
"^DD",11007,11007.04,2,3)
Answer must contain a valid domain
"^DD",11007,11007.04,2,21,0)
^^3^3^2910612^^
"^DD",11007,11007.04,2,21,1,0)
The value in this field is combined with the network routing 
"^DD",11007,11007.04,2,21,2,0)
to send verified Patch messages to 'network routing @ domain'
"^DD",11007,11007.04,2,21,3,0)
The value in the A1AE entry of the file is used for all packages.
"^DD",11007,11007.04,2,"DT")
2910613
"^DD",11007,11007.04,3,0)
TEST SITE^S^1:YES;0:NO;^0;3^Q
"^DD",11007,11007.04,3,"DT")
2900428
"^DD",11007,11007.05,0)
SELECTED USERS FOR PACKAGE SUB-FIELD^NL^3^3
"^DD",11007,11007.05,0,"DT")
2921202
"^DD",11007,11007.05,0,"NM","SELECTED USERS FOR PACKAGE")

"^DD",11007,11007.05,0,"UP")
11007
"^DD",11007,11007.05,.01,0)
SELECTED USERS FOR PACKAGE^MP200'X^VA(200,^0;1^S DINUM=X
"^DD",11007,11007.05,.01,1,0)
^.1
"^DD",11007,11007.05,.01,1,1,0)
11007^AU
"^DD",11007,11007.05,.01,1,1,1)
S ^A1AE(11007,"AU",$E(X,1,30),DA(1),DA)=""
"^DD",11007,11007.05,.01,1,1,2)
K ^A1AE(11007,"AU",$E(X,1,30),DA(1),DA)
"^DD",11007,11007.05,.01,21,0)
^^2^2^2860306^
"^DD",11007,11007.05,.01,21,1,0)
Enter Your name to request automatic notification of
"^DD",11007,11007.05,.01,21,2,0)
Patches for this Package.
"^DD",11007,11007.05,.01,"DT")
2921202
"^DD",11007,11007.05,2,0)
DATE USER SELECTED^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",11007,11007.05,2,21,0)
^^3^3^2871112^^
"^DD",11007,11007.05,2,21,1,0)
This field holds the date this user selected to receive automatic
"^DD",11007,11007.05,2,21,2,0)
notification of patches for this package. It is set by the system
"^DD",11007,11007.05,2,21,3,0)
via the option to 'Select Packages for Notification'.
"^DD",11007,11007.05,2,"DT")
2860204
"^DD",11007,11007.05,3,0)
TEST SITE DOMAIN^FX^^0;3^K:$L(X)>30!($L(X)<3) X I $D(X) S SAVX=X,X="A1AEM" X ^%ZOSF("TEST") S X=SAVX K SAVX I $T D MMM^A1AEM K:X="" X I $D(X),$D(X9) S X=X9_"."_X I $E(X)="." S X=$E(X,2,99)
"^DD",11007,11007.05,3,3)
Answer must be a valid domain
"^DD",11007,11007.05,3,21,0)
^^3^3^2900803^
"^DD",11007,11007.05,3,21,1,0)
This field should contain the a Domain name for sending
"^DD",11007,11007.05,3,21,2,0)
patch messages to the user @ domain.  This field is only
"^DD",11007,11007.05,3,21,3,0)
used if the Package is set as a TEST SITE.
"^DD",11007,11007.05,3,"DT")
2910613
"^DD",11007.1,11007.1,0)
FIELD^^.07^10
"^DD",11007.1,11007.1,0,"DT")
3140808
"^DD",11007.1,11007.1,0,"NM","DHCP PATCH STREAM")

"^DD",11007.1,11007.1,0,"PT",11005,.2)

"^DD",11007.1,11007.1,0,"PT",11007.1,.03)

"^DD",11007.1,11007.1,0,"PT",11007.2,.01)

"^DD",11007.1,11007.1,.001,0)
PATCH NUMBER START^NJ9,0X^^ ^K:+X'=X!(X>999999999)!(X<1)!(X[".")!(X#1000'=1) X
"^DD",11007.1,11007.1,.001,3)
Type a number whose modulus of 1000 is 1.
"^DD",11007.1,11007.1,.001,21,0)
^.001^7^7^3140727^^
"^DD",11007.1,11007.1,.001,21,1,0)
Enter the number to assign to the first patch created for a new version 
"^DD",11007.1,11007.1,.001,21,2,0)
of any package, when patches to it are released as part of this patch 
"^DD",11007.1,11007.1,.001,21,3,0)
stream. For example, VA VISTA patches start their enumeration with 1, IHS 
"^DD",11007.1,11007.1,.001,21,4,0)
RPMS patches start at 1001, and OSEHRA VISTA patches start at 10001.
"^DD",11007.1,11007.1,.001,21,5,0)
 
"^DD",11007.1,11007.1,.001,21,6,0)
To create a new patch stream, start at a number whose modulus of 1000 is 
"^DD",11007.1,11007.1,.001,21,7,0)
1. For example, 2001 and 10001 are valid numbers; 2000 and 10000 are not.
"^DD",11007.1,11007.1,.001,23,0)
^.001^16^16^3140727^^
"^DD",11007.1,11007.1,.001,23,1,0)
This field is used by $$PRIMSTRM^A1AEUTL, which is called by SEQ &
"^DD",11007.1,11007.1,.001,23,2,0)
NUM^A1AEUTL
"^DD",11007.1,11007.1,.001,23,3,0)
 
"^DD",11007.1,11007.1,.001,23,4,0)
in assigning patch numbers.
"^DD",11007.1,11007.1,.001,23,5,0)
 
"^DD",11007.1,11007.1,.001,23,6,0)
Convention: when field .01 of a file is a pointer to this field, Dinum it.
"^DD",11007.1,11007.1,.001,23,7,0)
 
"^DD",11007.1,11007.1,.001,23,8,0)
Change History:
"^DD",11007.1,11007.1,.001,23,9,0)
 
"^DD",11007.1,11007.1,.001,23,10,0)
Wednesday, 22 January 2014: (VEN/SMH) Created field Patch Number Start 
"^DD",11007.1,11007.1,.001,23,11,0)
(.001) for Patch Module version 2.4 as part of the OSEHRA Forum Project 
"^DD",11007.1,11007.1,.001,23,12,0)
Phase One.
"^DD",11007.1,11007.1,.001,23,13,0)
 
"^DD",11007.1,11007.1,.001,23,14,0)
Tuesday, 11 February 2014: (VEN/TOAD) Revised Description, wrote 
"^DD",11007.1,11007.1,.001,23,15,0)
Technical Description, added Change History. Fixed bug in Input 
"^DD",11007.1,11007.1,.001,23,16,0)
Transform: was enforcing X#10000'=1 instead of X#1000'=1.
"^DD",11007.1,11007.1,.001,"DT")
3140728
"^DD",11007.1,11007.1,.01,0)
NAME^RFJ30^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",11007.1,11007.1,.01,.1)
VISTA DIALECT NAME
"^DD",11007.1,11007.1,.01,1,0)
^.1^^0
"^DD",11007.1,11007.1,.01,3)
Answer must be 3-30 characters in length.
"^DD",11007.1,11007.1,.01,21,0)
^.001^4^4^3140728^^
"^DD",11007.1,11007.1,.01,21,1,0)
Enter the name of this patch stream; it should be the name of the VISTA 
"^DD",11007.1,11007.1,.01,21,2,0)
dialect supported by this patch stream. Examples include: VA VISTA, FOIA 
"^DD",11007.1,11007.1,.01,21,3,0)
VISTA, OSEHRA VISTA, IHS RPMS, FOIA RPMS, OSEHRA RPMS, MEDSPHERE 
"^DD",11007.1,11007.1,.01,21,4,0)
OPENVISTA, DSS VXVISTA, WORLDVISTA EHR, DOD CHCS, and FOIA CHCS.
"^DD",11007.1,11007.1,.01,23,0)
^.001^12^12^3140728^^
"^DD",11007.1,11007.1,.01,23,1,0)
Field Name (.01) will be used extensively by the Patch Module in creating 
"^DD",11007.1,11007.1,.01,23,2,0)
subjects for e-mail distributions, header lines for host-file 
"^DD",11007.1,11007.1,.01,23,3,0)
distributions, patch boilerplate text, and so on.
"^DD",11007.1,11007.1,.01,23,4,0)
 
"^DD",11007.1,11007.1,.01,23,5,0)
Change History:
"^DD",11007.1,11007.1,.01,23,6,0)
 
"^DD",11007.1,11007.1,.01,23,7,0)
Monday, 13 January 2014: (VEN/SMH) Created field Name (.01) for Patch 
"^DD",11007.1,11007.1,.01,23,8,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.01,23,9,0)
 
"^DD",11007.1,11007.1,.01,23,10,0)
Tuesday, 11 February 2014: (VEN/TOAD) Wrote Description, Technical 
"^DD",11007.1,11007.1,.01,23,11,0)
Description, and Change History for Patch Module version 2.4 as part of 
"^DD",11007.1,11007.1,.01,23,12,0)
the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.01,"DEL",.01,0)
D EN^DDIOL("Cannot delete an existing entry.") I 1
"^DD",11007.1,11007.1,.01,"DT")
3140805
"^DD",11007.1,11007.1,.02,0)
PRIMARY?^RS^1:YES;0:NO;^0;2^Q
"^DD",11007.1,11007.1,.02,3)
Enter YES or NO.
"^DD",11007.1,11007.1,.02,21,0)
^.001^10^10^3140806^^^^
"^DD",11007.1,11007.1,.02,21,1,0)
Enter YES if this patch stream will be considered the primary stream for 
"^DD",11007.1,11007.1,.02,21,2,0)
this site. There can be only one primary stream at a time. If you set 
"^DD",11007.1,11007.1,.02,21,3,0)
this field to YES for a second stream, this field in all other patch 
"^DD",11007.1,11007.1,.02,21,4,0)
streams will be set to NO.
"^DD",11007.1,11007.1,.02,21,5,0)
 
"^DD",11007.1,11007.1,.02,21,6,0)
A primary patch stream is the default stream under which a new patch 
"^DD",11007.1,11007.1,.02,21,7,0)
developed using this Patch Module will be numberspaced. For example, if 
"^DD",11007.1,11007.1,.02,21,8,0)
the primary patch stream is numberspaced to be 3001, then any patch you 
"^DD",11007.1,11007.1,.02,21,9,0)
develop using this Patch Module system will assign patch numbers 
"^DD",11007.1,11007.1,.02,21,10,0)
enumerating from 3001.
"^DD",11007.1,11007.1,.02,23,0)
^.001^17^17^3140806^^^^
"^DD",11007.1,11007.1,.02,23,1,0)
The purpose of field Primary? (.02) is to set up the PRIM index, which is 
"^DD",11007.1,11007.1,.02,23,2,0)
used by $$PRIMSTRM^A1AEUTL to assign patch numbers. Cross-reference APRIM 
"^DD",11007.1,11007.1,.02,23,3,0)
ensures that only one patch stream at a time may be primary.
"^DD",11007.1,11007.1,.02,23,4,0)
 
"^DD",11007.1,11007.1,.02,23,5,0)
Change History:
"^DD",11007.1,11007.1,.02,23,6,0)
 
"^DD",11007.1,11007.1,.02,23,7,0)
Monday, 13 January 2014: (VEN/SMH) Created field Primary? (2) for Patch 
"^DD",11007.1,11007.1,.02,23,8,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.02,23,9,0)
 
"^DD",11007.1,11007.1,.02,23,10,0)
Wednesday, 22 January 2014: (VEN/SMH) Revised Description to explain 
"^DD",11007.1,11007.1,.02,23,11,0)
numberspacing for Patch Module version 2.4 as part of the OSEHRA Forum 
"^DD",11007.1,11007.1,.02,23,12,0)
Project Phase One.
"^DD",11007.1,11007.1,.02,23,13,0)
 
"^DD",11007.1,11007.1,.02,23,14,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted field Primary? (2) and 
"^DD",11007.1,11007.1,.02,23,15,0)
created field Primary? (.02); revised Description; added Technical 
"^DD",11007.1,11007.1,.02,23,16,0)
Description and Change History for Patch Module version 2.4 as part of 
"^DD",11007.1,11007.1,.02,23,17,0)
the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.02,"DT")
3140211
"^DD",11007.1,11007.1,.03,0)
FEEDS INTO STREAM^*P11007.1'^A1AE(11007.1,^0;3^S DIC("S")="I D0'=Y" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",11007.1,11007.1,.03,3)
Select a patch stream.
"^DD",11007.1,11007.1,.03,12)
You can select any other streams but not yourself.
"^DD",11007.1,11007.1,.03,12.1)
S DIC("S")="I D0'=Y"
"^DD",11007.1,11007.1,.03,21,0)
^^3^3^3140211^
"^DD",11007.1,11007.1,.03,21,1,0)
You may select a derived patch stream, to which incoming patches to this 
"^DD",11007.1,11007.1,.03,21,2,0)
stream will be bifurcated. Defaults to bifurcating to the primary patch 
"^DD",11007.1,11007.1,.03,21,3,0)
stream. This field is optional.
"^DD",11007.1,11007.1,.03,23,0)
^^17^17^3140211^
"^DD",11007.1,11007.1,.03,23,1,0)
Field Feeds into Stream (.03) was designed to allow OSEHRA Forum to 
"^DD",11007.1,11007.1,.03,23,2,0)
redistribute FOIA VISTA patches unchanged while simultaneously 
"^DD",11007.1,11007.1,.03,23,3,0)
distributing renamed and renumbered copies of those same patches, some in 
"^DD",11007.1,11007.1,.03,23,4,0)
modified form, as part of the new OSEHRA VISTA patch stream. This is 
"^DD",11007.1,11007.1,.03,23,5,0)
similar to what IHS does with FOIA VISTA patches to create their IHS RPMS 
"^DD",11007.1,11007.1,.03,23,6,0)
patch stream
"^DD",11007.1,11007.1,.03,23,7,0)
 
"^DD",11007.1,11007.1,.03,23,8,0)
Change History:
"^DD",11007.1,11007.1,.03,23,9,0)
 
"^DD",11007.1,11007.1,.03,23,10,0)
Monday, 13 January 2014: (VEN/SMH) Created field Feeds into Stream (3) 
"^DD",11007.1,11007.1,.03,23,11,0)
for Patch Module version 2.4 as part of the OSEHRA Forum Project Phase 
"^DD",11007.1,11007.1,.03,23,12,0)
One.
"^DD",11007.1,11007.1,.03,23,13,0)
 
"^DD",11007.1,11007.1,.03,23,14,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted field Feeds into Stream (3) 
"^DD",11007.1,11007.1,.03,23,15,0)
and created field Feeds into Stream (.03); revised Description; added 
"^DD",11007.1,11007.1,.03,23,16,0)
Technical Description and Change History for Patch Module version 2.4 as 
"^DD",11007.1,11007.1,.03,23,17,0)
part of the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.03,"DT")
3140211
"^DD",11007.1,11007.1,.04,0)
DOMAIN^FJ60^^0;4^K:$L(X)>60!($L(X)<1) X
"^DD",11007.1,11007.1,.04,3)
Answer must be 1-60 characters in length.
"^DD",11007.1,11007.1,.04,21,0)
^^2^2^3140211^
"^DD",11007.1,11007.1,.04,21,1,0)
Enter the domain associated with incoming patches from this patch stream. 
"^DD",11007.1,11007.1,.04,21,2,0)
This field is optional.
"^DD",11007.1,11007.1,.04,23,0)
^^15^15^3140211^
"^DD",11007.1,11007.1,.04,23,1,0)
Field Domain (.04) was designed to support and differentiate multiple 
"^DD",11007.1,11007.1,.04,23,2,0)
inbound patch streams. For example, is OSEHRA Forum at some point 
"^DD",11007.1,11007.1,.04,23,3,0)
supports both VISTA and RPMS, the Patch Module would need to be able to 
"^DD",11007.1,11007.1,.04,23,4,0)
distinguish IHS's patches from VA's.
"^DD",11007.1,11007.1,.04,23,5,0)
 
"^DD",11007.1,11007.1,.04,23,6,0)
Change History:
"^DD",11007.1,11007.1,.04,23,7,0)
 
"^DD",11007.1,11007.1,.04,23,8,0)
Monday, 13 January 2014: (VEN/SMH) Created field Domain (4) for Patch 
"^DD",11007.1,11007.1,.04,23,9,0)
Module version 2.4 as part of the OSEHRA Forum Project Phase One. This 
"^DD",11007.1,11007.1,.04,23,10,0)
field is not yet in use.
"^DD",11007.1,11007.1,.04,23,11,0)
 
"^DD",11007.1,11007.1,.04,23,12,0)
Tuesday, 11 February 2014: (VEN/TOAD) Deleted field Domain (4) and 
"^DD",11007.1,11007.1,.04,23,13,0)
created field Domain (.04); revised Description; added Technical 
"^DD",11007.1,11007.1,.04,23,14,0)
Description and Change History for Patch Module version 2.4 as part of 
"^DD",11007.1,11007.1,.04,23,15,0)
the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.04,"DT")
3140211
"^DD",11007.1,11007.1,.05,0)
ABBREVIATION^RFJ2^^0;5^K:$L(X)>2!($L(X)<2)!'(X?2U) X
"^DD",11007.1,11007.1,.05,.1)
TWO-LETTER CODE
"^DD",11007.1,11007.1,.05,3)
Answer must be 2 characters in length.
"^DD",11007.1,11007.1,.05,21,0)
^.001^2^2^3140211^^
"^DD",11007.1,11007.1,.05,21,1,0)
Enter a unique two-letter abbreviation for this patch stream. This will 
"^DD",11007.1,11007.1,.05,21,2,0)
be used to help identify or select patch streams.
"^DD",11007.1,11007.1,.05,23,0)
^^8^8^3140211^
"^DD",11007.1,11007.1,.05,23,1,0)
This field is accessed by file DHCP Patches (11005)'s WRITE identifier.
"^DD",11007.1,11007.1,.05,23,2,0)
 
"^DD",11007.1,11007.1,.05,23,3,0)
Change History:
"^DD",11007.1,11007.1,.05,23,4,0)
 
"^DD",11007.1,11007.1,.05,23,5,0)
Tuesday, 11 February 2014: (VEN/TOAD) Created field Abbreviation (.05); 
"^DD",11007.1,11007.1,.05,23,6,0)
cross-referenced it; made it a key field; and made file DHCP Patches 
"^DD",11007.1,11007.1,.05,23,7,0)
(11005)'s WRITE identifier display it for Patch Module version 2.4 as 
"^DD",11007.1,11007.1,.05,23,8,0)
part of the OSEHRA Forum Project Phase One.
"^DD",11007.1,11007.1,.05,"DT")
3140211
"^DD",11007.1,11007.1,.06,0)
SUBSCRIPTION^RS^1:YES;0:NO;^0;6^Q
"^DD",11007.1,11007.1,.06,21,0)
^^12^12^3140806^
"^DD",11007.1,11007.1,.06,21,1,0)
Enter YES if this SUBSCRIPTION represents the Patch Stream in use at
"^DD",11007.1,11007.1,.06,21,2,0)
this site. There can be only one SUBSCRIPTION at a time. If you set this
"^DD",11007.1,11007.1,.06,21,3,0)
field to YES, this SUBSCRIPTION field in all other patch streams
"^DD",11007.1,11007.1,.06,21,4,0)
will be set to NO.
"^DD",11007.1,11007.1,.06,21,5,0)
 
"^DD",11007.1,11007.1,.06,21,6,0)
The SUBSCRIPTION represents the default Patch Stream under which patch 
"^DD",11007.1,11007.1,.06,21,7,0)
installs at this site will use.  For instance, a site set for 
"^DD",11007.1,11007.1,.06,21,8,0)
SUBSCRIPTION - YES as a FOIA VISTA site, will only be able to install 
"^DD",11007.1,11007.1,.06,21,9,0)
patches number spaced in the FOIA VISTA range.
"^DD",11007.1,11007.1,.06,21,10,0)
 
"^DD",11007.1,11007.1,.06,21,11,0)
This field not only documents the Patch Stream in use by this site, but
"^DD",11007.1,11007.1,.06,21,12,0)
prevents installation of patches developed for other streams.
"^DD",11007.1,11007.1,.06,23,0)
^^16^16^3140806^
"^DD",11007.1,11007.1,.06,23,1,0)
SUBSCRIPTION is set to FOIA VISTA by the KIDS installing the DHCP PATCH 
"^DD",11007.1,11007.1,.06,23,2,0)
STREAM [#11007.1] file.  However, a post-install will allow the 
"^DD",11007.1,11007.1,.06,23,3,0)
installing user to select another Patch Subscription.
"^DD",11007.1,11007.1,.06,23,4,0)
 
"^DD",11007.1,11007.1,.06,23,5,0)
Enter YES if this SUBSCRIPTION represents the Patch Stream in use at
"^DD",11007.1,11007.1,.06,23,6,0)
this site. There can be only one SUBSCRIPTION at a time. If you set this
"^DD",11007.1,11007.1,.06,23,7,0)
field to YES, this SUBSCRIPTION field in all other patch streams
"^DD",11007.1,11007.1,.06,23,8,0)
will be set to NO.
"^DD",11007.1,11007.1,.06,23,9,0)
 
"^DD",11007.1,11007.1,.06,23,10,0)
The SUBSCRIPTION represents the default Patch Stream under which patch
"^DD",11007.1,11007.1,.06,23,11,0)
installs at this site will use.  For instance, a site set for
"^DD",11007.1,11007.1,.06,23,12,0)
SUBSCRIPTION - YES as a FOIA VISTA site, will only be able to install
"^DD",11007.1,11007.1,.06,23,13,0)
patches number spaced in the FOIA VISTA range.
"^DD",11007.1,11007.1,.06,23,14,0)
 
"^DD",11007.1,11007.1,.06,23,15,0)
This field not only documents the Patch Stream in use by this site, but
"^DD",11007.1,11007.1,.06,23,16,0)
prevents installation of patches developed for other streams.
"^DD",11007.1,11007.1,.06,"DT")
3140805
"^DD",11007.1,11007.1,.07,0)
FORUM DOMAIN^FJ30^^0;7^K:$L(X)>30!($L(X)<1) X
"^DD",11007.1,11007.1,.07,3)
Answer must be 1-30 characters in length.
"^DD",11007.1,11007.1,.07,21,0)
^^5^5^3140808^
"^DD",11007.1,11007.1,.07,21,1,0)
FORUM DOMAIN is designed to hold the name of MAILMAN PARAMETERS [#4.3]
"^DD",11007.1,11007.1,.07,21,2,0)
entry that represent this DHCP PATCH STREAM [#11007.1] entry as a FORUM
"^DD",11007.1,11007.1,.07,21,3,0)
site. The field is used to trigger the PRIMARY? [#.02] field in
"^DD",11007.1,11007.1,.07,21,4,0)
recognition of this site's ability to build and distribute KIDS patches 
"^DD",11007.1,11007.1,.07,21,5,0)
under this PATCH STREAM.
"^DD",11007.1,11007.1,.07,"DT")
3140808
"^DD",11007.1,11007.1,1,0)
SUBSCRIPTION DATE^11007.12DA^^1;0
"^DD",11007.1,11007.1,10,0)
ROUTINE^11007.11^^RTN;0
"^DD",11007.1,11007.1,10,21,0)
^.001^5^5^3140805^^^^
"^DD",11007.1,11007.1,10,21,1,0)
Contains routines and their current checksums for this stream.
"^DD",11007.1,11007.1,10,21,2,0)
 
"^DD",11007.1,11007.1,10,21,3,0)
Used to calculate the before checksums in $$BCS^A1AEUTL2
"^DD",11007.1,11007.1,10,21,4,0)
 
"^DD",11007.1,11007.1,10,21,5,0)
Updated upon release to the after values of the routines in the released KIDS Build.
"^DD",11007.1,11007.11,0)
ROUTINE SUB-FIELD^^1.1^5
"^DD",11007.1,11007.11,0,"DT")
3140307
"^DD",11007.1,11007.11,0,"IX","B",11007.11,.01)

"^DD",11007.1,11007.11,0,"NM","ROUTINE")

"^DD",11007.1,11007.11,0,"UP")
11007.1
"^DD",11007.1,11007.11,.01,0)
ROUTINE^MFJ16^^0;1^K:$L(X)>16!($L(X)<1) X
"^DD",11007.1,11007.11,.01,1,0)
^.1
"^DD",11007.1,11007.11,.01,1,1,0)
11007.11^B
"^DD",11007.1,11007.11,.01,1,1,1)
S ^A1AE(11007.1,DA(1),"RTN","B",$E(X,1,30),DA)=""
"^DD",11007.1,11007.11,.01,1,1,2)
K ^A1AE(11007.1,DA(1),"RTN","B",$E(X,1,30),DA)
"^DD",11007.1,11007.11,.01,3)
Enter a routine name without the caret.
"^DD",11007.1,11007.11,.01,9)
^
"^DD",11007.1,11007.11,.01,"DT")
3140307
"^DD",11007.1,11007.11,.02,0)
CURRENT CHECKSUM^FJ15^^0;2^K:$L(X)>15!($L(X)<1)!'(X?1A1.N) X
"^DD",11007.1,11007.11,.02,3)
Answer must be 1 Alpha 1-14 Numerics in length.
"^DD",11007.1,11007.11,.02,9)
^
"^DD",11007.1,11007.11,.02,21,0)
^.001^5^5^3140307^^
"^DD",11007.1,11007.11,.02,21,1,0)
This is the routine's New style checksum (starts with a B)
"^DD",11007.1,11007.11,.02,21,2,0)
 
"^DD",11007.1,11007.11,.02,21,3,0)
This field holds the checksum (based on $$SUMB^XPDRSUM(routine)) calculated for Class I release loaded by KIDS.
"^DD",11007.1,11007.11,.02,21,4,0)
 
"^DD",11007.1,11007.11,.02,21,5,0)
The letter at the front tells us what checksum algorithm was used.  
"^DD",11007.1,11007.11,.02,"DT")
3140307
"^DD",11007.1,11007.11,.03,0)
CHECKSUM DATE^D^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",11007.1,11007.11,.03,3)
Enter a precise Date/Time for when this entry was made
"^DD",11007.1,11007.11,.03,9)
^
"^DD",11007.1,11007.11,.03,21,0)
^^1^1^3140307^
"^DD",11007.1,11007.11,.03,21,1,0)
This field holds the date the Checksum was last saved.
"^DD",11007.1,11007.11,.03,"DT")
3140307
"^DD",11007.1,11007.11,.04,0)
PATCH LIST AT CHECKSUM TIME^FJ200^^0;4^K:$L(X)>200!($L(X)<1) X
"^DD",11007.1,11007.11,.04,3)
Answer must be 1-200 characters in length.
"^DD",11007.1,11007.11,.04,9)
^
"^DD",11007.1,11007.11,.04,21,0)
^^1^1^3140307^
"^DD",11007.1,11007.11,.04,21,1,0)
This field holds the patch list from the second line of the routine at the time the checksum is field from the patch module.
"^DD",11007.1,11007.11,.04,"DT")
3140307
"^DD",11007.1,11007.11,1.1,0)
DELETED BY PATCH^P11005'^A1AE(11005,^1;1^Q
"^DD",11007.1,11007.11,1.1,3)

"^DD",11007.1,11007.11,1.1,21,0)
^^1^1^3140307^^^
"^DD",11007.1,11007.11,1.1,21,1,0)
If a patch deletes a routine, this is noted here.
"^DD",11007.1,11007.11,1.1,"DT")
3140307
"^DD",11007.1,11007.12,0)
SUBSCRIPTION DATE SUB-FIELD^^2^3
"^DD",11007.1,11007.12,0,"DT")
3140805
"^DD",11007.1,11007.12,0,"IX","B",11007.12,.01)

"^DD",11007.1,11007.12,0,"NM","SUBSCRIPTION DATE")

"^DD",11007.1,11007.12,0,"UP")
11007.1
"^DD",11007.1,11007.12,.01,0)
SUBSCRIPTION DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",11007.1,11007.12,.01,1,0)
^.1
"^DD",11007.1,11007.12,.01,1,1,0)
11007.12^B
"^DD",11007.1,11007.12,.01,1,1,1)
S ^A1AE(11007.1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",11007.1,11007.12,.01,1,1,2)
K ^A1AE(11007.1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",11007.1,11007.12,.01,21,0)
^^1^1^3140805^
"^DD",11007.1,11007.12,.01,21,1,0)
SUBSCRIPTION DATE documents the date a new SUBSCRIPTION path was selected.
"^DD",11007.1,11007.12,.01,"DT")
3140806
"^DD",11007.1,11007.12,1,0)
AUTHORIZING INDIVIDUAL^P200'^VA(200,^0;2^Q
"^DD",11007.1,11007.12,1,21,0)
^.001^2^2^3140805^^
"^DD",11007.1,11007.12,1,21,1,0)
The authorized user who changed the site's SUBSCRIPTION to this PATCH 
"^DD",11007.1,11007.12,1,21,2,0)
STREAM
"^DD",11007.1,11007.12,1,"DT")
3140805
"^DD",11007.1,11007.12,2,0)
COMMENTS^11007.122^^1;0
"^DD",11007.1,11007.122,0)
COMMENTS SUB-FIELD^^.01^1
"^DD",11007.1,11007.122,0,"DT")
3140805
"^DD",11007.1,11007.122,0,"NM","COMMENTS")

"^DD",11007.1,11007.122,0,"UP")
11007.12
"^DD",11007.1,11007.122,.01,0)
COMMENTS^Wx^^0;1^Q
"^DD",11007.1,11007.122,.01,21,0)
^^2^2^3140805^
"^DD",11007.1,11007.122,.01,21,1,0)
All pertinent information surrounding the decision to make this PATCH 
"^DD",11007.1,11007.122,.01,21,2,0)
STREAM the site's SUBSCRIPTION
"^DD",11007.1,11007.122,.01,"DT")
3140805
"^DIC",11005,11005,0)
DHCP PATCHES^11005I
"^DIC",11005,11005,0,"GL")
^A1AE(11005,
"^DIC",11005,11005,"%D",0)
^^5^5^2930325^^^^
"^DIC",11005,11005,"%D",1,0)
This file contains patch information for DHCP packages. For patches
"^DIC",11005,11005,"%D",2,0)
to be stored in this file the package must reside in the Package file
"^DIC",11005,11005,"%D",3,0)
(#9.4) and in the DHCP Patch/Problem Package file (#11007). For a user to
"^DIC",11005,11005,"%D",4,0)
enter patches s/he must be an authorized developer of the package in
"^DIC",11005,11005,"%D",5,0)
file (#11007).
"^DIC",11005,"B","DHCP PATCHES",11005)

"^DIC",11005.1,11005.1,0)
DHCP PATCH MESSAGE^11005.1P
"^DIC",11005.1,11005.1,0,"GL")
^A1AE(11005.1,
"^DIC",11005.1,"B","DHCP PATCH MESSAGE",11005.1)

"^DIC",11005.2,11005.2,0)
DHCP PATCH STATUS^11005.2
"^DIC",11005.2,11005.2,0,"GL")
^A1AE(11005.2,
"^DIC",11005.2,11005.2,"%",0)
^1.005^^
"^DIC",11005.2,11005.2,"%D",0)
^^6^6^3141009^
"^DIC",11005.2,11005.2,"%D",1,0)
This file describes the statuses that a patch can have. It supports the 
"^DIC",11005.2,11005.2,"%D",2,0)
input transform of the Status of Patch field (8) in the DHCP Patches file 
"^DIC",11005.2,11005.2,"%D",3,0)
(11005), and is used by routine A1AEPHS to help properly process patches 
"^DIC",11005.2,11005.2,"%D",4,0)
when they change status. Some day, the Status of Patch field should be 
"^DIC",11005.2,11005.2,"%D",5,0)
changed to point to this file, and the corresponding routines changes 
"^DIC",11005.2,11005.2,"%D",6,0)
along with it.
"^DIC",11005.2,"B","DHCP PATCH STATUS",11005.2)

"^DIC",11005.5,11005.5,0)
DHCP HFS MESSAGE^11005.5
"^DIC",11005.5,11005.5,0,"GL")
^A1AE(11005.5,
"^DIC",11005.5,"B","DHCP HFS MESSAGE",11005.5)

"^DIC",11006,11006,0)
DHCP PROBLEMS^11006I
"^DIC",11006,11006,0,"GL")
^A1AE(11006,
"^DIC",11006,"B","DHCP PROBLEMS",11006)

"^DIC",11007,11007,0)
DHCP PATCH/PROBLEM PACKAGE^11007PI
"^DIC",11007,11007,0,"GL")
^A1AE(11007,
"^DIC",11007,11007,"%",0)
^1.005^0^0
"^DIC",11007,11007,"%D",0)
^1.001^5^5^3140211^^^^
"^DIC",11007,11007,"%D",1,0)
This file contains DHCP packages for the DHCP PATCHES file (#11005).
"^DIC",11007,11007,"%D",2,0)
For a package to be added to this file it must reside in the PACKAGE
"^DIC",11007,11007,"%D",3,0)
file (#9.4). This file also contains authorized development, support
"^DIC",11007,11007,"%D",4,0)
and verify personnel for the patch file, the next patch/problem number,
"^DIC",11007,11007,"%D",5,0)
and the package versions.
"^DIC",11007,"B","DHCP PATCH/PROBLEM PACKAGE",11007)

"^DIC",11007.1,11007.1,0)
DHCP PATCH STREAM^11007.1
"^DIC",11007.1,11007.1,0,"GL")
^A1AE(11007.1,
"^DIC",11007.1,11007.1,"%",0)
^1.005^^
"^DIC",11007.1,11007.1,"%D",0)
^1.001^45^45^3140728^^^
"^DIC",11007.1,11007.1,"%D",1,0)
This file enables the concept of patch streams. A patch stream is the 
"^DIC",11007.1,11007.1,"%D",2,0)
primary output of a Patch Module system for each package.
"^DIC",11007.1,11007.1,"%D",3,0)
 
"^DIC",11007.1,11007.1,"%D",4,0)
This file enables the numberspacing of patch streams. If you decide 
"^DIC",11007.1,11007.1,"%D",5,0)
patches coming out of this Patch Module need to be numberspaced starting 
"^DIC",11007.1,11007.1,"%D",6,0)
at 20001, you must create an entry here with an IEN of 20001 (in the 
"^DIC",11007.1,11007.1,"%D",7,0)
NUMBER field) and set it as Primary.
"^DIC",11007.1,11007.1,"%D",8,0)
 
"^DIC",11007.1,11007.1,"%D",9,0)
Technical Description:
"^DIC",11007.1,11007.1,"%D",10,0)
 
"^DIC",11007.1,11007.1,"%D",11,0)
The logic to use this file can be found in the routine A1AEUTL in the 
"^DIC",11007.1,11007.1,"%D",12,0)
tags SEQ and NUM.
"^DIC",11007.1,11007.1,"%D",13,0)
 
"^DIC",11007.1,11007.1,"%D",14,0)
Multiplexing of patches (having multiple input and multiple output 
"^DIC",11007.1,11007.1,"%D",15,0)
streams) is supported in the file design but has not been implemented as 
"^DIC",11007.1,11007.1,"%D",16,0)
of Jan 24 2014.
"^DIC",11007.1,11007.1,"%D",17,0)
 
"^DIC",11007.1,11007.1,"%D",18,0)
This file requires Fileman 22.2 patched up to at least DI*22.2*2 to be 
"^DIC",11007.1,11007.1,"%D",19,0)
operational. Contact the developer for details or see the APRIM 
"^DIC",11007.1,11007.1,"%D",20,0)
cross-reference which uses the new capabilities.
"^DIC",11007.1,11007.1,"%D",21,0)
 
"^DIC",11007.1,11007.1,"%D",22,0)
Change History:
"^DIC",11007.1,11007.1,"%D",23,0)
 
"^DIC",11007.1,11007.1,"%D",24,0)
Monday, 13 January 2014: Sam Habiel of the VISTA Expertise Network 
"^DIC",11007.1,11007.1,"%D",25,0)
(VEN/SMH) created file DHCP Patch Stream (11007.1) for Patch Module 
"^DIC",11007.1,11007.1,"%D",26,0)
version 2.4 as part of the OSEHRA Forum Project Phase One. Handling of 
"^DIC",11007.1,11007.1,"%D",27,0)
multiple patch streams is the major innovation of Patch Module version 
"^DIC",11007.1,11007.1,"%D",28,0)
2.4, giving this file central importance to that version.
"^DIC",11007.1,11007.1,"%D",29,0)
 
"^DIC",11007.1,11007.1,"%D",30,0)
Wednesday, 22 January 2014: (VEN/SMH) Upgraded the file to numberspace 
"^DIC",11007.1,11007.1,"%D",31,0)
patch streams, and to ensure there is only one primary stream at a time. 
"^DIC",11007.1,11007.1,"%D",32,0)
For Patch Module version 2.4 as part of the OSEHRA Forum Project Phase 
"^DIC",11007.1,11007.1,"%D",33,0)
One.
"^DIC",11007.1,11007.1,"%D",34,0)
 
"^DIC",11007.1,11007.1,"%D",35,0)
Tuesday, 11 February 2014: Rick Marshall (VEN/TOAD) Added technical 
"^DIC",11007.1,11007.1,"%D",36,0)
descriptions & change histories; revised descriptions; renumbered fields 
"^DIC",11007.1,11007.1,"%D",37,0)
Primary? (2), Feeds into Stream (3), and Domain (4) as .02, .03, and .04; 
"^DIC",11007.1,11007.1,"%D",38,0)
renamed field Patch Stream Name (.01) as Name; replaced traditional 
"^DIC",11007.1,11007.1,"%D",39,0)
cross-references with new-style cross-references; added field 
"^DIC",11007.1,11007.1,"%D",40,0)
Abbreviation (.05); added two new keys, primary on field Name, secondary 
"^DIC",11007.1,11007.1,"%D",41,0)
on field Abbreviation; added pointer to it from file DHCP Patches 
"^DIC",11007.1,11007.1,"%D",42,0)
(11005)' field Patch Stream (.05), so patches can be linked to patch 
"^DIC",11007.1,11007.1,"%D",43,0)
streams, and so DHCP Patches records can be identified in part by the 
"^DIC",11007.1,11007.1,"%D",44,0)
Patch Stream Abbreviation. For Patch Module version 2.4 as part of the 
"^DIC",11007.1,11007.1,"%D",45,0)
OSEHRA Forum Project Phase One.
"^DIC",11007.1,"B","DHCP PATCH STREAM",11007.1)

**END**
**END**
